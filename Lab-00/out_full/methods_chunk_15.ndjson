{"id": "a98c00d80416f4169c9a51e1881c026829af45da", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/io/Content.java", "file_blob_sha": null, "method_name": "writeTo", "signature": null, "start_line": 98, "end_line": 101, "nloc": 4, "method_source_normalized": "@Override\n\t\t\tpublicvoidwriteTo(OutputStream outputStream)throws IOException{\n\t\t\t\tFileCopyUtils.copy(supplier.get(), outputStream);\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic void writeTo(OutputStream outputStream) throws IOException {\n\t\t\t\tFileCopyUtils.copy(supplier.get(), outputStream);\n\t\t\t}", "code_tokens": ["@", "override", "public", "void", "write", "to", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "file", "copy", "utils", ".", "copy", "(", "supplier", ".", "get", "(", ")", ",", "output", "stream", ")", ";", "}"], "token_count": 33, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.263237+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47e443749969e5d526d563a7fc1ad2af060c6999", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/system/Environment.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 43, "end_line": 43, "nloc": 1, "method_source_normalized": "@NullableStringget(String name);", "original_code": "@Nullable String get(String name);", "code_tokens": ["@", "nullable", "string", "get", "(", "string", "name", ")", ";"], "token_count": 9, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 3, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.263854+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4776321d793924221baef4408e2b7386aaba1cdf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "MappedObject", "signature": null, "start_line": 59, "end_line": 62, "nloc": 4, "method_source_normalized": "protectedMappedObject(JsonNode node, Lookup lookup){\n\t\tthis.node = node;\n\t\tthis.lookup = lookup;\n\t}", "original_code": "protected MappedObject(JsonNode node, Lookup lookup) {\n\t\tthis.node = node;\n\t\tthis.lookup = lookup;\n\t}", "code_tokens": ["protected", "mapped", "object", "(", "json", "node", "node", ",", "lookup", "lookup", ")", "{", "this", ".", "node", "=", "node", ";", "this", ".", "lookup", "=", "lookup", ";", "}"], "token_count": 25, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.266839+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3b3807dcb76db49bdb55a673459071d96c4c6f1a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "getNode", "signature": null, "start_line": 68, "end_line": 70, "nloc": 3, "method_source_normalized": "protected finalJsonNodegetNode(){\n\t\treturn this.node;\n\t}", "original_code": "protected final JsonNode getNode() {\n\t\treturn this.node;\n\t}", "code_tokens": ["protected", "final", "json", "node", "get", "node", "(", ")", "{", "return", "this", ".", "node", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.267085+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4a5aea410cb18ae83fa3675bce9d228946ef5689", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "valueAt", "signature": null, "start_line": 79, "end_line": 81, "nloc": 3, "method_source_normalized": "protected<T>@NullableTvalueAt(String expression, Class<T> type){\n\t\treturn valueAt(this, this.node, this.lookup, expression, type);\n\t}", "original_code": "protected <T> @Nullable T valueAt(String expression, Class<T> type) {\n\t\treturn valueAt(this, this.node, this.lookup, expression, type);\n\t}", "code_tokens": ["protected", "<", "t", ">", "@", "nullable", "t", "value", "at", "(", "string", "expression", ",", "class", "<", "t", ">", "type", ")", "{", "return", "value", "at", "(", "this", ",", "this", ".", "node", ",", "this", ".", "lookup", ",", "expression", ",", "type", ")", ";", "}"], "token_count": 40, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 14, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.267353+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e2100df8db8e6e5b07ef8ae4efb0051e797144cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "mapAt", "signature": null, "start_line": 92, "end_line": 98, "nloc": 7, "method_source_normalized": "protected<V>Map<String, V>mapAt(String expression, Function<JsonNode, V> valueMapper){\n\t\tMap<String, V> map = new LinkedHashMap<>();\n\t\tgetNode().at(expression)\n\t\t\t.properties()\n\t\t\t.forEach((entry) -> map.put(entry.getKey(), valueMapper.apply(entry.getValue())));\n\t\treturn Collections.unmodifiableMap(map);\n\t}", "original_code": "protected <V> Map<String, V> mapAt(String expression, Function<JsonNode, V> valueMapper) {\n\t\tMap<String, V> map = new LinkedHashMap<>();\n\t\tgetNode().at(expression)\n\t\t\t.properties()\n\t\t\t.forEach((entry) -> map.put(entry.getKey(), valueMapper.apply(entry.getValue())));\n\t\treturn Collections.unmodifiableMap(map);\n\t}", "code_tokens": ["protected", "<", "v", ">", "map", "<", "string", ",", "v", ">", "map", "at", "(", "string", "expression", ",", "function", "<", "json", "node", ",", "v", ">", "value", "mapper", ")", "{", "map", "<", "string", ",", "v", ">", "map", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "get", "node", "(", ")", ".", "at", "(", "expression", ")", ".", "properties", "(", ")", ".", "for", "each", "(", "(", "entry", ")", "->", "map", ".", "put", "(", "entry", ".", "get", "key", "(", ")", ",", "value", "mapper", ".", "apply", "(", "entry", ".", "get", "value", "(", ")", ")", ")", ")", ";", "return", "collections", ".", "unmodifiable", "map", "(", "map", ")", ";", "}"], "token_count": 101, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 132, "n_identifiers": 33, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.267704+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "03d916b3435da2f5f6f23f993704dabd4e046b7f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "childrenAt", "signature": null, "start_line": 109, "end_line": 117, "nloc": 9, "method_source_normalized": "protected<T>List<T>childrenAt(@Nullable String expression, Function<JsonNode, T> factory){\n\t\tJsonNode node = (expression != null) ? this.node.at(expression) : this.node;\n\t\tif (node.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\tList<T> children = new ArrayList<>();\n\t\tnode.values().forEach((childNode) -> children.add(factory.apply(childNode)));\n\t\treturn Collections.unmodifiableList(children);\n\t}", "original_code": "protected <T> List<T> childrenAt(@Nullable String expression, Function<JsonNode, T> factory) {\n\t\tJsonNode node = (expression != null) ? this.node.at(expression) : this.node;\n\t\tif (node.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\tList<T> children = new ArrayList<>();\n\t\tnode.values().forEach((childNode) -> children.add(factory.apply(childNode)));\n\t\treturn Collections.unmodifiableList(children);\n\t}", "code_tokens": ["protected", "<", "t", ">", "list", "<", "t", ">", "children", "at", "(", "@", "nullable", "string", "expression", ",", "function", "<", "json", "node", ",", "t", ">", "factory", ")", "{", "json", "node", "node", "=", "(", "expression", "!=", "null", ")", "?", "this", ".", "node", ".", "at", "(", "expression", ")", ":", "this", ".", "node", ";", "if", "(", "node", ".", "is", "empty", "(", ")", ")", "{", "return", "collections", ".", "empty", "list", "(", ")", ";", "}", "list", "<", "t", ">", "children", "=", "new", "array", "list", "<", ">", "(", ")", ";", "node", ".", "values", "(", ")", ".", "for", "each", "(", "(", "child", "node", ")", "->", "children", ".", "add", "(", "factory", ".", "apply", "(", "child", "node", ")", ")", ")", ";", "return", "collections", ".", "unmodifiable", "list", "(", "children", ")", ";", "}"], "token_count": 120, "vocab_size": 43, "cyclomatic_complexity": 3, "ast_node_count": 163, "n_identifiers": 38, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.268144+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6902782e7b808b5148bd22d258488831bf550faa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "getRoot", "signature": null, "start_line": 119, "end_line": 123, "nloc": 5, "method_source_normalized": "@SuppressWarnings(\"unchecked\")\n\tprotected static<T extends MappedObject>TgetRoot(Object proxy){\n\t\tMappedInvocationHandler handler = (MappedInvocationHandler) Proxy.getInvocationHandler(proxy);\n\t\treturn (T) handler.root;\n\t}", "original_code": "@SuppressWarnings(\"unchecked\")\n\tprotected static <T extends MappedObject> T getRoot(Object proxy) {\n\t\tMappedInvocationHandler handler = (MappedInvocationHandler) Proxy.getInvocationHandler(proxy);\n\t\treturn (T) handler.root;\n\t}", "code_tokens": ["@", "suppress", "warnings", "(", "__STR__", ")", "protected", "static", "<", "t", "extends", "mapped", "object", ">", "t", "get", "root", "(", "object", "proxy", ")", "{", "mapped", "invocation", "handler", "handler", "=", "(", "mapped", "invocation", "handler", ")", "proxy", ".", "get", "invocation", "handler", "(", "proxy", ")", ";", "return", "(", "t", ")", "handler", ".", "root", ";", "}"], "token_count": 50, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.268458+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b8bd86a5d56ba99e70843ab7def8ef4636350a91", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "valueAt", "signature": null, "start_line": 125, "end_line": 128, "nloc": 4, "method_source_normalized": "protected static<T>@NullableTvalueAt(Object proxy, String expression, Class<T> type){\n\t\tMappedInvocationHandler handler = (MappedInvocationHandler) Proxy.getInvocationHandler(proxy);\n\t\treturn valueAt(handler.root, handler.node, handler.lookup, expression, type);\n\t}", "original_code": "protected static <T> @Nullable T valueAt(Object proxy, String expression, Class<T> type) {\n\t\tMappedInvocationHandler handler = (MappedInvocationHandler) Proxy.getInvocationHandler(proxy);\n\t\treturn valueAt(handler.root, handler.node, handler.lookup, expression, type);\n\t}", "code_tokens": ["protected", "static", "<", "t", ">", "@", "nullable", "t", "value", "at", "(", "object", "proxy", ",", "string", "expression", ",", "class", "<", "t", ">", "type", ")", "{", "mapped", "invocation", "handler", "handler", "=", "(", "mapped", "invocation", "handler", ")", "proxy", ".", "get", "invocation", "handler", "(", "proxy", ")", ";", "return", "value", "at", "(", "handler", ".", "root", ",", "handler", ".", "node", ",", "handler", ".", "lookup", ",", "expression", ",", "type", ")", ";", "}"], "token_count": 65, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 80, "n_identifiers": 26, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.268730+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5306ef15310d1e5d8d7a5228c255f31c7e8a1431", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "valueAt", "signature": null, "start_line": 130, "end_line": 153, "nloc": 24, "method_source_normalized": "@SuppressWarnings(\"unchecked\")\n\tprivate static<T>@NullableTvalueAt(MappedObject root, JsonNode node, Lookup lookup, String expression,\n\t\t\tClass<T> type){\n\t\tJsonNode result = node.at(expression);\n\t\tif (result.isMissingNode() && expression.startsWith(\"/\") && expression.length() > 1\n\t\t\t\t&& Character.isLowerCase(expression.charAt(1))) {\n\t\t\tStringBuilder alternative = new StringBuilder(expression);\n\t\t\talternative.setCharAt(1, Character.toUpperCase(alternative.charAt(1)));\n\t\t\tresult = node.at(alternative.toString());\n\t\t}\n\t\tif (type.isInterface() && !type.getName().startsWith(\"java\")) {\n\t\t\treturn (T) Proxy.newProxyInstance(MappedObject.class.getClassLoader(), new Class<?>[] { type },\n\t\t\t\t\tnew MappedInvocationHandler(root, result, lookup));\n\t\t}\n\t\tif (result.isMissingNode()) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn SharedObjectMapper.get().treeToValue(result, type);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "@SuppressWarnings(\"unchecked\")\n\tprivate static <T> @Nullable T valueAt(MappedObject root, JsonNode node, Lookup lookup, String expression,\n\t\t\tClass<T> type) {\n\t\tJsonNode result = node.at(expression);\n\t\tif (result.isMissingNode() && expression.startsWith(\"/\") && expression.length() > 1\n\t\t\t\t&& Character.isLowerCase(expression.charAt(1))) {\n\t\t\tStringBuilder alternative = new StringBuilder(expression);\n\t\t\talternative.setCharAt(1, Character.toUpperCase(alternative.charAt(1)));\n\t\t\tresult = node.at(alternative.toString());\n\t\t}\n\t\tif (type.isInterface() && !type.getName().startsWith(\"java\")) {\n\t\t\treturn (T) Proxy.newProxyInstance(MappedObject.class.getClassLoader(), new Class<?>[] { type },\n\t\t\t\t\tnew MappedInvocationHandler(root, result, lookup));\n\t\t}\n\t\tif (result.isMissingNode()) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn SharedObjectMapper.get().treeToValue(result, type);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["@", "suppress", "warnings", "(", "__STR__", ")", "private", "static", "<", "t", ">", "@", "nullable", "t", "value", "at", "(", "mapped", "object", "root", ",", "json", "node", "node", ",", "lookup", "lookup", ",", "string", "expression", ",", "class", "<", "t", ">", "type", ")", "{", "json", "node", "result", "=", "node", ".", "at", "(", "expression", ")", ";", "if", "(", "result", ".", "is", "missing", "node", "(", ")", "&&", "expression", ".", "starts", "with", "(", "__STR__", ")", "&&", "expression", ".", "length", "(", ")", ">", "__NUM__", "&&", "character", ".", "is", "lower", "case", "(", "expression", ".", "char", "at", "(", "__NUM__", ")", ")", ")", "{", "string", "builder", "alternative", "=", "new", "string", "builder", "(", "expression", ")", ";", "alternative", ".", "set", "char", "at", "(", "__NUM__", ",", "character", ".", "to", "upper", "case", "(", "alternative", ".", "char", "at", "(", "__NUM__", ")", ")", ")", ";", "result", "=", "node", ".", "at", "(", "alternative", ".", "to", "string", "(", ")", ")", ";", "}", "if", "(", "type", ".", "is", "interface", "(", ")", "&&", "!", "type", ".", "get", "name", "(", ")", ".", "starts", "with", "(", "__STR__", ")", ")", "{", "return", "(", "t", ")", "proxy", ".", "new", "proxy", "instance", "(", "mapped", "object", ".", "class", ".", "get", "class", "loader", "(", ")", ",", "new", "class", "<", "?", ">", "[", "]", "{", "type", "}", ",", "new", "mapped", "invocation", "handler", "(", "root", ",", "result", ",", "lookup", ")", ")", ";", "}", "if", "(", "result", ".", "is", "missing", "node", "(", ")", ")", "{", "return", "null", ";", "}", "try", "{", "return", "shared", "object", "mapper", ".", "get", "(", ")", ".", "tree", "to", "value", "(", "result", ",", "type", ")", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 265, "vocab_size": 74, "cyclomatic_complexity": 9, "ast_node_count": 327, "n_identifiers": 74, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 138, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.269184+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a795047a0fab88a44e959ea28a73c98746e78aa7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 163, "end_line": 165, "nloc": 3, "method_source_normalized": "protected static<T extends MappedObject>Tof(String content, Function<JsonNode, T> factory)throws IOException{\n\t\treturn of(content, ObjectMapper::readTree, factory);\n\t}", "original_code": "protected static <T extends MappedObject> T of(String content, Function<JsonNode, T> factory) throws IOException {\n\t\treturn of(content, ObjectMapper::readTree, factory);\n\t}", "code_tokens": ["protected", "static", "<", "t", "extends", "mapped", "object", ">", "t", "of", "(", "string", "content", ",", "function", "<", "json", "node", ",", "t", ">", "factory", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "object", "mapper", "::", "read", "tree", ",", "factory", ")", ";", "}"], "token_count": 42, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 16, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.269481+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "41e53961aa229bb88c4e11985fa07ca2332a0471", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 175, "end_line": 178, "nloc": 4, "method_source_normalized": "protected static<T extends MappedObject>Tof(InputStream content, Function<JsonNode, T> factory)throws IOException{\n\t\treturn of(StreamUtils.nonClosing(content), ObjectMapper::readTree, factory);\n\t}", "original_code": "protected static <T extends MappedObject> T of(InputStream content, Function<JsonNode, T> factory)\n\t\t\tthrows IOException {\n\t\treturn of(StreamUtils.nonClosing(content), ObjectMapper::readTree, factory);\n\t}", "code_tokens": ["protected", "static", "<", "t", "extends", "mapped", "object", ">", "t", "of", "(", "input", "stream", "content", ",", "function", "<", "json", "node", ",", "t", ">", "factory", ")", "throws", "io", "exception", "{", "return", "of", "(", "stream", "utils", ".", "non", "closing", "(", "content", ")", ",", "object", "mapper", "::", "read", "tree", ",", "factory", ")", ";", "}"], "token_count": 50, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 18, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.269729+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a043d6e0209c306542b2cc5cac078b9d3c02a621", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 190, "end_line": 195, "nloc": 6, "method_source_normalized": "protected static<T extends MappedObject, C>Tof(C content, ContentReader<C> reader, Function<JsonNode, T> factory)throws IOException{\n\t\tObjectMapper objectMapper = SharedObjectMapper.get();\n\t\tJsonNode node = reader.read(objectMapper, content);\n\t\treturn factory.apply(node);\n\t}", "original_code": "protected static <T extends MappedObject, C> T of(C content, ContentReader<C> reader, Function<JsonNode, T> factory)\n\t\t\tthrows IOException {\n\t\tObjectMapper objectMapper = SharedObjectMapper.get();\n\t\tJsonNode node = reader.read(objectMapper, content);\n\t\treturn factory.apply(node);\n\t}", "code_tokens": ["protected", "static", "<", "t", "extends", "mapped", "object", ",", "c", ">", "t", "of", "(", "c", "content", ",", "content", "reader", "<", "c", ">", "reader", ",", "function", "<", "json", "node", ",", "t", ">", "factory", ")", "throws", "io", "exception", "{", "object", "mapper", "object", "mapper", "=", "shared", "object", "mapper", ".", "get", "(", ")", ";", "json", "node", "node", "=", "reader", ".", "read", "(", "object", "mapper", ",", "content", ")", ";", "return", "factory", ".", "apply", "(", "node", ")", ";", "}"], "token_count": 72, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 89, "n_identifiers": 28, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.270001+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b80c7e97b93deb454ab97e0ab7ee654ef8b6f8f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "read", "signature": null, "start_line": 212, "end_line": 212, "nloc": 1, "method_source_normalized": "JsonNoderead(ObjectMapper objectMapper, C content)throws IOException;", "original_code": "JsonNode read(ObjectMapper objectMapper, C content) throws IOException;", "code_tokens": ["json", "node", "read", "(", "object", "mapper", "object", "mapper", ",", "c", "content", ")", "throws", "io", "exception", ";"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 6, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.270255+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "df9fd6a777b2180f47cc908c9097410636fe4117", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "MappedInvocationHandler", "signature": null, "start_line": 232, "end_line": 236, "nloc": 5, "method_source_normalized": "MappedInvocationHandler(MappedObject root, JsonNode node, Lookup lookup){\n\t\t\tthis.root = root;\n\t\t\tthis.node = node;\n\t\t\tthis.lookup = lookup;\n\t\t}", "original_code": "MappedInvocationHandler(MappedObject root, JsonNode node, Lookup lookup) {\n\t\t\tthis.root = root;\n\t\t\tthis.node = node;\n\t\t\tthis.lookup = lookup;\n\t\t}", "code_tokens": ["mapped", "invocation", "handler", "(", "mapped", "object", "root", ",", "json", "node", "node", ",", "lookup", "lookup", ")", "{", "this", ".", "root", "=", "root", ";", "this", ".", "node", "=", "node", ";", "this", ".", "lookup", "=", "lookup", ";", "}"], "token_count": 35, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.270511+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bac953c8bdcaddabc59b179c1a84cb3d3f5e6c9f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "invoke", "signature": null, "start_line": 238, "end_line": 253, "nloc": 16, "method_source_normalized": "@Override\n\t\tpublic @NullableObjectinvoke(Object proxy, Method method, Object[] args)throws Throwable{\n\t\t\tClass<?> declaringClass = method.getDeclaringClass();\n\t\t\tif (method.isDefault()) {\n\t\t\t\tLookup lookup = this.lookup.in(declaringClass);\n\t\t\t\tMethodHandle methodHandle = lookup.unreflectSpecial(method, declaringClass).bindTo(proxy);\n\t\t\t\treturn methodHandle.invokeWithArguments();\n\t\t\t}\n\t\t\tif (declaringClass == Object.class) {\n\t\t\t\tmethod.invoke(proxy, args);\n\t\t\t}\n\t\t\tAssert.state(args == null || args.length == 0, () -> \"Unsupported method \" + method);\n\t\t\tString name = getName(method.getName());\n\t\t\tClass<?> type = method.getReturnType();\n\t\t\treturn valueForProperty(name, type);\n\t\t}", "original_code": "@Override\n\t\tpublic @Nullable Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\tClass<?> declaringClass = method.getDeclaringClass();\n\t\t\tif (method.isDefault()) {\n\t\t\t\tLookup lookup = this.lookup.in(declaringClass);\n\t\t\t\tMethodHandle methodHandle = lookup.unreflectSpecial(method, declaringClass).bindTo(proxy);\n\t\t\t\treturn methodHandle.invokeWithArguments();\n\t\t\t}\n\t\t\tif (declaringClass == Object.class) {\n\t\t\t\tmethod.invoke(proxy, args);\n\t\t\t}\n\t\t\tAssert.state(args == null || args.length == 0, () -> \"Unsupported method \" + method);\n\t\t\tString name = getName(method.getName());\n\t\t\tClass<?> type = method.getReturnType();\n\t\t\treturn valueForProperty(name, type);\n\t\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "object", "invoke", "(", "object", "proxy", ",", "method", "method", ",", "object", "[", "]", "args", ")", "throws", "throwable", "{", "class", "<", "?", ">", "declaring", "class", "=", "method", ".", "get", "declaring", "class", "(", ")", ";", "if", "(", "method", ".", "is", "default", "(", ")", ")", "{", "lookup", "lookup", "=", "this", ".", "lookup", ".", "in", "(", "declaring", "class", ")", ";", "method", "handle", "method", "handle", "=", "lookup", ".", "unreflect", "special", "(", "method", ",", "declaring", "class", ")", ".", "bind", "to", "(", "proxy", ")", ";", "return", "method", "handle", ".", "invoke", "with", "arguments", "(", ")", ";", "}", "if", "(", "declaring", "class", "==", "object", ".", "class", ")", "{", "method", ".", "invoke", "(", "proxy", ",", "args", ")", ";", "}", "assert", ".", "state", "(", "args", "==", "null", "||", "args", ".", "length", "==", "__NUM__", ",", "(", ")", "->", "__STR__", "+", "method", ")", ";", "string", "name", "=", "get", "name", "(", "method", ".", "get", "name", "(", ")", ")", ";", "class", "<", "?", ">", "type", "=", "method", ".", "get", "return", "type", "(", ")", ";", "return", "value", "for", "property", "(", "name", ",", "type", ")", ";", "}"], "token_count": 174, "vocab_size": 57, "cyclomatic_complexity": 4, "ast_node_count": 226, "n_identifiers": 57, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 112, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.270982+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d1903da8404fa1f524d819a5666bd38660230f59", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 255, "end_line": 266, "nloc": 12, "method_source_normalized": "privateStringgetName(String name){\n\t\t\tStringBuilder result = new StringBuilder(name);\n\t\t\tif (name.startsWith(GET)) {\n\t\t\t\tresult = new StringBuilder(name.substring(GET.length()));\n\t\t\t}\n\t\t\tif (name.startsWith(IS)) {\n\t\t\t\tresult = new StringBuilder(name.substring(IS.length()));\n\t\t\t}\n\t\t\tAssert.state(result.length() >= 0, \"Missing name\");\n\t\t\tresult.setCharAt(0, Character.toLowerCase(result.charAt(0)));\n\t\t\treturn result.toString();\n\t\t}", "original_code": "private String getName(String name) {\n\t\t\tStringBuilder result = new StringBuilder(name);\n\t\t\tif (name.startsWith(GET)) {\n\t\t\t\tresult = new StringBuilder(name.substring(GET.length()));\n\t\t\t}\n\t\t\tif (name.startsWith(IS)) {\n\t\t\t\tresult = new StringBuilder(name.substring(IS.length()));\n\t\t\t}\n\t\t\tAssert.state(result.length() >= 0, \"Missing name\");\n\t\t\tresult.setCharAt(0, Character.toLowerCase(result.charAt(0)));\n\t\t\treturn result.toString();\n\t\t}", "code_tokens": ["private", "string", "get", "name", "(", "string", "name", ")", "{", "string", "builder", "result", "=", "new", "string", "builder", "(", "name", ")", ";", "if", "(", "name", ".", "starts", "with", "(", "get", ")", ")", "{", "result", "=", "new", "string", "builder", "(", "name", ".", "substring", "(", "get", ".", "length", "(", ")", ")", ")", ";", "}", "if", "(", "name", ".", "starts", "with", "(", "is", ")", ")", "{", "result", "=", "new", "string", "builder", "(", "name", ".", "substring", "(", "is", ".", "length", "(", ")", ")", ")", ";", "}", "assert", ".", "state", "(", "result", ".", "length", "(", ")", ">=", "__NUM__", ",", "__STR__", ")", ";", "result", ".", "set", "char", "at", "(", "__NUM__", ",", "character", ".", "to", "lower", "case", "(", "result", ".", "char", "at", "(", "__NUM__", ")", ")", ")", ";", "return", "result", ".", "to", "string", "(", ")", ";", "}"], "token_count": 128, "vocab_size": 34, "cyclomatic_complexity": 3, "ast_node_count": 166, "n_identifiers": 38, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 69, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.271359+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d42fc9983bdb8d62ee6c4853e81bdbec2eb4aaf7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/MappedObject.java", "file_blob_sha": null, "method_name": "valueForProperty", "signature": null, "start_line": 268, "end_line": 270, "nloc": 3, "method_source_normalized": "private @NullableObjectvalueForProperty(String name, Class<?> type){\n\t\t\treturn valueAt(this.root, this.node, this.lookup, \"/\" + name, type);\n\t\t}", "original_code": "private @Nullable Object valueForProperty(String name, Class<?> type) {\n\t\t\treturn valueAt(this.root, this.node, this.lookup, \"/\" + name, type);\n\t\t}", "code_tokens": ["private", "@", "nullable", "object", "value", "for", "property", "(", "string", "name", ",", "class", "<", "?", ">", "type", ")", "{", "return", "value", "at", "(", "this", ".", "root", ",", "this", ".", "node", ",", "this", ".", "lookup", ",", "__STR__", "+", "name", ",", "type", ")", ";", "}"], "token_count": 42, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.271633+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "636e3bc60dce058f9d19d01db038df2af23bc661", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/SharedObjectMapper.java", "file_blob_sha": null, "method_name": "SharedObjectMapper", "signature": null, "start_line": 45, "end_line": 46, "nloc": 2, "method_source_normalized": "privateSharedObjectMapper(){\n\t}", "original_code": "private SharedObjectMapper() {\n\t}", "code_tokens": ["private", "shared", "object", "mapper", "(", ")", "{", "}"], "token_count": 8, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.272399+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3e6c6b945de60334282bd48c410c83582d77a41d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/SharedObjectMapper.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 48, "end_line": 50, "nloc": 3, "method_source_normalized": "public staticObjectMapperget(){\n\t\treturn INSTANCE;\n\t}", "original_code": "public static ObjectMapper get() {\n\t\treturn INSTANCE;\n\t}", "code_tokens": ["public", "static", "object", "mapper", "get", "(", ")", "{", "return", "instance", ";", "}"], "token_count": 12, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.272655+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2913d344a351929e91393062ba151b19c456bc58", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/JsonStream.java", "file_blob_sha": null, "method_name": "JsonStream", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "publicJsonStream(ObjectMapper objectMapper){\n\t\tthis.objectMapper = objectMapper;\n\t}", "original_code": "public JsonStream(ObjectMapper objectMapper) {\n\t\tthis.objectMapper = objectMapper;\n\t}", "code_tokens": ["public", "json", "stream", "(", "object", "mapper", "object", "mapper", ")", "{", "this", ".", "object", "mapper", "=", "object", "mapper", ";", "}"], "token_count": 19, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.273653+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3d5ceb063473cfe993bbc7170ed490171353b328", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/JsonStream.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 53, "end_line": 55, "nloc": 3, "method_source_normalized": "publicvoidget(InputStream content, Consumer<ObjectNode> consumer)throws IOException{\n\t\tget(content, ObjectNode.class, consumer);\n\t}", "original_code": "public void get(InputStream content, Consumer<ObjectNode> consumer) throws IOException {\n\t\tget(content, ObjectNode.class, consumer);\n\t}", "code_tokens": ["public", "void", "get", "(", "input", "stream", "content", ",", "consumer", "<", "object", "node", ">", "consumer", ")", "throws", "io", "exception", "{", "get", "(", "content", ",", "object", "node", ".", "class", ",", "consumer", ")", ";", "}"], "token_count": 32, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.273923+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "413745b2eecaed6326214dcf50261228a6aa9742", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/JsonStream.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 65, "end_line": 77, "nloc": 13, "method_source_normalized": "public<T>voidget(InputStream content, Class<T> type, Consumer<T> consumer)throws IOException{\n\t\ttry (JsonParser parser = this.objectMapper.createParser(content)) {\n\t\t\twhile (!parser.isClosed()) {\n\t\t\t\tJsonToken token = parser.nextToken();\n\t\t\t\tif (token != null && token != JsonToken.END_OBJECT) {\n\t\t\t\t\tT node = read(parser, type);\n\t\t\t\t\tif (node != null) {\n\t\t\t\t\t\tconsumer.accept(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "original_code": "public <T> void get(InputStream content, Class<T> type, Consumer<T> consumer) throws IOException {\n\t\ttry (JsonParser parser = this.objectMapper.createParser(content)) {\n\t\t\twhile (!parser.isClosed()) {\n\t\t\t\tJsonToken token = parser.nextToken();\n\t\t\t\tif (token != null && token != JsonToken.END_OBJECT) {\n\t\t\t\t\tT node = read(parser, type);\n\t\t\t\t\tif (node != null) {\n\t\t\t\t\t\tconsumer.accept(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["public", "<", "t", ">", "void", "get", "(", "input", "stream", "content", ",", "class", "<", "t", ">", "type", ",", "consumer", "<", "t", ">", "consumer", ")", "throws", "io", "exception", "{", "try", "(", "json", "parser", "parser", "=", "this", ".", "object", "mapper", ".", "create", "parser", "(", "content", ")", ")", "{", "while", "(", "!", "parser", ".", "is", "closed", "(", ")", ")", "{", "json", "token", "token", "=", "parser", ".", "next", "token", "(", ")", ";", "if", "(", "token", "!=", "null", "&&", "token", "!=", "json", "token", ".", "end", "object", ")", "{", "t", "node", "=", "read", "(", "parser", ",", "type", ")", ";", "if", "(", "node", "!=", "null", ")", "{", "consumer", ".", "accept", "(", "node", ")", ";", "}", "}", "}", "}", "}"], "token_count": 111, "vocab_size": 44, "cyclomatic_complexity": 5, "ast_node_count": 150, "n_identifiers": 35, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 93, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.274229+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c4e081751a2b52b89228f6e49723783cda9ffa2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/json/JsonStream.java", "file_blob_sha": null, "method_name": "read", "signature": null, "start_line": 79, "end_line": 89, "nloc": 11, "method_source_normalized": "@SuppressWarnings(\"unchecked\")\n\tprivate<T>@NullableTread(JsonParser parser, Class<T> type){\n\t\tif (ObjectNode.class.isAssignableFrom(type)) {\n\t\t\tObjectNode node = (ObjectNode) this.objectMapper.readTree(parser);\n\t\t\tif (node == null || node.isMissingNode() || node.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (T) node;\n\t\t}\n\t\treturn this.objectMapper.readValue(parser, type);\n\t}", "original_code": "@SuppressWarnings(\"unchecked\")\n\tprivate <T> @Nullable T read(JsonParser parser, Class<T> type) {\n\t\tif (ObjectNode.class.isAssignableFrom(type)) {\n\t\t\tObjectNode node = (ObjectNode) this.objectMapper.readTree(parser);\n\t\t\tif (node == null || node.isMissingNode() || node.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (T) node;\n\t\t}\n\t\treturn this.objectMapper.readValue(parser, type);\n\t}", "code_tokens": ["@", "suppress", "warnings", "(", "__STR__", ")", "private", "<", "t", ">", "@", "nullable", "t", "read", "(", "json", "parser", "parser", ",", "class", "<", "t", ">", "type", ")", "{", "if", "(", "object", "node", ".", "class", ".", "is", "assignable", "from", "(", "type", ")", ")", "{", "object", "node", "node", "=", "(", "object", "node", ")", "this", ".", "object", "mapper", ".", "read", "tree", "(", "parser", ")", ";", "if", "(", "node", "==", "null", "||", "node", ".", "is", "missing", "node", "(", ")", "||", "node", ".", "is", "empty", "(", ")", ")", "{", "return", "null", ";", "}", "return", "(", "t", ")", "node", ";", "}", "return", "this", ".", "object", "mapper", ".", "read", "value", "(", "parser", ",", "type", ")", ";", "}"], "token_count": 108, "vocab_size": 38, "cyclomatic_complexity": 5, "ast_node_count": 136, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 61, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.274550+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c785df7e8ba3a92d3c79fd7855429edde7cc0fd6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "Phase", "signature": null, "start_line": 62, "end_line": 65, "nloc": 4, "method_source_normalized": "Phase(String name, boolean verboseLogging){\n\t\tthis.name = name;\n\t\twithLogLevelArg(verboseLogging);\n\t}", "original_code": "Phase(String name, boolean verboseLogging) {\n\t\tthis.name = name;\n\t\twithLogLevelArg(verboseLogging);\n\t}", "code_tokens": ["phase", "(", "string", "name", ",", "boolean", "verbose", "logging", ")", "{", "this", ".", "name", "=", "name", ";", "with", "log", "level", "arg", "(", "verbose", "logging", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.276344+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "238074816fcbaaec67d093342fbfda4b98da7965", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withApp", "signature": null, "start_line": 67, "end_line": 71, "nloc": 5, "method_source_normalized": "voidwithApp(String path, Binding binding){\n\t\twithArgs(\"-app\", path);\n\t\twithBinding(binding);\n\t\tthis.requiresApp = true;\n\t}", "original_code": "void withApp(String path, Binding binding) {\n\t\twithArgs(\"-app\", path);\n\t\twithBinding(binding);\n\t\tthis.requiresApp = true;\n\t}", "code_tokens": ["void", "with", "app", "(", "string", "path", ",", "binding", "binding", ")", "{", "with", "args", "(", "__STR__", ",", "path", ")", ";", "with", "binding", "(", "binding", ")", ";", "this", ".", "requires", "app", "=", "true", ";", "}"], "token_count": 33, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.276591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7cd19e4451842c08419d7b3506db3c81e564d762", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withBuildCache", "signature": null, "start_line": 73, "end_line": 76, "nloc": 4, "method_source_normalized": "voidwithBuildCache(String path, Binding binding){\n\t\twithArgs(\"-cache-dir\", path);\n\t\twithBinding(binding);\n\t}", "original_code": "void withBuildCache(String path, Binding binding) {\n\t\twithArgs(\"-cache-dir\", path);\n\t\twithBinding(binding);\n\t}", "code_tokens": ["void", "with", "build", "cache", "(", "string", "path", ",", "binding", "binding", ")", "{", "with", "args", "(", "__STR__", ",", "path", ")", ";", "with", "binding", "(", "binding", ")", ";", "}"], "token_count": 27, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.276833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "33763c02f9543371372f70952f95435d7de2dac4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withDaemonAccess", "signature": null, "start_line": 81, "end_line": 84, "nloc": 4, "method_source_normalized": "voidwithDaemonAccess(){\n\t\tthis.withArgs(\"-daemon\");\n\t\tthis.daemonAccess = true;\n\t}", "original_code": "void withDaemonAccess() {\n\t\tthis.withArgs(\"-daemon\");\n\t\tthis.daemonAccess = true;\n\t}", "code_tokens": ["void", "with", "daemon", "access", "(", ")", "{", "this", ".", "with", "args", "(", "__STR__", ")", ";", "this", ".", "daemon", "access", "=", "true", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 3, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.277060+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce5a73498be2974a8f2ef46eaf719d6e25f0f09c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withImageName", "signature": null, "start_line": 86, "end_line": 88, "nloc": 3, "method_source_normalized": "voidwithImageName(ImageReference imageName){\n\t\twithArgs(imageName);\n\t}", "original_code": "void withImageName(ImageReference imageName) {\n\t\twithArgs(imageName);\n\t}", "code_tokens": ["void", "with", "image", "name", "(", "image", "reference", "image", "name", ")", "{", "with", "args", "(", "image", "name", ")", ";", "}"], "token_count": 19, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.277294+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b582e52454edea6b3e952c9954ecc7a69912a2be", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withLaunchCache", "signature": null, "start_line": 90, "end_line": 93, "nloc": 4, "method_source_normalized": "voidwithLaunchCache(String path, Binding binding){\n\t\twithArgs(\"-launch-cache\", path);\n\t\twithBinding(binding);\n\t}", "original_code": "void withLaunchCache(String path, Binding binding) {\n\t\twithArgs(\"-launch-cache\", path);\n\t\twithBinding(binding);\n\t}", "code_tokens": ["void", "with", "launch", "cache", "(", "string", "path", ",", "binding", "binding", ")", "{", "with", "args", "(", "__STR__", ",", "path", ")", ";", "with", "binding", "(", "binding", ")", ";", "}"], "token_count": 27, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.277531+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2ecdd7120624194fbd2bdd05bc6d3cc1b6beb8d0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withLayers", "signature": null, "start_line": 95, "end_line": 98, "nloc": 4, "method_source_normalized": "voidwithLayers(String path, Binding binding){\n\t\twithArgs(\"-layers\", path);\n\t\twithBinding(binding);\n\t}", "original_code": "void withLayers(String path, Binding binding) {\n\t\twithArgs(\"-layers\", path);\n\t\twithBinding(binding);\n\t}", "code_tokens": ["void", "with", "layers", "(", "string", "path", ",", "binding", "binding", ")", "{", "with", "args", "(", "__STR__", ",", "path", ")", ";", "with", "binding", "(", "binding", ")", ";", "}"], "token_count": 26, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.277782+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7af48cdf3c3d25dbf3a988465c0cff62cef950d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withPlatform", "signature": null, "start_line": 100, "end_line": 102, "nloc": 3, "method_source_normalized": "voidwithPlatform(String path){\n\t\twithArgs(\"-platform\", path);\n\t}", "original_code": "void withPlatform(String path) {\n\t\twithArgs(\"-platform\", path);\n\t}", "code_tokens": ["void", "with", "platform", "(", "string", "path", ")", "{", "with", "args", "(", "__STR__", ",", "path", ")", ";", "}"], "token_count": 17, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.278019+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e920d2e3982e09993291425a87f09956daa2f17f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withProcessType", "signature": null, "start_line": 104, "end_line": 106, "nloc": 3, "method_source_normalized": "voidwithProcessType(String type){\n\t\twithArgs(\"-process-type\", type);\n\t}", "original_code": "void withProcessType(String type) {\n\t\twithArgs(\"-process-type\", type);\n\t}", "code_tokens": ["void", "with", "process", "type", "(", "string", "type", ")", "{", "with", "args", "(", "__STR__", ",", "type", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.278248+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d85b4e71854005e4274009ae59563ff1610f8928", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withRunImage", "signature": null, "start_line": 108, "end_line": 110, "nloc": 3, "method_source_normalized": "voidwithRunImage(ImageReference runImage){\n\t\twithArgs(\"-run-image\", runImage);\n\t}", "original_code": "void withRunImage(ImageReference runImage) {\n\t\twithArgs(\"-run-image\", runImage);\n\t}", "code_tokens": ["void", "with", "run", "image", "(", "image", "reference", "run", "image", ")", "{", "with", "args", "(", "__STR__", ",", "run", "image", ")", ";", "}"], "token_count": 21, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.278473+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65e707dbda29235f6e87b41c1a40605ab631a59f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withSkipRestore", "signature": null, "start_line": 112, "end_line": 114, "nloc": 3, "method_source_normalized": "voidwithSkipRestore(){\n\t\twithArgs(\"-skip-restore\");\n\t}", "original_code": "void withSkipRestore() {\n\t\twithArgs(\"-skip-restore\");\n\t}", "code_tokens": ["void", "with", "skip", "restore", "(", ")", "{", "with", "args", "(", "__STR__", ")", ";", "}"], "token_count": 14, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 7, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.278710+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "efa4f0c9c950f224190eda79b8c092dc1c3a692e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withLogLevelArg", "signature": null, "start_line": 121, "end_line": 126, "nloc": 6, "method_source_normalized": "privatevoidwithLogLevelArg(boolean verboseLogging){\n\t\tif (verboseLogging) {\n\t\t\tthis.args.add(\"-log-level\");\n\t\t\tthis.args.add(\"debug\");\n\t\t}\n\t}", "original_code": "private void withLogLevelArg(boolean verboseLogging) {\n\t\tif (verboseLogging) {\n\t\t\tthis.args.add(\"-log-level\");\n\t\t\tthis.args.add(\"debug\");\n\t\t}\n\t}", "code_tokens": ["private", "void", "with", "log", "level", "arg", "(", "boolean", "verbose", "logging", ")", "{", "if", "(", "verbose", "logging", ")", "{", "this", ".", "args", ".", "add", "(", "__STR__", ")", ";", "this", ".", "args", ".", "add", "(", "__STR__", ")", ";", "}", "}"], "token_count": 38, "vocab_size": 20, "cyclomatic_complexity": 2, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.278999+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1e914104b52626e14f78456506c98c5bf8192497", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withArgs", "signature": null, "start_line": 132, "end_line": 134, "nloc": 3, "method_source_normalized": "voidwithArgs(Object... args){\n\t\tArrays.stream(args).map(Object::toString).forEach(this.args::add);\n\t}", "original_code": "void withArgs(Object... args) {\n\t\tArrays.stream(args).map(Object::toString).forEach(this.args::add);\n\t}", "code_tokens": ["void", "with", "args", "(", "object", "...", "args", ")", "{", "arrays", ".", "stream", "(", "args", ")", ".", "map", "(", "object", "::", "to", "string", ")", ".", "for", "each", "(", "this", ".", "args", "::", "add", ")", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.279264+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b25940cce03729005e9c461aee4e33d86ff5bc7a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withBinding", "signature": null, "start_line": 140, "end_line": 142, "nloc": 3, "method_source_normalized": "voidwithBinding(Binding binding){\n\t\tthis.bindings.add(binding);\n\t}", "original_code": "void withBinding(Binding binding) {\n\t\tthis.bindings.add(binding);\n\t}", "code_tokens": ["void", "with", "binding", "(", "binding", "binding", ")", "{", "this", ".", "bindings", ".", "add", "(", "binding", ")", ";", "}"], "token_count": 18, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.279491+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6baeaf6c0be761e3f751369b2bd609ba25c9e508", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withEnv", "signature": null, "start_line": 149, "end_line": 151, "nloc": 3, "method_source_normalized": "voidwithEnv(String name, String value){\n\t\tthis.env.put(name, value);\n\t}", "original_code": "void withEnv(String name, String value) {\n\t\tthis.env.put(name, value);\n\t}", "code_tokens": ["void", "with", "env", "(", "string", "name", ",", "string", "value", ")", "{", "this", ".", "env", ".", "put", "(", "name", ",", "value", ")", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.279711+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1e662cd5079b2082336a48fde348f64f43d574a5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withNetworkMode", "signature": null, "start_line": 157, "end_line": 159, "nloc": 3, "method_source_normalized": "voidwithNetworkMode(@Nullable String networkMode){\n\t\tthis.networkMode = networkMode;\n\t}", "original_code": "void withNetworkMode(@Nullable String networkMode) {\n\t\tthis.networkMode = networkMode;\n\t}", "code_tokens": ["void", "with", "network", "mode", "(", "@", "nullable", "string", "network", "mode", ")", "{", "this", ".", "network", "mode", "=", "network", "mode", ";", "}"], "token_count": 21, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.279930+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e2082c490454f3ca403241ec7793ca4f5699c748", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "withSecurityOption", "signature": null, "start_line": 165, "end_line": 167, "nloc": 3, "method_source_normalized": "voidwithSecurityOption(String option){\n\t\tthis.securityOptions.add(option);\n\t}", "original_code": "void withSecurityOption(String option) {\n\t\tthis.securityOptions.add(option);\n\t}", "code_tokens": ["void", "with", "security", "option", "(", "string", "option", ")", "{", "this", ".", "security", "options", ".", "add", "(", "option", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.280150+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "72d9ff065cdaca9759bc65bc0f2347b72c6d104b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 173, "end_line": 175, "nloc": 3, "method_source_normalized": "StringgetName(){\n\t\treturn this.name;\n\t}", "original_code": "String getName() {\n\t\treturn this.name;\n\t}", "code_tokens": ["string", "get", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.280361+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47a6d483d4ef2b367233b2e4a8e79f92d19db9ad", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "requiresApp", "signature": null, "start_line": 177, "end_line": 179, "nloc": 3, "method_source_normalized": "booleanrequiresApp(){\n\t\treturn this.requiresApp;\n\t}", "original_code": "boolean requiresApp() {\n\t\treturn this.requiresApp;\n\t}", "code_tokens": ["boolean", "requires", "app", "(", ")", "{", "return", "this", ".", "requires", "app", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.280591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "101f8bb3717f4830c1fe1661e56008f54879d38c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 181, "end_line": 184, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.name;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.name;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.280834+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0c538623484812d11520f0945470e0ebaa8380ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Phase.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 190, "end_line": 202, "nloc": 13, "method_source_normalized": "voidapply(ContainerConfig.Update update){\n\t\tif (this.daemonAccess) {\n\t\t\tupdate.withUser(\"root\");\n\t\t}\n\t\tupdate.withCommand(\"/cnb/lifecycle/\" + this.name, StringUtils.toStringArray(this.args));\n\t\tupdate.withLabel(\"author\", \"spring-boot\");\n\t\tthis.bindings.forEach(update::withBinding);\n\t\tthis.env.forEach(update::withEnv);\n\t\tif (this.networkMode != null) {\n\t\t\tupdate.withNetworkMode(this.networkMode);\n\t\t}\n\t\tthis.securityOptions.forEach(update::withSecurityOption);\n\t}", "original_code": "void apply(ContainerConfig.Update update) {\n\t\tif (this.daemonAccess) {\n\t\t\tupdate.withUser(\"root\");\n\t\t}\n\t\tupdate.withCommand(\"/cnb/lifecycle/\" + this.name, StringUtils.toStringArray(this.args));\n\t\tupdate.withLabel(\"author\", \"spring-boot\");\n\t\tthis.bindings.forEach(update::withBinding);\n\t\tthis.env.forEach(update::withEnv);\n\t\tif (this.networkMode != null) {\n\t\t\tupdate.withNetworkMode(this.networkMode);\n\t\t}\n\t\tthis.securityOptions.forEach(update::withSecurityOption);\n\t}", "code_tokens": ["void", "apply", "(", "container", "config", ".", "update", "update", ")", "{", "if", "(", "this", ".", "daemon", "access", ")", "{", "update", ".", "with", "user", "(", "__STR__", ")", ";", "}", "update", ".", "with", "command", "(", "__STR__", "+", "this", ".", "name", ",", "string", "utils", ".", "to", "string", "array", "(", "this", ".", "args", ")", ")", ";", "update", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "bindings", ".", "for", "each", "(", "update", "::", "with", "binding", ")", ";", "this", ".", "env", ".", "for", "each", "(", "update", "::", "with", "env", ")", ";", "if", "(", "this", ".", "network", "mode", "!=", "null", ")", "{", "update", ".", "with", "network", "mode", "(", "this", ".", "network", "mode", ")", ";", "}", "this", ".", "security", "options", ".", "for", "each", "(", "update", "::", "with", "security", "option", ")", ";", "}"], "token_count": 126, "vocab_size": 41, "cyclomatic_complexity": 3, "ast_node_count": 153, "n_identifiers": 31, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.281139+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bfc8ac2571d2385889f92b70f7c98d14af8f4838", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "start", "signature": null, "start_line": 43, "end_line": 47, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidstart(BuildRequest request){\n\t\tlog(\"Building image '\" + request.getName() + \"'\");\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void start(BuildRequest request) {\n\t\tlog(\"Building image '\" + request.getName() + \"'\");\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "start", "(", "build", "request", "request", ")", "{", "log", "(", "__STR__", "+", "request", ".", "get", "name", "(", ")", "+", "__STR__", ")", ";", "log", "(", ")", ";", "}"], "token_count": 30, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.282908+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4ecce949d552e55fdd0897bf9e984614a50396f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "pullingImage", "signature": null, "start_line": 49, "end_line": 56, "nloc": 8, "method_source_normalized": "@Override\n\tpublicConsumer<TotalProgressEvent>pullingImage(ImageReference imageReference, @Nullable ImagePlatform platform,\n\t\t\tImageType imageType){\n\t\treturn (platform != null)\n\t\t\t\t? getProgressConsumer(\" > Pulling %s '%s' for platform '%s'\".formatted(imageType.getDescription(),\n\t\t\t\t\t\timageReference, platform))\n\t\t\t\t: getProgressConsumer(\" > Pulling %s '%s'\".formatted(imageType.getDescription(), imageReference));\n\t}", "original_code": "@Override\n\tpublic Consumer<TotalProgressEvent> pullingImage(ImageReference imageReference, @Nullable ImagePlatform platform,\n\t\t\tImageType imageType) {\n\t\treturn (platform != null)\n\t\t\t\t? getProgressConsumer(\" > Pulling %s '%s' for platform '%s'\".formatted(imageType.getDescription(),\n\t\t\t\t\t\timageReference, platform))\n\t\t\t\t: getProgressConsumer(\" > Pulling %s '%s'\".formatted(imageType.getDescription(), imageReference));\n\t}", "code_tokens": ["@", "override", "public", "consumer", "<", "total", "progress", "event", ">", "pulling", "image", "(", "image", "reference", "image", "reference", ",", "@", "nullable", "image", "platform", "platform", ",", "image", "type", "image", "type", ")", "{", "return", "(", "platform", "!=", "null", ")", "?", "get", "progress", "consumer", "(", "__STR__", ".", "formatted", "(", "image", "type", ".", "get", "description", "(", ")", ",", "image", "reference", ",", "platform", ")", ")", ":", "get", "progress", "consumer", "(", "__STR__", ".", "formatted", "(", "image", "type", ".", "get", "description", "(", ")", ",", "image", "reference", ")", ")", ";", "}"], "token_count": 81, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 23, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.283231+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f44279863ea15fc7b87389daca05e19f25e86a96", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "pulledImage", "signature": null, "start_line": 58, "end_line": 61, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidpulledImage(Image image, ImageType imageType){\n\t\tlog(String.format(\" > Pulled %s '%s'\", imageType.getDescription(), getDigest(image)));\n\t}", "original_code": "@Override\n\tpublic void pulledImage(Image image, ImageType imageType) {\n\t\tlog(String.format(\" > Pulled %s '%s'\", imageType.getDescription(), getDigest(image)));\n\t}", "code_tokens": ["@", "override", "public", "void", "pulled", "image", "(", "image", "image", ",", "image", "type", "image", "type", ")", "{", "log", "(", "string", ".", "format", "(", "__STR__", ",", "image", "type", ".", "get", "description", "(", ")", ",", "get", "digest", "(", "image", ")", ")", ")", ";", "}"], "token_count": 41, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.283508+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cddeba30fecbaffe0d35bd461409e76eca800af7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "pushingImage", "signature": null, "start_line": 63, "end_line": 66, "nloc": 4, "method_source_normalized": "@Override\n\tpublicConsumer<TotalProgressEvent>pushingImage(ImageReference imageReference){\n\t\treturn getProgressConsumer(String.format(\" > Pushing image '%s'\", imageReference));\n\t}", "original_code": "@Override\n\tpublic Consumer<TotalProgressEvent> pushingImage(ImageReference imageReference) {\n\t\treturn getProgressConsumer(String.format(\" > Pushing image '%s'\", imageReference));\n\t}", "code_tokens": ["@", "override", "public", "consumer", "<", "total", "progress", "event", ">", "pushing", "image", "(", "image", "reference", "image", "reference", ")", "{", "return", "get", "progress", "consumer", "(", "string", ".", "format", "(", "__STR__", ",", "image", "reference", ")", ")", ";", "}"], "token_count": 35, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.283772+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "63b7e2cc0cc55f979e172b5841ca4bd94a9703fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "pushedImage", "signature": null, "start_line": 68, "end_line": 71, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidpushedImage(ImageReference imageReference){\n\t\tlog(String.format(\" > Pushed image '%s'\", imageReference));\n\t}", "original_code": "@Override\n\tpublic void pushedImage(ImageReference imageReference) {\n\t\tlog(String.format(\" > Pushed image '%s'\", imageReference));\n\t}", "code_tokens": ["@", "override", "public", "void", "pushed", "image", "(", "image", "reference", "image", "reference", ")", "{", "log", "(", "string", ".", "format", "(", "__STR__", ",", "image", "reference", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.284006+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a14ac5e8977912681b0dad508baffe06c1f4a861", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "executingLifecycle", "signature": null, "start_line": 73, "end_line": 77, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidexecutingLifecycle(BuildRequest request, LifecycleVersion version, VolumeName buildCacheVolume){\n\t\tlog(\" > Executing lifecycle version \" + version);\n\t\tlog(\" > Using build cache volume '\" + buildCacheVolume + \"'\");\n\t}", "original_code": "@Override\n\tpublic void executingLifecycle(BuildRequest request, LifecycleVersion version, VolumeName buildCacheVolume) {\n\t\tlog(\" > Executing lifecycle version \" + version);\n\t\tlog(\" > Using build cache volume '\" + buildCacheVolume + \"'\");\n\t}", "code_tokens": ["@", "override", "public", "void", "executing", "lifecycle", "(", "build", "request", "request", ",", "lifecycle", "version", "version", ",", "volume", "name", "build", "cache", "volume", ")", "{", "log", "(", "__STR__", "+", "version", ")", ";", "log", "(", "__STR__", "+", "build", "cache", "volume", "+", "__STR__", ")", ";", "}"], "token_count": 41, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.284260+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d5556ebcfef21da40d49c0a2d4f59ab57ab00728", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "executingLifecycle", "signature": null, "start_line": 79, "end_line": 83, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidexecutingLifecycle(BuildRequest request, LifecycleVersion version, Cache buildCache){\n\t\tlog(\" > Executing lifecycle version \" + version);\n\t\tlog(\" > Using build cache \" + buildCache);\n\t}", "original_code": "@Override\n\tpublic void executingLifecycle(BuildRequest request, LifecycleVersion version, Cache buildCache) {\n\t\tlog(\" > Executing lifecycle version \" + version);\n\t\tlog(\" > Using build cache \" + buildCache);\n\t}", "code_tokens": ["@", "override", "public", "void", "executing", "lifecycle", "(", "build", "request", "request", ",", "lifecycle", "version", "version", ",", "cache", "build", "cache", ")", "{", "log", "(", "__STR__", "+", "version", ")", ";", "log", "(", "__STR__", "+", "build", "cache", ")", ";", "}"], "token_count": 36, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.284564+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "82b8b9614b096e3097655b2c19b931343391ffd2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "runningPhase", "signature": null, "start_line": 85, "end_line": 91, "nloc": 7, "method_source_normalized": "@Override\n\tpublicConsumer<LogUpdateEvent>runningPhase(BuildRequest request, String name){\n\t\tlog();\n\t\tlog(\" > Running \" + name);\n\t\tString prefix = String.format(\"    %-14s\", \"[\" + name + \"] \");\n\t\treturn (event) -> log(prefix + event);\n\t}", "original_code": "@Override\n\tpublic Consumer<LogUpdateEvent> runningPhase(BuildRequest request, String name) {\n\t\tlog();\n\t\tlog(\" > Running \" + name);\n\t\tString prefix = String.format(\"    %-14s\", \"[\" + name + \"] \");\n\t\treturn (event) -> log(prefix + event);\n\t}", "code_tokens": ["@", "override", "public", "consumer", "<", "log", "update", "event", ">", "running", "phase", "(", "build", "request", "request", ",", "string", "name", ")", "{", "log", "(", ")", ";", "log", "(", "__STR__", "+", "name", ")", ";", "string", "prefix", "=", "string", ".", "format", "(", "__STR__", ",", "__STR__", "+", "name", "+", "__STR__", ")", ";", "return", "(", "event", ")", "->", "log", "(", "prefix", "+", "event", ")", ";", "}"], "token_count": 60, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.284839+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b0d23409248d3be8b9ce45c45bde5d7a4dbf52dd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "skippingPhase", "signature": null, "start_line": 93, "end_line": 98, "nloc": 6, "method_source_normalized": "@Override\n\tpublicvoidskippingPhase(String name, String reason){\n\t\tlog();\n\t\tlog(\" > Skipping \" + name + \" \" + reason);\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void skippingPhase(String name, String reason) {\n\t\tlog();\n\t\tlog(\" > Skipping \" + name + \" \" + reason);\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "skipping", "phase", "(", "string", "name", ",", "string", "reason", ")", "{", "log", "(", ")", ";", "log", "(", "__STR__", "+", "name", "+", "__STR__", "+", "reason", ")", ";", "log", "(", ")", ";", "}"], "token_count": 34, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.285091+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c28fbb2ca65a37be05adc2053e803ce24ac35543", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "executedLifecycle", "signature": null, "start_line": 100, "end_line": 105, "nloc": 6, "method_source_normalized": "@Override\n\tpublicvoidexecutedLifecycle(BuildRequest request){\n\t\tlog();\n\t\tlog(\"Successfully built image '\" + request.getName() + \"'\");\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void executedLifecycle(BuildRequest request) {\n\t\tlog();\n\t\tlog(\"Successfully built image '\" + request.getName() + \"'\");\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "executed", "lifecycle", "(", "build", "request", "request", ")", "{", "log", "(", ")", ";", "log", "(", "__STR__", "+", "request", ".", "get", "name", "(", ")", "+", "__STR__", ")", ";", "log", "(", ")", ";", "}"], "token_count": 35, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 9, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.285333+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9b04be445913ac05d9a467d57bb69988895ae7f9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "taggedImage", "signature": null, "start_line": 107, "end_line": 111, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidtaggedImage(ImageReference tag){\n\t\tlog(\"Successfully created image tag '\" + tag + \"'\");\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void taggedImage(ImageReference tag) {\n\t\tlog(\"Successfully created image tag '\" + tag + \"'\");\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "tagged", "image", "(", "image", "reference", "tag", ")", "{", "log", "(", "__STR__", "+", "tag", "+", "__STR__", ")", ";", "log", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.285587+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e733f8adc96d7040667e09449ea62541fe8e2f95", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "failedCleaningWorkDir", "signature": null, "start_line": 113, "end_line": 122, "nloc": 10, "method_source_normalized": "@Override\n\tpublicvoidfailedCleaningWorkDir(Cache cache, @Nullable Exception exception){\n\t\tStringBuilder message = new StringBuilder(\"Warning: Working location \" + cache + \" could not be cleaned\");\n\t\tif (exception != null) {\n\t\t\tmessage.append(\": \").append(exception.getMessage());\n\t\t}\n\t\tlog();\n\t\tlog(message.toString());\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void failedCleaningWorkDir(Cache cache, @Nullable Exception exception) {\n\t\tStringBuilder message = new StringBuilder(\"Warning: Working location \" + cache + \" could not be cleaned\");\n\t\tif (exception != null) {\n\t\t\tmessage.append(\": \").append(exception.getMessage());\n\t\t}\n\t\tlog();\n\t\tlog(message.toString());\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "failed", "cleaning", "work", "dir", "(", "cache", "cache", ",", "@", "nullable", "exception", "exception", ")", "{", "string", "builder", "message", "=", "new", "string", "builder", "(", "__STR__", "+", "cache", "+", "__STR__", ")", ";", "if", "(", "exception", "!=", "null", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "exception", ".", "get", "message", "(", ")", ")", ";", "}", "log", "(", ")", ";", "log", "(", "message", ".", "to", "string", "(", ")", ")", ";", "log", "(", ")", ";", "}"], "token_count": 77, "vocab_size": 32, "cyclomatic_complexity": 2, "ast_node_count": 107, "n_identifiers": 22, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.285887+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6616452bac4b1c28890bf6fbe3f83bb09a0b61cb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "sensitiveTargetBindingDetected", "signature": null, "start_line": 124, "end_line": 129, "nloc": 6, "method_source_normalized": "@Override\n\tpublicvoidsensitiveTargetBindingDetected(Binding binding){\n\t\tlog(\"Warning: Binding '%s' uses a container path which is used by buildpacks while building. Binding to it can cause problems!\"\n\t\t\t.formatted(binding));\n\t\tlog();\n\t}", "original_code": "@Override\n\tpublic void sensitiveTargetBindingDetected(Binding binding) {\n\t\tlog(\"Warning: Binding '%s' uses a container path which is used by buildpacks while building. Binding to it can cause problems!\"\n\t\t\t.formatted(binding));\n\t\tlog();\n\t}", "code_tokens": ["@", "override", "public", "void", "sensitive", "target", "binding", "detected", "(", "binding", "binding", ")", "{", "log", "(", "__STR__", ".", "formatted", "(", "binding", ")", ")", ";", "log", "(", ")", ";", "}"], "token_count": 28, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.286159+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "91ed6ad0cd9ad94c469a46dbec1e51a27a75f659", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "getDigest", "signature": null, "start_line": 131, "end_line": 134, "nloc": 4, "method_source_normalized": "privateStringgetDigest(Image image){\n\t\tList<String> digests = image.getDigests();\n\t\treturn (digests.isEmpty() ? \"\" : digests.get(0));\n\t}", "original_code": "private String getDigest(Image image) {\n\t\tList<String> digests = image.getDigests();\n\t\treturn (digests.isEmpty() ? \"\" : digests.get(0));\n\t}", "code_tokens": ["private", "string", "get", "digest", "(", "image", "image", ")", "{", "list", "<", "string", ">", "digests", "=", "image", ".", "get", "digests", "(", ")", ";", "return", "(", "digests", ".", "is", "empty", "(", ")", "?", "__STR__", ":", "digests", ".", "get", "(", "__NUM__", ")", ")", ";", "}"], "token_count": 42, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 57, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.286543+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "13b6be08dad62c963bb9e2866bf81702e7eb8126", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "log", "signature": null, "start_line": 136, "end_line": 138, "nloc": 3, "method_source_normalized": "protectedvoidlog(){\n\t\tlog(\"\");\n\t}", "original_code": "protected void log() {\n\t\tlog(\"\");\n\t}", "code_tokens": ["protected", "void", "log", "(", ")", "{", "log", "(", "__STR__", ")", ";", "}"], "token_count": 12, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 2, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.286788+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e294996601ca6afa1cf44bd7447cd661220df15b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "log", "signature": null, "start_line": 140, "end_line": 140, "nloc": 1, "method_source_normalized": "protected abstractvoidlog(String message);", "original_code": "protected abstract void log(String message);", "code_tokens": ["protected", "abstract", "void", "log", "(", "string", "message", ")", ";"], "token_count": 9, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 13, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.287017+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9912fcf72d3c1e531df0e529a3b83d0b0a256489", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/AbstractBuildLog.java", "file_blob_sha": null, "method_name": "getProgressConsumer", "signature": null, "start_line": 142, "end_line": 142, "nloc": 1, "method_source_normalized": "protected abstractConsumer<TotalProgressEvent>getProgressConsumer(String message);", "original_code": "protected abstract Consumer<TotalProgressEvent> getProgressConsumer(String message);", "code_tokens": ["protected", "abstract", "consumer", "<", "total", "progress", "event", ">", "get", "progress", "consumer", "(", "string", "message", ")", ";"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.287255+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bb08dfae86350d1d18698255576df3662482f80f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolverContext.java", "file_blob_sha": null, "method_name": "getBuildpackMetadata", "signature": null, "start_line": 35, "end_line": 35, "nloc": 1, "method_source_normalized": "List<BuildpackMetadata>getBuildpackMetadata();", "original_code": "List<BuildpackMetadata> getBuildpackMetadata();", "code_tokens": ["list", "<", "buildpack", "metadata", ">", "get", "buildpack", "metadata", "(", ")", ";"], "token_count": 11, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 12, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.287873+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "95b7a2d4baa00a29249c7035e18f559f226554b9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolverContext.java", "file_blob_sha": null, "method_name": "getBuildpackLayersMetadata", "signature": null, "start_line": 37, "end_line": 37, "nloc": 1, "method_source_normalized": "BuildpackLayersMetadatagetBuildpackLayersMetadata();", "original_code": "BuildpackLayersMetadata getBuildpackLayersMetadata();", "code_tokens": ["buildpack", "layers", "metadata", "get", "buildpack", "layers", "metadata", "(", ")", ";"], "token_count": 10, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.288102+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a75c0aaf4e5c283e17321f640f0b9d14c54a1a2c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolverContext.java", "file_blob_sha": null, "method_name": "fetchImage", "signature": null, "start_line": 46, "end_line": 46, "nloc": 1, "method_source_normalized": "ImagefetchImage(ImageReference reference, ImageType type)throws IOException;", "original_code": "Image fetchImage(ImageReference reference, ImageType type) throws IOException;", "code_tokens": ["image", "fetch", "image", "(", "image", "reference", "reference", ",", "image", "type", "type", ")", "throws", "io", "exception", ";"], "token_count": 16, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 6, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.288339+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "539aef368ffc38a7262cef4e52ffbd67abf0ff39", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolverContext.java", "file_blob_sha": null, "method_name": "exportImageLayers", "signature": null, "start_line": 55, "end_line": 55, "nloc": 1, "method_source_normalized": "voidexportImageLayers(ImageReference reference, IOBiConsumer<String, TarArchive> exports)throws IOException;", "original_code": "void exportImageLayers(ImageReference reference, IOBiConsumer<String, TarArchive> exports) throws IOException;", "code_tokens": ["void", "export", "image", "layers", "(", "image", "reference", "reference", ",", "io", "bi", "consumer", "<", "string", ",", "tar", "archive", ">", "exports", ")", "throws", "io", "exception", ";"], "token_count": 24, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 7, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.288582+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1b224b1e4dee14f38e3dd788e77dbb13430a85ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "Builder", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "publicBuilder(){\n\t\tthis(BuildLog.toSystemOut());\n\t}", "original_code": "public Builder() {\n\t\tthis(BuildLog.toSystemOut());\n\t}", "code_tokens": ["public", "builder", "(", ")", "{", "this", "(", "build", "log", ".", "to", "system", "out", "(", ")", ")", ";", "}"], "token_count": 18, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 3, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 7, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.292967+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d78a23ce744f3cf8f885ceebf6c1ff66b7bf9fba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "Builder", "signature": null, "start_line": 73, "end_line": 75, "nloc": 3, "method_source_normalized": "publicBuilder(BuilderDockerConfiguration dockerConfiguration){\n\t\tthis(BuildLog.toSystemOut(), dockerConfiguration);\n\t}", "original_code": "public Builder(BuilderDockerConfiguration dockerConfiguration) {\n\t\tthis(BuildLog.toSystemOut(), dockerConfiguration);\n\t}", "code_tokens": ["public", "builder", "(", "builder", "docker", "configuration", "docker", "configuration", ")", "{", "this", "(", "build", "log", ".", "to", "system", "out", "(", ")", ",", "docker", "configuration", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.293202+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "177dde425b06ad6f79446f57ff52060522a8ded2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "Builder", "signature": null, "start_line": 81, "end_line": 83, "nloc": 3, "method_source_normalized": "publicBuilder(BuildLog log){\n\t\tthis(log, new DockerApi(null, BuildLogAdapter.get(log)), null);\n\t}", "original_code": "public Builder(BuildLog log) {\n\t\tthis(log, new DockerApi(null, BuildLogAdapter.get(log)), null);\n\t}", "code_tokens": ["public", "builder", "(", "build", "log", "log", ")", "{", "this", "(", "log", ",", "new", "docker", "api", "(", "null", ",", "build", "log", "adapter", ".", "get", "(", "log", ")", ")", ",", "null", ")", ";", "}"], "token_count": 32, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.293426+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "37d7cac80c67ecfa682ca78546b234616f8ff4af", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "Builder", "signature": null, "start_line": 91, "end_line": 94, "nloc": 4, "method_source_normalized": "publicBuilder(BuildLog log, @Nullable BuilderDockerConfiguration dockerConfiguration){\n\t\tthis(log, new DockerApi((dockerConfiguration != null) ? dockerConfiguration.connection() : null,\n\t\t\t\tBuildLogAdapter.get(log)), dockerConfiguration);\n\t}", "original_code": "public Builder(BuildLog log, @Nullable BuilderDockerConfiguration dockerConfiguration) {\n\t\tthis(log, new DockerApi((dockerConfiguration != null) ? dockerConfiguration.connection() : null,\n\t\t\t\tBuildLogAdapter.get(log)), dockerConfiguration);\n\t}", "code_tokens": ["public", "builder", "(", "build", "log", "log", ",", "@", "nullable", "builder", "docker", "configuration", "docker", "configuration", ")", "{", "this", "(", "log", ",", "new", "docker", "api", "(", "(", "docker", "configuration", "!=", "null", ")", "?", "docker", "configuration", ".", "connection", "(", ")", ":", "null", ",", "build", "log", "adapter", ".", "get", "(", "log", ")", ")", ",", "docker", "configuration", ")", ";", "}"], "token_count": 55, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 64, "n_identifiers": 15, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.293673+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2cacbc914d1f714887d0b9b025dea05aeaf08450", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "Builder", "signature": null, "start_line": 96, "end_line": 102, "nloc": 7, "method_source_normalized": "Builder(BuildLog log, DockerApi docker, @Nullable BuilderDockerConfiguration dockerConfiguration){\n\t\tAssert.notNull(log, \"'log' must not be null\");\n\t\tthis.log = log;\n\t\tthis.docker = docker;\n\t\tthis.dockerConfiguration = (dockerConfiguration != null) ? dockerConfiguration\n\t\t\t\t: new BuilderDockerConfiguration();\n\t}", "original_code": "Builder(BuildLog log, DockerApi docker, @Nullable BuilderDockerConfiguration dockerConfiguration) {\n\t\tAssert.notNull(log, \"'log' must not be null\");\n\t\tthis.log = log;\n\t\tthis.docker = docker;\n\t\tthis.dockerConfiguration = (dockerConfiguration != null) ? dockerConfiguration\n\t\t\t\t: new BuilderDockerConfiguration();\n\t}", "code_tokens": ["builder", "(", "build", "log", "log", ",", "docker", "api", "docker", ",", "@", "nullable", "builder", "docker", "configuration", "docker", "configuration", ")", "{", "assert", ".", "not", "null", "(", "log", ",", "__STR__", ")", ";", "this", ".", "log", "=", "log", ";", "this", ".", "docker", "=", "docker", ";", "this", ".", "docker", "configuration", "=", "(", "docker", "configuration", "!=", "null", ")", "?", "docker", "configuration", ":", "new", "builder", "docker", "configuration", "(", ")", ";", "}"], "token_count": 64, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 78, "n_identifiers": 19, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.293941+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b1a181d9b8a1300a1e47f09cb3d46c96b19de54", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "build", "signature": null, "start_line": 104, "end_line": 127, "nloc": 24, "method_source_normalized": "publicvoidbuild(BuildRequest request)throws DockerEngineException, IOException{\n\t\tAssert.notNull(request, \"'request' must not be null\");\n\t\tthis.log.start(request);\n\t\tvalidateBindings(request.getBindings());\n\t\tPullPolicy pullPolicy = request.getPullPolicy();\n\t\tImageFetcher imageFetcher = new ImageFetcher(this.dockerConfiguration.builderRegistryAuthentication(),\n\t\t\t\tpullPolicy, request.getImagePlatform());\n\t\tImage builderImage = imageFetcher.fetchImage(ImageType.BUILDER, request.getBuilder());\n\t\tBuilderMetadata builderMetadata = BuilderMetadata.fromImage(builderImage);\n\t\trequest = withRunImageIfNeeded(request, builderMetadata);\n\t\tAssert.state(request.getRunImage() != null, \"'request.getRunImage()' must not be null\");\n\t\tImage runImage = imageFetcher.fetchImage(ImageType.RUNNER, request.getRunImage());\n\t\tassertStackIdsMatch(runImage, builderImage);\n\t\tBuildOwner buildOwner = BuildOwner.fromEnv(builderImage.getConfig().getEnv());\n\t\tBuildpackLayersMetadata buildpackLayersMetadata = BuildpackLayersMetadata.fromImage(builderImage);\n\t\tBuildpacks buildpacks = getBuildpacks(request, imageFetcher, builderMetadata, buildpackLayersMetadata);\n\t\tEphemeralBuilder ephemeralBuilder = new EphemeralBuilder(buildOwner, builderImage, request.getName(),\n\t\t\t\tbuilderMetadata, request.getCreator(), request.getEnv(), buildpacks);\n\t\texecuteLifecycle(request, ephemeralBuilder);\n\t\ttagImage(request.getName(), request.getTags());\n\t\tif (request.isPublish()) {\n\t\t\tpushImages(request.getName(), request.getTags());\n\t\t}\n\t}", "original_code": "public void build(BuildRequest request) throws DockerEngineException, IOException {\n\t\tAssert.notNull(request, \"'request' must not be null\");\n\t\tthis.log.start(request);\n\t\tvalidateBindings(request.getBindings());\n\t\tPullPolicy pullPolicy = request.getPullPolicy();\n\t\tImageFetcher imageFetcher = new ImageFetcher(this.dockerConfiguration.builderRegistryAuthentication(),\n\t\t\t\tpullPolicy, request.getImagePlatform());\n\t\tImage builderImage = imageFetcher.fetchImage(ImageType.BUILDER, request.getBuilder());\n\t\tBuilderMetadata builderMetadata = BuilderMetadata.fromImage(builderImage);\n\t\trequest = withRunImageIfNeeded(request, builderMetadata);\n\t\tAssert.state(request.getRunImage() != null, \"'request.getRunImage()' must not be null\");\n\t\tImage runImage = imageFetcher.fetchImage(ImageType.RUNNER, request.getRunImage());\n\t\tassertStackIdsMatch(runImage, builderImage);\n\t\tBuildOwner buildOwner = BuildOwner.fromEnv(builderImage.getConfig().getEnv());\n\t\tBuildpackLayersMetadata buildpackLayersMetadata = BuildpackLayersMetadata.fromImage(builderImage);\n\t\tBuildpacks buildpacks = getBuildpacks(request, imageFetcher, builderMetadata, buildpackLayersMetadata);\n\t\tEphemeralBuilder ephemeralBuilder = new EphemeralBuilder(buildOwner, builderImage, request.getName(),\n\t\t\t\tbuilderMetadata, request.getCreator(), request.getEnv(), buildpacks);\n\t\texecuteLifecycle(request, ephemeralBuilder);\n\t\ttagImage(request.getName(), request.getTags());\n\t\tif (request.isPublish()) {\n\t\t\tpushImages(request.getName(), request.getTags());\n\t\t}\n\t}", "code_tokens": ["public", "void", "build", "(", "build", "request", "request", ")", "throws", "docker", "engine", "exception", ",", "io", "exception", "{", "assert", ".", "not", "null", "(", "request", ",", "__STR__", ")", ";", "this", ".", "log", ".", "start", "(", "request", ")", ";", "validate", "bindings", "(", "request", ".", "get", "bindings", "(", ")", ")", ";", "pull", "policy", "pull", "policy", "=", "request", ".", "get", "pull", "policy", "(", ")", ";", "image", "fetcher", "image", "fetcher", "=", "new", "image", "fetcher", "(", "this", ".", "docker", "configuration", ".", "builder", "registry", "authentication", "(", ")", ",", "pull", "policy", ",", "request", ".", "get", "image", "platform", "(", ")", ")", ";", "image", "builder", "image", "=", "image", "fetcher", ".", "fetch", "image", "(", "image", "type", ".", "builder", ",", "request", ".", "get", "builder", "(", ")", ")", ";", "builder", "metadata", "builder", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "builder", "image", ")", ";", "request", "=", "with", "run", "image", "if", "needed", "(", "request", ",", "builder", "metadata", ")", ";", "assert", ".", "state", "(", "request", ".", "get", "run", "image", "(", ")", "!=", "null", ",", "__STR__", ")", ";", "image", "run", "image", "=", "image", "fetcher", ".", "fetch", "image", "(", "image", "type", ".", "runner", ",", "request", ".", "get", "run", "image", "(", ")", ")", ";", "assert", "stack", "ids", "match", "(", "run", "image", ",", "builder", "image", ")", ";", "build", "owner", "build", "owner", "=", "build", "owner", ".", "from", "env", "(", "builder", "image", ".", "get", "config", "(", ")", ".", "get", "env", "(", ")", ")", ";", "buildpack", "layers", "metadata", "buildpack", "layers", "metadata", "=", "buildpack", "layers", "metadata", ".", "from", "image", "(", "builder", "image", ")", ";", "buildpacks", "buildpacks", "=", "get", "buildpacks", "(", "request", ",", "image", "fetcher", ",", "builder", "metadata", ",", "buildpack", "layers", "metadata", ")", ";", "ephemeral", "builder", "ephemeral", "builder", "=", "new", "ephemeral", "builder", "(", "build", "owner", ",", "builder", "image", ",", "request", ".", "get", "name", "(", ")", ",", "builder", "metadata", ",", "request", ".", "get", "creator", "(", ")", ",", "request", ".", "get", "env", "(", ")", ",", "buildpacks", ")", ";", "execute", "lifecycle", "(", "request", ",", "ephemeral", "builder", ")", ";", "tag", "image", "(", "request", ".", "get", "name", "(", ")", ",", "request", ".", "get", "tags", "(", ")", ")", ";", "if", "(", "request", ".", "is", "publish", "(", ")", ")", "{", "push", "images", "(", "request", ".", "get", "name", "(", ")", ",", "request", ".", "get", "tags", "(", ")", ")", ";", "}", "}"], "token_count": 357, "vocab_size": 68, "cyclomatic_complexity": 2, "ast_node_count": 381, "n_identifiers": 105, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 141, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.294408+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "05367199fcfa839cc8a5255a9deb69aad15a56cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "validateBindings", "signature": null, "start_line": 129, "end_line": 135, "nloc": 7, "method_source_normalized": "privatevoidvalidateBindings(List<Binding> bindings){\n\t\tfor (Binding binding : bindings) {\n\t\t\tif (binding.usesSensitiveContainerPath()) {\n\t\t\t\tthis.log.sensitiveTargetBindingDetected(binding);\n\t\t\t}\n\t\t}\n\t}", "original_code": "private void validateBindings(List<Binding> bindings) {\n\t\tfor (Binding binding : bindings) {\n\t\t\tif (binding.usesSensitiveContainerPath()) {\n\t\t\t\tthis.log.sensitiveTargetBindingDetected(binding);\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["private", "void", "validate", "bindings", "(", "list", "<", "binding", ">", "bindings", ")", "{", "for", "(", "binding", "binding", ":", "bindings", ")", "{", "if", "(", "binding", ".", "uses", "sensitive", "container", "path", "(", ")", ")", "{", "this", ".", "log", ".", "sensitive", "target", "binding", "detected", "(", "binding", ")", ";", "}", "}", "}"], "token_count": 47, "vocab_size": 25, "cyclomatic_complexity": 3, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.294705+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5ec80e0222cadb03a92ee3c11b2e43bf7bb1261a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "withRunImageIfNeeded", "signature": null, "start_line": 137, "end_line": 142, "nloc": 6, "method_source_normalized": "privateBuildRequestwithRunImageIfNeeded(BuildRequest request, BuilderMetadata metadata){\n\t\tif (request.getRunImage() != null) {\n\t\t\treturn request;\n\t\t}\n\t\treturn request.withRunImage(getRunImageReference(metadata));\n\t}", "original_code": "private BuildRequest withRunImageIfNeeded(BuildRequest request, BuilderMetadata metadata) {\n\t\tif (request.getRunImage() != null) {\n\t\t\treturn request;\n\t\t}\n\t\treturn request.withRunImage(getRunImageReference(metadata));\n\t}", "code_tokens": ["private", "build", "request", "with", "run", "image", "if", "needed", "(", "build", "request", "request", ",", "builder", "metadata", "metadata", ")", "{", "if", "(", "request", ".", "get", "run", "image", "(", ")", "!=", "null", ")", "{", "return", "request", ";", "}", "return", "request", ".", "with", "run", "image", "(", "get", "run", "image", "reference", "(", "metadata", ")", ")", ";", "}"], "token_count": 52, "vocab_size": 22, "cyclomatic_complexity": 2, "ast_node_count": 56, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.294962+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b40fc66acdb04755b35cc37d6eebc6a28fdcd4ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "getRunImageReference", "signature": null, "start_line": 144, "end_line": 152, "nloc": 9, "method_source_normalized": "privateImageReferencegetRunImageReference(BuilderMetadata metadata){\n\t\tif (metadata.getRunImages() != null && !metadata.getRunImages().isEmpty()) {\n\t\t\tString runImageName = metadata.getRunImages().get(0).getImage();\n\t\t\treturn ImageReference.of(runImageName).inTaggedOrDigestForm();\n\t\t}\n\t\tString runImageName = metadata.getStack().getRunImage().getImage();\n\t\tAssert.state(StringUtils.hasText(runImageName), \"Run image must be specified in the builder image metadata\");\n\t\treturn ImageReference.of(runImageName).inTaggedOrDigestForm();\n\t}", "original_code": "private ImageReference getRunImageReference(BuilderMetadata metadata) {\n\t\tif (metadata.getRunImages() != null && !metadata.getRunImages().isEmpty()) {\n\t\t\tString runImageName = metadata.getRunImages().get(0).getImage();\n\t\t\treturn ImageReference.of(runImageName).inTaggedOrDigestForm();\n\t\t}\n\t\tString runImageName = metadata.getStack().getRunImage().getImage();\n\t\tAssert.state(StringUtils.hasText(runImageName), \"Run image must be specified in the builder image metadata\");\n\t\treturn ImageReference.of(runImageName).inTaggedOrDigestForm();\n\t}", "code_tokens": ["private", "image", "reference", "get", "run", "image", "reference", "(", "builder", "metadata", "metadata", ")", "{", "if", "(", "metadata", ".", "get", "run", "images", "(", ")", "!=", "null", "&&", "!", "metadata", ".", "get", "run", "images", "(", ")", ".", "is", "empty", "(", ")", ")", "{", "string", "run", "image", "name", "=", "metadata", ".", "get", "run", "images", "(", ")", ".", "get", "(", "__NUM__", ")", ".", "get", "image", "(", ")", ";", "return", "image", "reference", ".", "of", "(", "run", "image", "name", ")", ".", "in", "tagged", "or", "digest", "form", "(", ")", ";", "}", "string", "run", "image", "name", "=", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "image", "(", ")", ";", "assert", ".", "state", "(", "string", "utils", ".", "has", "text", "(", "run", "image", "name", ")", ",", "__STR__", ")", ";", "return", "image", "reference", ".", "of", "(", "run", "image", "name", ")", ".", "in", "tagged", "or", "digest", "form", "(", ")", ";", "}"], "token_count": 144, "vocab_size": 40, "cyclomatic_complexity": 3, "ast_node_count": 153, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.295286+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "da21101befff88f78398481dfcad1a06f1077db8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "assertStackIdsMatch", "signature": null, "start_line": 154, "end_line": 161, "nloc": 8, "method_source_normalized": "privatevoidassertStackIdsMatch(Image runImage, Image builderImage){\n\t\tStackId runImageStackId = StackId.fromImage(runImage);\n\t\tStackId builderImageStackId = StackId.fromImage(builderImage);\n\t\tif (runImageStackId.hasId() && builderImageStackId.hasId()) {\n\t\t\tAssert.state(runImageStackId.equals(builderImageStackId), () -> \"Run image stack '\" + runImageStackId\n\t\t\t\t\t+ \"' does not match builder stack '\" + builderImageStackId + \"'\");\n\t\t}\n\t}", "original_code": "private void assertStackIdsMatch(Image runImage, Image builderImage) {\n\t\tStackId runImageStackId = StackId.fromImage(runImage);\n\t\tStackId builderImageStackId = StackId.fromImage(builderImage);\n\t\tif (runImageStackId.hasId() && builderImageStackId.hasId()) {\n\t\t\tAssert.state(runImageStackId.equals(builderImageStackId), () -> \"Run image stack '\" + runImageStackId\n\t\t\t\t\t+ \"' does not match builder stack '\" + builderImageStackId + \"'\");\n\t\t}\n\t}", "code_tokens": ["private", "void", "assert", "stack", "ids", "match", "(", "image", "run", "image", ",", "image", "builder", "image", ")", "{", "stack", "id", "run", "image", "stack", "id", "=", "stack", "id", ".", "from", "image", "(", "run", "image", ")", ";", "stack", "id", "builder", "image", "stack", "id", "=", "stack", "id", ".", "from", "image", "(", "builder", "image", ")", ";", "if", "(", "run", "image", "stack", "id", ".", "has", "id", "(", ")", "&&", "builder", "image", "stack", "id", ".", "has", "id", "(", ")", ")", "{", "assert", ".", "state", "(", "run", "image", "stack", "id", ".", "equals", "(", "builder", "image", "stack", "id", ")", ",", "(", ")", "->", "__STR__", "+", "run", "image", "stack", "id", "+", "__STR__", "+", "builder", "image", "stack", "id", "+", "__STR__", ")", ";", "}", "}"], "token_count": 112, "vocab_size": 27, "cyclomatic_complexity": 3, "ast_node_count": 106, "n_identifiers": 26, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 59, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.295648+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e59be22870b7a05de1e4f80004956f76b9623d41", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "getBuildpacks", "signature": null, "start_line": 163, "end_line": 168, "nloc": 6, "method_source_normalized": "privateBuildpacksgetBuildpacks(BuildRequest request, ImageFetcher imageFetcher, BuilderMetadata builderMetadata,\n\t\t\tBuildpackLayersMetadata buildpackLayersMetadata){\n\t\tBuildpackResolverContext resolverContext = new BuilderResolverContext(imageFetcher, builderMetadata,\n\t\t\t\tbuildpackLayersMetadata);\n\t\treturn BuildpackResolvers.resolveAll(resolverContext, request.getBuildpacks());\n\t}", "original_code": "private Buildpacks getBuildpacks(BuildRequest request, ImageFetcher imageFetcher, BuilderMetadata builderMetadata,\n\t\t\tBuildpackLayersMetadata buildpackLayersMetadata) {\n\t\tBuildpackResolverContext resolverContext = new BuilderResolverContext(imageFetcher, builderMetadata,\n\t\t\t\tbuildpackLayersMetadata);\n\t\treturn BuildpackResolvers.resolveAll(resolverContext, request.getBuildpacks());\n\t}", "code_tokens": ["private", "buildpacks", "get", "buildpacks", "(", "build", "request", "request", ",", "image", "fetcher", "image", "fetcher", ",", "builder", "metadata", "builder", "metadata", ",", "buildpack", "layers", "metadata", "buildpack", "layers", "metadata", ")", "{", "buildpack", "resolver", "context", "resolver", "context", "=", "new", "builder", "resolver", "context", "(", "image", "fetcher", ",", "builder", "metadata", ",", "buildpack", "layers", "metadata", ")", ";", "return", "buildpack", "resolvers", ".", "resolve", "all", "(", "resolver", "context", ",", "request", ".", "get", "buildpacks", "(", ")", ")", ";", "}"], "token_count": 68, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 62, "n_identifiers": 21, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.295986+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0c0485a4c4ef71c2610da524c6e6960afd1d92f7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "executeLifecycle", "signature": null, "start_line": 170, "end_line": 174, "nloc": 5, "method_source_normalized": "privatevoidexecuteLifecycle(BuildRequest request, EphemeralBuilder builder)throws IOException{\n\t\ttry (Lifecycle lifecycle = new Lifecycle(this.log, this.docker, getDockerHost(), request, builder)) {\n\t\t\texecuteLifecycle(builder, lifecycle);\n\t\t}\n\t}", "original_code": "private void executeLifecycle(BuildRequest request, EphemeralBuilder builder) throws IOException {\n\t\ttry (Lifecycle lifecycle = new Lifecycle(this.log, this.docker, getDockerHost(), request, builder)) {\n\t\t\texecuteLifecycle(builder, lifecycle);\n\t\t}\n\t}", "code_tokens": ["private", "void", "execute", "lifecycle", "(", "build", "request", "request", ",", "ephemeral", "builder", "builder", ")", "throws", "io", "exception", "{", "try", "(", "lifecycle", "lifecycle", "=", "new", "lifecycle", "(", "this", ".", "log", ",", "this", ".", "docker", ",", "get", "docker", "host", "(", ")", ",", "request", ",", "builder", ")", ")", "{", "execute", "lifecycle", "(", "builder", ",", "lifecycle", ")", ";", "}", "}"], "token_count": 55, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 17, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.296236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c3264dabcfdf9cee347f7ef079428283796c3495", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "executeLifecycle", "signature": null, "start_line": 176, "end_line": 185, "nloc": 10, "method_source_normalized": "privatevoidexecuteLifecycle(EphemeralBuilder builder, Lifecycle lifecycle)throws IOException{\n\t\tImageArchive archive = builder.getArchive(lifecycle.getApplicationDirectory());\n\t\tthis.docker.image().load(archive, UpdateListener.none());\n\t\ttry {\n\t\t\tlifecycle.execute();\n\t\t}\n\t\tfinally {\n\t\t\tthis.docker.image().remove(builder.getName(), true);\n\t\t}\n\t}", "original_code": "private void executeLifecycle(EphemeralBuilder builder, Lifecycle lifecycle) throws IOException {\n\t\tImageArchive archive = builder.getArchive(lifecycle.getApplicationDirectory());\n\t\tthis.docker.image().load(archive, UpdateListener.none());\n\t\ttry {\n\t\t\tlifecycle.execute();\n\t\t}\n\t\tfinally {\n\t\t\tthis.docker.image().remove(builder.getName(), true);\n\t\t}\n\t}", "code_tokens": ["private", "void", "execute", "lifecycle", "(", "ephemeral", "builder", "builder", ",", "lifecycle", "lifecycle", ")", "throws", "io", "exception", "{", "image", "archive", "archive", "=", "builder", ".", "get", "archive", "(", "lifecycle", ".", "get", "application", "directory", "(", ")", ")", ";", "this", ".", "docker", ".", "image", "(", ")", ".", "load", "(", "archive", ",", "update", "listener", ".", "none", "(", ")", ")", ";", "try", "{", "lifecycle", ".", "execute", "(", ")", ";", "}", "finally", "{", "this", ".", "docker", ".", "image", "(", ")", ".", "remove", "(", "builder", ".", "get", "name", "(", ")", ",", "true", ")", ";", "}", "}"], "token_count": 87, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 114, "n_identifiers": 25, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.296507+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e957115af1fde051f0d462c910a2adcd97a5407", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "getDockerHost", "signature": null, "start_line": 187, "end_line": 190, "nloc": 4, "method_source_normalized": "private @NullableResolvedDockerHostgetDockerHost(){\n\t\tboolean bindToBuilder = this.dockerConfiguration.bindHostToBuilder();\n\t\treturn (bindToBuilder) ? ResolvedDockerHost.from(this.dockerConfiguration.connection()) : null;\n\t}", "original_code": "private @Nullable ResolvedDockerHost getDockerHost() {\n\t\tboolean bindToBuilder = this.dockerConfiguration.bindHostToBuilder();\n\t\treturn (bindToBuilder) ? ResolvedDockerHost.from(this.dockerConfiguration.connection()) : null;\n\t}", "code_tokens": ["private", "@", "nullable", "resolved", "docker", "host", "get", "docker", "host", "(", ")", "{", "boolean", "bind", "to", "builder", "=", "this", ".", "docker", "configuration", ".", "bind", "host", "to", "builder", "(", ")", ";", "return", "(", "bind", "to", "builder", ")", "?", "resolved", "docker", "host", ".", "from", "(", "this", ".", "docker", "configuration", ".", "connection", "(", ")", ")", ":", "null", ";", "}"], "token_count": 55, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 58, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.296753+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f762c9341ecd14077848045b363bcdc82c7a4012", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "tagImage", "signature": null, "start_line": 192, "end_line": 197, "nloc": 6, "method_source_normalized": "privatevoidtagImage(ImageReference sourceReference, List<ImageReference> tags)throws IOException{\n\t\tfor (ImageReference tag : tags) {\n\t\t\tthis.docker.image().tag(sourceReference, tag);\n\t\t\tthis.log.taggedImage(tag);\n\t\t}\n\t}", "original_code": "private void tagImage(ImageReference sourceReference, List<ImageReference> tags) throws IOException {\n\t\tfor (ImageReference tag : tags) {\n\t\t\tthis.docker.image().tag(sourceReference, tag);\n\t\t\tthis.log.taggedImage(tag);\n\t\t}\n\t}", "code_tokens": ["private", "void", "tag", "image", "(", "image", "reference", "source", "reference", ",", "list", "<", "image", "reference", ">", "tags", ")", "throws", "io", "exception", "{", "for", "(", "image", "reference", "tag", ":", "tags", ")", "{", "this", ".", "docker", ".", "image", "(", ")", ".", "tag", "(", "source", "reference", ",", "tag", ")", ";", "this", ".", "log", ".", "tagged", "image", "(", "tag", ")", ";", "}", "}"], "token_count": 58, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 71, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.297016+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3ebceabfb3de29e000eb239e4bed92a7b7edd50b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "pushImages", "signature": null, "start_line": 199, "end_line": 204, "nloc": 6, "method_source_normalized": "privatevoidpushImages(ImageReference name, List<ImageReference> tags)throws IOException{\n\t\tpushImage(name);\n\t\tfor (ImageReference tag : tags) {\n\t\t\tpushImage(tag);\n\t\t}\n\t}", "original_code": "private void pushImages(ImageReference name, List<ImageReference> tags) throws IOException {\n\t\tpushImage(name);\n\t\tfor (ImageReference tag : tags) {\n\t\t\tpushImage(tag);\n\t\t}\n\t}", "code_tokens": ["private", "void", "push", "images", "(", "image", "reference", "name", ",", "list", "<", "image", "reference", ">", "tags", ")", "throws", "io", "exception", "{", "push", "image", "(", "name", ")", ";", "for", "(", "image", "reference", "tag", ":", "tags", ")", "{", "push", "image", "(", "tag", ")", ";", "}", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 53, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.297275+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ab7c17d0ac73f321a0184bd46c228034e6b765c4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "pushImage", "signature": null, "start_line": 206, "end_line": 212, "nloc": 7, "method_source_normalized": "privatevoidpushImage(ImageReference reference)throws IOException{\n\t\tConsumer<TotalProgressEvent> progressConsumer = this.log.pushingImage(reference);\n\t\tTotalProgressPushListener listener = new TotalProgressPushListener(progressConsumer);\n\t\tString authHeader = authHeader(this.dockerConfiguration.publishRegistryAuthentication(), reference);\n\t\tthis.docker.image().push(reference, listener, authHeader);\n\t\tthis.log.pushedImage(reference);\n\t}", "original_code": "private void pushImage(ImageReference reference) throws IOException {\n\t\tConsumer<TotalProgressEvent> progressConsumer = this.log.pushingImage(reference);\n\t\tTotalProgressPushListener listener = new TotalProgressPushListener(progressConsumer);\n\t\tString authHeader = authHeader(this.dockerConfiguration.publishRegistryAuthentication(), reference);\n\t\tthis.docker.image().push(reference, listener, authHeader);\n\t\tthis.log.pushedImage(reference);\n\t}", "code_tokens": ["private", "void", "push", "image", "(", "image", "reference", "reference", ")", "throws", "io", "exception", "{", "consumer", "<", "total", "progress", "event", ">", "progress", "consumer", "=", "this", ".", "log", ".", "pushing", "image", "(", "reference", ")", ";", "total", "progress", "push", "listener", "listener", "=", "new", "total", "progress", "push", "listener", "(", "progress", "consumer", ")", ";", "string", "auth", "header", "=", "auth", "header", "(", "this", ".", "docker", "configuration", ".", "publish", "registry", "authentication", "(", ")", ",", "reference", ")", ";", "this", ".", "docker", ".", "image", "(", ")", ".", "push", "(", "reference", ",", "listener", ",", "auth", "header", ")", ";", "this", ".", "log", ".", "pushed", "image", "(", "reference", ")", ";", "}"], "token_count": 98, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 111, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.297554+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "336f4871b4afd5ee90fea0291618b43c0d769139", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "authHeader", "signature": null, "start_line": 214, "end_line": 217, "nloc": 4, "method_source_normalized": "private static @NullableStringauthHeader(@Nullable DockerRegistryAuthentication authentication,\n\t\t\tImageReference reference){\n\t\treturn (authentication != null) ? authentication.getAuthHeader(reference) : null;\n\t}", "original_code": "private static @Nullable String authHeader(@Nullable DockerRegistryAuthentication authentication,\n\t\t\tImageReference reference) {\n\t\treturn (authentication != null) ? authentication.getAuthHeader(reference) : null;\n\t}", "code_tokens": ["private", "static", "@", "nullable", "string", "auth", "header", "(", "@", "nullable", "docker", "registry", "authentication", "authentication", ",", "image", "reference", "reference", ")", "{", "return", "(", "authentication", "!=", "null", ")", "?", "authentication", ".", "get", "auth", "header", "(", "reference", ")", ":", "null", ";", "}"], "token_count": 39, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 48, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.297820+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b10c4cd296cd11a67e3b731a87424adf12075b67", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "ImageFetcher", "signature": null, "start_line": 230, "end_line": 235, "nloc": 6, "method_source_normalized": "ImageFetcher(@Nullable DockerRegistryAuthentication registryAuthentication, PullPolicy pullPolicy,\n\t\t\t\t@Nullable ImagePlatform platform){\n\t\t\tthis.registryAuthentication = registryAuthentication;\n\t\t\tthis.pullPolicy = pullPolicy;\n\t\t\tthis.defaultPlatform = platform;\n\t\t}", "original_code": "ImageFetcher(@Nullable DockerRegistryAuthentication registryAuthentication, PullPolicy pullPolicy,\n\t\t\t\t@Nullable ImagePlatform platform) {\n\t\t\tthis.registryAuthentication = registryAuthentication;\n\t\t\tthis.pullPolicy = pullPolicy;\n\t\t\tthis.defaultPlatform = platform;\n\t\t}", "code_tokens": ["image", "fetcher", "(", "@", "nullable", "docker", "registry", "authentication", "registry", "authentication", ",", "pull", "policy", "pull", "policy", ",", "@", "nullable", "image", "platform", "platform", ")", "{", "this", ".", "registry", "authentication", "=", "registry", "authentication", ";", "this", ".", "pull", "policy", "=", "pull", "policy", ";", "this", ".", "default", "platform", "=", "platform", ";", "}"], "token_count": 47, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 15, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.298083+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a516e990abd8d9b17a758bf4e7b52bc579108af6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "fetchImage", "signature": null, "start_line": 237, "end_line": 252, "nloc": 16, "method_source_normalized": "ImagefetchImage(ImageType type, ImageReference reference)throws IOException{\n\t\t\tAssert.notNull(type, \"'type' must not be null\");\n\t\t\tAssert.notNull(reference, \"'reference' must not be null\");\n\t\t\tif (this.pullPolicy == PullPolicy.ALWAYS) {\n\t\t\t\treturn checkPlatformMismatch(pullImage(reference, type), reference);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\treturn checkPlatformMismatch(Builder.this.docker.image().inspect(reference), reference);\n\t\t\t}\n\t\t\tcatch (DockerEngineException ex) {\n\t\t\t\tif (this.pullPolicy == PullPolicy.IF_NOT_PRESENT && ex.getStatusCode() == 404) {\n\t\t\t\t\treturn checkPlatformMismatch(pullImage(reference, type), reference);\n\t\t\t\t}\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}", "original_code": "Image fetchImage(ImageType type, ImageReference reference) throws IOException {\n\t\t\tAssert.notNull(type, \"'type' must not be null\");\n\t\t\tAssert.notNull(reference, \"'reference' must not be null\");\n\t\t\tif (this.pullPolicy == PullPolicy.ALWAYS) {\n\t\t\t\treturn checkPlatformMismatch(pullImage(reference, type), reference);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\treturn checkPlatformMismatch(Builder.this.docker.image().inspect(reference), reference);\n\t\t\t}\n\t\t\tcatch (DockerEngineException ex) {\n\t\t\t\tif (this.pullPolicy == PullPolicy.IF_NOT_PRESENT && ex.getStatusCode() == 404) {\n\t\t\t\t\treturn checkPlatformMismatch(pullImage(reference, type), reference);\n\t\t\t\t}\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}", "code_tokens": ["image", "fetch", "image", "(", "image", "type", "type", ",", "image", "reference", "reference", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "type", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "reference", ",", "__STR__", ")", ";", "if", "(", "this", ".", "pull", "policy", "==", "pull", "policy", ".", "always", ")", "{", "return", "check", "platform", "mismatch", "(", "pull", "image", "(", "reference", ",", "type", ")", ",", "reference", ")", ";", "}", "try", "{", "return", "check", "platform", "mismatch", "(", "builder", ".", "this", ".", "docker", ".", "image", "(", ")", ".", "inspect", "(", "reference", ")", ",", "reference", ")", ";", "}", "catch", "(", "docker", "engine", "exception", "ex", ")", "{", "if", "(", "this", ".", "pull", "policy", "==", "pull", "policy", ".", "if", "not", "present", "&&", "ex", ".", "get", "status", "code", "(", ")", "==", "__NUM__", ")", "{", "return", "check", "platform", "mismatch", "(", "pull", "image", "(", "reference", ",", "type", ")", ",", "reference", ")", ";", "}", "throw", "ex", ";", "}", "}"], "token_count": 147, "vocab_size": 42, "cyclomatic_complexity": 5, "ast_node_count": 177, "n_identifiers": 41, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 108, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.298415+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "051aefca0ecd043c6980959d38bd4056dc674edb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "pullImage", "signature": null, "start_line": 254, "end_line": 264, "nloc": 11, "method_source_normalized": "privateImagepullImage(ImageReference reference, ImageType imageType)throws IOException{\n\t\t\tTotalProgressPullListener listener = new TotalProgressPullListener(\n\t\t\t\t\tBuilder.this.log.pullingImage(reference, this.defaultPlatform, imageType));\n\t\t\tString authHeader = authHeader(this.registryAuthentication, reference);\n\t\t\tImage image = Builder.this.docker.image().pull(reference, this.defaultPlatform, listener, authHeader);\n\t\t\tBuilder.this.log.pulledImage(image, imageType);\n\t\t\tif (this.defaultPlatform == null) {\n\t\t\t\tthis.defaultPlatform = ImagePlatform.from(image);\n\t\t\t}\n\t\t\treturn image;\n\t\t}", "original_code": "private Image pullImage(ImageReference reference, ImageType imageType) throws IOException {\n\t\t\tTotalProgressPullListener listener = new TotalProgressPullListener(\n\t\t\t\t\tBuilder.this.log.pullingImage(reference, this.defaultPlatform, imageType));\n\t\t\tString authHeader = authHeader(this.registryAuthentication, reference);\n\t\t\tImage image = Builder.this.docker.image().pull(reference, this.defaultPlatform, listener, authHeader);\n\t\t\tBuilder.this.log.pulledImage(image, imageType);\n\t\t\tif (this.defaultPlatform == null) {\n\t\t\t\tthis.defaultPlatform = ImagePlatform.from(image);\n\t\t\t}\n\t\t\treturn image;\n\t\t}", "code_tokens": ["private", "image", "pull", "image", "(", "image", "reference", "reference", ",", "image", "type", "image", "type", ")", "throws", "io", "exception", "{", "total", "progress", "pull", "listener", "listener", "=", "new", "total", "progress", "pull", "listener", "(", "builder", ".", "this", ".", "log", ".", "pulling", "image", "(", "reference", ",", "this", ".", "default", "platform", ",", "image", "type", ")", ")", ";", "string", "auth", "header", "=", "auth", "header", "(", "this", ".", "registry", "authentication", ",", "reference", ")", ";", "image", "image", "=", "builder", ".", "this", ".", "docker", ".", "image", "(", ")", ".", "pull", "(", "reference", ",", "this", ".", "default", "platform", ",", "listener", ",", "auth", "header", ")", ";", "builder", ".", "this", ".", "log", ".", "pulled", "image", "(", "image", ",", "image", "type", ")", ";", "if", "(", "this", ".", "default", "platform", "==", "null", ")", "{", "this", ".", "default", "platform", "=", "image", "platform", ".", "from", "(", "image", ")", ";", "}", "return", "image", ";", "}"], "token_count": 137, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 159, "n_identifiers": 42, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 74, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.298745+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e52be2a5d733c1791e8eb022e3c182d303ec53be", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "checkPlatformMismatch", "signature": null, "start_line": 266, "end_line": 274, "nloc": 9, "method_source_normalized": "privateImagecheckPlatformMismatch(Image image, ImageReference imageReference){\n\t\t\tif (this.defaultPlatform != null) {\n\t\t\t\tImagePlatform imagePlatform = ImagePlatform.from(image);\n\t\t\t\tif (!imagePlatform.equals(this.defaultPlatform)) {\n\t\t\t\t\tthrow new PlatformMismatchException(imageReference, this.defaultPlatform, imagePlatform);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn image;\n\t\t}", "original_code": "private Image checkPlatformMismatch(Image image, ImageReference imageReference) {\n\t\t\tif (this.defaultPlatform != null) {\n\t\t\t\tImagePlatform imagePlatform = ImagePlatform.from(image);\n\t\t\t\tif (!imagePlatform.equals(this.defaultPlatform)) {\n\t\t\t\t\tthrow new PlatformMismatchException(imageReference, this.defaultPlatform, imagePlatform);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn image;\n\t\t}", "code_tokens": ["private", "image", "check", "platform", "mismatch", "(", "image", "image", ",", "image", "reference", "image", "reference", ")", "{", "if", "(", "this", ".", "default", "platform", "!=", "null", ")", "{", "image", "platform", "image", "platform", "=", "image", "platform", ".", "from", "(", "image", ")", ";", "if", "(", "!", "image", "platform", ".", "equals", "(", "this", ".", "default", "platform", ")", ")", "{", "throw", "new", "platform", "mismatch", "exception", "(", "image", "reference", ",", "this", ".", "default", "platform", ",", "image", "platform", ")", ";", "}", "}", "return", "image", ";", "}"], "token_count": 77, "vocab_size": 26, "cyclomatic_complexity": 3, "ast_node_count": 89, "n_identifiers": 20, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.299042+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f58802f19f7783facb3d83087994244b310539f0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "PlatformMismatchException", "signature": null, "start_line": 280, "end_line": 284, "nloc": 5, "method_source_normalized": "privatePlatformMismatchException(ImageReference imageReference, ImagePlatform requestedPlatform,\n\t\t\t\tImagePlatform actualPlatform){\n\t\t\tsuper(\"Image platform mismatch detected. The configured platform '%s' is not supported by the image '%s'. Requested platform '%s' but got '%s'\"\n\t\t\t\t.formatted(requestedPlatform, imageReference, requestedPlatform, actualPlatform));\n\t\t}", "original_code": "private PlatformMismatchException(ImageReference imageReference, ImagePlatform requestedPlatform,\n\t\t\t\tImagePlatform actualPlatform) {\n\t\t\tsuper(\"Image platform mismatch detected. The configured platform '%s' is not supported by the image '%s'. Requested platform '%s' but got '%s'\"\n\t\t\t\t.formatted(requestedPlatform, imageReference, requestedPlatform, actualPlatform));\n\t\t}", "code_tokens": ["private", "platform", "mismatch", "exception", "(", "image", "reference", "image", "reference", ",", "image", "platform", "requested", "platform", ",", "image", "platform", "actual", "platform", ")", "{", "super", "(", "__STR__", ".", "formatted", "(", "requested", "platform", ",", "image", "reference", ",", "requested", "platform", ",", "actual", "platform", ")", ")", ";", "}"], "token_count": 42, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.299311+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5516260f77f520b48d73189839862b6165216195", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "BuildLogAdapter", "signature": null, "start_line": 295, "end_line": 297, "nloc": 3, "method_source_normalized": "privateBuildLogAdapter(AbstractBuildLog log){\n\t\t\tthis.log = log;\n\t\t}", "original_code": "private BuildLogAdapter(AbstractBuildLog log) {\n\t\t\tthis.log = log;\n\t\t}", "code_tokens": ["private", "build", "log", "adapter", "(", "abstract", "build", "log", "log", ")", "{", "this", ".", "log", "=", "log", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.299541+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4dc4ca2e045951089938dea740504e32ab0cc067", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "log", "signature": null, "start_line": 299, "end_line": 302, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicvoidlog(String message){\n\t\t\tthis.log.log(message);\n\t\t}", "original_code": "@Override\n\t\tpublic void log(String message) {\n\t\t\tthis.log.log(message);\n\t\t}", "code_tokens": ["@", "override", "public", "void", "log", "(", "string", "message", ")", "{", "this", ".", "log", ".", "log", "(", "message", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.299784+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ad8dee3c0c6ea7782667e647c94af68553dffe13", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 313, "end_line": 318, "nloc": 6, "method_source_normalized": "staticDockerLogget(BuildLog log){\n\t\t\tif (log instanceof AbstractBuildLog abstractBuildLog) {\n\t\t\t\treturn new BuildLogAdapter(abstractBuildLog);\n\t\t\t}\n\t\t\treturn DockerLog.toSystemOut();\n\t\t}", "original_code": "static DockerLog get(BuildLog log) {\n\t\t\tif (log instanceof AbstractBuildLog abstractBuildLog) {\n\t\t\t\treturn new BuildLogAdapter(abstractBuildLog);\n\t\t\t}\n\t\t\treturn DockerLog.toSystemOut();\n\t\t}", "code_tokens": ["static", "docker", "log", "get", "(", "build", "log", "log", ")", "{", "if", "(", "log", "instanceof", "abstract", "build", "log", "abstract", "build", "log", ")", "{", "return", "new", "build", "log", "adapter", "(", "abstract", "build", "log", ")", ";", "}", "return", "docker", "log", ".", "to", "system", "out", "(", ")", ";", "}"], "token_count": 45, "vocab_size": 20, "cyclomatic_complexity": 2, "ast_node_count": 48, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 1, "ast_error_nodes": ["abstractBuildLog"], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.300031+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2d3e6c744a23b8064bde1bbb66c3349d1c874f1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "BuilderResolverContext", "signature": null, "start_line": 333, "end_line": 338, "nloc": 6, "method_source_normalized": "BuilderResolverContext(ImageFetcher imageFetcher, BuilderMetadata builderMetadata,\n\t\t\t\tBuildpackLayersMetadata buildpackLayersMetadata){\n\t\t\tthis.imageFetcher = imageFetcher;\n\t\t\tthis.builderMetadata = builderMetadata;\n\t\t\tthis.buildpackLayersMetadata = buildpackLayersMetadata;\n\t\t}", "original_code": "BuilderResolverContext(ImageFetcher imageFetcher, BuilderMetadata builderMetadata,\n\t\t\t\tBuildpackLayersMetadata buildpackLayersMetadata) {\n\t\t\tthis.imageFetcher = imageFetcher;\n\t\t\tthis.builderMetadata = builderMetadata;\n\t\t\tthis.buildpackLayersMetadata = buildpackLayersMetadata;\n\t\t}", "code_tokens": ["builder", "resolver", "context", "(", "image", "fetcher", "image", "fetcher", ",", "builder", "metadata", "builder", "metadata", ",", "buildpack", "layers", "metadata", "buildpack", "layers", "metadata", ")", "{", "this", ".", "image", "fetcher", "=", "image", "fetcher", ";", "this", ".", "builder", "metadata", "=", "builder", "metadata", ";", "this", ".", "buildpack", "layers", "metadata", "=", "buildpack", "layers", "metadata", ";", "}"], "token_count": 49, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.300302+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "969bb11cad4e41a5a76295e8e36dfbc7d6f80c12", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "getBuildpackMetadata", "signature": null, "start_line": 340, "end_line": 343, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicList<BuildpackMetadata>getBuildpackMetadata(){\n\t\t\treturn this.builderMetadata.getBuildpacks();\n\t\t}", "original_code": "@Override\n\t\tpublic List<BuildpackMetadata> getBuildpackMetadata() {\n\t\t\treturn this.builderMetadata.getBuildpacks();\n\t\t}", "code_tokens": ["@", "override", "public", "list", "<", "buildpack", "metadata", ">", "get", "buildpack", "metadata", "(", ")", "{", "return", "this", ".", "builder", "metadata", ".", "get", "buildpacks", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.300544+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "44cd77303f75f3d72c216d5dfd4fc90742291116", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "getBuildpackLayersMetadata", "signature": null, "start_line": 345, "end_line": 348, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicBuildpackLayersMetadatagetBuildpackLayersMetadata(){\n\t\t\treturn this.buildpackLayersMetadata;\n\t\t}", "original_code": "@Override\n\t\tpublic BuildpackLayersMetadata getBuildpackLayersMetadata() {\n\t\t\treturn this.buildpackLayersMetadata;\n\t\t}", "code_tokens": ["@", "override", "public", "buildpack", "layers", "metadata", "get", "buildpack", "layers", "metadata", "(", ")", "{", "return", "this", ".", "buildpack", "layers", "metadata", ";", "}"], "token_count": 21, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.300780+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f82cb4abfe3cf7d2d05c93cac7d3e964897764c2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "fetchImage", "signature": null, "start_line": 350, "end_line": 353, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicImagefetchImage(ImageReference reference, ImageType imageType)throws IOException{\n\t\t\treturn this.imageFetcher.fetchImage(imageType, reference);\n\t\t}", "original_code": "@Override\n\t\tpublic Image fetchImage(ImageReference reference, ImageType imageType) throws IOException {\n\t\t\treturn this.imageFetcher.fetchImage(imageType, reference);\n\t\t}", "code_tokens": ["@", "override", "public", "image", "fetch", "image", "(", "image", "reference", "reference", ",", "image", "type", "image", "type", ")", "throws", "io", "exception", "{", "return", "this", ".", "image", "fetcher", ".", "fetch", "image", "(", "image", "type", ",", "reference", ")", ";", "}"], "token_count": 36, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 12, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.301038+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "90fac6738c97919ad6f974dc0fc23f5b1225fcd1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Builder.java", "file_blob_sha": null, "method_name": "exportImageLayers", "signature": null, "start_line": 355, "end_line": 359, "nloc": 5, "method_source_normalized": "@Override\n\t\tpublicvoidexportImageLayers(ImageReference reference, IOBiConsumer<String, TarArchive> exports)throws IOException{\n\t\t\tBuilder.this.docker.image().exportLayers(reference, exports);\n\t\t}", "original_code": "@Override\n\t\tpublic void exportImageLayers(ImageReference reference, IOBiConsumer<String, TarArchive> exports)\n\t\t\t\tthrows IOException {\n\t\t\tBuilder.this.docker.image().exportLayers(reference, exports);\n\t\t}", "code_tokens": ["@", "override", "public", "void", "export", "image", "layers", "(", "image", "reference", "reference", ",", "io", "bi", "consumer", "<", "string", ",", "tar", "archive", ">", "exports", ")", "throws", "io", "exception", "{", "builder", ".", "this", ".", "docker", ".", "image", "(", ")", ".", "export", "layers", "(", "reference", ",", "exports", ")", ";", "}"], "token_count": 46, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.301311+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c41c50f035a5053c650a0736390a509f7e28c1fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolver.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 36, "end_line": 36, "nloc": 1, "method_source_normalized": "@NullableBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference);", "original_code": "@Nullable Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference);", "code_tokens": ["@", "nullable", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", ";"], "token_count": 15, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 5, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.301971+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a7fa0ea0e4219cf60ef3b0c4c3be5a1c313b8bf5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolvers.java", "file_blob_sha": null, "method_name": "BuildpackResolvers", "signature": null, "start_line": 38, "end_line": 39, "nloc": 2, "method_source_normalized": "privateBuildpackResolvers(){\n\t}", "original_code": "private BuildpackResolvers() {\n\t}", "code_tokens": ["private", "buildpack", "resolvers", "(", ")", "{", "}"], "token_count": 7, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.302941+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6ff48bf47630526a0ccd4302ba2d0044a3b68495", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolvers.java", "file_blob_sha": null, "method_name": "getResolvers", "signature": null, "start_line": 41, "end_line": 48, "nloc": 8, "method_source_normalized": "private staticList<BuildpackResolver>getResolvers(){\n\t\tList<BuildpackResolver> resolvers = new ArrayList<>();\n\t\tresolvers.add(BuilderBuildpack::resolve);\n\t\tresolvers.add(DirectoryBuildpack::resolve);\n\t\tresolvers.add(TarGzipBuildpack::resolve);\n\t\tresolvers.add(ImageBuildpack::resolve);\n\t\treturn Collections.unmodifiableList(resolvers);\n\t}", "original_code": "private static List<BuildpackResolver> getResolvers() {\n\t\tList<BuildpackResolver> resolvers = new ArrayList<>();\n\t\tresolvers.add(BuilderBuildpack::resolve);\n\t\tresolvers.add(DirectoryBuildpack::resolve);\n\t\tresolvers.add(TarGzipBuildpack::resolve);\n\t\tresolvers.add(ImageBuildpack::resolve);\n\t\treturn Collections.unmodifiableList(resolvers);\n\t}", "code_tokens": ["private", "static", "list", "<", "buildpack", "resolver", ">", "get", "resolvers", "(", ")", "{", "list", "<", "buildpack", "resolver", ">", "resolvers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "resolvers", ".", "add", "(", "builder", "buildpack", "::", "resolve", ")", ";", "resolvers", ".", "add", "(", "directory", "buildpack", "::", "resolve", ")", ";", "resolvers", ".", "add", "(", "tar", "gzip", "buildpack", "::", "resolve", ")", ";", "resolvers", ".", "add", "(", "image", "buildpack", "::", "resolve", ")", ";", "return", "collections", ".", "unmodifiable", "list", "(", "resolvers", ")", ";", "}"], "token_count": 78, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 101, "n_identifiers": 26, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.303251+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39102c7fb8adae63afe2efd653ebb756851aacdb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolvers.java", "file_blob_sha": null, "method_name": "resolveAll", "signature": null, "start_line": 57, "end_line": 67, "nloc": 11, "method_source_normalized": "staticBuildpacksresolveAll(BuildpackResolverContext context, Collection<BuildpackReference> references){\n\t\tAssert.notNull(context, \"'context' must not be null\");\n\t\tif (CollectionUtils.isEmpty(references)) {\n\t\t\treturn Buildpacks.EMPTY;\n\t\t}\n\t\tList<Buildpack> buildpacks = new ArrayList<>(references.size());\n\t\tfor (BuildpackReference reference : references) {\n\t\t\tbuildpacks.add(resolve(context, reference));\n\t\t}\n\t\treturn Buildpacks.of(buildpacks);\n\t}", "original_code": "static Buildpacks resolveAll(BuildpackResolverContext context, Collection<BuildpackReference> references) {\n\t\tAssert.notNull(context, \"'context' must not be null\");\n\t\tif (CollectionUtils.isEmpty(references)) {\n\t\t\treturn Buildpacks.EMPTY;\n\t\t}\n\t\tList<Buildpack> buildpacks = new ArrayList<>(references.size());\n\t\tfor (BuildpackReference reference : references) {\n\t\t\tbuildpacks.add(resolve(context, reference));\n\t\t}\n\t\treturn Buildpacks.of(buildpacks);\n\t}", "code_tokens": ["static", "buildpacks", "resolve", "all", "(", "buildpack", "resolver", "context", "context", ",", "collection", "<", "buildpack", "reference", ">", "references", ")", "{", "assert", ".", "not", "null", "(", "context", ",", "__STR__", ")", ";", "if", "(", "collection", "utils", ".", "is", "empty", "(", "references", ")", ")", "{", "return", "buildpacks", ".", "empty", ";", "}", "list", "<", "buildpack", ">", "buildpacks", "=", "new", "array", "list", "<", ">", "(", "references", ".", "size", "(", ")", ")", ";", "for", "(", "buildpack", "reference", "reference", ":", "references", ")", "{", "buildpacks", ".", "add", "(", "resolve", "(", "context", ",", "reference", ")", ")", ";", "}", "return", "buildpacks", ".", "of", "(", "buildpacks", ")", ";", "}"], "token_count": 96, "vocab_size": 37, "cyclomatic_complexity": 3, "ast_node_count": 125, "n_identifiers": 32, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.303563+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "27a793055f8c75eee576f38b4fd5d59a4c2427b5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackResolvers.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 69, "end_line": 78, "nloc": 10, "method_source_normalized": "private staticBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference){\n\t\tAssert.notNull(reference, \"'reference' must not be null\");\n\t\tfor (BuildpackResolver resolver : resolvers) {\n\t\t\tBuildpack buildpack = resolver.resolve(context, reference);\n\t\t\tif (buildpack != null) {\n\t\t\t\treturn buildpack;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid buildpack reference '\" + reference + \"'\");\n\t}", "original_code": "private static Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference) {\n\t\tAssert.notNull(reference, \"'reference' must not be null\");\n\t\tfor (BuildpackResolver resolver : resolvers) {\n\t\t\tBuildpack buildpack = resolver.resolve(context, reference);\n\t\t\tif (buildpack != null) {\n\t\t\t\treturn buildpack;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid buildpack reference '\" + reference + \"'\");\n\t}", "code_tokens": ["private", "static", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", "{", "assert", ".", "not", "null", "(", "reference", ",", "__STR__", ")", ";", "for", "(", "buildpack", "resolver", "resolver", ":", "resolvers", ")", "{", "buildpack", "buildpack", "=", "resolver", ".", "resolve", "(", "context", ",", "reference", ")", ";", "if", "(", "buildpack", "!=", "null", ")", "{", "return", "buildpack", ";", "}", "}", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "reference", "+", "__STR__", ")", ";", "}"], "token_count": 72, "vocab_size": 31, "cyclomatic_complexity": 3, "ast_node_count": 90, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 66, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.303844+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8cd4b862751af1e55d18693d0e3e1483b6246e6d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "BuilderBuildpack", "signature": null, "start_line": 45, "end_line": 47, "nloc": 3, "method_source_normalized": "BuilderBuildpack(BuildpackMetadata buildpackMetadata){\n\t\tthis.coordinates = BuildpackCoordinates.fromBuildpackMetadata(buildpackMetadata);\n\t}", "original_code": "BuilderBuildpack(BuildpackMetadata buildpackMetadata) {\n\t\tthis.coordinates = BuildpackCoordinates.fromBuildpackMetadata(buildpackMetadata);\n\t}", "code_tokens": ["builder", "buildpack", "(", "buildpack", "metadata", "buildpack", "metadata", ")", "{", "this", ".", "coordinates", "=", "buildpack", "coordinates", ".", "from", "buildpack", "metadata", "(", "buildpack", "metadata", ")", ";", "}"], "token_count": 25, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.305198+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6229849e90dc23f8b349e8c4711fd5c48750fe5a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 49, "end_line": 52, "nloc": 4, "method_source_normalized": "@Override\n\tpublicBuildpackCoordinatesgetCoordinates(){\n\t\treturn this.coordinates;\n\t}", "original_code": "@Override\n\tpublic BuildpackCoordinates getCoordinates() {\n\t\treturn this.coordinates;\n\t}", "code_tokens": ["@", "override", "public", "buildpack", "coordinates", "get", "coordinates", "(", ")", "{", "return", "this", ".", "coordinates", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.305449+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "382c49cc376cceb8fef1bad7ef86088cbb955fa3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 54, "end_line": 56, "nloc": 3, "method_source_normalized": "@Override\n\tpublicvoidapply(IOConsumer<Layer> layers)throws IOException{\n\t}", "original_code": "@Override\n\tpublic void apply(IOConsumer<Layer> layers) throws IOException {\n\t}", "code_tokens": ["@", "override", "public", "void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "}"], "token_count": 18, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.305687+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d6fabe4cce02d4173e444432d3f62500c3d5499b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 64, "end_line": 73, "nloc": 10, "method_source_normalized": "static @NullableBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference){\n\t\tboolean unambiguous = reference.hasPrefix(PREFIX);\n\t\tBuilderReference builderReference = BuilderReference\n\t\t\t.of(unambiguous ? getSubReference(reference) : reference.toString());\n\t\tBuildpackMetadata buildpackMetadata = findBuildpackMetadata(context, builderReference);\n\t\tif (unambiguous) {\n\t\t\tAssert.state(buildpackMetadata != null, () -> \"Buildpack '\" + reference + \"' not found in builder\");\n\t\t}\n\t\treturn (buildpackMetadata != null) ? new BuilderBuildpack(buildpackMetadata) : null;\n\t}", "original_code": "static @Nullable Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference) {\n\t\tboolean unambiguous = reference.hasPrefix(PREFIX);\n\t\tBuilderReference builderReference = BuilderReference\n\t\t\t.of(unambiguous ? getSubReference(reference) : reference.toString());\n\t\tBuildpackMetadata buildpackMetadata = findBuildpackMetadata(context, builderReference);\n\t\tif (unambiguous) {\n\t\t\tAssert.state(buildpackMetadata != null, () -> \"Buildpack '\" + reference + \"' not found in builder\");\n\t\t}\n\t\treturn (buildpackMetadata != null) ? new BuilderBuildpack(buildpackMetadata) : null;\n\t}", "code_tokens": ["static", "@", "nullable", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", "{", "boolean", "unambiguous", "=", "reference", ".", "has", "prefix", "(", "prefix", ")", ";", "builder", "reference", "builder", "reference", "=", "builder", "reference", ".", "of", "(", "unambiguous", "?", "get", "sub", "reference", "(", "reference", ")", ":", "reference", ".", "to", "string", "(", ")", ")", ";", "buildpack", "metadata", "buildpack", "metadata", "=", "find", "buildpack", "metadata", "(", "context", ",", "builder", "reference", ")", ";", "if", "(", "unambiguous", ")", "{", "assert", ".", "state", "(", "buildpack", "metadata", "!=", "null", ",", "(", ")", "->", "__STR__", "+", "reference", "+", "__STR__", ")", ";", "}", "return", "(", "buildpack", "metadata", "!=", "null", ")", "?", "new", "builder", "buildpack", "(", "buildpack", "metadata", ")", ":", "null", ";", "}"], "token_count": 113, "vocab_size": 40, "cyclomatic_complexity": 4, "ast_node_count": 135, "n_identifiers": 33, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 73, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.306002+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8430b7ab07f46450508664557f3dcbbd66aed54c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "getSubReference", "signature": null, "start_line": 75, "end_line": 79, "nloc": 5, "method_source_normalized": "private staticStringgetSubReference(BuildpackReference reference){\n\t\tString result = reference.getSubReference(PREFIX);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private static String getSubReference(BuildpackReference reference) {\n\t\tString result = reference.getSubReference(PREFIX);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "static", "string", "get", "sub", "reference", "(", "buildpack", "reference", "reference", ")", "{", "string", "result", "=", "reference", ".", "get", "sub", "reference", "(", "prefix", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 39, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.306280+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db61baa922294ed65d13af355289d1fd53b52f61", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "findBuildpackMetadata", "signature": null, "start_line": 81, "end_line": 89, "nloc": 9, "method_source_normalized": "private static @NullableBuildpackMetadatafindBuildpackMetadata(BuildpackResolverContext context,\n\t\t\tBuilderReference builderReference){\n\t\tfor (BuildpackMetadata candidate : context.getBuildpackMetadata()) {\n\t\t\tif (builderReference.matches(candidate)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "original_code": "private static @Nullable BuildpackMetadata findBuildpackMetadata(BuildpackResolverContext context,\n\t\t\tBuilderReference builderReference) {\n\t\tfor (BuildpackMetadata candidate : context.getBuildpackMetadata()) {\n\t\t\tif (builderReference.matches(candidate)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["private", "static", "@", "nullable", "buildpack", "metadata", "find", "buildpack", "metadata", "(", "buildpack", "resolver", "context", "context", ",", "builder", "reference", "builder", "reference", ")", "{", "for", "(", "buildpack", "metadata", "candidate", ":", "context", ".", "get", "buildpack", "metadata", "(", ")", ")", "{", "if", "(", "builder", "reference", ".", "matches", "(", "candidate", ")", ")", "{", "return", "candidate", ";", "}", "}", "return", "null", ";", "}"], "token_count": 56, "vocab_size": 26, "cyclomatic_complexity": 3, "ast_node_count": 63, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.306569+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bec8d295769cfef234e9fa3579e73ca062c91f7d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "BuilderReference", "signature": null, "start_line": 100, "end_line": 103, "nloc": 4, "method_source_normalized": "BuilderReference(String id, @Nullable String version){\n\t\t\tthis.id = id;\n\t\t\tthis.version = version;\n\t\t}", "original_code": "BuilderReference(String id, @Nullable String version) {\n\t\t\tthis.id = id;\n\t\t\tthis.version = version;\n\t\t}", "code_tokens": ["builder", "reference", "(", "string", "id", ",", "@", "nullable", "string", "version", ")", "{", "this", ".", "id", "=", "id", ";", "this", ".", "version", "=", "version", ";", "}"], "token_count": 25, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.306855+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "109b3281643badc08880ce92da2384f3a5b73195", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 105, "end_line": 108, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn (this.version != null) ? this.id + \"@\" + this.version : this.id;\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn (this.version != null) ? this.id + \"@\" + this.version : this.id;\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "(", "this", ".", "version", "!=", "null", ")", "?", "this", ".", "id", "+", "__STR__", "+", "this", ".", "version", ":", "this", ".", "id", ";", "}"], "token_count": 33, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.307101+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "afd53b514a8cc965a42275e6ea5c15623607395c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "matches", "signature": null, "start_line": 110, "end_line": 113, "nloc": 4, "method_source_normalized": "booleanmatches(BuildpackMetadata candidate){\n\t\t\treturn this.id.equals(candidate.getId())\n\t\t\t\t\t&& (this.version == null || this.version.equals(candidate.getVersion()));\n\t\t}", "original_code": "boolean matches(BuildpackMetadata candidate) {\n\t\t\treturn this.id.equals(candidate.getId())\n\t\t\t\t\t&& (this.version == null || this.version.equals(candidate.getVersion()));\n\t\t}", "code_tokens": ["boolean", "matches", "(", "buildpack", "metadata", "candidate", ")", "{", "return", "this", ".", "id", ".", "equals", "(", "candidate", ".", "get", "id", "(", ")", ")", "&&", "(", "this", ".", "version", "==", "null", "||", "this", ".", "version", ".", "equals", "(", "candidate", ".", "get", "version", "(", ")", ")", ")", ";", "}"], "token_count": 46, "vocab_size": 21, "cyclomatic_complexity": 3, "ast_node_count": 63, "n_identifiers": 12, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.307361+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "91b25f1eb5c7cc92c358c992fa323a45836737ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpack.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 115, "end_line": 121, "nloc": 7, "method_source_normalized": "staticBuilderReferenceof(String value){\n\t\t\tif (value.contains(\"@\")) {\n\t\t\t\tString[] parts = value.split(\"@\");\n\t\t\t\treturn new BuilderReference(parts[0], parts[1]);\n\t\t\t}\n\t\t\treturn new BuilderReference(value, null);\n\t\t}", "original_code": "static BuilderReference of(String value) {\n\t\t\tif (value.contains(\"@\")) {\n\t\t\t\tString[] parts = value.split(\"@\");\n\t\t\t\treturn new BuilderReference(parts[0], parts[1]);\n\t\t\t}\n\t\t\treturn new BuilderReference(value, null);\n\t\t}", "code_tokens": ["static", "builder", "reference", "of", "(", "string", "value", ")", "{", "if", "(", "value", ".", "contains", "(", "__STR__", ")", ")", "{", "string", "[", "]", "parts", "=", "value", ".", "split", "(", "__STR__", ")", ";", "return", "new", "builder", "reference", "(", "parts", "[", "__NUM__", "]", ",", "parts", "[", "__NUM__", "]", ")", ";", "}", "return", "new", "builder", "reference", "(", "value", ",", "null", ")", ";", "}"], "token_count": 59, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 80, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.307621+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f6f55b45dab9a2c6d2a5a00869e017b16d8b7c9e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "TarGzipBuildpack", "signature": null, "start_line": 52, "end_line": 55, "nloc": 4, "method_source_normalized": "privateTarGzipBuildpack(Path path){\n\t\tthis.path = path;\n\t\tthis.coordinates = findBuildpackCoordinates(path);\n\t}", "original_code": "private TarGzipBuildpack(Path path) {\n\t\tthis.path = path;\n\t\tthis.coordinates = findBuildpackCoordinates(path);\n\t}", "code_tokens": ["private", "tar", "gzip", "buildpack", "(", "path", "path", ")", "{", "this", ".", "path", "=", "path", ";", "this", ".", "coordinates", "=", "find", "buildpack", "coordinates", "(", "path", ")", ";", "}"], "token_count": 27, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.309176+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "61994a93c8708902796b30a3d16935f3f50d15b5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "findBuildpackCoordinates", "signature": null, "start_line": 57, "end_line": 75, "nloc": 19, "method_source_normalized": "privateBuildpackCoordinatesfindBuildpackCoordinates(Path path){\n\t\ttry {\n\t\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\t\tnew GzipCompressorInputStream(Files.newInputStream(path)))) {\n\t\t\t\tArchiveEntry entry = tar.getNextEntry();\n\t\t\t\twhile (entry != null) {\n\t\t\t\t\tif (\"buildpack.toml\".equals(entry.getName())) {\n\t\t\t\t\t\treturn BuildpackCoordinates.fromToml(tar, path);\n\t\t\t\t\t}\n\t\t\t\t\tentry = tar.getNextEntry();\n\t\t\t\t}\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new RuntimeException(\"Error parsing descriptor for buildpack '\" + path + \"'\", ex);\n\t\t}\n\t}", "original_code": "private BuildpackCoordinates findBuildpackCoordinates(Path path) {\n\t\ttry {\n\t\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\t\tnew GzipCompressorInputStream(Files.newInputStream(path)))) {\n\t\t\t\tArchiveEntry entry = tar.getNextEntry();\n\t\t\t\twhile (entry != null) {\n\t\t\t\t\tif (\"buildpack.toml\".equals(entry.getName())) {\n\t\t\t\t\t\treturn BuildpackCoordinates.fromToml(tar, path);\n\t\t\t\t\t}\n\t\t\t\t\tentry = tar.getNextEntry();\n\t\t\t\t}\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new RuntimeException(\"Error parsing descriptor for buildpack '\" + path + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "buildpack", "coordinates", "find", "buildpack", "coordinates", "(", "path", "path", ")", "{", "try", "{", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "gzip", "compressor", "input", "stream", "(", "files", ".", "new", "input", "stream", "(", "path", ")", ")", ")", ")", "{", "archive", "entry", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "if", "(", "__STR__", ".", "equals", "(", "entry", ".", "get", "name", "(", ")", ")", ")", "{", "return", "buildpack", "coordinates", ".", "from", "toml", "(", "tar", ",", "path", ")", ";", "}", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "}", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "path", "+", "__STR__", ")", ";", "}", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "runtime", "exception", "(", "__STR__", "+", "path", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 141, "vocab_size": 44, "cyclomatic_complexity": 4, "ast_node_count": 168, "n_identifiers": 33, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 137, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.309513+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1f1f37cd71a98daeb6b0c073e1e4f3da0b6ea184", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 77, "end_line": 80, "nloc": 4, "method_source_normalized": "@Override\n\tpublicBuildpackCoordinatesgetCoordinates(){\n\t\treturn this.coordinates;\n\t}", "original_code": "@Override\n\tpublic BuildpackCoordinates getCoordinates() {\n\t\treturn this.coordinates;\n\t}", "code_tokens": ["@", "override", "public", "buildpack", "coordinates", "get", "coordinates", "(", ")", "{", "return", "this", ".", "coordinates", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.309777+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1c120e82f988f5734107fd1c252fa3e45fefc84b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 82, "end_line": 85, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidapply(IOConsumer<Layer> layers)throws IOException{\n\t\tlayers.accept(Layer.fromTarArchive(this::copyAndRebaseEntries));\n\t}", "original_code": "@Override\n\tpublic void apply(IOConsumer<Layer> layers) throws IOException {\n\t\tlayers.accept(Layer.fromTarArchive(this::copyAndRebaseEntries));\n\t}", "code_tokens": ["@", "override", "public", "void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "layers", ".", "accept", "(", "layer", ".", "from", "tar", "archive", "(", "this", "::", "copy", "and", "rebase", "entries", ")", ")", ";", "}"], "token_count": 37, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.310022+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e307d9e33e3471d000e17881618af42541e70cd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "copyAndRebaseEntries", "signature": null, "start_line": 87, "end_line": 104, "nloc": 18, "method_source_normalized": "privatevoidcopyAndRebaseEntries(OutputStream outputStream)throws IOException{\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tPath basePath = Paths.get(\"/cnb/buildpacks/\", id, this.coordinates.getVersion());\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\tnew GzipCompressorInputStream(Files.newInputStream(this.path)));\n\t\t\t\tTarArchiveOutputStream output = new TarArchiveOutputStream(outputStream)) {\n\t\t\twriteBasePathEntries(output, basePath);\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentry.setName(basePath + \"/\" + entry.getName());\n\t\t\t\toutput.putArchiveEntry(entry);\n\t\t\t\tStreamUtils.copy(tar, output);\n\t\t\t\toutput.closeArchiveEntry();\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t\toutput.finish();\n\t\t}\n\t}", "original_code": "private void copyAndRebaseEntries(OutputStream outputStream) throws IOException {\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tPath basePath = Paths.get(\"/cnb/buildpacks/\", id, this.coordinates.getVersion());\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\tnew GzipCompressorInputStream(Files.newInputStream(this.path)));\n\t\t\t\tTarArchiveOutputStream output = new TarArchiveOutputStream(outputStream)) {\n\t\t\twriteBasePathEntries(output, basePath);\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentry.setName(basePath + \"/\" + entry.getName());\n\t\t\t\toutput.putArchiveEntry(entry);\n\t\t\t\tStreamUtils.copy(tar, output);\n\t\t\t\toutput.closeArchiveEntry();\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t\toutput.finish();\n\t\t}\n\t}", "code_tokens": ["private", "void", "copy", "and", "rebase", "entries", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "string", "id", "=", "this", ".", "coordinates", ".", "get", "sanitized", "id", "(", ")", ";", "path", "base", "path", "=", "paths", ".", "get", "(", "__STR__", ",", "id", ",", "this", ".", "coordinates", ".", "get", "version", "(", ")", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "gzip", "compressor", "input", "stream", "(", "files", ".", "new", "input", "stream", "(", "this", ".", "path", ")", ")", ")", ";", "tar", "archive", "output", "stream", "output", "=", "new", "tar", "archive", "output", "stream", "(", "output", "stream", ")", ")", "{", "write", "base", "path", "entries", "(", "output", ",", "base", "path", ")", ";", "tar", "archive", "entry", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "entry", ".", "set", "name", "(", "base", "path", "+", "__STR__", "+", "entry", ".", "get", "name", "(", ")", ")", ";", "output", ".", "put", "archive", "entry", "(", "entry", ")", ";", "stream", "utils", ".", "copy", "(", "tar", ",", "output", ")", ";", "output", ".", "close", "archive", "entry", "(", ")", ";", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "}", "output", ".", "finish", "(", ")", ";", "}", "}"], "token_count": 196, "vocab_size": 51, "cyclomatic_complexity": 2, "ast_node_count": 216, "n_identifiers": 53, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 109, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.310388+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0d07a0d40cf29a87accee50160fb7b6448760a89", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "writeBasePathEntries", "signature": null, "start_line": 106, "end_line": 114, "nloc": 9, "method_source_normalized": "privatevoidwriteBasePathEntries(TarArchiveOutputStream output, Path basePath)throws IOException{\n\t\tint pathCount = basePath.getNameCount();\n\t\tfor (int pathIndex = 1; pathIndex < pathCount + 1; pathIndex++) {\n\t\t\tString name = \"/\" + basePath.subpath(0, pathIndex) + \"/\";\n\t\t\tTarArchiveEntry entry = new TarArchiveEntry(name);\n\t\t\toutput.putArchiveEntry(entry);\n\t\t\toutput.closeArchiveEntry();\n\t\t}\n\t}", "original_code": "private void writeBasePathEntries(TarArchiveOutputStream output, Path basePath) throws IOException {\n\t\tint pathCount = basePath.getNameCount();\n\t\tfor (int pathIndex = 1; pathIndex < pathCount + 1; pathIndex++) {\n\t\t\tString name = \"/\" + basePath.subpath(0, pathIndex) + \"/\";\n\t\t\tTarArchiveEntry entry = new TarArchiveEntry(name);\n\t\t\toutput.putArchiveEntry(entry);\n\t\t\toutput.closeArchiveEntry();\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "base", "path", "entries", "(", "tar", "archive", "output", "stream", "output", ",", "path", "base", "path", ")", "throws", "io", "exception", "{", "int", "path", "count", "=", "base", "path", ".", "get", "name", "count", "(", ")", ";", "for", "(", "int", "path", "index", "=", "__NUM__", ";", "path", "index", "<", "path", "count", "+", "__NUM__", ";", "path", "index", "++", ")", "{", "string", "name", "=", "__STR__", "+", "base", "path", ".", "subpath", "(", "__NUM__", ",", "path", "index", ")", "+", "__STR__", ";", "tar", "archive", "entry", "entry", "=", "new", "tar", "archive", "entry", "(", "name", ")", ";", "output", ".", "put", "archive", "entry", "(", "entry", ")", ";", "output", ".", "close", "archive", "entry", "(", ")", ";", "}", "}"], "token_count": 105, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 115, "n_identifiers": 27, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 61, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.310714+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "30ea8e5b031e70b0138830a4d396323b07f5f92d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpack.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 122, "end_line": 128, "nloc": 7, "method_source_normalized": "static @NullableBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference){\n\t\tPath path = reference.asPath();\n\t\tif (path != null && Files.exists(path) && Files.isRegularFile(path)) {\n\t\t\treturn new TarGzipBuildpack(path);\n\t\t}\n\t\treturn null;\n\t}", "original_code": "static @Nullable Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference) {\n\t\tPath path = reference.asPath();\n\t\tif (path != null && Files.exists(path) && Files.isRegularFile(path)) {\n\t\t\treturn new TarGzipBuildpack(path);\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["static", "@", "nullable", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", "{", "path", "path", "=", "reference", ".", "as", "path", "(", ")", ";", "if", "(", "path", "!=", "null", "&&", "files", ".", "exists", "(", "path", ")", "&&", "files", ".", "is", "regular", "file", "(", "path", ")", ")", "{", "return", "new", "tar", "gzip", "buildpack", "(", "path", ")", ";", "}", "return", "null", ";", "}"], "token_count": 63, "vocab_size": 31, "cyclomatic_complexity": 4, "ast_node_count": 80, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.310999+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "88440a0b8175c4b974a618026f2a724de56959c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "Format", "signature": null, "start_line": 52, "end_line": 54, "nloc": 3, "method_source_normalized": "Format(String description){\n\t\t\tthis.description = description;\n\t\t}", "original_code": "Format(String description) {\n\t\t\tthis.description = description;\n\t\t}", "code_tokens": ["format", "(", "string", "description", ")", "{", "this", ".", "description", "=", "description", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.312983+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ae9ced601a27c7f27151879da82f14459852d933", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getDescription", "signature": null, "start_line": 56, "end_line": 58, "nloc": 3, "method_source_normalized": "publicStringgetDescription(){\n\t\t\treturn this.description;\n\t\t}", "original_code": "public String getDescription() {\n\t\t\treturn this.description;\n\t\t}", "code_tokens": ["public", "string", "get", "description", "(", ")", "{", "return", "this", ".", "description", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.313232+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d919318e7af84b60ecaa82ff5cc88e260abd6887", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "Cache", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "Cache(Format format){\n\t\tthis.format = format;\n\t}", "original_code": "Cache(Format format) {\n\t\tthis.format = format;\n\t}", "code_tokens": ["cache", "(", "format", "format", ")", "{", "this", ".", "format", "=", "format", ";", "}"], "token_count": 13, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.313468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6270f28bc2ed9da4610148edbbf4de9cfd861ba8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getVolume", "signature": null, "start_line": 72, "end_line": 74, "nloc": 3, "method_source_normalized": "public @NullableVolumegetVolume(){\n\t\treturn (this.format.equals(Format.VOLUME)) ? (Volume) this : null;\n\t}", "original_code": "public @Nullable Volume getVolume() {\n\t\treturn (this.format.equals(Format.VOLUME)) ? (Volume) this : null;\n\t}", "code_tokens": ["public", "@", "nullable", "volume", "get", "volume", "(", ")", "{", "return", "(", "this", ".", "format", ".", "equals", "(", "format", ".", "volume", ")", ")", "?", "(", "volume", ")", "this", ":", "null", ";", "}"], "token_count": 31, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.313716+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77987c1dc123530880c323691d217b768ba49f6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getBind", "signature": null, "start_line": 80, "end_line": 82, "nloc": 3, "method_source_normalized": "public @NullableBindgetBind(){\n\t\treturn (this.format.equals(Format.BIND)) ? (Bind) this : null;\n\t}", "original_code": "public @Nullable Bind getBind() {\n\t\treturn (this.format.equals(Format.BIND)) ? (Bind) this : null;\n\t}", "code_tokens": ["public", "@", "nullable", "bind", "get", "bind", "(", ")", "{", "return", "(", "this", ".", "format", ".", "equals", "(", "format", ".", "bind", ")", ")", "?", "(", "bind", ")", "this", ":", "null", ";", "}"], "token_count": 31, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.313966+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "099ce6aa9c029afd8d7d1aa0be039c577a3bf791", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "volume", "signature": null, "start_line": 89, "end_line": 92, "nloc": 4, "method_source_normalized": "public staticCachevolume(String name){\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\treturn new Volume(VolumeName.of(name));\n\t}", "original_code": "public static Cache volume(String name) {\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\treturn new Volume(VolumeName.of(name));\n\t}", "code_tokens": ["public", "static", "cache", "volume", "(", "string", "name", ")", "{", "assert", ".", "not", "null", "(", "name", ",", "__STR__", ")", ";", "return", "new", "volume", "(", "volume", "name", ".", "of", "(", "name", ")", ")", ";", "}"], "token_count": 33, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.314216+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0723b2af9b5a7696f5a8f42649a25de8ab65b580", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "volume", "signature": null, "start_line": 99, "end_line": 102, "nloc": 4, "method_source_normalized": "public staticCachevolume(VolumeName name){\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\treturn new Volume(name);\n\t}", "original_code": "public static Cache volume(VolumeName name) {\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\treturn new Volume(name);\n\t}", "code_tokens": ["public", "static", "cache", "volume", "(", "volume", "name", "name", ")", "{", "assert", ".", "not", "null", "(", "name", ",", "__STR__", ")", ";", "return", "new", "volume", "(", "name", ")", ";", "}"], "token_count": 28, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.314458+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7bec5e1619153e410ed90f6fd0700e61eaea7332", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "bind", "signature": null, "start_line": 109, "end_line": 112, "nloc": 4, "method_source_normalized": "public staticCachebind(String source){\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\treturn new Bind(source);\n\t}", "original_code": "public static Cache bind(String source) {\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\treturn new Bind(source);\n\t}", "code_tokens": ["public", "static", "cache", "bind", "(", "string", "source", ")", "{", "assert", ".", "not", "null", "(", "source", ",", "__STR__", ")", ";", "return", "new", "bind", "(", "source", ")", ";", "}"], "token_count": 27, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.314703+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c61310fe28d4646319308989617b17eba8737a6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 114, "end_line": 124, "nloc": 11, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCache other = (Cache) obj;\n\t\treturn Objects.equals(this.format, other.format);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCache other = (Cache) obj;\n\t\treturn Objects.equals(this.format, other.format);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "cache", "other", "=", "(", "cache", ")", "obj", ";", "return", "objects", ".", "equals", "(", "this", ".", "format", ",", "other", ".", "format", ")", ";", "}"], "token_count": 69, "vocab_size": 31, "cyclomatic_complexity": 4, "ast_node_count": 99, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 55, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.315002+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c42cc26e3cfb14378e315bdcd9a5de740afff1bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 126, "end_line": 129, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn ObjectUtils.nullSafeHashCode(this.format);\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn ObjectUtils.nullSafeHashCode(this.format);\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "format", ")", ";", "}"], "token_count": 24, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.315258+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ae8a9fe076aac67b15279578d0a9fa9ceac0f1f4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "Volume", "signature": null, "start_line": 138, "end_line": 141, "nloc": 4, "method_source_normalized": "Volume(VolumeName name){\n\t\t\tsuper(Format.VOLUME);\n\t\t\tthis.name = name;\n\t\t}", "original_code": "Volume(VolumeName name) {\n\t\t\tsuper(Format.VOLUME);\n\t\t\tthis.name = name;\n\t\t}", "code_tokens": ["volume", "(", "volume", "name", "name", ")", "{", "super", "(", "format", ".", "volume", ")", ";", "this", ".", "name", "=", "name", ";", "}"], "token_count": 21, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.315502+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "757728dd42b6b9e2055a66708d58dedcadbf88c2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 143, "end_line": 145, "nloc": 3, "method_source_normalized": "publicStringgetName(){\n\t\t\treturn this.name.toString();\n\t\t}", "original_code": "public String getName() {\n\t\t\treturn this.name.toString();\n\t\t}", "code_tokens": ["public", "string", "get", "name", "(", ")", "{", "return", "this", ".", "name", ".", "to", "string", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.315736+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "826736ca90053320b19f7aed9ace922ab0c5de55", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getVolumeName", "signature": null, "start_line": 147, "end_line": 149, "nloc": 3, "method_source_normalized": "publicVolumeNamegetVolumeName(){\n\t\t\treturn this.name;\n\t\t}", "original_code": "public VolumeName getVolumeName() {\n\t\t\treturn this.name;\n\t\t}", "code_tokens": ["public", "volume", "name", "get", "volume", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 15, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.315966+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fa550735163771ce8df8ccb6f62ea03b4fd33b5b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 151, "end_line": 164, "nloc": 14, "method_source_normalized": "@Override\n\t\tpublicbooleanequals(@Nullable Object obj){\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!super.equals(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tVolume other = (Volume) obj;\n\t\t\treturn Objects.equals(this.name, other.name);\n\t\t}", "original_code": "@Override\n\t\tpublic boolean equals(@Nullable Object obj) {\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!super.equals(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tVolume other = (Volume) obj;\n\t\t\treturn Objects.equals(this.name, other.name);\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "if", "(", "!", "super", ".", "equals", "(", "obj", ")", ")", "{", "return", "false", ";", "}", "volume", "other", "=", "(", "volume", ")", "obj", ";", "return", "objects", ".", "equals", "(", "this", ".", "name", ",", "other", ".", "name", ")", ";", "}"], "token_count": 84, "vocab_size": 33, "cyclomatic_complexity": 5, "ast_node_count": 121, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.316267+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b8f51d4fd61a48b8626db69ed7ea161bbbb15b69", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 166, "end_line": 171, "nloc": 6, "method_source_normalized": "@Override\n\t\tpublicinthashCode(){\n\t\t\tint result = super.hashCode();\n\t\t\tresult = 31 * result + ObjectUtils.nullSafeHashCode(this.name);\n\t\t\treturn result;\n\t\t}", "original_code": "@Override\n\t\tpublic int hashCode() {\n\t\t\tint result = super.hashCode();\n\t\t\tresult = 31 * result + ObjectUtils.nullSafeHashCode(this.name);\n\t\t\treturn result;\n\t\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "int", "result", "=", "super", ".", "hash", "code", "(", ")", ";", "result", "=", "__NUM__", "*", "result", "+", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "name", ")", ";", "return", "result", ";", "}"], "token_count": 42, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.316543+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "75a89e0e4a984126d115c87e0239a18f43d19895", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 173, "end_line": 176, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.format.getDescription() + \" '\" + this.name + \"'\";\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.format.getDescription() + \" '\" + this.name + \"'\";\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "format", ".", "get", "description", "(", ")", "+", "__STR__", "+", "this", ".", "name", "+", "__STR__", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.316795+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "699c45eda53728e834fe66b7c80afec0a7ec7dd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "Bind", "signature": null, "start_line": 187, "end_line": 190, "nloc": 4, "method_source_normalized": "Bind(String source){\n\t\t\tsuper(Format.BIND);\n\t\t\tthis.source = source;\n\t\t}", "original_code": "Bind(String source) {\n\t\t\tsuper(Format.BIND);\n\t\t\tthis.source = source;\n\t\t}", "code_tokens": ["bind", "(", "string", "source", ")", "{", "super", "(", "format", ".", "bind", ")", ";", "this", ".", "source", "=", "source", ";", "}"], "token_count": 20, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.317240+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1f7f2b26253175ac91a339be847f8c31745b6bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "getSource", "signature": null, "start_line": 192, "end_line": 194, "nloc": 3, "method_source_normalized": "publicStringgetSource(){\n\t\t\treturn this.source;\n\t\t}", "original_code": "public String getSource() {\n\t\t\treturn this.source;\n\t\t}", "code_tokens": ["public", "string", "get", "source", "(", ")", "{", "return", "this", ".", "source", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.317473+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cb615138b6765eaaf2add1891c4e1fe0e13c3c07", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 196, "end_line": 209, "nloc": 14, "method_source_normalized": "@Override\n\t\tpublicbooleanequals(@Nullable Object obj){\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!super.equals(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tBind other = (Bind) obj;\n\t\t\treturn Objects.equals(this.source, other.source);\n\t\t}", "original_code": "@Override\n\t\tpublic boolean equals(@Nullable Object obj) {\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!super.equals(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tBind other = (Bind) obj;\n\t\t\treturn Objects.equals(this.source, other.source);\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "if", "(", "!", "super", ".", "equals", "(", "obj", ")", ")", "{", "return", "false", ";", "}", "bind", "other", "=", "(", "bind", ")", "obj", ";", "return", "objects", ".", "equals", "(", "this", ".", "source", ",", "other", ".", "source", ")", ";", "}"], "token_count": 84, "vocab_size": 33, "cyclomatic_complexity": 5, "ast_node_count": 121, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.317815+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a3a267cd4e64538aa0b8e1210eb046f8cd7511ae", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 211, "end_line": 216, "nloc": 6, "method_source_normalized": "@Override\n\t\tpublicinthashCode(){\n\t\t\tint result = super.hashCode();\n\t\t\tresult = 31 * result + ObjectUtils.nullSafeHashCode(this.source);\n\t\t\treturn result;\n\t\t}", "original_code": "@Override\n\t\tpublic int hashCode() {\n\t\t\tint result = super.hashCode();\n\t\t\tresult = 31 * result + ObjectUtils.nullSafeHashCode(this.source);\n\t\t\treturn result;\n\t\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "int", "result", "=", "super", ".", "hash", "code", "(", ")", ";", "result", "=", "__NUM__", "*", "result", "+", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "source", ")", ";", "return", "result", ";", "}"], "token_count": 42, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.318127+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "caf78fc69bf47d6373e5f692098ed410206d354b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Cache.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 218, "end_line": 221, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.format.getDescription() + \" '\" + this.source + \"'\";\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.format.getDescription() + \" '\" + this.source + \"'\";\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "format", ".", "get", "description", "(", ")", "+", "__STR__", "+", "this", ".", "source", "+", "__STR__", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.318390+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c260a5444956f3d77ee4e00a7fe6b0e813885fec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "EphemeralBuilder", "signature": null, "start_line": 67, "end_line": 86, "nloc": 20, "method_source_normalized": "EphemeralBuilder(BuildOwner buildOwner, Image builderImage, ImageReference targetImage,\n\t\t\tBuilderMetadata builderMetadata, Creator creator, Map<String, String> env,\n\t\t\t@Nullable Buildpacks buildpacks){\n\t\tthis.name = ImageReference.random(\"pack.local/builder/\").inTaggedForm();\n\t\tthis.buildOwner = buildOwner;\n\t\tthis.creator = creator;\n\t\tthis.builderMetadata = builderMetadata.copy(this::updateMetadata);\n\t\tthis.builderImage = builderImage;\n\t\tthis.archiveUpdate = (update) -> {\n\t\t\tupdate.withUpdatedConfig(this.builderMetadata::attachTo);\n\t\t\tupdate.withUpdatedConfig((config) -> config.withLabel(BUILDER_FOR_LABEL_NAME, targetImage.toString()));\n\t\t\tupdate.withTag(this.name);\n\t\t\tif (!CollectionUtils.isEmpty(env)) {\n\t\t\t\tupdate.withNewLayer(getEnvLayer(env));\n\t\t\t}\n\t\t\tif (buildpacks != null) {\n\t\t\t\tbuildpacks.apply(update::withNewLayer);\n\t\t\t}\n\t\t};\n\t}", "original_code": "EphemeralBuilder(BuildOwner buildOwner, Image builderImage, ImageReference targetImage,\n\t\t\tBuilderMetadata builderMetadata, Creator creator, Map<String, String> env,\n\t\t\t@Nullable Buildpacks buildpacks) {\n\t\tthis.name = ImageReference.random(\"pack.local/builder/\").inTaggedForm();\n\t\tthis.buildOwner = buildOwner;\n\t\tthis.creator = creator;\n\t\tthis.builderMetadata = builderMetadata.copy(this::updateMetadata);\n\t\tthis.builderImage = builderImage;\n\t\tthis.archiveUpdate = (update) -> {\n\t\t\tupdate.withUpdatedConfig(this.builderMetadata::attachTo);\n\t\t\tupdate.withUpdatedConfig((config) -> config.withLabel(BUILDER_FOR_LABEL_NAME, targetImage.toString()));\n\t\t\tupdate.withTag(this.name);\n\t\t\tif (!CollectionUtils.isEmpty(env)) {\n\t\t\t\tupdate.withNewLayer(getEnvLayer(env));\n\t\t\t}\n\t\t\tif (buildpacks != null) {\n\t\t\t\tbuildpacks.apply(update::withNewLayer);\n\t\t\t}\n\t\t};\n\t}", "code_tokens": ["ephemeral", "builder", "(", "build", "owner", "build", "owner", ",", "image", "builder", "image", ",", "image", "reference", "target", "image", ",", "builder", "metadata", "builder", "metadata", ",", "creator", "creator", ",", "map", "<", "string", ",", "string", ">", "env", ",", "@", "nullable", "buildpacks", "buildpacks", ")", "{", "this", ".", "name", "=", "image", "reference", ".", "random", "(", "__STR__", ")", ".", "in", "tagged", "form", "(", ")", ";", "this", ".", "build", "owner", "=", "build", "owner", ";", "this", ".", "creator", "=", "creator", ";", "this", ".", "builder", "metadata", "=", "builder", "metadata", ".", "copy", "(", "this", "::", "update", "metadata", ")", ";", "this", ".", "builder", "image", "=", "builder", "image", ";", "this", ".", "archive", "update", "=", "(", "update", ")", "->", "{", "update", ".", "with", "updated", "config", "(", "this", ".", "builder", "metadata", "::", "attach", "to", ")", ";", "update", ".", "with", "updated", "config", "(", "(", "config", ")", "->", "config", ".", "with", "label", "(", "builder", "for", "label", "name", ",", "target", "image", ".", "to", "string", "(", ")", ")", ")", ";", "update", ".", "with", "tag", "(", "this", ".", "name", ")", ";", "if", "(", "!", "collection", "utils", ".", "is", "empty", "(", "env", ")", ")", "{", "update", ".", "with", "new", "layer", "(", "get", "env", "layer", "(", "env", ")", ")", ";", "}", "if", "(", "buildpacks", "!=", "null", ")", "{", "buildpacks", ".", "apply", "(", "update", "::", "with", "new", "layer", ")", ";", "}", "}", ";", "}"], "token_count": 210, "vocab_size": 57, "cyclomatic_complexity": 3, "ast_node_count": 249, "n_identifiers": 61, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 106, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.320088+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2fefbc1c0c81f94b401b269e7c79b29c83e5a95f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "updateMetadata", "signature": null, "start_line": 88, "end_line": 90, "nloc": 3, "method_source_normalized": "privatevoidupdateMetadata(BuilderMetadata.Update update){\n\t\tupdate.withCreatedBy(this.creator.getName(), this.creator.getVersion());\n\t}", "original_code": "private void updateMetadata(BuilderMetadata.Update update) {\n\t\tupdate.withCreatedBy(this.creator.getName(), this.creator.getVersion());\n\t}", "code_tokens": ["private", "void", "update", "metadata", "(", "builder", "metadata", ".", "update", "update", ")", "{", "update", ".", "with", "created", "by", "(", "this", ".", "creator", ".", "get", "name", "(", ")", ",", "this", ".", "creator", ".", "get", "version", "(", ")", ")", ";", "}"], "token_count": 38, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.320368+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40c380dd6860a429e6493d2065493843ae51219c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "getEnvLayer", "signature": null, "start_line": 92, "end_line": 100, "nloc": 9, "method_source_normalized": "privateLayergetEnvLayer(Map<String, String> env)throws IOException{\n\t\treturn Layer.of((layout) -> {\n\t\t\tfor (Map.Entry<String, String> entry : env.entrySet()) {\n\t\t\t\tString name = \"/platform/env/\" + entry.getKey();\n\t\t\t\tContent content = Content.of((entry.getValue() != null) ? entry.getValue() : \"\");\n\t\t\t\tlayout.file(name, Owner.ROOT, content);\n\t\t\t}\n\t\t});\n\t}", "original_code": "private Layer getEnvLayer(Map<String, String> env) throws IOException {\n\t\treturn Layer.of((layout) -> {\n\t\t\tfor (Map.Entry<String, String> entry : env.entrySet()) {\n\t\t\t\tString name = \"/platform/env/\" + entry.getKey();\n\t\t\t\tContent content = Content.of((entry.getValue() != null) ? entry.getValue() : \"\");\n\t\t\t\tlayout.file(name, Owner.ROOT, content);\n\t\t\t}\n\t\t});\n\t}", "code_tokens": ["private", "layer", "get", "env", "layer", "(", "map", "<", "string", ",", "string", ">", "env", ")", "throws", "io", "exception", "{", "return", "layer", ".", "of", "(", "(", "layout", ")", "->", "{", "for", "(", "map", ".", "entry", "<", "string", ",", "string", ">", "entry", ":", "env", ".", "entry", "set", "(", ")", ")", "{", "string", "name", "=", "__STR__", "+", "entry", ".", "get", "key", "(", ")", ";", "content", "content", "=", "content", ".", "of", "(", "(", "entry", ".", "get", "value", "(", ")", "!=", "null", ")", "?", "entry", ".", "get", "value", "(", ")", ":", "__STR__", ")", ";", "layout", ".", "file", "(", "name", ",", "owner", ".", "root", ",", "content", ")", ";", "}", "}", ")", ";", "}"], "token_count": 106, "vocab_size": 39, "cyclomatic_complexity": 3, "ast_node_count": 140, "n_identifiers": 35, "ast_max_depth": 18, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 63, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.320651+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ee4ae12475373391c27a50a16b7c93954407bb69", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 106, "end_line": 108, "nloc": 3, "method_source_normalized": "ImageReferencegetName(){\n\t\treturn this.name;\n\t}", "original_code": "ImageReference getName() {\n\t\treturn this.name;\n\t}", "code_tokens": ["image", "reference", "get", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.320890+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "757d12f307befbf37df7b74d910f7adbf5ff690f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "getBuildOwner", "signature": null, "start_line": 114, "end_line": 116, "nloc": 3, "method_source_normalized": "OwnergetBuildOwner(){\n\t\treturn this.buildOwner;\n\t}", "original_code": "Owner getBuildOwner() {\n\t\treturn this.buildOwner;\n\t}", "code_tokens": ["owner", "get", "build", "owner", "(", ")", "{", "return", "this", ".", "build", "owner", ";", "}"], "token_count": 14, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.321123+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58b07b30da5980e07ec2e3438f5dd4a13cc8e44c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "getBuilderMetadata", "signature": null, "start_line": 122, "end_line": 124, "nloc": 3, "method_source_normalized": "BuilderMetadatagetBuilderMetadata(){\n\t\treturn this.builderMetadata;\n\t}", "original_code": "BuilderMetadata getBuilderMetadata() {\n\t\treturn this.builderMetadata;\n\t}", "code_tokens": ["builder", "metadata", "get", "builder", "metadata", "(", ")", "{", "return", "this", ".", "builder", "metadata", ";", "}"], "token_count": 15, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.321349+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "625cac78e5a3a18775eef4b59af6a9974cb4ab5c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "getArchive", "signature": null, "start_line": 132, "end_line": 139, "nloc": 8, "method_source_normalized": "ImageArchivegetArchive(String applicationDirectory)throws IOException{\n\t\treturn ImageArchive.from(this.builderImage, (update) -> {\n\t\t\tthis.archiveUpdate.accept(update);\n\t\t\tif (StringUtils.hasLength(applicationDirectory)) {\n\t\t\t\tupdate.withNewLayer(applicationDirectoryLayer(applicationDirectory));\n\t\t\t}\n\t\t});\n\t}", "original_code": "ImageArchive getArchive(String applicationDirectory) throws IOException {\n\t\treturn ImageArchive.from(this.builderImage, (update) -> {\n\t\t\tthis.archiveUpdate.accept(update);\n\t\t\tif (StringUtils.hasLength(applicationDirectory)) {\n\t\t\t\tupdate.withNewLayer(applicationDirectoryLayer(applicationDirectory));\n\t\t\t}\n\t\t});\n\t}", "code_tokens": ["image", "archive", "get", "archive", "(", "string", "application", "directory", ")", "throws", "io", "exception", "{", "return", "image", "archive", ".", "from", "(", "this", ".", "builder", "image", ",", "(", "update", ")", "->", "{", "this", ".", "archive", "update", ".", "accept", "(", "update", ")", ";", "if", "(", "string", "utils", ".", "has", "length", "(", "application", "directory", ")", ")", "{", "update", ".", "with", "new", "layer", "(", "application", "directory", "layer", "(", "application", "directory", ")", ")", ";", "}", "}", ")", ";", "}"], "token_count": 72, "vocab_size": 30, "cyclomatic_complexity": 2, "ast_node_count": 83, "n_identifiers": 19, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.321611+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1010e54430a17073f2fdbd0cfea12256d7284785", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "applicationDirectoryLayer", "signature": null, "start_line": 141, "end_line": 143, "nloc": 3, "method_source_normalized": "privateLayerapplicationDirectoryLayer(String applicationDirectory)throws IOException{\n\t\treturn Layer.of((layout) -> layout.directory(applicationDirectory, this.buildOwner));\n\t}", "original_code": "private Layer applicationDirectoryLayer(String applicationDirectory) throws IOException {\n\t\treturn Layer.of((layout) -> layout.directory(applicationDirectory, this.buildOwner));\n\t}", "code_tokens": ["private", "layer", "application", "directory", "layer", "(", "string", "application", "directory", ")", "throws", "io", "exception", "{", "return", "layer", ".", "of", "(", "(", "layout", ")", "->", "layout", ".", "directory", "(", "application", "directory", ",", "this", ".", "build", "owner", ")", ")", ";", "}"], "token_count": 38, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.321869+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9b97752b27f7cf12eb8352fb2f93c2343514ea4d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilder.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 145, "end_line": 148, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.name.toString();\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.name.toString();\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "name", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.322103+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98df4c53baa8b7da2446f0a20cd20d22cfd15c27", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "start", "signature": null, "start_line": 48, "end_line": 48, "nloc": 1, "method_source_normalized": "voidstart(BuildRequest request);", "original_code": "void start(BuildRequest request);", "code_tokens": ["void", "start", "(", "build", "request", "request", ")", ";"], "token_count": 8, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.323064+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0eef041de7befbcff67855a8ab410a9d297985db", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "pullingImage", "signature": null, "start_line": 57, "end_line": 58, "nloc": 2, "method_source_normalized": "Consumer<TotalProgressEvent>pullingImage(ImageReference imageReference, @Nullable ImagePlatform platform,\n\t\t\tImageType imageType);", "original_code": "Consumer<TotalProgressEvent> pullingImage(ImageReference imageReference, @Nullable ImagePlatform platform,\n\t\t\tImageType imageType);", "code_tokens": ["consumer", "<", "total", "progress", "event", ">", "pulling", "image", "(", "image", "reference", "image", "reference", ",", "@", "nullable", "image", "platform", "platform", ",", "image", "type", "image", "type", ")", ";"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.323336+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e5aede598325f9ef97df3565b3498ea3af8e9144", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "pulledImage", "signature": null, "start_line": 65, "end_line": 65, "nloc": 1, "method_source_normalized": "voidpulledImage(Image image, ImageType imageType);", "original_code": "void pulledImage(Image image, ImageType imageType);", "code_tokens": ["void", "pulled", "image", "(", "image", "image", ",", "image", "type", "image", "type", ")", ";"], "token_count": 13, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.323591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a6bc0294c86e9b15d8aec120d4f19d6d2bcff43e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "pushingImage", "signature": null, "start_line": 72, "end_line": 72, "nloc": 1, "method_source_normalized": "Consumer<TotalProgressEvent>pushingImage(ImageReference imageReference);", "original_code": "Consumer<TotalProgressEvent> pushingImage(ImageReference imageReference);", "code_tokens": ["consumer", "<", "total", "progress", "event", ">", "pushing", "image", "(", "image", "reference", "image", "reference", ")", ";"], "token_count": 15, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 15, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.323825+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7f9df2585ee0a4969fcb9cec536399fd12bf562a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "pushedImage", "signature": null, "start_line": 78, "end_line": 78, "nloc": 1, "method_source_normalized": "voidpushedImage(ImageReference imageReference);", "original_code": "void pushedImage(ImageReference imageReference);", "code_tokens": ["void", "pushed", "image", "(", "image", "reference", "image", "reference", ")", ";"], "token_count": 10, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.324050+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0c0c4afa10e70f5af460c57f2e82c32094bae0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "executingLifecycle", "signature": null, "start_line": 86, "end_line": 86, "nloc": 1, "method_source_normalized": "voidexecutingLifecycle(BuildRequest request, LifecycleVersion version, VolumeName buildCacheVolume);", "original_code": "void executingLifecycle(BuildRequest request, LifecycleVersion version, VolumeName buildCacheVolume);", "code_tokens": ["void", "executing", "lifecycle", "(", "build", "request", "request", ",", "lifecycle", "version", "version", ",", "volume", "name", "build", "cache", "volume", ")", ";"], "token_count": 19, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 6, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.324284+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0e18db64782f1fa8b2a2b77c894aa8e5a11f4445", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "executingLifecycle", "signature": null, "start_line": 94, "end_line": 94, "nloc": 1, "method_source_normalized": "voidexecutingLifecycle(BuildRequest request, LifecycleVersion version, Cache buildCache);", "original_code": "void executingLifecycle(BuildRequest request, LifecycleVersion version, Cache buildCache);", "code_tokens": ["void", "executing", "lifecycle", "(", "build", "request", "request", ",", "lifecycle", "version", "version", ",", "cache", "build", "cache", ")", ";"], "token_count": 17, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 6, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.324500+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2d07a43cc11720af9663ea90a58e192663bdbf9b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "runningPhase", "signature": null, "start_line": 102, "end_line": 102, "nloc": 1, "method_source_normalized": "Consumer<LogUpdateEvent>runningPhase(BuildRequest request, String name);", "original_code": "Consumer<LogUpdateEvent> runningPhase(BuildRequest request, String name);", "code_tokens": ["consumer", "<", "log", "update", "event", ">", "running", "phase", "(", "build", "request", "request", ",", "string", "name", ")", ";"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 7, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.324735+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2e8712a6c4dd25478fad8bddf1bc6e762d2a938", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "skippingPhase", "signature": null, "start_line": 109, "end_line": 109, "nloc": 1, "method_source_normalized": "voidskippingPhase(String name, String reason);", "original_code": "void skippingPhase(String name, String reason);", "code_tokens": ["void", "skipping", "phase", "(", "string", "name", ",", "string", "reason", ")", ";"], "token_count": 11, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.324960+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8b2284c040bb3ce64f27a3affc3a926dca9889aa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "executedLifecycle", "signature": null, "start_line": 115, "end_line": 115, "nloc": 1, "method_source_normalized": "voidexecutedLifecycle(BuildRequest request);", "original_code": "void executedLifecycle(BuildRequest request);", "code_tokens": ["void", "executed", "lifecycle", "(", "build", "request", "request", ")", ";"], "token_count": 9, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.325183+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1142d7480801248fd808ea7f2449a53b495c8859", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "taggedImage", "signature": null, "start_line": 121, "end_line": 121, "nloc": 1, "method_source_normalized": "voidtaggedImage(ImageReference tag);", "original_code": "void taggedImage(ImageReference tag);", "code_tokens": ["void", "tagged", "image", "(", "image", "reference", "tag", ")", ";"], "token_count": 9, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.325398+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47616932fec2868649b4cad5df371b5bec00c71d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "failedCleaningWorkDir", "signature": null, "start_line": 129, "end_line": 129, "nloc": 1, "method_source_normalized": "voidfailedCleaningWorkDir(Cache cache, @Nullable Exception exception);", "original_code": "void failedCleaningWorkDir(Cache cache, @Nullable Exception exception);", "code_tokens": ["void", "failed", "cleaning", "work", "dir", "(", "cache", "cache", ",", "@", "nullable", "exception", "exception", ")", ";"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 5, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.325625+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2668ea82e496a206aea7c8bf001882e5b31f420e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "sensitiveTargetBindingDetected", "signature": null, "start_line": 136, "end_line": 136, "nloc": 1, "method_source_normalized": "voidsensitiveTargetBindingDetected(Binding binding);", "original_code": "void sensitiveTargetBindingDetected(Binding binding);", "code_tokens": ["void", "sensitive", "target", "binding", "detected", "(", "binding", "binding", ")", ";"], "token_count": 10, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.325851+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65cb971fd030c48cb6ca31302c6cf9b2163d0786", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "toSystemOut", "signature": null, "start_line": 142, "end_line": 144, "nloc": 3, "method_source_normalized": "staticBuildLogtoSystemOut(){\n\t\treturn to(System.out);\n\t}", "original_code": "static BuildLog toSystemOut() {\n\t\treturn to(System.out);\n\t}", "code_tokens": ["static", "build", "log", "to", "system", "out", "(", ")", "{", "return", "to", "(", "system", ".", "out", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.326073+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f24fbe1687b7a0a40353350e8cf242244a803c35", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildLog.java", "file_blob_sha": null, "method_name": "to", "signature": null, "start_line": 152, "end_line": 154, "nloc": 3, "method_source_normalized": "staticBuildLogto(PrintStream out){\n\t\treturn new PrintStreamBuildLog(out);\n\t}", "original_code": "static BuildLog to(PrintStream out) {\n\t\treturn new PrintStreamBuildLog(out);\n\t}", "code_tokens": ["static", "build", "log", "to", "(", "print", "stream", "out", ")", "{", "return", "new", "print", "stream", "build", "log", "(", "out", ")", ";", "}"], "token_count": 21, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.326306+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f29d1bf16f9f454175b456a7f1babc8844aad9cf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "BuildpackCoordinates", "signature": null, "start_line": 45, "end_line": 49, "nloc": 5, "method_source_normalized": "privateBuildpackCoordinates(String id, @Nullable String version){\n\t\tAssert.hasText(id, \"'id' must not be empty\");\n\t\tthis.id = id;\n\t\tthis.version = version;\n\t}", "original_code": "private BuildpackCoordinates(String id, @Nullable String version) {\n\t\tAssert.hasText(id, \"'id' must not be empty\");\n\t\tthis.id = id;\n\t\tthis.version = version;\n\t}", "code_tokens": ["private", "buildpack", "coordinates", "(", "string", "id", ",", "@", "nullable", "string", "version", ")", "{", "assert", ".", "has", "text", "(", "id", ",", "__STR__", ")", ";", "this", ".", "id", "=", "id", ";", "this", ".", "version", "=", "version", ";", "}"], "token_count": 36, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.327804+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14fcb42d9c8b71275de83c5a6059a63f3e263f2a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "getId", "signature": null, "start_line": 51, "end_line": 53, "nloc": 3, "method_source_normalized": "StringgetId(){\n\t\treturn this.id;\n\t}", "original_code": "String getId() {\n\t\treturn this.id;\n\t}", "code_tokens": ["string", "get", "id", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.328035+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "57de5a6ae9116301ec3a1a0323fa78d0c3f089e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "getSanitizedId", "signature": null, "start_line": 59, "end_line": 61, "nloc": 3, "method_source_normalized": "StringgetSanitizedId(){\n\t\treturn this.id.replace(\"/\", \"_\");\n\t}", "original_code": "String getSanitizedId() {\n\t\treturn this.id.replace(\"/\", \"_\");\n\t}", "code_tokens": ["string", "get", "sanitized", "id", "(", ")", "{", "return", "this", ".", "id", ".", "replace", "(", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.328266+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b936082fa61958772251aefb90831d6508bdc632", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "getVersion", "signature": null, "start_line": 63, "end_line": 65, "nloc": 3, "method_source_normalized": "@NullableStringgetVersion(){\n\t\treturn this.version;\n\t}", "original_code": "@Nullable String getVersion() {\n\t\treturn this.version;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "version", "(", ")", "{", "return", "this", ".", "version", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.328498+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0f12d6f4ee01d30134f9446e0a4ea2e248cdeba4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 67, "end_line": 77, "nloc": 11, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tBuildpackCoordinates other = (BuildpackCoordinates) obj;\n\t\treturn this.id.equals(other.id) && ObjectUtils.nullSafeEquals(this.version, other.version);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tBuildpackCoordinates other = (BuildpackCoordinates) obj;\n\t\treturn this.id.equals(other.id) && ObjectUtils.nullSafeEquals(this.version, other.version);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "buildpack", "coordinates", "other", "=", "(", "buildpack", "coordinates", ")", "obj", ";", "return", "this", ".", "id", ".", "equals", "(", "other", ".", "id", ")", "&&", "object", "utils", ".", "null", "safe", "equals", "(", "this", ".", "version", ",", "other", ".", "version", ")", ";", "}"], "token_count": 85, "vocab_size": 35, "cyclomatic_complexity": 5, "ast_node_count": 115, "n_identifiers": 23, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 57, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.328817+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62bc66105e54a419df106d67d37d3b3bbb3ea3c4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 79, "end_line": 86, "nloc": 8, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.id.hashCode();\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.version);\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.id.hashCode();\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.version);\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "final", "int", "prime", "=", "__NUM__", ";", "int", "result", "=", "__NUM__", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "id", ".", "hash", "code", "(", ")", ";", "result", "=", "prime", "*", "result", "+", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "version", ")", ";", "return", "result", ";", "}"], "token_count": 58, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 80, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.329131+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "da24e3be44be391b4e59e21a11ee5dffbfa29f9f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 88, "end_line": 91, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.id + ((StringUtils.hasText(this.version)) ? \"@\" + this.version : \"\");\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.id + ((StringUtils.hasText(this.version)) ? \"@\" + this.version : \"\");\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "id", "+", "(", "(", "string", "utils", ".", "has", "text", "(", "this", ".", "version", ")", ")", "?", "__STR__", "+", "this", ".", "version", ":", "__STR__", ")", ";", "}"], "token_count": 38, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.329386+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3988bc70c431f92f8d3acca2a8591f0357ad5eb9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "fromToml", "signature": null, "start_line": 102, "end_line": 104, "nloc": 3, "method_source_normalized": "staticBuildpackCoordinatesfromToml(InputStream inputStream, Path path)throws IOException{\n\t\treturn fromToml(Toml.parse(inputStream), path);\n\t}", "original_code": "static BuildpackCoordinates fromToml(InputStream inputStream, Path path) throws IOException {\n\t\treturn fromToml(Toml.parse(inputStream), path);\n\t}", "code_tokens": ["static", "buildpack", "coordinates", "from", "toml", "(", "input", "stream", "input", "stream", ",", "path", "path", ")", "throws", "io", "exception", "{", "return", "from", "toml", "(", "toml", ".", "parse", "(", "input", "stream", ")", ",", "path", ")", ";", "}"], "token_count": 34, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.329638+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eaf633c75e0085461f1f547a994a209e2b28baca", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "fromToml", "signature": null, "start_line": 106, "end_line": 118, "nloc": 13, "method_source_normalized": "private staticBuildpackCoordinatesfromToml(TomlParseResult toml, Path path){\n\t\tAssert.isTrue(!toml.isEmpty(),\n\t\t\t\t() -> \"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\tString buildpackId = toml.getString(\"buildpack.id\");\n\t\tAssert.hasText(buildpackId, () -> \"Buildpack descriptor must contain ID in buildpack '\" + path + \"'\");\n\t\tAssert.hasText(toml.getString(\"buildpack.version\"),\n\t\t\t\t() -> \"Buildpack descriptor must contain version in buildpack '\" + path + \"'\");\n\t\tAssert.isTrue(toml.contains(\"stacks\") || toml.contains(\"order\"),\n\t\t\t\t() -> \"Buildpack descriptor must contain either 'stacks' or 'order' in buildpack '\" + path + \"'\");\n\t\tAssert.isTrue(!(toml.contains(\"stacks\") && toml.contains(\"order\")),\n\t\t\t\t() -> \"Buildpack descriptor must not contain both 'stacks' and 'order' in buildpack '\" + path + \"'\");\n\t\treturn new BuildpackCoordinates(buildpackId, toml.getString(\"buildpack.version\"));\n\t}", "original_code": "private static BuildpackCoordinates fromToml(TomlParseResult toml, Path path) {\n\t\tAssert.isTrue(!toml.isEmpty(),\n\t\t\t\t() -> \"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\tString buildpackId = toml.getString(\"buildpack.id\");\n\t\tAssert.hasText(buildpackId, () -> \"Buildpack descriptor must contain ID in buildpack '\" + path + \"'\");\n\t\tAssert.hasText(toml.getString(\"buildpack.version\"),\n\t\t\t\t() -> \"Buildpack descriptor must contain version in buildpack '\" + path + \"'\");\n\t\tAssert.isTrue(toml.contains(\"stacks\") || toml.contains(\"order\"),\n\t\t\t\t() -> \"Buildpack descriptor must contain either 'stacks' or 'order' in buildpack '\" + path + \"'\");\n\t\tAssert.isTrue(!(toml.contains(\"stacks\") && toml.contains(\"order\")),\n\t\t\t\t() -> \"Buildpack descriptor must not contain both 'stacks' and 'order' in buildpack '\" + path + \"'\");\n\t\treturn new BuildpackCoordinates(buildpackId, toml.getString(\"buildpack.version\"));\n\t}", "code_tokens": ["private", "static", "buildpack", "coordinates", "from", "toml", "(", "toml", "parse", "result", "toml", ",", "path", "path", ")", "{", "assert", ".", "is", "true", "(", "!", "toml", ".", "is", "empty", "(", ")", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "string", "buildpack", "id", "=", "toml", ".", "get", "string", "(", "__STR__", ")", ";", "assert", ".", "has", "text", "(", "buildpack", "id", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "assert", ".", "has", "text", "(", "toml", ".", "get", "string", "(", "__STR__", ")", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "toml", ".", "contains", "(", "__STR__", ")", "||", "toml", ".", "contains", "(", "__STR__", ")", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "!", "(", "toml", ".", "contains", "(", "__STR__", ")", "&&", "toml", ".", "contains", "(", "__STR__", ")", ")", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "return", "new", "buildpack", "coordinates", "(", "buildpack", "id", ",", "toml", ".", "get", "string", "(", "__STR__", ")", ")", ";", "}"], "token_count": 171, "vocab_size": 35, "cyclomatic_complexity": 3, "ast_node_count": 221, "n_identifiers": 42, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 133, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.329997+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b65425dcbce83bf587f63d39676c744c5562bcfd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "fromBuildpackMetadata", "signature": null, "start_line": 126, "end_line": 129, "nloc": 4, "method_source_normalized": "staticBuildpackCoordinatesfromBuildpackMetadata(BuildpackMetadata buildpackMetadata){\n\t\tAssert.notNull(buildpackMetadata, \"'buildpackMetadata' must not be null\");\n\t\treturn new BuildpackCoordinates(buildpackMetadata.getId(), buildpackMetadata.getVersion());\n\t}", "original_code": "static BuildpackCoordinates fromBuildpackMetadata(BuildpackMetadata buildpackMetadata) {\n\t\tAssert.notNull(buildpackMetadata, \"'buildpackMetadata' must not be null\");\n\t\treturn new BuildpackCoordinates(buildpackMetadata.getId(), buildpackMetadata.getVersion());\n\t}", "code_tokens": ["static", "buildpack", "coordinates", "from", "buildpack", "metadata", "(", "buildpack", "metadata", "buildpack", "metadata", ")", "{", "assert", ".", "not", "null", "(", "buildpack", "metadata", ",", "__STR__", ")", ";", "return", "new", "buildpack", "coordinates", "(", "buildpack", "metadata", ".", "get", "id", "(", ")", ",", "buildpack", "metadata", ".", "get", "version", "(", ")", ")", ";", "}"], "token_count": 47, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.330282+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d9925c3a5f90488e546b28185a6eadc86fa89c48", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinates.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 137, "end_line": 139, "nloc": 3, "method_source_normalized": "staticBuildpackCoordinatesof(String id, String version){\n\t\treturn new BuildpackCoordinates(id, version);\n\t}", "original_code": "static BuildpackCoordinates of(String id, String version) {\n\t\treturn new BuildpackCoordinates(id, version);\n\t}", "code_tokens": ["static", "buildpack", "coordinates", "of", "(", "string", "id", ",", "string", "version", ")", "{", "return", "new", "buildpack", "coordinates", "(", "id", ",", "version", ")", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.330525+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0cb60b95006537817de539324894832e2e84ce2c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLog.java", "file_blob_sha": null, "method_name": "PrintStreamBuildLog", "signature": null, "start_line": 35, "end_line": 37, "nloc": 3, "method_source_normalized": "PrintStreamBuildLog(PrintStream out){\n\t\tthis.out = out;\n\t}", "original_code": "PrintStreamBuildLog(PrintStream out) {\n\t\tthis.out = out;\n\t}", "code_tokens": ["print", "stream", "build", "log", "(", "print", "stream", "out", ")", "{", "this", ".", "out", "=", "out", ";", "}"], "token_count": 17, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.331132+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "04a459aa6b5c79ab445e7393d8a4a96bd5993d55", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLog.java", "file_blob_sha": null, "method_name": "log", "signature": null, "start_line": 39, "end_line": 42, "nloc": 4, "method_source_normalized": "@Override\n\tprotectedvoidlog(String message){\n\t\tthis.out.println(message);\n\t}", "original_code": "@Override\n\tprotected void log(String message) {\n\t\tthis.out.println(message);\n\t}", "code_tokens": ["@", "override", "protected", "void", "log", "(", "string", "message", ")", "{", "this", ".", "out", ".", "println", "(", "message", ")", ";", "}"], "token_count": 20, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.331380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "adcab3195b920f468ecba16784de571f46269c38", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLog.java", "file_blob_sha": null, "method_name": "getProgressConsumer", "signature": null, "start_line": 44, "end_line": 47, "nloc": 4, "method_source_normalized": "@Override\n\tprotectedConsumer<TotalProgressEvent>getProgressConsumer(String prefix){\n\t\treturn new TotalProgressBar(prefix, '.', false, this.out);\n\t}", "original_code": "@Override\n\tprotected Consumer<TotalProgressEvent> getProgressConsumer(String prefix) {\n\t\treturn new TotalProgressBar(prefix, '.', false, this.out);\n\t}", "code_tokens": ["@", "override", "protected", "consumer", "<", "total", "progress", "event", ">", "get", "progress", "consumer", "(", "string", "prefix", ")", "{", "return", "new", "total", "progress", "bar", "(", "prefix", ",", "__STR__", ",", "false", ",", "this", ".", "out", ")", ";", "}"], "token_count": 35, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.331631+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c4ea6cfca864086a0383345067a9a3bf2b6f584e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "DirectoryBuildpack", "signature": null, "start_line": 54, "end_line": 57, "nloc": 4, "method_source_normalized": "privateDirectoryBuildpack(Path path){\n\t\tthis.path = path;\n\t\tthis.coordinates = findBuildpackCoordinates(path);\n\t}", "original_code": "private DirectoryBuildpack(Path path) {\n\t\tthis.path = path;\n\t\tthis.coordinates = findBuildpackCoordinates(path);\n\t}", "code_tokens": ["private", "directory", "buildpack", "(", "path", "path", ")", "{", "this", ".", "path", "=", "path", ";", "this", ".", "coordinates", "=", "find", "buildpack", "coordinates", "(", "path", ")", ";", "}"], "token_count": 26, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.333533+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f1c5fb0511eb28d1d13718d6d5bd0b7a81d02fa8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "findBuildpackCoordinates", "signature": null, "start_line": 59, "end_line": 71, "nloc": 13, "method_source_normalized": "privateBuildpackCoordinatesfindBuildpackCoordinates(Path path){\n\t\tPath buildpackToml = path.resolve(\"buildpack.toml\");\n\t\tAssert.state(Files.exists(buildpackToml),\n\t\t\t\t() -> \"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\ttry {\n\t\t\ttry (InputStream inputStream = Files.newInputStream(buildpackToml)) {\n\t\t\t\treturn BuildpackCoordinates.fromToml(inputStream, path);\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error parsing descriptor for buildpack '\" + path + \"'\", ex);\n\t\t}\n\t}", "original_code": "private BuildpackCoordinates findBuildpackCoordinates(Path path) {\n\t\tPath buildpackToml = path.resolve(\"buildpack.toml\");\n\t\tAssert.state(Files.exists(buildpackToml),\n\t\t\t\t() -> \"Buildpack descriptor 'buildpack.toml' is required in buildpack '\" + path + \"'\");\n\t\ttry {\n\t\t\ttry (InputStream inputStream = Files.newInputStream(buildpackToml)) {\n\t\t\t\treturn BuildpackCoordinates.fromToml(inputStream, path);\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error parsing descriptor for buildpack '\" + path + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "buildpack", "coordinates", "find", "buildpack", "coordinates", "(", "path", "path", ")", "{", "path", "buildpack", "toml", "=", "path", ".", "resolve", "(", "__STR__", ")", ";", "assert", ".", "state", "(", "files", ".", "exists", "(", "buildpack", "toml", ")", ",", "(", ")", "->", "__STR__", "+", "path", "+", "__STR__", ")", ";", "try", "{", "try", "(", "input", "stream", "input", "stream", "=", "files", ".", "new", "input", "stream", "(", "buildpack", "toml", ")", ")", "{", "return", "buildpack", "coordinates", ".", "from", "toml", "(", "input", "stream", ",", "path", ")", ";", "}", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "path", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 103, "vocab_size": 35, "cyclomatic_complexity": 2, "ast_node_count": 125, "n_identifiers": 28, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 85, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.333849+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "82981b6f4084dca69d74b969573d24f9e02eb3e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 73, "end_line": 76, "nloc": 4, "method_source_normalized": "@Override\n\tpublicBuildpackCoordinatesgetCoordinates(){\n\t\treturn this.coordinates;\n\t}", "original_code": "@Override\n\tpublic BuildpackCoordinates getCoordinates() {\n\t\treturn this.coordinates;\n\t}", "code_tokens": ["@", "override", "public", "buildpack", "coordinates", "get", "coordinates", "(", ")", "{", "return", "this", ".", "coordinates", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.334104+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e71fa59ded3affc110ed2e5e39d0e8c4865a2a8d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 78, "end_line": 81, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidapply(IOConsumer<Layer> layers)throws IOException{\n\t\tlayers.accept(Layer.of(this::addLayerContent));\n\t}", "original_code": "@Override\n\tpublic void apply(IOConsumer<Layer> layers) throws IOException {\n\t\tlayers.accept(Layer.of(this::addLayerContent));\n\t}", "code_tokens": ["@", "override", "public", "void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "layers", ".", "accept", "(", "layer", ".", "of", "(", "this", "::", "add", "layer", "content", ")", ")", ";", "}"], "token_count": 34, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.334371+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e558511b9ed1bfc0c6a1440fadf04a9205f18403", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "addLayerContent", "signature": null, "start_line": 83, "end_line": 88, "nloc": 6, "method_source_normalized": "privatevoidaddLayerContent(Layout layout)throws IOException{\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tPath cnbPath = Paths.get(\"/cnb/buildpacks/\", id, this.coordinates.getVersion());\n\t\twriteBasePathEntries(layout, cnbPath);\n\t\tFiles.walkFileTree(this.path, new LayoutFileVisitor(this.path, cnbPath, layout));\n\t}", "original_code": "private void addLayerContent(Layout layout) throws IOException {\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tPath cnbPath = Paths.get(\"/cnb/buildpacks/\", id, this.coordinates.getVersion());\n\t\twriteBasePathEntries(layout, cnbPath);\n\t\tFiles.walkFileTree(this.path, new LayoutFileVisitor(this.path, cnbPath, layout));\n\t}", "code_tokens": ["private", "void", "add", "layer", "content", "(", "layout", "layout", ")", "throws", "io", "exception", "{", "string", "id", "=", "this", ".", "coordinates", ".", "get", "sanitized", "id", "(", ")", ";", "path", "cnb", "path", "=", "paths", ".", "get", "(", "__STR__", ",", "id", ",", "this", ".", "coordinates", ".", "get", "version", "(", ")", ")", ";", "write", "base", "path", "entries", "(", "layout", ",", "cnb", "path", ")", ";", "files", ".", "walk", "file", "tree", "(", "this", ".", "path", ",", "new", "layout", "file", "visitor", "(", "this", ".", "path", ",", "cnb", "path", ",", "layout", ")", ")", ";", "}"], "token_count": 86, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 98, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.334647+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "02363cc4069d36696542e2455f336d09caa564ba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "writeBasePathEntries", "signature": null, "start_line": 90, "end_line": 96, "nloc": 7, "method_source_normalized": "privatevoidwriteBasePathEntries(Layout layout, Path basePath)throws IOException{\n\t\tint pathCount = basePath.getNameCount();\n\t\tfor (int pathIndex = 1; pathIndex < pathCount + 1; pathIndex++) {\n\t\t\tString name = \"/\" + basePath.subpath(0, pathIndex) + \"/\";\n\t\t\tlayout.directory(name, Owner.ROOT);\n\t\t}\n\t}", "original_code": "private void writeBasePathEntries(Layout layout, Path basePath) throws IOException {\n\t\tint pathCount = basePath.getNameCount();\n\t\tfor (int pathIndex = 1; pathIndex < pathCount + 1; pathIndex++) {\n\t\t\tString name = \"/\" + basePath.subpath(0, pathIndex) + \"/\";\n\t\t\tlayout.directory(name, Owner.ROOT);\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "base", "path", "entries", "(", "layout", "layout", ",", "path", "base", "path", ")", "throws", "io", "exception", "{", "int", "path", "count", "=", "base", "path", ".", "get", "name", "count", "(", ")", ";", "for", "(", "int", "path", "index", "=", "__NUM__", ";", "path", "index", "<", "path", "count", "+", "__NUM__", ";", "path", "index", "++", ")", "{", "string", "name", "=", "__STR__", "+", "base", "path", ".", "subpath", "(", "__NUM__", ",", "path", "index", ")", "+", "__STR__", ";", "layout", ".", "directory", "(", "name", ",", "owner", ".", "root", ")", ";", "}", "}"], "token_count": 83, "vocab_size": 34, "cyclomatic_complexity": 2, "ast_node_count": 98, "n_identifiers": 23, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.334949+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4ebe4e0569db8b625e0aed0e170e65cd41c8dfbf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 104, "end_line": 110, "nloc": 7, "method_source_normalized": "static @NullableBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference){\n\t\tPath path = reference.asPath();\n\t\tif (path != null && Files.exists(path) && Files.isDirectory(path)) {\n\t\t\treturn new DirectoryBuildpack(path);\n\t\t}\n\t\treturn null;\n\t}", "original_code": "static @Nullable Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference) {\n\t\tPath path = reference.asPath();\n\t\tif (path != null && Files.exists(path) && Files.isDirectory(path)) {\n\t\t\treturn new DirectoryBuildpack(path);\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["static", "@", "nullable", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", "{", "path", "path", "=", "reference", ".", "as", "path", "(", ")", ";", "if", "(", "path", "!=", "null", "&&", "files", ".", "exists", "(", "path", ")", "&&", "files", ".", "is", "directory", "(", "path", ")", ")", "{", "return", "new", "directory", "buildpack", "(", "path", ")", ";", "}", "return", "null", ";", "}"], "token_count": 61, "vocab_size": 28, "cyclomatic_complexity": 4, "ast_node_count": 80, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.335244+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e9f9c954f114339513df14363259f19d279a9d9f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "LayoutFileVisitor", "signature": null, "start_line": 123, "end_line": 127, "nloc": 5, "method_source_normalized": "LayoutFileVisitor(Path basePath, Path layerPath, Layout layout){\n\t\t\tthis.basePath = basePath;\n\t\t\tthis.layerPath = layerPath;\n\t\t\tthis.layout = layout;\n\t\t}", "original_code": "LayoutFileVisitor(Path basePath, Path layerPath, Layout layout) {\n\t\t\tthis.basePath = basePath;\n\t\t\tthis.layerPath = layerPath;\n\t\t\tthis.layout = layout;\n\t\t}", "code_tokens": ["layout", "file", "visitor", "(", "path", "base", "path", ",", "path", "layer", "path", ",", "layout", "layout", ")", "{", "this", ".", "base", "path", "=", "base", "path", ";", "this", ".", "layer", "path", "=", "layer", "path", ";", "this", ".", "layout", "=", "layout", ";", "}"], "token_count": 39, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.335520+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aea2c409b05ec0461f5ea0236dc14009e624a39d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "preVisitDirectory", "signature": null, "start_line": 129, "end_line": 135, "nloc": 7, "method_source_normalized": "@Override\n\t\tpublicFileVisitResultpreVisitDirectory(Path dir, BasicFileAttributes attrs)throws IOException{\n\t\t\tif (!dir.equals(this.basePath)) {\n\t\t\t\tthis.layout.directory(relocate(dir), Owner.ROOT, getMode(dir));\n\t\t\t}\n\t\t\treturn FileVisitResult.CONTINUE;\n\t\t}", "original_code": "@Override\n\t\tpublic FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n\t\t\tif (!dir.equals(this.basePath)) {\n\t\t\t\tthis.layout.directory(relocate(dir), Owner.ROOT, getMode(dir));\n\t\t\t}\n\t\t\treturn FileVisitResult.CONTINUE;\n\t\t}", "code_tokens": ["@", "override", "public", "file", "visit", "result", "pre", "visit", "directory", "(", "path", "dir", ",", "basic", "file", "attributes", "attrs", ")", "throws", "io", "exception", "{", "if", "(", "!", "dir", ".", "equals", "(", "this", ".", "base", "path", ")", ")", "{", "this", ".", "layout", ".", "directory", "(", "relocate", "(", "dir", ")", ",", "owner", ".", "root", ",", "get", "mode", "(", "dir", ")", ")", ";", "}", "return", "file", "visit", "result", ".", "continue", ";", "}"], "token_count": 67, "vocab_size": 36, "cyclomatic_complexity": 2, "ast_node_count": 82, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.335960+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c71687340ebbc065958ff06f3d26e8159ddb33de", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "visitFile", "signature": null, "start_line": 137, "end_line": 141, "nloc": 5, "method_source_normalized": "@Override\n\t\tpublicFileVisitResultvisitFile(Path file, BasicFileAttributes attrs)throws IOException{\n\t\t\tthis.layout.file(relocate(file), Owner.ROOT, getMode(file), Content.of(file.toFile()));\n\t\t\treturn FileVisitResult.CONTINUE;\n\t\t}", "original_code": "@Override\n\t\tpublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n\t\t\tthis.layout.file(relocate(file), Owner.ROOT, getMode(file), Content.of(file.toFile()));\n\t\t\treturn FileVisitResult.CONTINUE;\n\t\t}", "code_tokens": ["@", "override", "public", "file", "visit", "result", "visit", "file", "(", "path", "file", ",", "basic", "file", "attributes", "attrs", ")", "throws", "io", "exception", "{", "this", ".", "layout", ".", "file", "(", "relocate", "(", "file", ")", ",", "owner", ".", "root", ",", "get", "mode", "(", "file", ")", ",", "content", ".", "of", "(", "file", ".", "to", "file", "(", ")", ")", ")", ";", "return", "file", "visit", "result", ".", "continue", ";", "}"], "token_count": 63, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 76, "n_identifiers": 22, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.336258+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9b9e231f9c89852f9b0d82b0c879e5aab94424a1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "getMode", "signature": null, "start_line": 143, "end_line": 151, "nloc": 9, "method_source_normalized": "privateintgetMode(Path path)throws IOException{\n\t\t\ttry {\n\t\t\t\treturn FilePermissions.umaskForPath(path);\n\t\t\t}\n\t\t\tcatch (IllegalStateException ex) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\t\"Buildpack content in a directory is not supported on this operating system\");\n\t\t\t}\n\t\t}", "original_code": "private int getMode(Path path) throws IOException {\n\t\t\ttry {\n\t\t\t\treturn FilePermissions.umaskForPath(path);\n\t\t\t}\n\t\t\tcatch (IllegalStateException ex) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\t\"Buildpack content in a directory is not supported on this operating system\");\n\t\t\t}\n\t\t}", "code_tokens": ["private", "int", "get", "mode", "(", "path", "path", ")", "throws", "io", "exception", "{", "try", "{", "return", "file", "permissions", ".", "umask", "for", "path", "(", "path", ")", ";", "}", "catch", "(", "illegal", "state", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", ")", ";", "}", "}"], "token_count": 45, "vocab_size": 27, "cyclomatic_complexity": 2, "ast_node_count": 55, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.336547+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5c97f68bf31c2fcc43524fa6fec726e7742ad227", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpack.java", "file_blob_sha": null, "method_name": "relocate", "signature": null, "start_line": 153, "end_line": 156, "nloc": 4, "method_source_normalized": "privateStringrelocate(Path path){\n\t\t\tPath node = path.subpath(this.basePath.getNameCount(), path.getNameCount());\n\t\t\treturn Paths.get(this.layerPath.toString(), node.toString()).toString();\n\t\t}", "original_code": "private String relocate(Path path) {\n\t\t\tPath node = path.subpath(this.basePath.getNameCount(), path.getNameCount());\n\t\t\treturn Paths.get(this.layerPath.toString(), node.toString()).toString();\n\t\t}", "code_tokens": ["private", "string", "relocate", "(", "path", "path", ")", "{", "path", "node", "=", "path", ".", "subpath", "(", "this", ".", "base", "path", ".", "get", "name", "count", "(", ")", ",", "path", ".", "get", "name", "count", "(", ")", ")", ";", "return", "paths", ".", "get", "(", "this", ".", "layer", "path", ".", "to", "string", "(", ")", ",", "node", ".", "to", "string", "(", ")", ")", ".", "to", "string", "(", ")", ";", "}"], "token_count": 64, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.336888+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "caa1a0d1a1c366f1ebda57d92160fa2ba685ed38", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "StackId", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "StackId(@Nullable String value){\n\t\tthis.value = value;\n\t}", "original_code": "StackId(@Nullable String value) {\n\t\tthis.value = value;\n\t}", "code_tokens": ["stack", "id", "(", "@", "nullable", "string", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.337881+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e5e61b39e5525afbdb82f61eb4d278a69f69d6f3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 43, "end_line": 52, "nloc": 10, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Objects.equals(this.value, ((StackId) obj).value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Objects.equals(this.value, ((StackId) obj).value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "return", "objects", ".", "equals", "(", "this", ".", "value", ",", "(", "(", "stack", "id", ")", "obj", ")", ".", "value", ")", ";", "}"], "token_count": 67, "vocab_size": 30, "cyclomatic_complexity": 4, "ast_node_count": 95, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.338174+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "990890cc75c84ca1016927c8f8dfc354a21fb4ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "hasId", "signature": null, "start_line": 54, "end_line": 56, "nloc": 3, "method_source_normalized": "booleanhasId(){\n\t\treturn this.value != null;\n\t}", "original_code": "boolean hasId() {\n\t\treturn this.value != null;\n\t}", "code_tokens": ["boolean", "has", "id", "(", ")", "{", "return", "this", ".", "value", "!=", "null", ";", "}"], "token_count": 14, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 2, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.338416+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39ea5f4770db17bba74738588e7315de6c38541c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 58, "end_line": 61, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn Objects.hashCode(this.value);\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn Objects.hashCode(this.value);\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "objects", ".", "hash", "code", "(", "this", ".", "value", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.338636+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f1df5850a1c61c629ab12a05ed5be362dc23bdcf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 63, "end_line": 66, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn (this.value != null) ? this.value : \"<null>\";\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn (this.value != null) ? this.value : \"<null>\";\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "(", "this", ".", "value", "!=", "null", ")", "?", "this", ".", "value", ":", "__STR__", ";", "}"], "token_count": 25, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 5, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.338864+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3cdafa72115a5b2a4c0ba653a3f0871af61cfaca", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "fromImage", "signature": null, "start_line": 73, "end_line": 76, "nloc": 4, "method_source_normalized": "staticStackIdfromImage(Image image){\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "original_code": "static StackId fromImage(Image image) {\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "code_tokens": ["static", "stack", "id", "from", "image", "(", "image", "image", ")", "{", "assert", ".", "not", "null", "(", "image", ",", "__STR__", ")", ";", "return", "from", "image", "config", "(", "image", ".", "get", "config", "(", ")", ")", ";", "}"], "token_count": 34, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.339115+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b4744fa263bd9156effb7d91530e8391829427a1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "fromImageConfig", "signature": null, "start_line": 83, "end_line": 86, "nloc": 4, "method_source_normalized": "private staticStackIdfromImageConfig(ImageConfig imageConfig){\n\t\tString value = imageConfig.getLabels().get(LABEL_NAME);\n\t\treturn new StackId(value);\n\t}", "original_code": "private static StackId fromImageConfig(ImageConfig imageConfig) {\n\t\tString value = imageConfig.getLabels().get(LABEL_NAME);\n\t\treturn new StackId(value);\n\t}", "code_tokens": ["private", "static", "stack", "id", "from", "image", "config", "(", "image", "config", "image", "config", ")", "{", "string", "value", "=", "image", "config", ".", "get", "labels", "(", ")", ".", "get", "(", "label", "name", ")", ";", "return", "new", "stack", "id", "(", "value", ")", ";", "}"], "token_count": 40, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.339374+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c3f1f9438b5a0bb9bb5610848f8e24e9ec7c92fd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/StackId.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 93, "end_line": 96, "nloc": 4, "method_source_normalized": "staticStackIdof(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\treturn new StackId(value);\n\t}", "original_code": "static StackId of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\treturn new StackId(value);\n\t}", "code_tokens": ["static", "stack", "id", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "return", "new", "stack", "id", "(", "value", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.339613+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ecf21854e3447475219044d7396be8198793743f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "BuildpackLayersMetadata", "signature": null, "start_line": 45, "end_line": 48, "nloc": 4, "method_source_normalized": "privateBuildpackLayersMetadata(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.buildpacks = Buildpacks.fromJson(getNode());\n\t}", "original_code": "private BuildpackLayersMetadata(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.buildpacks = Buildpacks.fromJson(getNode());\n\t}", "code_tokens": ["private", "buildpack", "layers", "metadata", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "buildpacks", "=", "buildpacks", ".", "from", "json", "(", "get", "node", "(", ")", ")", ";", "}"], "token_count": 38, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.341579+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "11fa0ee27248c681d3d4bc64d33b4eb55ab2da18", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getBuildpack", "signature": null, "start_line": 57, "end_line": 59, "nloc": 3, "method_source_normalized": "@NullableBuildpackLayerDetailsgetBuildpack(String id, @Nullable String version){\n\t\treturn this.buildpacks.getBuildpack(id, version);\n\t}", "original_code": "@Nullable BuildpackLayerDetails getBuildpack(String id, @Nullable String version) {\n\t\treturn this.buildpacks.getBuildpack(id, version);\n\t}", "code_tokens": ["@", "nullable", "buildpack", "layer", "details", "get", "buildpack", "(", "string", "id", ",", "@", "nullable", "string", "version", ")", "{", "return", "this", ".", "buildpacks", ".", "get", "buildpack", "(", "id", ",", "version", ")", ";", "}"], "token_count": 31, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 12, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.341844+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "18a518a4a4b0e17a9d46f544b3864e028400831f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromImage", "signature": null, "start_line": 67, "end_line": 70, "nloc": 4, "method_source_normalized": "staticBuildpackLayersMetadatafromImage(Image image)throws IOException{\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "original_code": "static BuildpackLayersMetadata fromImage(Image image) throws IOException {\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "code_tokens": ["static", "buildpack", "layers", "metadata", "from", "image", "(", "image", "image", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", ",", "__STR__", ")", ";", "return", "from", "image", "config", "(", "image", ".", "get", "config", "(", ")", ")", ";", "}"], "token_count": 38, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.342095+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2ed6d7756406fa2361e6e7d1831c3a9af0c797a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromImageConfig", "signature": null, "start_line": 78, "end_line": 84, "nloc": 7, "method_source_normalized": "staticBuildpackLayersMetadatafromImageConfig(ImageConfig imageConfig)throws IOException{\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "original_code": "static BuildpackLayersMetadata fromImageConfig(ImageConfig imageConfig) throws IOException {\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "code_tokens": ["static", "buildpack", "layers", "metadata", "from", "image", "config", "(", "image", "config", "image", "config", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", "config", ",", "__STR__", ")", ";", "string", "json", "=", "image", "config", ".", "get", "labels", "(", ")", ".", "get", "(", "label", "name", ")", ";", "assert", ".", "state", "(", "json", "!=", "null", ",", "(", ")", "->", "__STR__", "+", "label", "name", "+", "__STR__", "+", "string", "utils", ".", "collection", "to", "comma", "delimited", "string", "(", "image", "config", ".", "get", "labels", "(", ")", ".", "key", "set", "(", ")", ")", "+", "__STR__", ")", ";", "return", "from", "json", "(", "json", ")", ";", "}"], "token_count": 97, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 109, "n_identifiers": 25, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.342403+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "720f61dfb15b20ff32999d8be7c75cf98c068f3c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 92, "end_line": 94, "nloc": 3, "method_source_normalized": "staticBuildpackLayersMetadatafromJson(String json)throws IOException{\n\t\treturn fromJson(SharedObjectMapper.get().readTree(json));\n\t}", "original_code": "static BuildpackLayersMetadata fromJson(String json) throws IOException {\n\t\treturn fromJson(SharedObjectMapper.get().readTree(json));\n\t}", "code_tokens": ["static", "buildpack", "layers", "metadata", "from", "json", "(", "string", "json", ")", "throws", "io", "exception", "{", "return", "from", "json", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "json", ")", ")", ";", "}"], "token_count": 34, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.342668+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db2ad7c8001a43bbd816e6db943061d8288ad0f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 101, "end_line": 103, "nloc": 3, "method_source_normalized": "staticBuildpackLayersMetadatafromJson(JsonNode node){\n\t\treturn new BuildpackLayersMetadata(node);\n\t}", "original_code": "static BuildpackLayersMetadata fromJson(JsonNode node) {\n\t\treturn new BuildpackLayersMetadata(node);\n\t}", "code_tokens": ["static", "buildpack", "layers", "metadata", "from", "json", "(", "json", "node", "node", ")", "{", "return", "new", "buildpack", "layers", "metadata", "(", "node", ")", ";", "}"], "token_count": 22, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.342904+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b7ecf8c1ecccbde7582aaa188d4938a30f0b61d0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getBuildpack", "signature": null, "start_line": 109, "end_line": 114, "nloc": 6, "method_source_normalized": "private @NullableBuildpackLayerDetailsgetBuildpack(String id, @Nullable String version){\n\t\t\tif (this.buildpacks.containsKey(id)) {\n\t\t\t\treturn this.buildpacks.get(id).getBuildpack(version);\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "original_code": "private @Nullable BuildpackLayerDetails getBuildpack(String id, @Nullable String version) {\n\t\t\tif (this.buildpacks.containsKey(id)) {\n\t\t\t\treturn this.buildpacks.get(id).getBuildpack(version);\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["private", "@", "nullable", "buildpack", "layer", "details", "get", "buildpack", "(", "string", "id", ",", "@", "nullable", "string", "version", ")", "{", "if", "(", "this", ".", "buildpacks", ".", "contains", "key", "(", "id", ")", ")", "{", "return", "this", ".", "buildpacks", ".", "get", "(", "id", ")", ".", "get", "buildpack", "(", "version", ")", ";", "}", "return", "null", ";", "}"], "token_count": 52, "vocab_size": 24, "cyclomatic_complexity": 2, "ast_node_count": 69, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.343176+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4a0d08a890dcfd7795374bbb926ba6c154b3c363", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "addBuildpackVersions", "signature": null, "start_line": 116, "end_line": 118, "nloc": 3, "method_source_normalized": "privatevoidaddBuildpackVersions(String id, BuildpackVersions versions){\n\t\t\tthis.buildpacks.put(id, versions);\n\t\t}", "original_code": "private void addBuildpackVersions(String id, BuildpackVersions versions) {\n\t\t\tthis.buildpacks.put(id, versions);\n\t\t}", "code_tokens": ["private", "void", "add", "buildpack", "versions", "(", "string", "id", ",", "buildpack", "versions", "versions", ")", "{", "this", ".", "buildpacks", ".", "put", "(", "id", ",", "versions", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.343422+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6cc50407f314c411b5b389a3702f404407b8c06b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 120, "end_line": 126, "nloc": 7, "method_source_normalized": "private staticBuildpacksfromJson(JsonNode node){\n\t\t\tBuildpacks buildpacks = new Buildpacks();\n\t\t\tnode.properties()\n\t\t\t\t.forEach((field) -> buildpacks.addBuildpackVersions(field.getKey(),\n\t\t\t\t\t\tBuildpackVersions.fromJson(field.getValue())));\n\t\t\treturn buildpacks;\n\t\t}", "original_code": "private static Buildpacks fromJson(JsonNode node) {\n\t\t\tBuildpacks buildpacks = new Buildpacks();\n\t\t\tnode.properties()\n\t\t\t\t.forEach((field) -> buildpacks.addBuildpackVersions(field.getKey(),\n\t\t\t\t\t\tBuildpackVersions.fromJson(field.getValue())));\n\t\t\treturn buildpacks;\n\t\t}", "code_tokens": ["private", "static", "buildpacks", "from", "json", "(", "json", "node", "node", ")", "{", "buildpacks", "buildpacks", "=", "new", "buildpacks", "(", ")", ";", "node", ".", "properties", "(", ")", ".", "for", "each", "(", "(", "field", ")", "->", "buildpacks", ".", "add", "buildpack", "versions", "(", "field", ".", "get", "key", "(", ")", ",", "buildpack", "versions", ".", "from", "json", "(", "field", ".", "get", "value", "(", ")", ")", ")", ")", ";", "return", "buildpacks", ";", "}"], "token_count": 65, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 81, "n_identifiers": 20, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.343696+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bf1c8d220e669dc0d88014a358665f5caeff75d5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getBuildpack", "signature": null, "start_line": 134, "end_line": 136, "nloc": 3, "method_source_normalized": "private @NullableBuildpackLayerDetailsgetBuildpack(@Nullable String version){\n\t\t\treturn this.versions.get(version);\n\t\t}", "original_code": "private @Nullable BuildpackLayerDetails getBuildpack(@Nullable String version) {\n\t\t\treturn this.versions.get(version);\n\t\t}", "code_tokens": ["private", "@", "nullable", "buildpack", "layer", "details", "get", "buildpack", "(", "@", "nullable", "string", "version", ")", "{", "return", "this", ".", "versions", ".", "get", "(", "version", ")", ";", "}"], "token_count": 26, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.343950+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "baab0c522f39b9c74cb96ed5400781b53468e049", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "addBuildpackVersion", "signature": null, "start_line": 138, "end_line": 140, "nloc": 3, "method_source_normalized": "privatevoidaddBuildpackVersion(String version, BuildpackLayerDetails details){\n\t\t\tthis.versions.put(version, details);\n\t\t}", "original_code": "private void addBuildpackVersion(String version, BuildpackLayerDetails details) {\n\t\t\tthis.versions.put(version, details);\n\t\t}", "code_tokens": ["private", "void", "add", "buildpack", "version", "(", "string", "version", ",", "buildpack", "layer", "details", "details", ")", "{", "this", ".", "versions", ".", "put", "(", "version", ",", "details", ")", ";", "}"], "token_count": 27, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.344207+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "86c1e61257c1c4ddfc2eb2073baeddd266afb75b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 142, "end_line": 148, "nloc": 7, "method_source_normalized": "private staticBuildpackVersionsfromJson(JsonNode node){\n\t\t\tBuildpackVersions versions = new BuildpackVersions();\n\t\t\tnode.properties()\n\t\t\t\t.forEach((field) -> versions.addBuildpackVersion(field.getKey(),\n\t\t\t\t\t\tBuildpackLayerDetails.fromJson(field.getValue())));\n\t\t\treturn versions;\n\t\t}", "original_code": "private static BuildpackVersions fromJson(JsonNode node) {\n\t\t\tBuildpackVersions versions = new BuildpackVersions();\n\t\t\tnode.properties()\n\t\t\t\t.forEach((field) -> versions.addBuildpackVersion(field.getKey(),\n\t\t\t\t\t\tBuildpackLayerDetails.fromJson(field.getValue())));\n\t\t\treturn versions;\n\t\t}", "code_tokens": ["private", "static", "buildpack", "versions", "from", "json", "(", "json", "node", "node", ")", "{", "buildpack", "versions", "versions", "=", "new", "buildpack", "versions", "(", ")", ";", "node", ".", "properties", "(", ")", ".", "for", "each", "(", "(", "field", ")", "->", "versions", ".", "add", "buildpack", "version", "(", "field", ".", "get", "key", "(", ")", ",", "buildpack", "layer", "details", ".", "from", "json", "(", "field", ".", "get", "value", "(", ")", ")", ")", ")", ";", "return", "versions", ";", "}"], "token_count": 69, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 81, "n_identifiers": 20, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.344486+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb92373fe626ae9876cc749ad3c83ecd9ee0b383", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "BuildpackLayerDetails", "signature": null, "start_line": 160, "end_line": 165, "nloc": 6, "method_source_normalized": "privateBuildpackLayerDetails(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.name = valueAt(\"/name\", String.class);\n\t\t\tthis.homepage = valueAt(\"/homepage\", String.class);\n\t\t\tthis.layerDiffId = valueAt(\"/layerDiffID\", String.class);\n\t\t}", "original_code": "private BuildpackLayerDetails(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.name = valueAt(\"/name\", String.class);\n\t\t\tthis.homepage = valueAt(\"/homepage\", String.class);\n\t\t\tthis.layerDiffId = valueAt(\"/layerDiffID\", String.class);\n\t\t}", "code_tokens": ["private", "buildpack", "layer", "details", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "name", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "homepage", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "layer", "diff", "id", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 67, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 18, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.344787+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c8446aea971d497601287e4ff519e48bd8255c8d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 171, "end_line": 173, "nloc": 3, "method_source_normalized": "@NullableStringgetName(){\n\t\t\treturn this.name;\n\t\t}", "original_code": "@Nullable String getName() {\n\t\t\treturn this.name;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.345030+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5d4d1396063c055603ee968beee328e8d395d074", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getHomepage", "signature": null, "start_line": 179, "end_line": 181, "nloc": 3, "method_source_normalized": "@NullableStringgetHomepage(){\n\t\t\treturn this.homepage;\n\t\t}", "original_code": "@Nullable String getHomepage() {\n\t\t\treturn this.homepage;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "homepage", "(", ")", "{", "return", "this", ".", "homepage", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.345263+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d54424e27e1498af1fba3263e2108eb326368d9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "getLayerDiffId", "signature": null, "start_line": 187, "end_line": 189, "nloc": 3, "method_source_normalized": "@NullableStringgetLayerDiffId(){\n\t\t\treturn this.layerDiffId;\n\t\t}", "original_code": "@Nullable String getLayerDiffId() {\n\t\t\treturn this.layerDiffId;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "layer", "diff", "id", "(", ")", "{", "return", "this", ".", "layer", "diff", "id", ";", "}"], "token_count": 18, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.345534+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "66827e82d3bae434a5892d334c241ccbe98a5535", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 191, "end_line": 193, "nloc": 3, "method_source_normalized": "private staticBuildpackLayerDetailsfromJson(JsonNode node){\n\t\t\treturn new BuildpackLayerDetails(node);\n\t\t}", "original_code": "private static BuildpackLayerDetails fromJson(JsonNode node) {\n\t\t\treturn new BuildpackLayerDetails(node);\n\t\t}", "code_tokens": ["private", "static", "buildpack", "layer", "details", "from", "json", "(", "json", "node", "node", ")", "{", "return", "new", "buildpack", "layer", "details", "(", "node", ")", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.345790+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dfc733176ea36fe799aec4ea0c8633672c0dac1c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "BuildpackMetadata", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "privateBuildpackMetadata(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.id = extractId();\n\t\tthis.version = valueAt(\"/version\", String.class);\n\t\tthis.homepage = valueAt(\"/homepage\", String.class);\n\t}", "original_code": "private BuildpackMetadata(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.id = extractId();\n\t\tthis.version = valueAt(\"/version\", String.class);\n\t\tthis.homepage = valueAt(\"/homepage\", String.class);\n\t}", "code_tokens": ["private", "buildpack", "metadata", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "id", "=", "extract", "id", "(", ")", ";", "this", ".", "version", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "homepage", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 59, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.346973+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "16470b1328b1e82ef0634f2dd1684a8cdbce1db5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "extractId", "signature": null, "start_line": 54, "end_line": 58, "nloc": 5, "method_source_normalized": "privateStringextractId(){\n\t\tString result = valueAt(\"/id\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private String extractId() {\n\t\tString result = valueAt(\"/id\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "string", "extract", "id", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.347248+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "959fd6468df78e93b6588b4a2ea12fcef7e54f46", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "getId", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "StringgetId(){\n\t\treturn this.id;\n\t}", "original_code": "String getId() {\n\t\treturn this.id;\n\t}", "code_tokens": ["string", "get", "id", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.347461+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4ec9f26530217fb0a46f9593252c4ddf68527641", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "getVersion", "signature": null, "start_line": 72, "end_line": 74, "nloc": 3, "method_source_normalized": "@NullableStringgetVersion(){\n\t\treturn this.version;\n\t}", "original_code": "@Nullable String getVersion() {\n\t\treturn this.version;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "version", "(", ")", "{", "return", "this", ".", "version", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.347667+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8dac8481cc1d050cc39f802e38dafac1ae811a81", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "getHomepage", "signature": null, "start_line": 80, "end_line": 82, "nloc": 3, "method_source_normalized": "@NullableStringgetHomepage(){\n\t\treturn this.homepage;\n\t}", "original_code": "@Nullable String getHomepage() {\n\t\treturn this.homepage;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "homepage", "(", ")", "{", "return", "this", ".", "homepage", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.347888+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7e975baa2af3ab5db7c3b8a2d304fbc359daff81", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "fromImage", "signature": null, "start_line": 90, "end_line": 93, "nloc": 4, "method_source_normalized": "staticBuildpackMetadatafromImage(Image image)throws IOException{\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "original_code": "static BuildpackMetadata fromImage(Image image) throws IOException {\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "code_tokens": ["static", "buildpack", "metadata", "from", "image", "(", "image", "image", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", ",", "__STR__", ")", ";", "return", "from", "image", "config", "(", "image", ".", "get", "config", "(", ")", ")", ";", "}"], "token_count": 37, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.348134+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7fca3ffea0a994f30751acfa008f0f4da6ed8dd7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "fromImageConfig", "signature": null, "start_line": 101, "end_line": 107, "nloc": 7, "method_source_normalized": "staticBuildpackMetadatafromImageConfig(ImageConfig imageConfig)throws IOException{\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "original_code": "static BuildpackMetadata fromImageConfig(ImageConfig imageConfig) throws IOException {\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "code_tokens": ["static", "buildpack", "metadata", "from", "image", "config", "(", "image", "config", "image", "config", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", "config", ",", "__STR__", ")", ";", "string", "json", "=", "image", "config", ".", "get", "labels", "(", ")", ".", "get", "(", "label", "name", ")", ";", "assert", ".", "state", "(", "json", "!=", "null", ",", "(", ")", "->", "__STR__", "+", "label", "name", "+", "__STR__", "+", "string", "utils", ".", "collection", "to", "comma", "delimited", "string", "(", "image", "config", ".", "get", "labels", "(", ")", ".", "key", "set", "(", ")", ")", "+", "__STR__", ")", ";", "return", "from", "json", "(", "json", ")", ";", "}"], "token_count": 96, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 109, "n_identifiers": 25, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.348422+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c3b8558af4b6e2db5a122029782592ec364222ea", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 115, "end_line": 117, "nloc": 3, "method_source_normalized": "staticBuildpackMetadatafromJson(String json)throws IOException{\n\t\treturn fromJson(SharedObjectMapper.get().readTree(json));\n\t}", "original_code": "static BuildpackMetadata fromJson(String json) throws IOException {\n\t\treturn fromJson(SharedObjectMapper.get().readTree(json));\n\t}", "code_tokens": ["static", "buildpack", "metadata", "from", "json", "(", "string", "json", ")", "throws", "io", "exception", "{", "return", "from", "json", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "json", ")", ")", ";", "}"], "token_count": 33, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.348674+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "854ae3d59981168949f2166ab54a46894272bcd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 124, "end_line": 126, "nloc": 3, "method_source_normalized": "staticBuildpackMetadatafromJson(JsonNode node){\n\t\treturn new BuildpackMetadata(node);\n\t}", "original_code": "static BuildpackMetadata fromJson(JsonNode node) {\n\t\treturn new BuildpackMetadata(node);\n\t}", "code_tokens": ["static", "buildpack", "metadata", "from", "json", "(", "json", "node", "node", ")", "{", "return", "new", "buildpack", "metadata", "(", "node", ")", ";", "}"], "token_count": 20, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.348908+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "971d5668169a0757681ca8fd26160f838dcee20f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "LifecycleVersion", "signature": null, "start_line": 42, "end_line": 46, "nloc": 5, "method_source_normalized": "LifecycleVersion(int major, int minor, int patch){\n\t\tthis.major = major;\n\t\tthis.minor = minor;\n\t\tthis.patch = patch;\n\t}", "original_code": "LifecycleVersion(int major, int minor, int patch) {\n\t\tthis.major = major;\n\t\tthis.minor = minor;\n\t\tthis.patch = patch;\n\t}", "code_tokens": ["lifecycle", "version", "(", "int", "major", ",", "int", "minor", ",", "int", "patch", ")", "{", "this", ".", "major", "=", "major", ";", "this", ".", "minor", "=", "minor", ";", "this", ".", "patch", "=", "patch", ";", "}"], "token_count": 32, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.350440+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d636d5931aad91ffb7532ee656daeaed45e632bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 48, "end_line": 62, "nloc": 15, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tLifecycleVersion other = (LifecycleVersion) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.major == other.major;\n\t\tresult = result && this.minor == other.minor;\n\t\tresult = result && this.patch == other.patch;\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tLifecycleVersion other = (LifecycleVersion) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.major == other.major;\n\t\tresult = result && this.minor == other.minor;\n\t\tresult = result && this.patch == other.patch;\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "lifecycle", "version", "other", "=", "(", "lifecycle", "version", ")", "obj", ";", "boolean", "result", "=", "true", ";", "result", "=", "result", "&&", "this", ".", "major", "==", "other", ".", "major", ";", "result", "=", "result", "&&", "this", ".", "minor", "==", "other", ".", "minor", ";", "result", "=", "result", "&&", "this", ".", "patch", "==", "other", ".", "patch", ";", "return", "result", ";", "}"], "token_count": 101, "vocab_size": 34, "cyclomatic_complexity": 7, "ast_node_count": 145, "n_identifiers": 31, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 87, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.350779+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "437a2d6fe986f037291453945b24f3aa64bc1e4b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 64, "end_line": 72, "nloc": 9, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.major;\n\t\tresult = prime * result + this.minor;\n\t\tresult = prime * result + this.patch;\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.major;\n\t\tresult = prime * result + this.minor;\n\t\tresult = prime * result + this.patch;\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "final", "int", "prime", "=", "__NUM__", ";", "int", "result", "=", "__NUM__", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "major", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "minor", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "patch", ";", "return", "result", ";", "}"], "token_count": 54, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 17, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.351082+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "09591791fc5aa2da5916be74b8f0cb51356abcd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 74, "end_line": 77, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn \"v\" + this.major + \".\" + this.minor + \".\" + this.patch;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn \"v\" + this.major + \".\" + this.minor + \".\" + this.patch;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "__STR__", "+", "this", ".", "major", "+", "__STR__", "+", "this", ".", "minor", "+", "__STR__", "+", "this", ".", "patch", ";", "}"], "token_count": 29, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 6, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.351336+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0e4ef156d696b8c09b75934999923c97bf790064", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "isEqualOrGreaterThan", "signature": null, "start_line": 85, "end_line": 87, "nloc": 3, "method_source_normalized": "booleanisEqualOrGreaterThan(LifecycleVersion other){\n\t\treturn compareTo(other) >= 0;\n\t}", "original_code": "boolean isEqualOrGreaterThan(LifecycleVersion other) {\n\t\treturn compareTo(other) >= 0;\n\t}", "code_tokens": ["boolean", "is", "equal", "or", "greater", "than", "(", "lifecycle", "version", "other", ")", "{", "return", "compare", "to", "(", "other", ")", ">=", "__NUM__", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.351565+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "725605dadd0bae5431bfd2a7da561ed023caf0b1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "compareTo", "signature": null, "start_line": 89, "end_line": 92, "nloc": 4, "method_source_normalized": "@Override\n\tpublicintcompareTo(LifecycleVersion other){\n\t\treturn COMPARATOR.compare(this, other);\n\t}", "original_code": "@Override\n\tpublic int compareTo(LifecycleVersion other) {\n\t\treturn COMPARATOR.compare(this, other);\n\t}", "code_tokens": ["@", "override", "public", "int", "compare", "to", "(", "lifecycle", "version", "other", ")", "{", "return", "comparator", ".", "compare", "(", "this", ",", "other", ")", ";", "}"], "token_count": 23, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.351804+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d6f9361f031a04bc96a834e245ab1ad0a57405b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "getMajor", "signature": null, "start_line": 98, "end_line": 100, "nloc": 3, "method_source_normalized": "intgetMajor(){\n\t\treturn this.major;\n\t}", "original_code": "int getMajor() {\n\t\treturn this.major;\n\t}", "code_tokens": ["int", "get", "major", "(", ")", "{", "return", "this", ".", "major", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.352030+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5c98bb93e3f4ddaee16524cde8b56a7450e8392e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "getMinor", "signature": null, "start_line": 106, "end_line": 108, "nloc": 3, "method_source_normalized": "intgetMinor(){\n\t\treturn this.minor;\n\t}", "original_code": "int getMinor() {\n\t\treturn this.minor;\n\t}", "code_tokens": ["int", "get", "minor", "(", ")", "{", "return", "this", ".", "minor", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.352251+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "48068c3037e82e0eab212397e1be94760c3bdf4d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "getPatch", "signature": null, "start_line": 114, "end_line": 116, "nloc": 3, "method_source_normalized": "intgetPatch(){\n\t\treturn this.patch;\n\t}", "original_code": "int getPatch() {\n\t\treturn this.patch;\n\t}", "code_tokens": ["int", "get", "patch", "(", ")", "{", "return", "this", ".", "patch", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.352466+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d78ce1ef0dbaa22472f209cde2c46ae4ec9fd9e6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/LifecycleVersion.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 124, "end_line": 139, "nloc": 16, "method_source_normalized": "staticLifecycleVersionparse(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString withoutPrefix = (value.startsWith(\"v\") || value.startsWith(\"V\")) ? value.substring(1) : value;\n\t\tString[] components = withoutPrefix.split(\"\\\\.\");\n\t\tAssert.isTrue(components.length <= 3, () -> \"'value' [%s] must be a valid version number\".formatted(value));\n\t\tint[] versions = new int[3];\n\t\tfor (int i = 0; i < components.length; i++) {\n\t\t\ttry {\n\t\t\t\tversions[i] = Integer.parseInt(components[i]);\n\t\t\t}\n\t\t\tcatch (NumberFormatException ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'value' [\" + value + \"] must be a valid version number\", ex);\n\t\t\t}\n\t\t}\n\t\treturn new LifecycleVersion(versions[0], versions[1], versions[2]);\n\t}", "original_code": "static LifecycleVersion parse(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString withoutPrefix = (value.startsWith(\"v\") || value.startsWith(\"V\")) ? value.substring(1) : value;\n\t\tString[] components = withoutPrefix.split(\"\\\\.\");\n\t\tAssert.isTrue(components.length <= 3, () -> \"'value' [%s] must be a valid version number\".formatted(value));\n\t\tint[] versions = new int[3];\n\t\tfor (int i = 0; i < components.length; i++) {\n\t\t\ttry {\n\t\t\t\tversions[i] = Integer.parseInt(components[i]);\n\t\t\t}\n\t\t\tcatch (NumberFormatException ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'value' [\" + value + \"] must be a valid version number\", ex);\n\t\t\t}\n\t\t}\n\t\treturn new LifecycleVersion(versions[0], versions[1], versions[2]);\n\t}", "code_tokens": ["static", "lifecycle", "version", "parse", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "string", "without", "prefix", "=", "(", "value", ".", "starts", "with", "(", "__STR__", ")", "||", "value", ".", "starts", "with", "(", "__STR__", ")", ")", "?", "value", ".", "substring", "(", "__NUM__", ")", ":", "value", ";", "string", "[", "]", "components", "=", "without", "prefix", ".", "split", "(", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "components", ".", "length", "<=", "__NUM__", ",", "(", ")", "->", "__STR__", ".", "formatted", "(", "value", ")", ")", ";", "int", "[", "]", "versions", "=", "new", "int", "[", "__NUM__", "]", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "components", ".", "length", ";", "i", "++", ")", "{", "try", "{", "versions", "[", "i", "]", "=", "integer", ".", "parse", "int", "(", "components", "[", "i", "]", ")", ";", "}", "catch", "(", "number", "format", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "value", "+", "__STR__", ",", "ex", ")", ";", "}", "}", "return", "new", "lifecycle", "version", "(", "versions", "[", "__NUM__", "]", ",", "versions", "[", "__NUM__", "]", ",", "versions", "[", "__NUM__", "]", ")", ";", "}"], "token_count": 179, "vocab_size": 56, "cyclomatic_complexity": 5, "ast_node_count": 239, "n_identifiers": 47, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 122, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.352831+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0cb8001a7b4783a84f7a85800db39fa9d91445c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "Lifecycle", "signature": null, "start_line": 105, "end_line": 120, "nloc": 16, "method_source_normalized": "Lifecycle(BuildLog log, DockerApi docker, @Nullable ResolvedDockerHost dockerHost, BuildRequest request,\n\t\t\tEphemeralBuilder builder){\n\t\tthis.log = log;\n\t\tthis.docker = docker;\n\t\tthis.dockerHost = dockerHost;\n\t\tthis.request = request;\n\t\tthis.builder = builder;\n\t\tthis.lifecycleVersion = LifecycleVersion.parse(builder.getBuilderMetadata().getLifecycle().getVersion());\n\t\tthis.platformVersion = getPlatformVersion(builder.getBuilderMetadata().getLifecycle());\n\t\tthis.layers = getLayersBindingSource(request);\n\t\tthis.application = getApplicationBindingSource(request);\n\t\tthis.buildCache = getBuildCache(request);\n\t\tthis.launchCache = getLaunchCache(request);\n\t\tthis.applicationDirectory = getApplicationDirectory(request);\n\t\tthis.securityOptions = getSecurityOptions(request);\n\t}", "original_code": "Lifecycle(BuildLog log, DockerApi docker, @Nullable ResolvedDockerHost dockerHost, BuildRequest request,\n\t\t\tEphemeralBuilder builder) {\n\t\tthis.log = log;\n\t\tthis.docker = docker;\n\t\tthis.dockerHost = dockerHost;\n\t\tthis.request = request;\n\t\tthis.builder = builder;\n\t\tthis.lifecycleVersion = LifecycleVersion.parse(builder.getBuilderMetadata().getLifecycle().getVersion());\n\t\tthis.platformVersion = getPlatformVersion(builder.getBuilderMetadata().getLifecycle());\n\t\tthis.layers = getLayersBindingSource(request);\n\t\tthis.application = getApplicationBindingSource(request);\n\t\tthis.buildCache = getBuildCache(request);\n\t\tthis.launchCache = getLaunchCache(request);\n\t\tthis.applicationDirectory = getApplicationDirectory(request);\n\t\tthis.securityOptions = getSecurityOptions(request);\n\t}", "code_tokens": ["lifecycle", "(", "build", "log", "log", ",", "docker", "api", "docker", ",", "@", "nullable", "resolved", "docker", "host", "docker", "host", ",", "build", "request", "request", ",", "ephemeral", "builder", "builder", ")", "{", "this", ".", "log", "=", "log", ";", "this", ".", "docker", "=", "docker", ";", "this", ".", "docker", "host", "=", "docker", "host", ";", "this", ".", "request", "=", "request", ";", "this", ".", "builder", "=", "builder", ";", "this", ".", "lifecycle", "version", "=", "lifecycle", "version", ".", "parse", "(", "builder", ".", "get", "builder", "metadata", "(", ")", ".", "get", "lifecycle", "(", ")", ".", "get", "version", "(", ")", ")", ";", "this", ".", "platform", "version", "=", "get", "platform", "version", "(", "builder", ".", "get", "builder", "metadata", "(", ")", ".", "get", "lifecycle", "(", ")", ")", ";", "this", ".", "layers", "=", "get", "layers", "binding", "source", "(", "request", ")", ";", "this", ".", "application", "=", "get", "application", "binding", "source", "(", "request", ")", ";", "this", ".", "build", "cache", "=", "get", "build", "cache", "(", "request", ")", ";", "this", ".", "launch", "cache", "=", "get", "launch", "cache", "(", "request", ")", ";", "this", ".", "application", "directory", "=", "get", "application", "directory", "(", "request", ")", ";", "this", ".", "security", "options", "=", "get", "security", "options", "(", "request", ")", ";", "}"], "token_count": 184, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 220, "n_identifiers": 52, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.358803+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0c9bf6cec1ce9f66ba052ccd1a9e35d2faeb6a26", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getApplicationDirectory", "signature": null, "start_line": 122, "end_line": 124, "nloc": 3, "method_source_normalized": "StringgetApplicationDirectory(){\n\t\treturn this.applicationDirectory;\n\t}", "original_code": "String getApplicationDirectory() {\n\t\treturn this.applicationDirectory;\n\t}", "code_tokens": ["string", "get", "application", "directory", "(", ")", "{", "return", "this", ".", "application", "directory", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.359089+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a17bdfe79f00227a37e4e6f65b3c42dfea3b5f62", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getBuildCache", "signature": null, "start_line": 126, "end_line": 131, "nloc": 6, "method_source_normalized": "privateCachegetBuildCache(BuildRequest request){\n\t\tif (request.getBuildCache() != null) {\n\t\t\treturn request.getBuildCache();\n\t\t}\n\t\treturn createVolumeCache(request, \"build\");\n\t}", "original_code": "private Cache getBuildCache(BuildRequest request) {\n\t\tif (request.getBuildCache() != null) {\n\t\t\treturn request.getBuildCache();\n\t\t}\n\t\treturn createVolumeCache(request, \"build\");\n\t}", "code_tokens": ["private", "cache", "get", "build", "cache", "(", "build", "request", "request", ")", "{", "if", "(", "request", ".", "get", "build", "cache", "(", ")", "!=", "null", ")", "{", "return", "request", ".", "get", "build", "cache", "(", ")", ";", "}", "return", "create", "volume", "cache", "(", "request", ",", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 19, "cyclomatic_complexity": 2, "ast_node_count": 53, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.359358+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "adcbd62bc88fa02a449a8ac16bc6bc35dedad015", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getLaunchCache", "signature": null, "start_line": 133, "end_line": 138, "nloc": 6, "method_source_normalized": "privateCachegetLaunchCache(BuildRequest request){\n\t\tif (request.getLaunchCache() != null) {\n\t\t\treturn request.getLaunchCache();\n\t\t}\n\t\treturn createVolumeCache(request, \"launch\");\n\t}", "original_code": "private Cache getLaunchCache(BuildRequest request) {\n\t\tif (request.getLaunchCache() != null) {\n\t\t\treturn request.getLaunchCache();\n\t\t}\n\t\treturn createVolumeCache(request, \"launch\");\n\t}", "code_tokens": ["private", "cache", "get", "launch", "cache", "(", "build", "request", "request", ")", "{", "if", "(", "request", ".", "get", "launch", "cache", "(", ")", "!=", "null", ")", "{", "return", "request", ".", "get", "launch", "cache", "(", ")", ";", "}", "return", "create", "volume", "cache", "(", "request", ",", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 20, "cyclomatic_complexity": 2, "ast_node_count": 53, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.359623+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6229c4de65c7d5c6d8e331758adf2d3d9348d8d8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getApplicationDirectory", "signature": null, "start_line": 140, "end_line": 142, "nloc": 3, "method_source_normalized": "privateStringgetApplicationDirectory(BuildRequest request){\n\t\treturn (request.getApplicationDirectory() != null) ? request.getApplicationDirectory() : Directory.APPLICATION;\n\t}", "original_code": "private String getApplicationDirectory(BuildRequest request) {\n\t\treturn (request.getApplicationDirectory() != null) ? request.getApplicationDirectory() : Directory.APPLICATION;\n\t}", "code_tokens": ["private", "string", "get", "application", "directory", "(", "build", "request", "request", ")", "{", "return", "(", "request", ".", "get", "application", "directory", "(", ")", "!=", "null", ")", "?", "request", ".", "get", "application", "directory", "(", ")", ":", "directory", ".", "application", ";", "}"], "token_count": 37, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 44, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.359888+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fe7f73257f0e457d8adfe7bd239627d15dfe6849", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getSecurityOptions", "signature": null, "start_line": 144, "end_line": 149, "nloc": 6, "method_source_normalized": "privateList<String>getSecurityOptions(BuildRequest request){\n\t\tif (request.getSecurityOptions() != null) {\n\t\t\treturn request.getSecurityOptions();\n\t\t}\n\t\treturn (Platform.isWindows()) ? Collections.emptyList() : DEFAULT_SECURITY_OPTIONS;\n\t}", "original_code": "private List<String> getSecurityOptions(BuildRequest request) {\n\t\tif (request.getSecurityOptions() != null) {\n\t\t\treturn request.getSecurityOptions();\n\t\t}\n\t\treturn (Platform.isWindows()) ? Collections.emptyList() : DEFAULT_SECURITY_OPTIONS;\n\t}", "code_tokens": ["private", "list", "<", "string", ">", "get", "security", "options", "(", "build", "request", "request", ")", "{", "if", "(", "request", ".", "get", "security", "options", "(", ")", "!=", "null", ")", "{", "return", "request", ".", "get", "security", "options", "(", ")", ";", "}", "return", "(", "platform", ".", "is", "windows", "(", ")", ")", "?", "collections", ".", "empty", "list", "(", ")", ":", "default", "security", "options", ";", "}"], "token_count": 59, "vocab_size": 28, "cyclomatic_complexity": 3, "ast_node_count": 71, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.360160+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "27a6c57dba12460271617ce09bcd384e158f77ed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getPlatformVersion", "signature": null, "start_line": 151, "end_line": 158, "nloc": 8, "method_source_normalized": "privateApiVersiongetPlatformVersion(BuilderMetadata.Lifecycle lifecycle){\n\t\tif (lifecycle.getApis().getPlatform() != null) {\n\t\t\tString[] supportedVersions = lifecycle.getApis().getPlatform();\n\t\t\treturn ApiVersions.SUPPORTED_PLATFORMS.findLatestSupported(supportedVersions);\n\t\t}\n\t\tString version = lifecycle.getApi().getPlatform();\n\t\treturn ApiVersions.SUPPORTED_PLATFORMS.findLatestSupported(version);\n\t}", "original_code": "private ApiVersion getPlatformVersion(BuilderMetadata.Lifecycle lifecycle) {\n\t\tif (lifecycle.getApis().getPlatform() != null) {\n\t\t\tString[] supportedVersions = lifecycle.getApis().getPlatform();\n\t\t\treturn ApiVersions.SUPPORTED_PLATFORMS.findLatestSupported(supportedVersions);\n\t\t}\n\t\tString version = lifecycle.getApi().getPlatform();\n\t\treturn ApiVersions.SUPPORTED_PLATFORMS.findLatestSupported(version);\n\t}", "code_tokens": ["private", "api", "version", "get", "platform", "version", "(", "builder", "metadata", ".", "lifecycle", "lifecycle", ")", "{", "if", "(", "lifecycle", ".", "get", "apis", "(", ")", ".", "get", "platform", "(", ")", "!=", "null", ")", "{", "string", "[", "]", "supported", "versions", "=", "lifecycle", ".", "get", "apis", "(", ")", ".", "get", "platform", "(", ")", ";", "return", "api", "versions", ".", "supported", "platforms", ".", "find", "latest", "supported", "(", "supported", "versions", ")", ";", "}", "string", "version", "=", "lifecycle", ".", "get", "api", "(", ")", ".", "get", "platform", "(", ")", ";", "return", "api", "versions", ".", "supported", "platforms", ".", "find", "latest", "supported", "(", "version", ")", ";", "}"], "token_count": 95, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 111, "n_identifiers": 26, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.360453+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "714ee7bef720ebecb0ea1e7949eb596a7d435ca8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "execute", "signature": null, "start_line": 164, "end_line": 187, "nloc": 24, "method_source_normalized": "voidexecute()throws IOException{\n\t\tAssert.state(!this.executed, \"Lifecycle has already been executed\");\n\t\tthis.executed = true;\n\t\tthis.log.executingLifecycle(this.request, this.lifecycleVersion, this.buildCache);\n\t\tif (this.request.isCleanCache()) {\n\t\t\tdeleteCache(this.buildCache);\n\t\t}\n\t\tif (this.request.isTrustBuilder()) {\n\t\t\trun(createPhase());\n\t\t}\n\t\telse {\n\t\t\trun(analyzePhase());\n\t\t\trun(detectPhase());\n\t\t\tif (!this.request.isCleanCache()) {\n\t\t\t\trun(restorePhase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.log.skippingPhase(\"restorer\", \"because 'cleanCache' is enabled\");\n\t\t\t}\n\t\t\trun(buildPhase());\n\t\t\trun(exportPhase());\n\t\t}\n\t\tthis.log.executedLifecycle(this.request);\n\t}", "original_code": "void execute() throws IOException {\n\t\tAssert.state(!this.executed, \"Lifecycle has already been executed\");\n\t\tthis.executed = true;\n\t\tthis.log.executingLifecycle(this.request, this.lifecycleVersion, this.buildCache);\n\t\tif (this.request.isCleanCache()) {\n\t\t\tdeleteCache(this.buildCache);\n\t\t}\n\t\tif (this.request.isTrustBuilder()) {\n\t\t\trun(createPhase());\n\t\t}\n\t\telse {\n\t\t\trun(analyzePhase());\n\t\t\trun(detectPhase());\n\t\t\tif (!this.request.isCleanCache()) {\n\t\t\t\trun(restorePhase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.log.skippingPhase(\"restorer\", \"because 'cleanCache' is enabled\");\n\t\t\t}\n\t\t\trun(buildPhase());\n\t\t\trun(exportPhase());\n\t\t}\n\t\tthis.log.executedLifecycle(this.request);\n\t}", "code_tokens": ["void", "execute", "(", ")", "throws", "io", "exception", "{", "assert", ".", "state", "(", "!", "this", ".", "executed", ",", "__STR__", ")", ";", "this", ".", "executed", "=", "true", ";", "this", ".", "log", ".", "executing", "lifecycle", "(", "this", ".", "request", ",", "this", ".", "lifecycle", "version", ",", "this", ".", "build", "cache", ")", ";", "if", "(", "this", ".", "request", ".", "is", "clean", "cache", "(", ")", ")", "{", "delete", "cache", "(", "this", ".", "build", "cache", ")", ";", "}", "if", "(", "this", ".", "request", ".", "is", "trust", "builder", "(", ")", ")", "{", "run", "(", "create", "phase", "(", ")", ")", ";", "}", "else", "{", "run", "(", "analyze", "phase", "(", ")", ")", ";", "run", "(", "detect", "phase", "(", ")", ")", ";", "if", "(", "!", "this", ".", "request", ".", "is", "clean", "cache", "(", ")", ")", "{", "run", "(", "restore", "phase", "(", ")", ")", ";", "}", "else", "{", "this", ".", "log", ".", "skipping", "phase", "(", "__STR__", ",", "__STR__", ")", ";", "}", "run", "(", "build", "phase", "(", ")", ")", ";", "run", "(", "export", "phase", "(", ")", ")", ";", "}", "this", ".", "log", ".", "executed", "lifecycle", "(", "this", ".", "request", ")", ";", "}"], "token_count": 179, "vocab_size": 42, "cyclomatic_complexity": 4, "ast_node_count": 242, "n_identifiers": 36, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 107, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.360819+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce70efb643f77abc68301098f415439e06e92ceb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "createPhase", "signature": null, "start_line": 189, "end_line": 213, "nloc": 25, "method_source_normalized": "privatePhasecreatePhase(){\n\t\tPhase phase = new Phase(\"creator\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tImageReference runImage = this.request.getRunImage();\n\t\tAssert.state(runImage != null, \"'runImage' must not be null\");\n\t\tphase.withRunImage(runImage);\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tconfigureDaemonAccess(phase);\n\t\tif (this.request.isCleanCache()) {\n\t\t\tphase.withSkipRestore();\n\t\t}\n\t\tif (requiresProcessTypeDefault()) {\n\t\t\tphase.withProcessType(\"web\");\n\t\t}\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\tconfigureCreatedDate(phase);\n\t\treturn phase;\n\n\t}", "original_code": "private Phase createPhase() {\n\t\tPhase phase = new Phase(\"creator\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tImageReference runImage = this.request.getRunImage();\n\t\tAssert.state(runImage != null, \"'runImage' must not be null\");\n\t\tphase.withRunImage(runImage);\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tconfigureDaemonAccess(phase);\n\t\tif (this.request.isCleanCache()) {\n\t\t\tphase.withSkipRestore();\n\t\t}\n\t\tif (requiresProcessTypeDefault()) {\n\t\t\tphase.withProcessType(\"web\");\n\t\t}\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\tconfigureCreatedDate(phase);\n\t\treturn phase;\n\n\t}", "code_tokens": ["private", "phase", "create", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "phase", ".", "with", "app", "(", "this", ".", "application", "directory", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "application", ")", ",", "this", ".", "application", "directory", ")", ")", ";", "phase", ".", "with", "platform", "(", "directory", ".", "platform", ")", ";", "image", "reference", "run", "image", "=", "this", ".", "request", ".", "get", "run", "image", "(", ")", ";", "assert", ".", "state", "(", "run", "image", "!=", "null", ",", "__STR__", ")", ";", "phase", ".", "with", "run", "image", "(", "run", "image", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "phase", ".", "with", "build", "cache", "(", "directory", ".", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "build", "cache", ")", ",", "directory", ".", "cache", ")", ")", ";", "phase", ".", "with", "launch", "cache", "(", "directory", ".", "launch", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "launch", "cache", ")", ",", "directory", ".", "launch", "cache", ")", ")", ";", "configure", "daemon", "access", "(", "phase", ")", ";", "if", "(", "this", ".", "request", ".", "is", "clean", "cache", "(", ")", ")", "{", "phase", ".", "with", "skip", "restore", "(", ")", ";", "}", "if", "(", "requires", "process", "type", "default", "(", ")", ")", "{", "phase", ".", "with", "process", "type", "(", "__STR__", ")", ";", "}", "phase", ".", "with", "image", "name", "(", "this", ".", "request", ".", "get", "name", "(", ")", ")", ";", "configure", "options", "(", "phase", ")", ";", "configure", "created", "date", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 275, "vocab_size": 54, "cyclomatic_complexity": 3, "ast_node_count": 321, "n_identifiers": 76, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 104, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.361272+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "215214c001681996764be75464855d774db872ad", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "analyzePhase", "signature": null, "start_line": 215, "end_line": 227, "nloc": 13, "method_source_normalized": "privatePhaseanalyzePhase(){\n\t\tPhase phase = new Phase(\"analyzer\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tImageReference runImage = this.request.getRunImage();\n\t\tAssert.state(runImage != null, \"'runImage' must not be null\");\n\t\tphase.withRunImage(runImage);\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "original_code": "private Phase analyzePhase() {\n\t\tPhase phase = new Phase(\"analyzer\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tImageReference runImage = this.request.getRunImage();\n\t\tAssert.state(runImage != null, \"'runImage' must not be null\");\n\t\tphase.withRunImage(runImage);\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "code_tokens": ["private", "phase", "analyze", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "configure", "daemon", "access", "(", "phase", ")", ";", "phase", ".", "with", "launch", "cache", "(", "directory", ".", "launch", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "launch", "cache", ")", ",", "directory", ".", "launch", "cache", ")", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "image", "reference", "run", "image", "=", "this", ".", "request", ".", "get", "run", "image", "(", ")", ";", "assert", ".", "state", "(", "run", "image", "!=", "null", ",", "__STR__", ")", ";", "phase", ".", "with", "run", "image", "(", "run", "image", ")", ";", "phase", ".", "with", "image", "name", "(", "this", ".", "request", ".", "get", "name", "(", ")", ")", ";", "configure", "options", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 154, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 180, "n_identifiers": 45, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 59, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.361652+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32c1ace4c1819305922e8a01209fecc0ca483f46", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "detectPhase", "signature": null, "start_line": 229, "end_line": 237, "nloc": 9, "method_source_normalized": "privatePhasedetectPhase(){\n\t\tPhase phase = new Phase(\"detector\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "original_code": "private Phase detectPhase() {\n\t\tPhase phase = new Phase(\"detector\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "code_tokens": ["private", "phase", "detect", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "phase", ".", "with", "app", "(", "this", ".", "application", "directory", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "application", ")", ",", "this", ".", "application", "directory", ")", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "phase", ".", "with", "platform", "(", "directory", ".", "platform", ")", ";", "configure", "options", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 102, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.361978+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ee80e83cdf3a65ef872c4b1f589b7400f7f65a1f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "restorePhase", "signature": null, "start_line": 239, "end_line": 246, "nloc": 8, "method_source_normalized": "privatePhaserestorePhase(){\n\t\tPhase phase = new Phase(\"restorer\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "original_code": "private Phase restorePhase() {\n\t\tPhase phase = new Phase(\"restorer\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "code_tokens": ["private", "phase", "restore", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "configure", "daemon", "access", "(", "phase", ")", ";", "phase", ".", "with", "build", "cache", "(", "directory", ".", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "build", "cache", ")", ",", "directory", ".", "cache", ")", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "configure", "options", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 99, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 120, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.362388+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c978ebab4c7487955862b248d245cf45214cb97c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "buildPhase", "signature": null, "start_line": 248, "end_line": 256, "nloc": 9, "method_source_normalized": "privatePhasebuildPhase(){\n\t\tPhase phase = new Phase(\"builder\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "original_code": "private Phase buildPhase() {\n\t\tPhase phase = new Phase(\"builder\", isVerboseLogging());\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tphase.withPlatform(Directory.PLATFORM);\n\t\tconfigureOptions(phase);\n\t\treturn phase;\n\t}", "code_tokens": ["private", "phase", "build", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "phase", ".", "with", "app", "(", "this", ".", "application", "directory", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "application", ")", ",", "this", ".", "application", "directory", ")", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "phase", ".", "with", "platform", "(", "directory", ".", "platform", ")", ";", "configure", "options", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 102, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.362706+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99f2bb0ea5d47706bc657927463e5838af2e4d64", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "exportPhase", "signature": null, "start_line": 258, "end_line": 274, "nloc": 17, "method_source_normalized": "privatePhaseexportPhase(){\n\t\tPhase phase = new Phase(\"exporter\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tif (requiresProcessTypeDefault()) {\n\t\t\tphase.withProcessType(\"web\");\n\t\t}\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\tconfigureCreatedDate(phase);\n\t\treturn phase;\n\t}", "original_code": "private Phase exportPhase() {\n\t\tPhase phase = new Phase(\"exporter\", isVerboseLogging());\n\t\tconfigureDaemonAccess(phase);\n\t\tphase.withApp(this.applicationDirectory,\n\t\t\t\tBinding.from(getCacheBindingSource(this.application), this.applicationDirectory));\n\t\tphase.withBuildCache(Directory.CACHE, Binding.from(getCacheBindingSource(this.buildCache), Directory.CACHE));\n\t\tphase.withLaunchCache(Directory.LAUNCH_CACHE,\n\t\t\t\tBinding.from(getCacheBindingSource(this.launchCache), Directory.LAUNCH_CACHE));\n\t\tphase.withLayers(Directory.LAYERS, Binding.from(getCacheBindingSource(this.layers), Directory.LAYERS));\n\t\tif (requiresProcessTypeDefault()) {\n\t\t\tphase.withProcessType(\"web\");\n\t\t}\n\t\tphase.withImageName(this.request.getName());\n\t\tconfigureOptions(phase);\n\t\tconfigureCreatedDate(phase);\n\t\treturn phase;\n\t}", "code_tokens": ["private", "phase", "export", "phase", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "is", "verbose", "logging", "(", ")", ")", ";", "configure", "daemon", "access", "(", "phase", ")", ";", "phase", ".", "with", "app", "(", "this", ".", "application", "directory", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "application", ")", ",", "this", ".", "application", "directory", ")", ")", ";", "phase", ".", "with", "build", "cache", "(", "directory", ".", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "build", "cache", ")", ",", "directory", ".", "cache", ")", ")", ";", "phase", ".", "with", "launch", "cache", "(", "directory", ".", "launch", "cache", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "launch", "cache", ")", ",", "directory", ".", "launch", "cache", ")", ")", ";", "phase", ".", "with", "layers", "(", "directory", ".", "layers", ",", "binding", ".", "from", "(", "get", "cache", "binding", "source", "(", "this", ".", "layers", ")", ",", "directory", ".", "layers", ")", ")", ";", "if", "(", "requires", "process", "type", "default", "(", ")", ")", "{", "phase", ".", "with", "process", "type", "(", "__STR__", ")", ";", "}", "phase", ".", "with", "image", "name", "(", "this", ".", "request", ".", "get", "name", "(", ")", ")", ";", "configure", "options", "(", "phase", ")", ";", "configure", "created", "date", "(", "phase", ")", ";", "return", "phase", ";", "}"], "token_count": 206, "vocab_size": 44, "cyclomatic_complexity": 2, "ast_node_count": 240, "n_identifiers": 58, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 69, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.363093+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62d47c02c3678fd4670e03a4ad14e6087368b463", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getLayersBindingSource", "signature": null, "start_line": 276, "end_line": 281, "nloc": 6, "method_source_normalized": "privateCachegetLayersBindingSource(BuildRequest request){\n\t\tif (request.getBuildWorkspace() != null) {\n\t\t\treturn getBuildWorkspaceBindingSource(request.getBuildWorkspace(), \"layers\");\n\t\t}\n\t\treturn createVolumeCache(\"pack-layers-\");\n\t}", "original_code": "private Cache getLayersBindingSource(BuildRequest request) {\n\t\tif (request.getBuildWorkspace() != null) {\n\t\t\treturn getBuildWorkspaceBindingSource(request.getBuildWorkspace(), \"layers\");\n\t\t}\n\t\treturn createVolumeCache(\"pack-layers-\");\n\t}", "code_tokens": ["private", "cache", "get", "layers", "binding", "source", "(", "build", "request", "request", ")", "{", "if", "(", "request", ".", "get", "build", "workspace", "(", ")", "!=", "null", ")", "{", "return", "get", "build", "workspace", "binding", "source", "(", "request", ".", "get", "build", "workspace", "(", ")", ",", "__STR__", ")", ";", "}", "return", "create", "volume", "cache", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 58, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.363383+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4802f5253905c6ee637fae0cb03281ddfb382bcc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getApplicationBindingSource", "signature": null, "start_line": 283, "end_line": 288, "nloc": 6, "method_source_normalized": "privateCachegetApplicationBindingSource(BuildRequest request){\n\t\tif (request.getBuildWorkspace() != null) {\n\t\t\treturn getBuildWorkspaceBindingSource(request.getBuildWorkspace(), \"app\");\n\t\t}\n\t\treturn createVolumeCache(\"pack-app-\");\n\t}", "original_code": "private Cache getApplicationBindingSource(BuildRequest request) {\n\t\tif (request.getBuildWorkspace() != null) {\n\t\t\treturn getBuildWorkspaceBindingSource(request.getBuildWorkspace(), \"app\");\n\t\t}\n\t\treturn createVolumeCache(\"pack-app-\");\n\t}", "code_tokens": ["private", "cache", "get", "application", "binding", "source", "(", "build", "request", "request", ")", "{", "if", "(", "request", ".", "get", "build", "workspace", "(", ")", "!=", "null", ")", "{", "return", "get", "build", "workspace", "binding", "source", "(", "request", ".", "get", "build", "workspace", "(", ")", ",", "__STR__", ")", ";", "}", "return", "create", "volume", "cache", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 58, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.363645+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0f268abfc6373a5376626170cd7f667e9f521cde", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getBuildWorkspaceBindingSource", "signature": null, "start_line": 290, "end_line": 298, "nloc": 9, "method_source_normalized": "privateCachegetBuildWorkspaceBindingSource(Cache buildWorkspace, String suffix){\n\t\tif (buildWorkspace.getVolume() != null) {\n\t\t\treturn Cache.volume(buildWorkspace.getVolume().getName() + \"-\" + suffix);\n\t\t}\n\n\t\tBind bind = buildWorkspace.getBind();\n\t\tAssert.state(bind != null, \"'bind' must not be null\");\n\t\treturn Cache.bind(bind.getSource() + \"-\" + suffix);\n\t}", "original_code": "private Cache getBuildWorkspaceBindingSource(Cache buildWorkspace, String suffix) {\n\t\tif (buildWorkspace.getVolume() != null) {\n\t\t\treturn Cache.volume(buildWorkspace.getVolume().getName() + \"-\" + suffix);\n\t\t}\n\n\t\tBind bind = buildWorkspace.getBind();\n\t\tAssert.state(bind != null, \"'bind' must not be null\");\n\t\treturn Cache.bind(bind.getSource() + \"-\" + suffix);\n\t}", "code_tokens": ["private", "cache", "get", "build", "workspace", "binding", "source", "(", "cache", "build", "workspace", ",", "string", "suffix", ")", "{", "if", "(", "build", "workspace", ".", "get", "volume", "(", ")", "!=", "null", ")", "{", "return", "cache", ".", "volume", "(", "build", "workspace", ".", "get", "volume", "(", ")", ".", "get", "name", "(", ")", "+", "__STR__", "+", "suffix", ")", ";", "}", "bind", "bind", "=", "build", "workspace", ".", "get", "bind", "(", ")", ";", "assert", ".", "state", "(", "bind", "!=", "null", ",", "__STR__", ")", ";", "return", "cache", ".", "bind", "(", "bind", ".", "get", "source", "(", ")", "+", "__STR__", "+", "suffix", ")", ";", "}"], "token_count": 93, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 116, "n_identifiers": 26, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.363942+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6d968153d73285f8fa791cf817e7e38c0f2acee3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "getCacheBindingSource", "signature": null, "start_line": 300, "end_line": 307, "nloc": 8, "method_source_normalized": "privateStringgetCacheBindingSource(Cache cache){\n\t\tif (cache.getVolume() != null) {\n\t\t\treturn cache.getVolume().getName();\n\t\t}\n\t\tBind bind = cache.getBind();\n\t\tAssert.state(bind != null, \"'bind' must not be null\");\n\t\treturn bind.getSource();\n\t}", "original_code": "private String getCacheBindingSource(Cache cache) {\n\t\tif (cache.getVolume() != null) {\n\t\t\treturn cache.getVolume().getName();\n\t\t}\n\t\tBind bind = cache.getBind();\n\t\tAssert.state(bind != null, \"'bind' must not be null\");\n\t\treturn bind.getSource();\n\t}", "code_tokens": ["private", "string", "get", "cache", "binding", "source", "(", "cache", "cache", ")", "{", "if", "(", "cache", ".", "get", "volume", "(", ")", "!=", "null", ")", "{", "return", "cache", ".", "get", "volume", "(", ")", ".", "get", "name", "(", ")", ";", "}", "bind", "bind", "=", "cache", ".", "get", "bind", "(", ")", ";", "assert", ".", "state", "(", "bind", "!=", "null", ",", "__STR__", ")", ";", "return", "bind", ".", "get", "source", "(", ")", ";", "}"], "token_count": 67, "vocab_size": 24, "cyclomatic_complexity": 2, "ast_node_count": 86, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.364231+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "075defc55b1d2f8f56130195c717c5ad287106a8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "createVolumeCache", "signature": null, "start_line": 309, "end_line": 311, "nloc": 3, "method_source_normalized": "privateCachecreateVolumeCache(String prefix){\n\t\treturn Cache.volume(createRandomVolumeName(prefix));\n\t}", "original_code": "private Cache createVolumeCache(String prefix) {\n\t\treturn Cache.volume(createRandomVolumeName(prefix));\n\t}", "code_tokens": ["private", "cache", "create", "volume", "cache", "(", "string", "prefix", ")", "{", "return", "cache", ".", "volume", "(", "create", "random", "volume", "name", "(", "prefix", ")", ")", ";", "}"], "token_count": 25, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.364479+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "def83b8dd643cde14c39ed8c15e578e57d286aab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "createVolumeCache", "signature": null, "start_line": 313, "end_line": 316, "nloc": 4, "method_source_normalized": "privateCachecreateVolumeCache(BuildRequest request, String suffix){\n\t\treturn Cache.volume(\n\t\t\t\tVolumeName.basedOn(request.getName(), ImageReference::toLegacyString, \"pack-cache-\", \".\" + suffix, 6));\n\t}", "original_code": "private Cache createVolumeCache(BuildRequest request, String suffix) {\n\t\treturn Cache.volume(\n\t\t\t\tVolumeName.basedOn(request.getName(), ImageReference::toLegacyString, \"pack-cache-\", \".\" + suffix, 6));\n\t}", "code_tokens": ["private", "cache", "create", "volume", "cache", "(", "build", "request", "request", ",", "string", "suffix", ")", "{", "return", "cache", ".", "volume", "(", "volume", "name", ".", "based", "on", "(", "request", ".", "get", "name", "(", ")", ",", "image", "reference", "::", "to", "legacy", "string", ",", "__STR__", ",", "__STR__", "+", "suffix", ",", "__NUM__", ")", ")", ";", "}"], "token_count": 50, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 15, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.364735+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a1b2e2abe9f7a2b20a4689ca0ced8bf9c6f4f9c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "createRandomVolumeName", "signature": null, "start_line": 318, "end_line": 320, "nloc": 3, "method_source_normalized": "protectedVolumeNamecreateRandomVolumeName(String prefix){\n\t\treturn VolumeName.random(prefix);\n\t}", "original_code": "protected VolumeName createRandomVolumeName(String prefix) {\n\t\treturn VolumeName.random(prefix);\n\t}", "code_tokens": ["protected", "volume", "name", "create", "random", "volume", "name", "(", "string", "prefix", ")", "{", "return", "volume", "name", ".", "random", "(", "prefix", ")", ";", "}"], "token_count": 22, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.364975+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "477e70ad1fab2c0fff8d162374c4f93d592571f1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "configureDaemonAccess", "signature": null, "start_line": 322, "end_line": 344, "nloc": 23, "method_source_normalized": "privatevoidconfigureDaemonAccess(Phase phase){\n\t\tphase.withDaemonAccess();\n\t\tif (this.dockerHost != null) {\n\t\t\tif (this.dockerHost.isRemote()) {\n\t\t\t\tphase.withEnv(\"DOCKER_HOST\", this.dockerHost.getAddress());\n\t\t\t\tif (this.dockerHost.isSecure()) {\n\t\t\t\t\tphase.withEnv(\"DOCKER_TLS_VERIFY\", \"1\");\n\t\t\t\t\tif (this.dockerHost.getCertificatePath() != null) {\n\t\t\t\t\t\tphase.withEnv(\"DOCKER_CERT_PATH\", this.dockerHost.getCertificatePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tphase.withBinding(Binding.from(this.dockerHost.getAddress(), DOMAIN_SOCKET_PATH));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tphase.withBinding(Binding.from(DOMAIN_SOCKET_PATH, DOMAIN_SOCKET_PATH));\n\t\t}\n\t\tif (this.securityOptions != null) {\n\t\t\tthis.securityOptions.forEach(phase::withSecurityOption);\n\t\t}\n\t}", "original_code": "private void configureDaemonAccess(Phase phase) {\n\t\tphase.withDaemonAccess();\n\t\tif (this.dockerHost != null) {\n\t\t\tif (this.dockerHost.isRemote()) {\n\t\t\t\tphase.withEnv(\"DOCKER_HOST\", this.dockerHost.getAddress());\n\t\t\t\tif (this.dockerHost.isSecure()) {\n\t\t\t\t\tphase.withEnv(\"DOCKER_TLS_VERIFY\", \"1\");\n\t\t\t\t\tif (this.dockerHost.getCertificatePath() != null) {\n\t\t\t\t\t\tphase.withEnv(\"DOCKER_CERT_PATH\", this.dockerHost.getCertificatePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tphase.withBinding(Binding.from(this.dockerHost.getAddress(), DOMAIN_SOCKET_PATH));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tphase.withBinding(Binding.from(DOMAIN_SOCKET_PATH, DOMAIN_SOCKET_PATH));\n\t\t}\n\t\tif (this.securityOptions != null) {\n\t\t\tthis.securityOptions.forEach(phase::withSecurityOption);\n\t\t}\n\t}", "code_tokens": ["private", "void", "configure", "daemon", "access", "(", "phase", "phase", ")", "{", "phase", ".", "with", "daemon", "access", "(", ")", ";", "if", "(", "this", ".", "docker", "host", "!=", "null", ")", "{", "if", "(", "this", ".", "docker", "host", ".", "is", "remote", "(", ")", ")", "{", "phase", ".", "with", "env", "(", "__STR__", ",", "this", ".", "docker", "host", ".", "get", "address", "(", ")", ")", ";", "if", "(", "this", ".", "docker", "host", ".", "is", "secure", "(", ")", ")", "{", "phase", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "if", "(", "this", ".", "docker", "host", ".", "get", "certificate", "path", "(", ")", "!=", "null", ")", "{", "phase", ".", "with", "env", "(", "__STR__", ",", "this", ".", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ";", "}", "}", "}", "else", "{", "phase", ".", "with", "binding", "(", "binding", ".", "from", "(", "this", ".", "docker", "host", ".", "get", "address", "(", ")", ",", "domain", "socket", "path", ")", ")", ";", "}", "}", "else", "{", "phase", ".", "with", "binding", "(", "binding", ".", "from", "(", "domain", "socket", "path", ",", "domain", "socket", "path", ")", ")", ";", "}", "if", "(", "this", ".", "security", "options", "!=", "null", ")", "{", "this", ".", "security", "options", ".", "for", "each", "(", "phase", "::", "with", "security", "option", ")", ";", "}", "}"], "token_count": 198, "vocab_size": 40, "cyclomatic_complexity": 6, "ast_node_count": 235, "n_identifiers": 40, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 119, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.365340+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d035c0c1867bbcda5206a72b24b41c0ca495309e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "configureCreatedDate", "signature": null, "start_line": 346, "end_line": 350, "nloc": 5, "method_source_normalized": "privatevoidconfigureCreatedDate(Phase phase){\n\t\tif (this.request.getCreatedDate() != null) {\n\t\t\tphase.withEnv(SOURCE_DATE_EPOCH_KEY, Long.toString(this.request.getCreatedDate().getEpochSecond()));\n\t\t}\n\t}", "original_code": "private void configureCreatedDate(Phase phase) {\n\t\tif (this.request.getCreatedDate() != null) {\n\t\t\tphase.withEnv(SOURCE_DATE_EPOCH_KEY, Long.toString(this.request.getCreatedDate().getEpochSecond()));\n\t\t}\n\t}", "code_tokens": ["private", "void", "configure", "created", "date", "(", "phase", "phase", ")", "{", "if", "(", "this", ".", "request", ".", "get", "created", "date", "(", ")", "!=", "null", ")", "{", "phase", ".", "with", "env", "(", "source", "date", "epoch", "key", ",", "long", ".", "to", "string", "(", "this", ".", "request", ".", "get", "created", "date", "(", ")", ".", "get", "epoch", "second", "(", ")", ")", ")", ";", "}", "}"], "token_count": 60, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 69, "n_identifiers": 13, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.365636+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "129abf672fa50d8fa830310175b7f14105b64087", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "configureOptions", "signature": null, "start_line": 352, "end_line": 360, "nloc": 9, "method_source_normalized": "privatevoidconfigureOptions(Phase phase){\n\t\tif (this.request.getBindings() != null) {\n\t\t\tthis.request.getBindings().forEach(phase::withBinding);\n\t\t}\n\t\tif (this.request.getNetwork() != null) {\n\t\t\tphase.withNetworkMode(this.request.getNetwork());\n\t\t}\n\t\tphase.withEnv(PLATFORM_API_VERSION_KEY, this.platformVersion.toString());\n\t}", "original_code": "private void configureOptions(Phase phase) {\n\t\tif (this.request.getBindings() != null) {\n\t\t\tthis.request.getBindings().forEach(phase::withBinding);\n\t\t}\n\t\tif (this.request.getNetwork() != null) {\n\t\t\tphase.withNetworkMode(this.request.getNetwork());\n\t\t}\n\t\tphase.withEnv(PLATFORM_API_VERSION_KEY, this.platformVersion.toString());\n\t}", "code_tokens": ["private", "void", "configure", "options", "(", "phase", "phase", ")", "{", "if", "(", "this", ".", "request", ".", "get", "bindings", "(", ")", "!=", "null", ")", "{", "this", ".", "request", ".", "get", "bindings", "(", ")", ".", "for", "each", "(", "phase", "::", "with", "binding", ")", ";", "}", "if", "(", "this", ".", "request", ".", "get", "network", "(", ")", "!=", "null", ")", "{", "phase", ".", "with", "network", "mode", "(", "this", ".", "request", ".", "get", "network", "(", ")", ")", ";", "}", "phase", ".", "with", "env", "(", "platform", "api", "version", "key", ",", "this", ".", "platform", "version", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 95, "vocab_size": 33, "cyclomatic_complexity": 3, "ast_node_count": 118, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.365940+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a7b59b148ddb6c52feafac3c8ba958acacddb53b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "isVerboseLogging", "signature": null, "start_line": 362, "end_line": 364, "nloc": 3, "method_source_normalized": "privatebooleanisVerboseLogging(){\n\t\treturn this.request.isVerboseLogging() && this.lifecycleVersion.isEqualOrGreaterThan(LOGGING_MINIMUM_VERSION);\n\t}", "original_code": "private boolean isVerboseLogging() {\n\t\treturn this.request.isVerboseLogging() && this.lifecycleVersion.isEqualOrGreaterThan(LOGGING_MINIMUM_VERSION);\n\t}", "code_tokens": ["private", "boolean", "is", "verbose", "logging", "(", ")", "{", "return", "this", ".", "request", ".", "is", "verbose", "logging", "(", ")", "&&", "this", ".", "lifecycle", "version", ".", "is", "equal", "or", "greater", "than", "(", "logging", "minimum", "version", ")", ";", "}"], "token_count": 36, "vocab_size": 22, "cyclomatic_complexity": 2, "ast_node_count": 37, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.366204+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9f1ca4040bdcc4e68ed0d6e48acc0976d527ca16", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "requiresProcessTypeDefault", "signature": null, "start_line": 366, "end_line": 368, "nloc": 3, "method_source_normalized": "privatebooleanrequiresProcessTypeDefault(){\n\t\treturn this.platformVersion.supportsAny(ApiVersion.of(0, 4), ApiVersion.of(0, 5));\n\t}", "original_code": "private boolean requiresProcessTypeDefault() {\n\t\treturn this.platformVersion.supportsAny(ApiVersion.of(0, 4), ApiVersion.of(0, 5));\n\t}", "code_tokens": ["private", "boolean", "requires", "process", "type", "default", "(", ")", "{", "return", "this", ".", "platform", "version", ".", "supports", "any", "(", "api", "version", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ",", "api", "version", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ")", ";", "}"], "token_count": 40, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.366450+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f4bfc816b1719ba0502d4fb7716f983fa8a7c351", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "run", "signature": null, "start_line": 370, "end_line": 385, "nloc": 16, "method_source_normalized": "privatevoidrun(Phase phase)throws IOException{\n\t\tConsumer<LogUpdateEvent> logConsumer = this.log.runningPhase(this.request, phase.getName());\n\t\tContainerConfig containerConfig = ContainerConfig.of(this.builder.getName(), phase::apply);\n\t\tContainerReference reference = createContainer(containerConfig, phase.requiresApp());\n\t\ttry {\n\t\t\tthis.docker.container().start(reference);\n\t\t\tthis.docker.container().logs(reference, logConsumer::accept);\n\t\t\tContainerStatus status = this.docker.container().wait(reference);\n\t\t\tif (status.getStatusCode() != 0) {\n\t\t\t\tthrow new BuilderException(phase.getName(), status.getStatusCode());\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.docker.container().remove(reference, true);\n\t\t}\n\t}", "original_code": "private void run(Phase phase) throws IOException {\n\t\tConsumer<LogUpdateEvent> logConsumer = this.log.runningPhase(this.request, phase.getName());\n\t\tContainerConfig containerConfig = ContainerConfig.of(this.builder.getName(), phase::apply);\n\t\tContainerReference reference = createContainer(containerConfig, phase.requiresApp());\n\t\ttry {\n\t\t\tthis.docker.container().start(reference);\n\t\t\tthis.docker.container().logs(reference, logConsumer::accept);\n\t\t\tContainerStatus status = this.docker.container().wait(reference);\n\t\t\tif (status.getStatusCode() != 0) {\n\t\t\t\tthrow new BuilderException(phase.getName(), status.getStatusCode());\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.docker.container().remove(reference, true);\n\t\t}\n\t}", "code_tokens": ["private", "void", "run", "(", "phase", "phase", ")", "throws", "io", "exception", "{", "consumer", "<", "log", "update", "event", ">", "log", "consumer", "=", "this", ".", "log", ".", "running", "phase", "(", "this", ".", "request", ",", "phase", ".", "get", "name", "(", ")", ")", ";", "container", "config", "container", "config", "=", "container", "config", ".", "of", "(", "this", ".", "builder", ".", "get", "name", "(", ")", ",", "phase", "::", "apply", ")", ";", "container", "reference", "reference", "=", "create", "container", "(", "container", "config", ",", "phase", ".", "requires", "app", "(", ")", ")", ";", "try", "{", "this", ".", "docker", ".", "container", "(", ")", ".", "start", "(", "reference", ")", ";", "this", ".", "docker", ".", "container", "(", ")", ".", "logs", "(", "reference", ",", "log", "consumer", "::", "accept", ")", ";", "container", "status", "status", "=", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "reference", ")", ";", "if", "(", "status", ".", "get", "status", "code", "(", ")", "!=", "__NUM__", ")", "{", "throw", "new", "builder", "exception", "(", "phase", ".", "get", "name", "(", ")", ",", "status", ".", "get", "status", "code", "(", ")", ")", ";", "}", "}", "finally", "{", "this", ".", "docker", ".", "container", "(", ")", ".", "remove", "(", "reference", ",", "true", ")", ";", "}", "}"], "token_count": 186, "vocab_size": 52, "cyclomatic_complexity": 2, "ast_node_count": 237, "n_identifiers": 53, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 84, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.366820+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3183bc24bb99e54c53afac9446210c8aefd9f342", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "createContainer", "signature": null, "start_line": 387, "end_line": 403, "nloc": 17, "method_source_normalized": "privateContainerReferencecreateContainer(ContainerConfig config, boolean requiresAppUpload)throws IOException{\n\t\tif (!requiresAppUpload || this.applicationVolumePopulated) {\n\t\t\treturn this.docker.container().create(config, this.request.getImagePlatform());\n\t\t}\n\t\ttry {\n\t\t\tif (this.application.getBind() != null) {\n\t\t\t\tFiles.createDirectories(Path.of(this.application.getBind().getSource()));\n\t\t\t}\n\t\t\tTarArchive applicationContent = this.request.getApplicationContent(this.builder.getBuildOwner());\n\t\t\treturn this.docker.container()\n\t\t\t\t.create(config, this.request.getImagePlatform(),\n\t\t\t\t\t\tContainerContent.of(applicationContent, this.applicationDirectory));\n\t\t}\n\t\tfinally {\n\t\t\tthis.applicationVolumePopulated = true;\n\t\t}\n\t}", "original_code": "private ContainerReference createContainer(ContainerConfig config, boolean requiresAppUpload) throws IOException {\n\t\tif (!requiresAppUpload || this.applicationVolumePopulated) {\n\t\t\treturn this.docker.container().create(config, this.request.getImagePlatform());\n\t\t}\n\t\ttry {\n\t\t\tif (this.application.getBind() != null) {\n\t\t\t\tFiles.createDirectories(Path.of(this.application.getBind().getSource()));\n\t\t\t}\n\t\t\tTarArchive applicationContent = this.request.getApplicationContent(this.builder.getBuildOwner());\n\t\t\treturn this.docker.container()\n\t\t\t\t.create(config, this.request.getImagePlatform(),\n\t\t\t\t\t\tContainerContent.of(applicationContent, this.applicationDirectory));\n\t\t}\n\t\tfinally {\n\t\t\tthis.applicationVolumePopulated = true;\n\t\t}\n\t}", "code_tokens": ["private", "container", "reference", "create", "container", "(", "container", "config", "config", ",", "boolean", "requires", "app", "upload", ")", "throws", "io", "exception", "{", "if", "(", "!", "requires", "app", "upload", "||", "this", ".", "application", "volume", "populated", ")", "{", "return", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "config", ",", "this", ".", "request", ".", "get", "image", "platform", "(", ")", ")", ";", "}", "try", "{", "if", "(", "this", ".", "application", ".", "get", "bind", "(", ")", "!=", "null", ")", "{", "files", ".", "create", "directories", "(", "path", ".", "of", "(", "this", ".", "application", ".", "get", "bind", "(", ")", ".", "get", "source", "(", ")", ")", ")", ";", "}", "tar", "archive", "application", "content", "=", "this", ".", "request", ".", "get", "application", "content", "(", "this", ".", "builder", ".", "get", "build", "owner", "(", ")", ")", ";", "return", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "config", ",", "this", ".", "request", ".", "get", "image", "platform", "(", ")", ",", "container", "content", ".", "of", "(", "application", "content", ",", "this", ".", "application", "directory", ")", ")", ";", "}", "finally", "{", "this", ".", "application", "volume", "populated", "=", "true", ";", "}", "}"], "token_count": 175, "vocab_size": 51, "cyclomatic_complexity": 4, "ast_node_count": 212, "n_identifiers": 40, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 89, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.367207+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4eb19af3f290ca612f946d2c0a485006c23034bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 405, "end_line": 409, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidclose()throws IOException{\n\t\tdeleteCache(this.layers);\n\t\tdeleteCache(this.application);\n\t}", "original_code": "@Override\n\tpublic void close() throws IOException {\n\t\tdeleteCache(this.layers);\n\t\tdeleteCache(this.application);\n\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "delete", "cache", "(", "this", ".", "layers", ")", ";", "delete", "cache", "(", "this", ".", "application", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.367555+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c516653760b0d815fcbc26b69d94c447da344b2e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "deleteCache", "signature": null, "start_line": 411, "end_line": 418, "nloc": 8, "method_source_normalized": "privatevoiddeleteCache(Cache cache)throws IOException{\n\t\tif (cache.getVolume() != null) {\n\t\t\tdeleteVolume(cache.getVolume().getVolumeName());\n\t\t}\n\t\tif (cache.getBind() != null) {\n\t\t\tdeleteBind(cache.getBind());\n\t\t}\n\t}", "original_code": "private void deleteCache(Cache cache) throws IOException {\n\t\tif (cache.getVolume() != null) {\n\t\t\tdeleteVolume(cache.getVolume().getVolumeName());\n\t\t}\n\t\tif (cache.getBind() != null) {\n\t\t\tdeleteBind(cache.getBind());\n\t\t}\n\t}", "code_tokens": ["private", "void", "delete", "cache", "(", "cache", "cache", ")", "throws", "io", "exception", "{", "if", "(", "cache", ".", "get", "volume", "(", ")", "!=", "null", ")", "{", "delete", "volume", "(", "cache", ".", "get", "volume", "(", ")", ".", "get", "volume", "name", "(", ")", ")", ";", "}", "if", "(", "cache", ".", "get", "bind", "(", ")", "!=", "null", ")", "{", "delete", "bind", "(", "cache", ".", "get", "bind", "(", ")", ")", ";", "}", "}"], "token_count": 67, "vocab_size": 20, "cyclomatic_complexity": 3, "ast_node_count": 87, "n_identifiers": 15, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.367846+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f24348576963ff07297eb32407e4b42e94319be8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "deleteVolume", "signature": null, "start_line": 420, "end_line": 422, "nloc": 3, "method_source_normalized": "privatevoiddeleteVolume(VolumeName name)throws IOException{\n\t\tthis.docker.volume().delete(name, true);\n\t}", "original_code": "private void deleteVolume(VolumeName name) throws IOException {\n\t\tthis.docker.volume().delete(name, true);\n\t}", "code_tokens": ["private", "void", "delete", "volume", "(", "volume", "name", "name", ")", "throws", "io", "exception", "{", "this", ".", "docker", ".", "volume", "(", ")", ".", "delete", "(", "name", ",", "true", ")", ";", "}"], "token_count": 29, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.368104+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "371bab785b4945e2be64d92269b0f2cc4802ee07", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java", "file_blob_sha": null, "method_name": "deleteBind", "signature": null, "start_line": 424, "end_line": 431, "nloc": 8, "method_source_normalized": "privatevoiddeleteBind(Cache.Bind bind){\n\t\ttry {\n\t\t\tFileSystemUtils.deleteRecursively(Path.of(bind.getSource()));\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthis.log.failedCleaningWorkDir(bind, ex);\n\t\t}\n\t}", "original_code": "private void deleteBind(Cache.Bind bind) {\n\t\ttry {\n\t\t\tFileSystemUtils.deleteRecursively(Path.of(bind.getSource()));\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthis.log.failedCleaningWorkDir(bind, ex);\n\t\t}\n\t}", "code_tokens": ["private", "void", "delete", "bind", "(", "cache", ".", "bind", "bind", ")", "{", "try", "{", "file", "system", "utils", ".", "delete", "recursively", "(", "path", ".", "of", "(", "bind", ".", "get", "source", "(", ")", ")", ")", ";", "}", "catch", "(", "exception", "ex", ")", "{", "this", ".", "log", ".", "failed", "cleaning", "work", "dir", "(", "bind", ",", "ex", ")", ";", "}", "}"], "token_count": 56, "vocab_size": 30, "cyclomatic_complexity": 2, "ast_node_count": 71, "n_identifiers": 16, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.368372+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "85d776a827fadc450f129a36ea14cc9910d58547", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 36, "end_line": 36, "nloc": 1, "method_source_normalized": "BuildpackCoordinatesgetCoordinates();", "original_code": "BuildpackCoordinates getCoordinates();", "code_tokens": ["buildpack", "coordinates", "get", "coordinates", "(", ")", ";"], "token_count": 7, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.368963+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8a3cbbb83a5cf1061449abb7404e0a178bea4c66", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 43, "end_line": 43, "nloc": 1, "method_source_normalized": "voidapply(IOConsumer<Layer> layers)throws IOException;", "original_code": "void apply(IOConsumer<Layer> layers) throws IOException;", "code_tokens": ["void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", ";"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.369216+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c317ccdc0aaa4a3846909c51db2e4b4c8bc900a2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderException.java", "file_blob_sha": null, "method_name": "BuilderException", "signature": null, "start_line": 33, "end_line": 37, "nloc": 5, "method_source_normalized": "BuilderException(String operation, int statusCode){\n\t\tsuper(buildMessage(operation, statusCode));\n\t\tthis.operation = operation;\n\t\tthis.statusCode = statusCode;\n\t}", "original_code": "BuilderException(String operation, int statusCode) {\n\t\tsuper(buildMessage(operation, statusCode));\n\t\tthis.operation = operation;\n\t\tthis.statusCode = statusCode;\n\t}", "code_tokens": ["builder", "exception", "(", "string", "operation", ",", "int", "status", "code", ")", "{", "super", "(", "build", "message", "(", "operation", ",", "status", "code", ")", ")", ";", "this", ".", "operation", "=", "operation", ";", "this", ".", "status", "code", "=", "status", "code", ";", "}"], "token_count": 38, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 11, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.369912+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bfb973e9dca8d833408ecc0aef6f08a4ae15e528", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderException.java", "file_blob_sha": null, "method_name": "getOperation", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "publicStringgetOperation(){\n\t\treturn this.operation;\n\t}", "original_code": "public String getOperation() {\n\t\treturn this.operation;\n\t}", "code_tokens": ["public", "string", "get", "operation", "(", ")", "{", "return", "this", ".", "operation", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.370161+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a84419c69a080249c165d38d27011afdc54fb4ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderException.java", "file_blob_sha": null, "method_name": "getStatusCode", "signature": null, "start_line": 51, "end_line": 53, "nloc": 3, "method_source_normalized": "publicintgetStatusCode(){\n\t\treturn this.statusCode;\n\t}", "original_code": "public int getStatusCode() {\n\t\treturn this.statusCode;\n\t}", "code_tokens": ["public", "int", "get", "status", "code", "(", ")", "{", "return", "this", ".", "status", "code", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.370396+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f474272e285117a051108674537561c8711d08f7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderException.java", "file_blob_sha": null, "method_name": "buildMessage", "signature": null, "start_line": 55, "end_line": 62, "nloc": 8, "method_source_normalized": "private staticStringbuildMessage(String operation, int statusCode){\n\t\tStringBuilder message = new StringBuilder(\"Builder\");\n\t\tif (StringUtils.hasLength(operation)) {\n\t\t\tmessage.append(\" lifecycle '\").append(operation).append(\"'\");\n\t\t}\n\t\tmessage.append(\" failed with status code \").append(statusCode);\n\t\treturn message.toString();\n\t}", "original_code": "private static String buildMessage(String operation, int statusCode) {\n\t\tStringBuilder message = new StringBuilder(\"Builder\");\n\t\tif (StringUtils.hasLength(operation)) {\n\t\t\tmessage.append(\" lifecycle '\").append(operation).append(\"'\");\n\t\t}\n\t\tmessage.append(\" failed with status code \").append(statusCode);\n\t\treturn message.toString();\n\t}", "code_tokens": ["private", "static", "string", "build", "message", "(", "string", "operation", ",", "int", "status", "code", ")", "{", "string", "builder", "message", "=", "new", "string", "builder", "(", "__STR__", ")", ";", "if", "(", "string", "utils", ".", "has", "length", "(", "operation", ")", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "operation", ")", ".", "append", "(", "__STR__", ")", ";", "}", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "status", "code", ")", ";", "return", "message", ".", "to", "string", "(", ")", ";", "}"], "token_count": 77, "vocab_size": 27, "cyclomatic_complexity": 2, "ast_node_count": 100, "n_identifiers": 22, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.370681+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bf505ccbb6e60ebccbe7fa9f2bdfcab02f82a3e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageType.java", "file_blob_sha": null, "method_name": "ImageType", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "ImageType(String description){\n\t\tthis.description = description;\n\t}", "original_code": "ImageType(String description) {\n\t\tthis.description = description;\n\t}", "code_tokens": ["image", "type", "(", "string", "description", ")", "{", "this", ".", "description", "=", "description", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.371170+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8ff0117a82d0cdb31f74afd99c24c01b87359d92", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageType.java", "file_blob_sha": null, "method_name": "getDescription", "signature": null, "start_line": 47, "end_line": 49, "nloc": 3, "method_source_normalized": "StringgetDescription(){\n\t\treturn this.description;\n\t}", "original_code": "String getDescription() {\n\t\treturn this.description;\n\t}", "code_tokens": ["string", "get", "description", "(", ")", "{", "return", "this", ".", "description", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.371407+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3773e3a1ffb8212841d257b27c0302116ba33eaa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "ApiVersions", "signature": null, "start_line": 41, "end_line": 43, "nloc": 3, "method_source_normalized": "privateApiVersions(ApiVersion... versions){\n\t\tthis.apiVersions = versions;\n\t}", "original_code": "private ApiVersions(ApiVersion... versions) {\n\t\tthis.apiVersions = versions;\n\t}", "code_tokens": ["private", "api", "versions", "(", "api", "version", "...", "versions", ")", "{", "this", ".", "api", "versions", "=", "versions", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.373258+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5842754be0f5baaba34da116f596a24d274a3a56", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "findLatestSupported", "signature": null, "start_line": 51, "end_line": 64, "nloc": 14, "method_source_normalized": "ApiVersionfindLatestSupported(String... others){\n\t\tfor (int versionsIndex = this.apiVersions.length - 1; versionsIndex >= 0; versionsIndex--) {\n\t\t\tApiVersion apiVersion = this.apiVersions[versionsIndex];\n\t\t\tfor (int otherIndex = others.length - 1; otherIndex >= 0; otherIndex--) {\n\t\t\t\tApiVersion other = ApiVersion.parse(others[otherIndex]);\n\t\t\t\tif (apiVersion.supports(other)) {\n\t\t\t\t\treturn apiVersion;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalStateException(\n\t\t\t\t\"Detected platform API versions '\" + StringUtils.arrayToCommaDelimitedString(others)\n\t\t\t\t\t\t+ \"' are not included in supported versions '\" + this + \"'\");\n\t}", "original_code": "ApiVersion findLatestSupported(String... others) {\n\t\tfor (int versionsIndex = this.apiVersions.length - 1; versionsIndex >= 0; versionsIndex--) {\n\t\t\tApiVersion apiVersion = this.apiVersions[versionsIndex];\n\t\t\tfor (int otherIndex = others.length - 1; otherIndex >= 0; otherIndex--) {\n\t\t\t\tApiVersion other = ApiVersion.parse(others[otherIndex]);\n\t\t\t\tif (apiVersion.supports(other)) {\n\t\t\t\t\treturn apiVersion;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalStateException(\n\t\t\t\t\"Detected platform API versions '\" + StringUtils.arrayToCommaDelimitedString(others)\n\t\t\t\t\t\t+ \"' are not included in supported versions '\" + this + \"'\");\n\t}", "code_tokens": ["api", "version", "find", "latest", "supported", "(", "string", "...", "others", ")", "{", "for", "(", "int", "versions", "index", "=", "this", ".", "api", "versions", ".", "length", "-", "__NUM__", ";", "versions", "index", ">=", "__NUM__", ";", "versions", "index", "--", ")", "{", "api", "version", "api", "version", "=", "this", ".", "api", "versions", "[", "versions", "index", "]", ";", "for", "(", "int", "other", "index", "=", "others", ".", "length", "-", "__NUM__", ";", "other", "index", ">=", "__NUM__", ";", "other", "index", "--", ")", "{", "api", "version", "other", "=", "api", "version", ".", "parse", "(", "others", "[", "other", "index", "]", ")", ";", "if", "(", "api", "version", ".", "supports", "(", "other", ")", ")", "{", "return", "api", "version", ";", "}", "}", "}", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "string", "utils", ".", "array", "to", "comma", "delimited", "string", "(", "others", ")", "+", "__STR__", "+", "this", "+", "__STR__", ")", ";", "}"], "token_count": 134, "vocab_size": 44, "cyclomatic_complexity": 4, "ast_node_count": 156, "n_identifiers": 32, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 110, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.373582+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a61525473568e683f461449aef343a44f1f42ed0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 66, "end_line": 77, "nloc": 12, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tApiVersions other = (ApiVersions) obj;\n\t\treturn Arrays.equals(this.apiVersions, other.apiVersions);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tApiVersions other = (ApiVersions) obj;\n\t\treturn Arrays.equals(this.apiVersions, other.apiVersions);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "api", "versions", "other", "=", "(", "api", "versions", ")", "obj", ";", "return", "arrays", ".", "equals", "(", "this", ".", "api", "versions", ",", "other", ".", "api", "versions", ")", ";", "}"], "token_count": 73, "vocab_size": 31, "cyclomatic_complexity": 4, "ast_node_count": 99, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.373892+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "166bb3bf957b2646210ed6412eba2586aa30067e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 79, "end_line": 82, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn Arrays.hashCode(this.apiVersions);\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn Arrays.hashCode(this.apiVersions);\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "arrays", ".", "hash", "code", "(", "this", ".", "api", "versions", ")", ";", "}"], "token_count": 22, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.374123+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "11cec6a16f51f7821bdf4dbe2b8604d75012ebfc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 84, "end_line": 87, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn StringUtils.arrayToCommaDelimitedString(this.apiVersions);\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn StringUtils.arrayToCommaDelimitedString(this.apiVersions);\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "string", "utils", ".", "array", "to", "comma", "delimited", "string", "(", "this", ".", "api", "versions", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.374343+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "267569b4f57c2a0d2d08b363f30667cc1e7b0957", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 95, "end_line": 97, "nloc": 3, "method_source_normalized": "staticApiVersionsparse(String... values){\n\t\treturn new ApiVersions(Arrays.stream(values).map(ApiVersion::parse).toArray(ApiVersion[]::new));\n\t}", "original_code": "static ApiVersions parse(String... values) {\n\t\treturn new ApiVersions(Arrays.stream(values).map(ApiVersion::parse).toArray(ApiVersion[]::new));\n\t}", "code_tokens": ["static", "api", "versions", "parse", "(", "string", "...", "values", ")", "{", "return", "new", "api", "versions", "(", "arrays", ".", "stream", "(", "values", ")", ".", "map", "(", "api", "version", "::", "parse", ")", ".", "to", "array", "(", "api", "version", "[", "]", "::", "new", ")", ")", ";", "}"], "token_count": 43, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 13, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.374584+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9daba4449d7e5b5f95294f691e535f88e36f7a26", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ApiVersions.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 99, "end_line": 102, "nloc": 4, "method_source_normalized": "staticApiVersionsof(int major, IntStream minorsInclusive){\n\t\treturn new ApiVersions(\n\t\t\t\tminorsInclusive.mapToObj((minor) -> ApiVersion.of(major, minor)).toArray(ApiVersion[]::new));\n\t}", "original_code": "static ApiVersions of(int major, IntStream minorsInclusive) {\n\t\treturn new ApiVersions(\n\t\t\t\tminorsInclusive.mapToObj((minor) -> ApiVersion.of(major, minor)).toArray(ApiVersion[]::new));\n\t}", "code_tokens": ["static", "api", "versions", "of", "(", "int", "major", ",", "int", "stream", "minors", "inclusive", ")", "{", "return", "new", "api", "versions", "(", "minors", "inclusive", ".", "map", "to", "obj", "(", "(", "minor", ")", "->", "api", "version", ".", "of", "(", "major", ",", "minor", ")", ")", ".", "to", "array", "(", "api", "version", "[", "]", "::", "new", ")", ")", ";", "}"], "token_count": 54, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 15, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.374859+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6b3784aa40163e8ae925b59ee59f99f7f7e82319", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "BuildOwner", "signature": null, "start_line": 43, "end_line": 46, "nloc": 4, "method_source_normalized": "BuildOwner(Map<String, @Nullable String> env){\n\t\tthis.uid = getValue(env, USER_PROPERTY_NAME);\n\t\tthis.gid = getValue(env, GROUP_PROPERTY_NAME);\n\t}", "original_code": "BuildOwner(Map<String, @Nullable String> env) {\n\t\tthis.uid = getValue(env, USER_PROPERTY_NAME);\n\t\tthis.gid = getValue(env, GROUP_PROPERTY_NAME);\n\t}", "code_tokens": ["build", "owner", "(", "map", "<", "string", ",", "@", "nullable", "string", ">", "env", ")", "{", "this", ".", "uid", "=", "get", "value", "(", "env", ",", "user", "property", "name", ")", ";", "this", ".", "gid", "=", "get", "value", "(", "env", ",", "group", "property", "name", ")", ";", "}"], "token_count": 43, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.375903+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b7687c99a9c03b9664109e824fd3b611a8d5e7e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "BuildOwner", "signature": null, "start_line": 48, "end_line": 51, "nloc": 4, "method_source_normalized": "BuildOwner(long uid, long gid){\n\t\tthis.uid = uid;\n\t\tthis.gid = gid;\n\t}", "original_code": "BuildOwner(long uid, long gid) {\n\t\tthis.uid = uid;\n\t\tthis.gid = gid;\n\t}", "code_tokens": ["build", "owner", "(", "long", "uid", ",", "long", "gid", ")", "{", "this", ".", "uid", "=", "uid", ";", "this", ".", "gid", "=", "gid", ";", "}"], "token_count": 23, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.376152+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b52bd74399d5a80d97f6ad676d99719feeb7ac04", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "getValue", "signature": null, "start_line": 53, "end_line": 64, "nloc": 12, "method_source_normalized": "privatelonggetValue(Map<String, @Nullable String> env, String name){\n\t\tString value = env.get(name);\n\t\tAssert.state(StringUtils.hasText(value),\n\t\t\t\t() -> \"Missing '\" + name + \"' value from the builder environment '\" + env + \"'\");\n\t\ttry {\n\t\t\treturn Long.parseLong(value);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\"Malformed '\" + name + \"' value '\" + value + \"' in the builder environment '\" + env + \"'\", ex);\n\t\t}\n\t}", "original_code": "private long getValue(Map<String, @Nullable String> env, String name) {\n\t\tString value = env.get(name);\n\t\tAssert.state(StringUtils.hasText(value),\n\t\t\t\t() -> \"Missing '\" + name + \"' value from the builder environment '\" + env + \"'\");\n\t\ttry {\n\t\t\treturn Long.parseLong(value);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\"Malformed '\" + name + \"' value '\" + value + \"' in the builder environment '\" + env + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "long", "get", "value", "(", "map", "<", "string", ",", "@", "nullable", "string", ">", "env", ",", "string", "name", ")", "{", "string", "value", "=", "env", ".", "get", "(", "name", ")", ";", "assert", ".", "state", "(", "string", "utils", ".", "has", "text", "(", "value", ")", ",", "(", ")", "->", "__STR__", "+", "name", "+", "__STR__", "+", "env", "+", "__STR__", ")", ";", "try", "{", "return", "long", ".", "parse", "long", "(", "value", ")", ";", "}", "catch", "(", "number", "format", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "name", "+", "__STR__", "+", "value", "+", "__STR__", "+", "env", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 101, "vocab_size": 39, "cyclomatic_complexity": 2, "ast_node_count": 137, "n_identifiers": 30, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 95, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.376458+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9fc806eb212b596d4558a7cfac778e45955bc9ba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "getUid", "signature": null, "start_line": 66, "end_line": 69, "nloc": 4, "method_source_normalized": "@Override\n\tpubliclonggetUid(){\n\t\treturn this.uid;\n\t}", "original_code": "@Override\n\tpublic long getUid() {\n\t\treturn this.uid;\n\t}", "code_tokens": ["@", "override", "public", "long", "get", "uid", "(", ")", "{", "return", "this", ".", "uid", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.376707+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a096eca72a61c371fc9cd66b11f296cea3f9b688", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "getGid", "signature": null, "start_line": 71, "end_line": 74, "nloc": 4, "method_source_normalized": "@Override\n\tpubliclonggetGid(){\n\t\treturn this.gid;\n\t}", "original_code": "@Override\n\tpublic long getGid() {\n\t\treturn this.gid;\n\t}", "code_tokens": ["@", "override", "public", "long", "get", "gid", "(", ")", "{", "return", "this", ".", "gid", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.376939+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0c547d7150a2701f9754b1f96d7b1b71c9c7475", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 76, "end_line": 79, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.uid + \"/\" + this.gid;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.uid + \"/\" + this.gid;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "uid", "+", "__STR__", "+", "this", ".", "gid", ";", "}"], "token_count": 21, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.377178+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "980bddee39fde0330d09b93ee49f8d3b32bc635d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "fromEnv", "signature": null, "start_line": 88, "end_line": 91, "nloc": 4, "method_source_normalized": "staticBuildOwnerfromEnv(Map<String, @Nullable String> env){\n\t\tAssert.notNull(env, \"'env' must not be null\");\n\t\treturn new BuildOwner(env);\n\t}", "original_code": "static BuildOwner fromEnv(Map<String, @Nullable String> env) {\n\t\tAssert.notNull(env, \"'env' must not be null\");\n\t\treturn new BuildOwner(env);\n\t}", "code_tokens": ["static", "build", "owner", "from", "env", "(", "map", "<", "string", ",", "@", "nullable", "string", ">", "env", ")", "{", "assert", ".", "not", "null", "(", "env", ",", "__STR__", ")", ";", "return", "new", "build", "owner", "(", "env", ")", ";", "}"], "token_count": 36, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.377425+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8917f272e924dcf2439da154f83837d47655a16d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildOwner.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 100, "end_line": 102, "nloc": 3, "method_source_normalized": "staticBuildOwnerof(long uid, long gid){\n\t\treturn new BuildOwner(uid, gid);\n\t}", "original_code": "static BuildOwner of(long uid, long gid) {\n\t\treturn new BuildOwner(uid, gid);\n\t}", "code_tokens": ["static", "build", "owner", "of", "(", "long", "uid", ",", "long", "gid", ")", "{", "return", "new", "build", "owner", "(", "uid", ",", "gid", ")", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.377670+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1a2d8535cf010f36509e6ef28a1163cce6cb1362", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "BuilderMetadata", "signature": null, "start_line": 61, "end_line": 68, "nloc": 8, "method_source_normalized": "BuilderMetadata(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.stack = extractStack();\n\t\tthis.runImages = childrenAt(\"/images\", RunImage::new);\n\t\tthis.lifecycle = extractLifecycle();\n\t\tthis.createdBy = extractCreatedBy();\n\t\tthis.buildpacks = extractBuildpacks(getNode().at(\"/buildpacks\"));\n\t}", "original_code": "BuilderMetadata(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.stack = extractStack();\n\t\tthis.runImages = childrenAt(\"/images\", RunImage::new);\n\t\tthis.lifecycle = extractLifecycle();\n\t\tthis.createdBy = extractCreatedBy();\n\t\tthis.buildpacks = extractBuildpacks(getNode().at(\"/buildpacks\"));\n\t}", "code_tokens": ["builder", "metadata", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "stack", "=", "extract", "stack", "(", ")", ";", "this", ".", "run", "images", "=", "children", "at", "(", "__STR__", ",", "run", "image", "::", "new", ")", ";", "this", ".", "lifecycle", "=", "extract", "lifecycle", "(", ")", ";", "this", ".", "created", "by", "=", "extract", "created", "by", "(", ")", ";", "this", ".", "buildpacks", "=", "extract", "buildpacks", "(", "get", "node", "(", ")", ".", "at", "(", "__STR__", ")", ")", ";", "}"], "token_count": 84, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 109, "n_identifiers": 19, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.380284+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b878e438bbe1b0eae4aede6f2c232fc44abaa91d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "extractCreatedBy", "signature": null, "start_line": 70, "end_line": 74, "nloc": 5, "method_source_normalized": "privateCreatedByextractCreatedBy(){\n\t\tCreatedBy result = valueAt(\"/createdBy\", CreatedBy.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private CreatedBy extractCreatedBy() {\n\t\tCreatedBy result = valueAt(\"/createdBy\", CreatedBy.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "created", "by", "extract", "created", "by", "(", ")", "{", "created", "by", "result", "=", "value", "at", "(", "__STR__", ",", "created", "by", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.380557+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "88302193d04281172037e660a270d001058caa16", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "extractLifecycle", "signature": null, "start_line": 76, "end_line": 80, "nloc": 5, "method_source_normalized": "privateLifecycleextractLifecycle(){\n\t\tLifecycle result = valueAt(\"/lifecycle\", Lifecycle.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Lifecycle extractLifecycle() {\n\t\tLifecycle result = valueAt(\"/lifecycle\", Lifecycle.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "lifecycle", "extract", "lifecycle", "(", ")", "{", "lifecycle", "result", "=", "value", "at", "(", "__STR__", ",", "lifecycle", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.380815+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "916027f4bdec3e5298e71e378917e412f8a0d29a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "extractStack", "signature": null, "start_line": 82, "end_line": 86, "nloc": 5, "method_source_normalized": "privateStackextractStack(){\n\t\tStack result = valueAt(\"/stack\", Stack.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Stack extractStack() {\n\t\tStack result = valueAt(\"/stack\", Stack.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "stack", "extract", "stack", "(", ")", "{", "stack", "result", "=", "value", "at", "(", "__STR__", ",", "stack", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.381074+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d3ea6fe2bbaa41ca41121ea1c38f440f264864e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "extractBuildpacks", "signature": null, "start_line": 88, "end_line": 95, "nloc": 8, "method_source_normalized": "privateList<BuildpackMetadata>extractBuildpacks(JsonNode node){\n\t\tif (node.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\tList<BuildpackMetadata> entries = new ArrayList<>();\n\t\tnode.forEach((child) -> entries.add(BuildpackMetadata.fromJson(child)));\n\t\treturn entries;\n\t}", "original_code": "private List<BuildpackMetadata> extractBuildpacks(JsonNode node) {\n\t\tif (node.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\tList<BuildpackMetadata> entries = new ArrayList<>();\n\t\tnode.forEach((child) -> entries.add(BuildpackMetadata.fromJson(child)));\n\t\treturn entries;\n\t}", "code_tokens": ["private", "list", "<", "buildpack", "metadata", ">", "extract", "buildpacks", "(", "json", "node", "node", ")", "{", "if", "(", "node", ".", "is", "empty", "(", ")", ")", "{", "return", "collections", ".", "empty", "list", "(", ")", ";", "}", "list", "<", "buildpack", "metadata", ">", "entries", "=", "new", "array", "list", "<", ">", "(", ")", ";", "node", ".", "for", "each", "(", "(", "child", ")", "->", "entries", ".", "add", "(", "buildpack", "metadata", ".", "from", "json", "(", "child", ")", ")", ")", ";", "return", "entries", ";", "}"], "token_count": 76, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 99, "n_identifiers": 22, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.381364+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fe1f31d74a12011218e9fb6f7d1f8aeb9b464cf8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getStack", "signature": null, "start_line": 101, "end_line": 103, "nloc": 3, "method_source_normalized": "StackgetStack(){\n\t\treturn this.stack;\n\t}", "original_code": "Stack getStack() {\n\t\treturn this.stack;\n\t}", "code_tokens": ["stack", "get", "stack", "(", ")", "{", "return", "this", ".", "stack", ";", "}"], "token_count": 12, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.381608+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c799cac8762f243586e5534f51b2f4c0bdaff34d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getRunImages", "signature": null, "start_line": 109, "end_line": 111, "nloc": 3, "method_source_normalized": "List<RunImage>getRunImages(){\n\t\treturn this.runImages;\n\t}", "original_code": "List<RunImage> getRunImages() {\n\t\treturn this.runImages;\n\t}", "code_tokens": ["list", "<", "run", "image", ">", "get", "run", "images", "(", ")", "{", "return", "this", ".", "run", "images", ";", "}"], "token_count": 18, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.381840+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "28382a24a9e4b9c85cf99249f995f1c8994b7c90", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getLifecycle", "signature": null, "start_line": 117, "end_line": 119, "nloc": 3, "method_source_normalized": "LifecyclegetLifecycle(){\n\t\treturn this.lifecycle;\n\t}", "original_code": "Lifecycle getLifecycle() {\n\t\treturn this.lifecycle;\n\t}", "code_tokens": ["lifecycle", "get", "lifecycle", "(", ")", "{", "return", "this", ".", "lifecycle", ";", "}"], "token_count": 12, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.382067+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "83531c1bb437f79ccd1c880b20fe806a40232b17", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getCreatedBy", "signature": null, "start_line": 125, "end_line": 127, "nloc": 3, "method_source_normalized": "CreatedBygetCreatedBy(){\n\t\treturn this.createdBy;\n\t}", "original_code": "CreatedBy getCreatedBy() {\n\t\treturn this.createdBy;\n\t}", "code_tokens": ["created", "by", "get", "created", "by", "(", ")", "{", "return", "this", ".", "created", "by", ";", "}"], "token_count": 15, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.382292+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "04d2ebc0d2f84531cd3931f09ee5d1b02d5c889b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getBuildpacks", "signature": null, "start_line": 133, "end_line": 135, "nloc": 3, "method_source_normalized": "List<BuildpackMetadata>getBuildpacks(){\n\t\treturn this.buildpacks;\n\t}", "original_code": "List<BuildpackMetadata> getBuildpacks() {\n\t\treturn this.buildpacks;\n\t}", "code_tokens": ["list", "<", "buildpack", "metadata", ">", "get", "buildpacks", "(", ")", "{", "return", "this", ".", "buildpacks", ";", "}"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.382521+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e4fce397f68e72ca073355200674cefd9883844", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "copy", "signature": null, "start_line": 142, "end_line": 144, "nloc": 3, "method_source_normalized": "BuilderMetadatacopy(Consumer<Update> update){\n\t\treturn new Update(this).run(update);\n\t}", "original_code": "BuilderMetadata copy(Consumer<Update> update) {\n\t\treturn new Update(this).run(update);\n\t}", "code_tokens": ["builder", "metadata", "copy", "(", "consumer", "<", "update", ">", "update", ")", "{", "return", "new", "update", "(", "this", ")", ".", "run", "(", "update", ")", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.382758+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ef70c28db6c47503919d9d895be697ada9086ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "attachTo", "signature": null, "start_line": 150, "end_line": 158, "nloc": 9, "method_source_normalized": "voidattachTo(ImageConfig.Update update){\n\t\ttry {\n\t\t\tString json = SharedObjectMapper.get().writeValueAsString(getNode());\n\t\t\tupdate.withLabel(LABEL_NAME, json);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "void attachTo(ImageConfig.Update update) {\n\t\ttry {\n\t\t\tString json = SharedObjectMapper.get().writeValueAsString(getNode());\n\t\t\tupdate.withLabel(LABEL_NAME, json);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["void", "attach", "to", "(", "image", "config", ".", "update", "update", ")", "{", "try", "{", "string", "json", "=", "shared", "object", "mapper", ".", "get", "(", ")", ".", "write", "value", "as", "string", "(", "get", "node", "(", ")", ")", ";", "update", ".", "with", "label", "(", "label", "name", ",", "json", ")", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 65, "vocab_size": 36, "cyclomatic_complexity": 2, "ast_node_count": 77, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.383346+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b47fe0d32db82961a34526eaba127a613b27ee50", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "fromImage", "signature": null, "start_line": 166, "end_line": 169, "nloc": 4, "method_source_normalized": "staticBuilderMetadatafromImage(Image image)throws IOException{\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "original_code": "static BuilderMetadata fromImage(Image image) throws IOException {\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\treturn fromImageConfig(image.getConfig());\n\t}", "code_tokens": ["static", "builder", "metadata", "from", "image", "(", "image", "image", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", ",", "__STR__", ")", ";", "return", "from", "image", "config", "(", "image", ".", "get", "config", "(", ")", ")", ";", "}"], "token_count": 37, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.383608+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7b4072a2706ea2f46a565b86c3d8bacdaee5332f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "fromImageConfig", "signature": null, "start_line": 177, "end_line": 183, "nloc": 7, "method_source_normalized": "staticBuilderMetadatafromImageConfig(ImageConfig imageConfig)throws IOException{\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "original_code": "static BuilderMetadata fromImageConfig(ImageConfig imageConfig) throws IOException {\n\t\tAssert.notNull(imageConfig, \"'imageConfig' must not be null\");\n\t\tString json = imageConfig.getLabels().get(LABEL_NAME);\n\t\tAssert.state(json != null, () -> \"No '\" + LABEL_NAME + \"' label found in image config labels '\"\n\t\t\t\t+ StringUtils.collectionToCommaDelimitedString(imageConfig.getLabels().keySet()) + \"'\");\n\t\treturn fromJson(json);\n\t}", "code_tokens": ["static", "builder", "metadata", "from", "image", "config", "(", "image", "config", "image", "config", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "image", "config", ",", "__STR__", ")", ";", "string", "json", "=", "image", "config", ".", "get", "labels", "(", ")", ".", "get", "(", "label", "name", ")", ";", "assert", ".", "state", "(", "json", "!=", "null", ",", "(", ")", "->", "__STR__", "+", "label", "name", "+", "__STR__", "+", "string", "utils", ".", "collection", "to", "comma", "delimited", "string", "(", "image", "config", ".", "get", "labels", "(", ")", ".", "key", "set", "(", ")", ")", "+", "__STR__", ")", ";", "return", "from", "json", "(", "json", ")", ";", "}"], "token_count": 96, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 109, "n_identifiers": 25, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.383913+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b742a43590b20980e8d598cff9c54a9fb3abef1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 191, "end_line": 193, "nloc": 3, "method_source_normalized": "staticBuilderMetadatafromJson(String json)throws IOException{\n\t\treturn new BuilderMetadata(SharedObjectMapper.get().readTree(json));\n\t}", "original_code": "static BuilderMetadata fromJson(String json) throws IOException {\n\t\treturn new BuilderMetadata(SharedObjectMapper.get().readTree(json));\n\t}", "code_tokens": ["static", "builder", "metadata", "from", "json", "(", "string", "json", ")", "throws", "io", "exception", "{", "return", "new", "builder", "metadata", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "json", ")", ")", ";", "}"], "token_count": 34, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.384148+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a82e7a6c95117c11029cc237640d3926210ee5c8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getRunImage", "signature": null, "start_line": 204, "end_line": 204, "nloc": 1, "method_source_normalized": "RunImagegetRunImage();", "original_code": "RunImage getRunImage();", "code_tokens": ["run", "image", "get", "run", "image", "(", ")", ";"], "token_count": 8, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.384376+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fff3ac3c70ad4ee7302778b386ca4fc00d8c7dd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getImage", "signature": null, "start_line": 215, "end_line": 215, "nloc": 1, "method_source_normalized": "StringgetImage();", "original_code": "String getImage();", "code_tokens": ["string", "get", "image", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.384579+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6a4bfc52f102dd4777278e92fd0b2a09768c85cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getMirrors", "signature": null, "start_line": 221, "end_line": 223, "nloc": 3, "method_source_normalized": "defaultString[]getMirrors(){\n\t\t\t\treturn EMPTY_MIRRORS;\n\t\t\t}", "original_code": "default String[] getMirrors() {\n\t\t\t\treturn EMPTY_MIRRORS;\n\t\t\t}", "code_tokens": ["default", "string", "[", "]", "get", "mirrors", "(", ")", "{", "return", "empty", "mirrors", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.384793+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b7d12a07d251afb50ee7ab45ea5b065f3afe90df", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "RunImage", "signature": null, "start_line": 239, "end_line": 243, "nloc": 5, "method_source_normalized": "RunImage(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.image = extractImage();\n\t\t\tthis.mirrors = childrenAt(\"/mirrors\", JsonNode::asString);\n\t\t}", "original_code": "RunImage(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.image = extractImage();\n\t\t\tthis.mirrors = childrenAt(\"/mirrors\", JsonNode::asString);\n\t\t}", "code_tokens": ["run", "image", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "image", "=", "extract", "image", "(", ")", ";", "this", ".", "mirrors", "=", "children", "at", "(", "__STR__", ",", "json", "node", "::", "as", "string", ")", ";", "}"], "token_count": 46, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.385037+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b977b552b32cc2d669a2896fb0b3de866793bc7a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "extractImage", "signature": null, "start_line": 245, "end_line": 249, "nloc": 5, "method_source_normalized": "privateStringextractImage(){\n\t\t\tString result = valueAt(\"/image\", String.class);\n\t\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\t\treturn result;\n\t\t}", "original_code": "private String extractImage() {\n\t\t\tString result = valueAt(\"/image\", String.class);\n\t\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\t\treturn result;\n\t\t}", "code_tokens": ["private", "string", "extract", "image", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.385287+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "736708824f8f54eb87cc3a97329b5a3fc99ae77b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getImage", "signature": null, "start_line": 251, "end_line": 253, "nloc": 3, "method_source_normalized": "StringgetImage(){\n\t\t\treturn this.image;\n\t\t}", "original_code": "String getImage() {\n\t\t\treturn this.image;\n\t\t}", "code_tokens": ["string", "get", "image", "(", ")", "{", "return", "this", ".", "image", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.385501+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bdaf3ba414f17bf2f92910403710cbc0b0cc262f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getMirrors", "signature": null, "start_line": 255, "end_line": 257, "nloc": 3, "method_source_normalized": "List<String>getMirrors(){\n\t\t\treturn this.mirrors;\n\t\t}", "original_code": "List<String> getMirrors() {\n\t\t\treturn this.mirrors;\n\t\t}", "code_tokens": ["list", "<", "string", ">", "get", "mirrors", "(", ")", "{", "return", "this", ".", "mirrors", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.385720+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "316a8f72ecd6997de82a813bf71f609e30c0c310", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getVersion", "signature": null, "start_line": 270, "end_line": 270, "nloc": 1, "method_source_normalized": "StringgetVersion();", "original_code": "String getVersion();", "code_tokens": ["string", "get", "version", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.385936+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0eee1680f835c8422283466e5d852976f1f7119d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getApi", "signature": null, "start_line": 276, "end_line": 276, "nloc": 1, "method_source_normalized": "ApigetApi();", "original_code": "Api getApi();", "code_tokens": ["api", "get", "api", "(", ")", ";"], "token_count": 6, "vocab_size": 5, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.386147+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fd6d1bf2f263ae6f58c5864f1d64bdc02d0648d5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getApis", "signature": null, "start_line": 282, "end_line": 282, "nloc": 1, "method_source_normalized": "ApisgetApis();", "original_code": "Apis getApis();", "code_tokens": ["apis", "get", "apis", "(", ")", ";"], "token_count": 6, "vocab_size": 5, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.386368+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "149bc83a4d8373e73c95a3a2d1bb2a7bc8993ae7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getBuildpack", "signature": null, "start_line": 293, "end_line": 293, "nloc": 1, "method_source_normalized": "StringgetBuildpack();", "original_code": "String getBuildpack();", "code_tokens": ["string", "get", "buildpack", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.386582+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e15c19756806e5bd54e878fd940e09e34a9d8901", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getPlatform", "signature": null, "start_line": 299, "end_line": 299, "nloc": 1, "method_source_normalized": "StringgetPlatform();", "original_code": "String getPlatform();", "code_tokens": ["string", "get", "platform", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.386808+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3b7bcb20a5bb335231b525ad429820674b4ea431", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getBuildpack", "signature": null, "start_line": 312, "end_line": 314, "nloc": 3, "method_source_normalized": "defaultString @Nullable []getBuildpack(){\n\t\t\t\treturn valueAt(this, \"/buildpack/supported\", String[].class);\n\t\t\t}", "original_code": "default String @Nullable [] getBuildpack() {\n\t\t\t\treturn valueAt(this, \"/buildpack/supported\", String[].class);\n\t\t\t}", "code_tokens": ["default", "string", "@", "nullable", "[", "]", "get", "buildpack", "(", ")", "{", "return", "value", "at", "(", "this", ",", "__STR__", ",", "string", "[", "]", ".", "class", ")", ";", "}"], "token_count": 27, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 5, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.387044+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ab0744b02023315af00eb4fd6d9307d07e12c02d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getPlatform", "signature": null, "start_line": 320, "end_line": 322, "nloc": 3, "method_source_normalized": "defaultString @Nullable []getPlatform(){\n\t\t\t\treturn valueAt(this, \"/platform/supported\", String[].class);\n\t\t\t}", "original_code": "default String @Nullable [] getPlatform() {\n\t\t\t\treturn valueAt(this, \"/platform/supported\", String[].class);\n\t\t\t}", "code_tokens": ["default", "string", "@", "nullable", "[", "]", "get", "platform", "(", ")", "{", "return", "value", "at", "(", "this", ",", "__STR__", ",", "string", "[", "]", ".", "class", ")", ";", "}"], "token_count": 27, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 5, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.387290+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "73ebeb25c712520f1c92c231ffebff2afc9f15cb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 337, "end_line": 337, "nloc": 1, "method_source_normalized": "StringgetName();", "original_code": "String getName();", "code_tokens": ["string", "get", "name", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.387513+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "608a5d3b1762473773a9e101df1f3a55f0c2b5df", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "getVersion", "signature": null, "start_line": 343, "end_line": 343, "nloc": 1, "method_source_normalized": "StringgetVersion();", "original_code": "String getVersion();", "code_tokens": ["string", "get", "version", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.387738+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ea273e4a041a58dfe0c351f1c9a70330492eb4e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "Update", "signature": null, "start_line": 354, "end_line": 356, "nloc": 3, "method_source_normalized": "privateUpdate(BuilderMetadata source){\n\t\t\tthis.copy = (ObjectNode) source.getNode().deepCopy();\n\t\t}", "original_code": "private Update(BuilderMetadata source) {\n\t\t\tthis.copy = (ObjectNode) source.getNode().deepCopy();\n\t\t}", "code_tokens": ["private", "update", "(", "builder", "metadata", "source", ")", "{", "this", ".", "copy", "=", "(", "object", "node", ")", "source", ".", "get", "node", "(", ")", ".", "deep", "copy", "(", ")", ";", "}"], "token_count": 29, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.387975+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec394cce0de78a00c2231eb654d01e6d0f8de482", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "run", "signature": null, "start_line": 358, "end_line": 361, "nloc": 4, "method_source_normalized": "privateBuilderMetadatarun(Consumer<Update> update){\n\t\t\tupdate.accept(this);\n\t\t\treturn new BuilderMetadata(this.copy);\n\t\t}", "original_code": "private BuilderMetadata run(Consumer<Update> update) {\n\t\t\tupdate.accept(this);\n\t\t\treturn new BuilderMetadata(this.copy);\n\t\t}", "code_tokens": ["private", "builder", "metadata", "run", "(", "consumer", "<", "update", ">", "update", ")", "{", "update", ".", "accept", "(", "this", ")", ";", "return", "new", "builder", "metadata", "(", "this", ".", "copy", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.388220+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17a44a37ed314ce57d6f012c1f6f852839ceb3c9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderMetadata.java", "file_blob_sha": null, "method_name": "withCreatedBy", "signature": null, "start_line": 368, "end_line": 375, "nloc": 8, "method_source_normalized": "voidwithCreatedBy(String name, String version){\n\t\t\tObjectNode createdBy = (ObjectNode) this.copy.at(\"/createdBy\");\n\t\t\tif (createdBy == null) {\n\t\t\t\tcreatedBy = this.copy.putObject(\"createdBy\");\n\t\t\t}\n\t\t\tcreatedBy.put(\"name\", name);\n\t\t\tcreatedBy.put(\"version\", version);\n\t\t}", "original_code": "void withCreatedBy(String name, String version) {\n\t\t\tObjectNode createdBy = (ObjectNode) this.copy.at(\"/createdBy\");\n\t\t\tif (createdBy == null) {\n\t\t\t\tcreatedBy = this.copy.putObject(\"createdBy\");\n\t\t\t}\n\t\t\tcreatedBy.put(\"name\", name);\n\t\t\tcreatedBy.put(\"version\", version);\n\t\t}", "code_tokens": ["void", "with", "created", "by", "(", "string", "name", ",", "string", "version", ")", "{", "object", "node", "created", "by", "=", "(", "object", "node", ")", "this", ".", "copy", ".", "at", "(", "__STR__", ")", ";", "if", "(", "created", "by", "==", "null", ")", "{", "created", "by", "=", "this", ".", "copy", ".", "put", "object", "(", "__STR__", ")", ";", "}", "created", "by", ".", "put", "(", "__STR__", ",", "name", ")", ";", "created", "by", ".", "put", "(", "__STR__", ",", "version", ")", ";", "}"], "token_count": 73, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 89, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.388502+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "484b111fd11c439a51a8a3623ca9fea4c3ee1adc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "ImageBuildpack", "signature": null, "start_line": 61, "end_line": 73, "nloc": 13, "method_source_normalized": "privateImageBuildpack(BuildpackResolverContext context, ImageReference imageReference){\n\t\tImageReference reference = imageReference.inTaggedOrDigestForm();\n\t\ttry {\n\t\t\tImage image = context.fetchImage(reference, ImageType.BUILDPACK);\n\t\t\tBuildpackMetadata buildpackMetadata = BuildpackMetadata.fromImage(image);\n\t\t\tthis.coordinates = BuildpackCoordinates.fromBuildpackMetadata(buildpackMetadata);\n\t\t\tthis.exportedLayers = (!buildpackExistsInBuilder(context, image.getLayers()))\n\t\t\t\t\t? new ExportedLayers(context, reference) : null;\n\t\t}\n\t\tcatch (IOException | DockerEngineException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error pulling buildpack image '\" + reference + \"'\", ex);\n\t\t}\n\t}", "original_code": "private ImageBuildpack(BuildpackResolverContext context, ImageReference imageReference) {\n\t\tImageReference reference = imageReference.inTaggedOrDigestForm();\n\t\ttry {\n\t\t\tImage image = context.fetchImage(reference, ImageType.BUILDPACK);\n\t\t\tBuildpackMetadata buildpackMetadata = BuildpackMetadata.fromImage(image);\n\t\t\tthis.coordinates = BuildpackCoordinates.fromBuildpackMetadata(buildpackMetadata);\n\t\t\tthis.exportedLayers = (!buildpackExistsInBuilder(context, image.getLayers()))\n\t\t\t\t\t? new ExportedLayers(context, reference) : null;\n\t\t}\n\t\tcatch (IOException | DockerEngineException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error pulling buildpack image '\" + reference + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "image", "buildpack", "(", "buildpack", "resolver", "context", "context", ",", "image", "reference", "image", "reference", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "in", "tagged", "or", "digest", "form", "(", ")", ";", "try", "{", "image", "image", "=", "context", ".", "fetch", "image", "(", "reference", ",", "image", "type", ".", "buildpack", ")", ";", "buildpack", "metadata", "buildpack", "metadata", "=", "buildpack", "metadata", ".", "from", "image", "(", "image", ")", ";", "this", ".", "coordinates", "=", "buildpack", "coordinates", ".", "from", "buildpack", "metadata", "(", "buildpack", "metadata", ")", ";", "this", ".", "exported", "layers", "=", "(", "!", "buildpack", "exists", "in", "builder", "(", "context", ",", "image", ".", "get", "layers", "(", ")", ")", ")", "?", "new", "exported", "layers", "(", "context", ",", "reference", ")", ":", "null", ";", "}", "catch", "(", "io", "exception", "|", "docker", "engine", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "reference", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 140, "vocab_size": 48, "cyclomatic_complexity": 3, "ast_node_count": 155, "n_identifiers": 39, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 85, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.390772+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "07619a188e7993b40dc6c905a476acde826d264e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "buildpackExistsInBuilder", "signature": null, "start_line": 75, "end_line": 80, "nloc": 6, "method_source_normalized": "privatebooleanbuildpackExistsInBuilder(BuildpackResolverContext context, List<LayerId> imageLayers){\n\t\tBuildpackLayerDetails buildpackLayerDetails = context.getBuildpackLayersMetadata()\n\t\t\t.getBuildpack(this.coordinates.getId(), this.coordinates.getVersion());\n\t\tString layerDiffId = (buildpackLayerDetails != null) ? buildpackLayerDetails.getLayerDiffId() : null;\n\t\treturn (layerDiffId != null) && imageLayers.stream().map(LayerId::toString).anyMatch(layerDiffId::equals);\n\t}", "original_code": "private boolean buildpackExistsInBuilder(BuildpackResolverContext context, List<LayerId> imageLayers) {\n\t\tBuildpackLayerDetails buildpackLayerDetails = context.getBuildpackLayersMetadata()\n\t\t\t.getBuildpack(this.coordinates.getId(), this.coordinates.getVersion());\n\t\tString layerDiffId = (buildpackLayerDetails != null) ? buildpackLayerDetails.getLayerDiffId() : null;\n\t\treturn (layerDiffId != null) && imageLayers.stream().map(LayerId::toString).anyMatch(layerDiffId::equals);\n\t}", "code_tokens": ["private", "boolean", "buildpack", "exists", "in", "builder", "(", "buildpack", "resolver", "context", "context", ",", "list", "<", "layer", "id", ">", "image", "layers", ")", "{", "buildpack", "layer", "details", "buildpack", "layer", "details", "=", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ".", "get", "buildpack", "(", "this", ".", "coordinates", ".", "get", "id", "(", ")", ",", "this", ".", "coordinates", ".", "get", "version", "(", ")", ")", ";", "string", "layer", "diff", "id", "=", "(", "buildpack", "layer", "details", "!=", "null", ")", "?", "buildpack", "layer", "details", ".", "get", "layer", "diff", "id", "(", ")", ":", "null", ";", "return", "(", "layer", "diff", "id", "!=", "null", ")", "&&", "image", "layers", ".", "stream", "(", ")", ".", "map", "(", "layer", "id", "::", "to", "string", ")", ".", "any", "match", "(", "layer", "diff", "id", "::", "equals", ")", ";", "}"], "token_count": 121, "vocab_size": 44, "cyclomatic_complexity": 3, "ast_node_count": 126, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.391101+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "38d6e345147526c399ec9bf7c22d5d75f5f3add7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 82, "end_line": 85, "nloc": 4, "method_source_normalized": "@Override\n\tpublicBuildpackCoordinatesgetCoordinates(){\n\t\treturn this.coordinates;\n\t}", "original_code": "@Override\n\tpublic BuildpackCoordinates getCoordinates() {\n\t\treturn this.coordinates;\n\t}", "code_tokens": ["@", "override", "public", "buildpack", "coordinates", "get", "coordinates", "(", ")", "{", "return", "this", ".", "coordinates", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.391359+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bab5663a2f8c935840ebc51b383594576004b550", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 87, "end_line": 92, "nloc": 6, "method_source_normalized": "@Override\n\tpublicvoidapply(IOConsumer<Layer> layers)throws IOException{\n\t\tif (this.exportedLayers != null) {\n\t\t\tthis.exportedLayers.apply(layers);\n\t\t}\n\t}", "original_code": "@Override\n\tpublic void apply(IOConsumer<Layer> layers) throws IOException {\n\t\tif (this.exportedLayers != null) {\n\t\t\tthis.exportedLayers.apply(layers);\n\t\t}\n\t}", "code_tokens": ["@", "override", "public", "void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "if", "(", "this", ".", "exported", "layers", "!=", "null", ")", "{", "this", ".", "exported", "layers", ".", "apply", "(", "layers", ")", ";", "}", "}"], "token_count": 39, "vocab_size": 24, "cyclomatic_complexity": 2, "ast_node_count": 53, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.391605+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "08dfe53b952d2da85aa3fc5edf5695edb7e0b009", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 100, "end_line": 120, "nloc": 21, "method_source_normalized": "static @NullableBuildpackresolve(BuildpackResolverContext context, BuildpackReference reference){\n\t\tboolean unambiguous = reference.hasPrefix(PREFIX);\n\t\ttry {\n\t\t\tImageReference imageReference;\n\t\t\tif (unambiguous) {\n\t\t\t\tString subReference = reference.getSubReference(PREFIX);\n\t\t\t\tAssert.state(subReference != null, \"'subReference' must not be null\");\n\t\t\t\timageReference = ImageReference.of(subReference);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timageReference = ImageReference.of(reference.toString());\n\t\t\t}\n\t\t\treturn new ImageBuildpack(context, imageReference);\n\t\t}\n\t\tcatch (IllegalArgumentException ex) {\n\t\t\tif (unambiguous) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "static @Nullable Buildpack resolve(BuildpackResolverContext context, BuildpackReference reference) {\n\t\tboolean unambiguous = reference.hasPrefix(PREFIX);\n\t\ttry {\n\t\t\tImageReference imageReference;\n\t\t\tif (unambiguous) {\n\t\t\t\tString subReference = reference.getSubReference(PREFIX);\n\t\t\t\tAssert.state(subReference != null, \"'subReference' must not be null\");\n\t\t\t\timageReference = ImageReference.of(subReference);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timageReference = ImageReference.of(reference.toString());\n\t\t\t}\n\t\t\treturn new ImageBuildpack(context, imageReference);\n\t\t}\n\t\tcatch (IllegalArgumentException ex) {\n\t\t\tif (unambiguous) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["static", "@", "nullable", "buildpack", "resolve", "(", "buildpack", "resolver", "context", "context", ",", "buildpack", "reference", "reference", ")", "{", "boolean", "unambiguous", "=", "reference", ".", "has", "prefix", "(", "prefix", ")", ";", "try", "{", "image", "reference", "image", "reference", ";", "if", "(", "unambiguous", ")", "{", "string", "sub", "reference", "=", "reference", ".", "get", "sub", "reference", "(", "prefix", ")", ";", "assert", ".", "state", "(", "sub", "reference", "!=", "null", ",", "__STR__", ")", ";", "image", "reference", "=", "image", "reference", ".", "of", "(", "sub", "reference", ")", ";", "}", "else", "{", "image", "reference", "=", "image", "reference", ".", "of", "(", "reference", ".", "to", "string", "(", ")", ")", ";", "}", "return", "new", "image", "buildpack", "(", "context", ",", "image", "reference", ")", ";", "}", "catch", "(", "illegal", "argument", "exception", "ex", ")", "{", "if", "(", "unambiguous", ")", "{", "throw", "ex", ";", "}", "return", "null", ";", "}", "}"], "token_count": 130, "vocab_size": 42, "cyclomatic_complexity": 4, "ast_node_count": 159, "n_identifiers": 38, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 117, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.391934+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "31c7e0fc24bd582f8021281d13ade95a856a0df5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "ExportedLayers", "signature": null, "start_line": 126, "end_line": 131, "nloc": 6, "method_source_normalized": "ExportedLayers(BuildpackResolverContext context, ImageReference imageReference)throws IOException{\n\t\t\tList<Path> layerFiles = new ArrayList<>();\n\t\t\tcontext.exportImageLayers(imageReference,\n\t\t\t\t\t(name, tarArchive) -> layerFiles.add(createLayerFile(tarArchive)));\n\t\t\tthis.layerFiles = Collections.unmodifiableList(layerFiles);\n\t\t}", "original_code": "ExportedLayers(BuildpackResolverContext context, ImageReference imageReference) throws IOException {\n\t\t\tList<Path> layerFiles = new ArrayList<>();\n\t\t\tcontext.exportImageLayers(imageReference,\n\t\t\t\t\t(name, tarArchive) -> layerFiles.add(createLayerFile(tarArchive)));\n\t\t\tthis.layerFiles = Collections.unmodifiableList(layerFiles);\n\t\t}", "code_tokens": ["exported", "layers", "(", "buildpack", "resolver", "context", "context", ",", "image", "reference", "image", "reference", ")", "throws", "io", "exception", "{", "list", "<", "path", ">", "layer", "files", "=", "new", "array", "list", "<", ">", "(", ")", ";", "context", ".", "export", "image", "layers", "(", "image", "reference", ",", "(", "name", ",", "tar", "archive", ")", "->", "layer", "files", ".", "add", "(", "create", "layer", "file", "(", "tar", "archive", ")", ")", ")", ";", "this", ".", "layer", "files", "=", "collections", ".", "unmodifiable", "list", "(", "layer", "files", ")", ";", "}"], "token_count": 78, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 23, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.392235+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5de2abcd9b7dfb4ef9d4b3e7598a6a388550ac7e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "createLayerFile", "signature": null, "start_line": 133, "end_line": 153, "nloc": 21, "method_source_normalized": "privatePathcreateLayerFile(TarArchive tarArchive)throws IOException{\n\t\t\tPath sourceTarFile = Files.createTempFile(\"create-builder-scratch-source-\", null);\n\t\t\ttry (OutputStream out = Files.newOutputStream(sourceTarFile)) {\n\t\t\t\ttarArchive.writeTo(out);\n\t\t\t}\n\t\t\tPath layerFile = Files.createTempFile(\"create-builder-scratch-\", null);\n\t\t\ttry (TarArchiveOutputStream out = new TarArchiveOutputStream(Files.newOutputStream(layerFile))) {\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(Files.newInputStream(sourceTarFile))) {\n\t\t\t\t\tout.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tout.putArchiveEntry(entry);\n\t\t\t\t\t\tStreamUtils.copy(in, out);\n\t\t\t\t\t\tout.closeArchiveEntry();\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t\tout.finish();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn layerFile;\n\t\t}", "original_code": "private Path createLayerFile(TarArchive tarArchive) throws IOException {\n\t\t\tPath sourceTarFile = Files.createTempFile(\"create-builder-scratch-source-\", null);\n\t\t\ttry (OutputStream out = Files.newOutputStream(sourceTarFile)) {\n\t\t\t\ttarArchive.writeTo(out);\n\t\t\t}\n\t\t\tPath layerFile = Files.createTempFile(\"create-builder-scratch-\", null);\n\t\t\ttry (TarArchiveOutputStream out = new TarArchiveOutputStream(Files.newOutputStream(layerFile))) {\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(Files.newInputStream(sourceTarFile))) {\n\t\t\t\t\tout.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tout.putArchiveEntry(entry);\n\t\t\t\t\t\tStreamUtils.copy(in, out);\n\t\t\t\t\t\tout.closeArchiveEntry();\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t\tout.finish();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn layerFile;\n\t\t}", "code_tokens": ["private", "path", "create", "layer", "file", "(", "tar", "archive", "tar", "archive", ")", "throws", "io", "exception", "{", "path", "source", "tar", "file", "=", "files", ".", "create", "temp", "file", "(", "__STR__", ",", "null", ")", ";", "try", "(", "output", "stream", "out", "=", "files", ".", "new", "output", "stream", "(", "source", "tar", "file", ")", ")", "{", "tar", "archive", ".", "write", "to", "(", "out", ")", ";", "}", "path", "layer", "file", "=", "files", ".", "create", "temp", "file", "(", "__STR__", ",", "null", ")", ";", "try", "(", "tar", "archive", "output", "stream", "out", "=", "new", "tar", "archive", "output", "stream", "(", "files", ".", "new", "output", "stream", "(", "layer", "file", ")", ")", ")", "{", "try", "(", "tar", "archive", "input", "stream", "in", "=", "new", "tar", "archive", "input", "stream", "(", "files", ".", "new", "input", "stream", "(", "source", "tar", "file", ")", ")", ")", "{", "out", ".", "set", "long", "file", "mode", "(", "tar", "archive", "output", "stream", ".", "longfile", "posix", ")", ";", "tar", "archive", "entry", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "out", ".", "put", "archive", "entry", "(", "entry", ")", ";", "stream", "utils", ".", "copy", "(", "in", ",", "out", ")", ";", "out", ".", "close", "archive", "entry", "(", ")", ";", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "}", "out", ".", "finish", "(", ")", ";", "}", "}", "return", "layer", "file", ";", "}"], "token_count": 214, "vocab_size": 48, "cyclomatic_complexity": 2, "ast_node_count": 225, "n_identifiers": 57, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 146, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.392612+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2e08f3e4f96315227b379511d9234cf9edf7587", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/ImageBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 155, "end_line": 163, "nloc": 9, "method_source_normalized": "voidapply(IOConsumer<Layer> layers)throws IOException{\n\t\t\tfor (Path path : this.layerFiles) {\n\t\t\t\tlayers.accept(Layer.fromTarArchive((out) -> {\n\t\t\t\t\tInputStream in = Files.newInputStream(path);\n\t\t\t\t\tStreamUtils.copy(in, out);\n\t\t\t\t}));\n\t\t\t\tFiles.delete(path);\n\t\t\t}\n\t\t}", "original_code": "void apply(IOConsumer<Layer> layers) throws IOException {\n\t\t\tfor (Path path : this.layerFiles) {\n\t\t\t\tlayers.accept(Layer.fromTarArchive((out) -> {\n\t\t\t\t\tInputStream in = Files.newInputStream(path);\n\t\t\t\t\tStreamUtils.copy(in, out);\n\t\t\t\t}));\n\t\t\t\tFiles.delete(path);\n\t\t\t}\n\t\t}", "code_tokens": ["void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "for", "(", "path", "path", ":", "this", ".", "layer", "files", ")", "{", "layers", ".", "accept", "(", "layer", ".", "from", "tar", "archive", "(", "(", "out", ")", "->", "{", "input", "stream", "in", "=", "files", ".", "new", "input", "stream", "(", "path", ")", ";", "stream", "utils", ".", "copy", "(", "in", ",", "out", ")", ";", "}", ")", ")", ";", "files", ".", "delete", "(", "path", ")", ";", "}", "}"], "token_count": 76, "vocab_size": 36, "cyclomatic_complexity": 2, "ast_node_count": 95, "n_identifiers": 25, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.392913+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "36bd10b94b07bf55d905451bd71262946285e8a1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Creator.java", "file_blob_sha": null, "method_name": "Creator", "signature": null, "start_line": 31, "end_line": 33, "nloc": 3, "method_source_normalized": "Creator(String version){\n\t\tthis.version = version;\n\t}", "original_code": "Creator(String version) {\n\t\tthis.version = version;\n\t}", "code_tokens": ["creator", "(", "string", "version", ")", "{", "this", ".", "version", "=", "version", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.393516+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "71d7d5dc2fbfcc01598f0243fa32455dc96f8d6f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Creator.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "publicStringgetName(){\n\t\treturn \"Spring Boot\";\n\t}", "original_code": "public String getName() {\n\t\treturn \"Spring Boot\";\n\t}", "code_tokens": ["public", "string", "get", "name", "(", ")", "{", "return", "__STR__", ";", "}"], "token_count": 11, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 15, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.393754+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2821c1bcb2d492eddad97b192f6964dc893b127a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Creator.java", "file_blob_sha": null, "method_name": "getVersion", "signature": null, "start_line": 47, "end_line": 49, "nloc": 3, "method_source_normalized": "publicStringgetVersion(){\n\t\treturn this.version;\n\t}", "original_code": "public String getVersion() {\n\t\treturn this.version;\n\t}", "code_tokens": ["public", "string", "get", "version", "(", ")", "{", "return", "this", ".", "version", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.393975+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "184d5935fb1f6b92bd06fb2a5a4a85949337e111", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Creator.java", "file_blob_sha": null, "method_name": "withVersion", "signature": null, "start_line": 56, "end_line": 59, "nloc": 4, "method_source_normalized": "public staticCreatorwithVersion(String version){\n\t\tAssert.notNull(version, \"'version' must not be null\");\n\t\treturn new Creator(version);\n\t}", "original_code": "public static Creator withVersion(String version) {\n\t\tAssert.notNull(version, \"'version' must not be null\");\n\t\treturn new Creator(version);\n\t}", "code_tokens": ["public", "static", "creator", "with", "version", "(", "string", "version", ")", "{", "assert", ".", "not", "null", "(", "version", ",", "__STR__", ")", ";", "return", "new", "creator", "(", "version", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.394218+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "67d83c22e752480310b36531722024b098484b17", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Creator.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 61, "end_line": 64, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn getName() + \" version \" + getVersion();\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn getName() + \" version \" + getVersion();\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "get", "name", "(", ")", "+", "__STR__", "+", "get", "version", "(", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 5, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.394460+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8ce49622e8b401684c97c33c6ca38d94818a9eb4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "BuildpackReference", "signature": null, "start_line": 41, "end_line": 43, "nloc": 3, "method_source_normalized": "privateBuildpackReference(String value){\n\t\tthis.value = value;\n\t}", "original_code": "private BuildpackReference(String value) {\n\t\tthis.value = value;\n\t}", "code_tokens": ["private", "buildpack", "reference", "(", "string", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.395594+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eac5b647c6397ab3fa06f34139d4a34ff751f8f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "hasPrefix", "signature": null, "start_line": 45, "end_line": 47, "nloc": 3, "method_source_normalized": "booleanhasPrefix(String prefix){\n\t\treturn this.value.startsWith(prefix);\n\t}", "original_code": "boolean hasPrefix(String prefix) {\n\t\treturn this.value.startsWith(prefix);\n\t}", "code_tokens": ["boolean", "has", "prefix", "(", "string", "prefix", ")", "{", "return", "this", ".", "value", ".", "starts", "with", "(", "prefix", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.395842+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a8558bdcf27fc377923279658a5ed905d905eb9e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "getSubReference", "signature": null, "start_line": 49, "end_line": 51, "nloc": 3, "method_source_normalized": "@NullableStringgetSubReference(String prefix){\n\t\treturn this.value.startsWith(prefix) ? this.value.substring(prefix.length()) : null;\n\t}", "original_code": "@Nullable String getSubReference(String prefix) {\n\t\treturn this.value.startsWith(prefix) ? this.value.substring(prefix.length()) : null;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "sub", "reference", "(", "string", "prefix", ")", "{", "return", "this", ".", "value", ".", "starts", "with", "(", "prefix", ")", "?", "this", ".", "value", ".", "substring", "(", "prefix", ".", "length", "(", ")", ")", ":", "null", ";", "}"], "token_count": 38, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 51, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.396074+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ee76f1d6e5fbf65e2b0d3708c5cb9d5454c8dce4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "asPath", "signature": null, "start_line": 53, "end_line": 70, "nloc": 18, "method_source_normalized": "@NullablePathasPath(){\n\t\ttry {\n\t\t\tURL url = new URL(this.value);\n\t\t\tif (url.getProtocol().equals(\"file\")) {\n\t\t\t\treturn Paths.get(url.toURI());\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch (MalformedURLException | URISyntaxException ex) {\n\t\t\t// not a URL, fall through to attempting to find a plain file path\n\t\t}\n\t\ttry {\n\t\t\treturn Paths.get(this.value);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "@Nullable Path asPath() {\n\t\ttry {\n\t\t\tURL url = new URL(this.value);\n\t\t\tif (url.getProtocol().equals(\"file\")) {\n\t\t\t\treturn Paths.get(url.toURI());\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch (MalformedURLException | URISyntaxException ex) {\n\t\t\t// not a URL, fall through to attempting to find a plain file path\n\t\t}\n\t\ttry {\n\t\t\treturn Paths.get(this.value);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["@", "nullable", "path", "as", "path", "(", ")", "{", "try", "{", "url", "url", "=", "new", "url", "(", "this", ".", "value", ")", ";", "if", "(", "url", ".", "get", "protocol", "(", ")", ".", "equals", "(", "__STR__", ")", ")", "{", "return", "paths", ".", "get", "(", "url", ".", "to", "uri", "(", ")", ")", ";", "}", "return", "null", ";", "}", "catch", "(", "malformed", "url", "exception", "|", "uri", "syntax", "exception", "ex", ")", "{", "// not a URL, fall through to attempting to find a plain file path", "}", "try", "{", "return", "paths", ".", "get", "(", "this", ".", "value", ")", ";", "}", "catch", "(", "exception", "ex", ")", "{", "return", "null", ";", "}", "}"], "token_count": 92, "vocab_size": 33, "cyclomatic_complexity": 4, "ast_node_count": 125, "n_identifiers": 22, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 95, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.396347+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "21136fcd2c70966ca8e8c8b2bc47f9cde4f06f07", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 72, "end_line": 81, "nloc": 10, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((BuildpackReference) obj).value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((BuildpackReference) obj).value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "return", "this", ".", "value", ".", "equals", "(", "(", "(", "buildpack", "reference", ")", "obj", ")", ".", "value", ")", ";", "}"], "token_count": 65, "vocab_size": 28, "cyclomatic_complexity": 4, "ast_node_count": 93, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.396641+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c995b3ccf79d6c0d9a36f4ca7c8d3942f2470688", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 83, "end_line": 86, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn this.value.hashCode();\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn this.value.hashCode();\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "this", ".", "value", ".", "hash", "code", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.396897+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "576d4d9542ce8daee806a211c48e406a41e80cd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 88, "end_line": 91, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.397130+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e154fff98609429204d51f0714bf22c00cdaef1e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildpackReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 98, "end_line": 101, "nloc": 4, "method_source_normalized": "public staticBuildpackReferenceof(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\treturn new BuildpackReference(value);\n\t}", "original_code": "public static BuildpackReference of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\treturn new BuildpackReference(value);\n\t}", "code_tokens": ["public", "static", "buildpack", "reference", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "return", "new", "buildpack", "reference", "(", "value", ")", ";", "}"], "token_count": 29, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.397380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ce3854ed6fe7bceb4836b1ac006ddcfddf6c59b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "BuildRequest", "signature": null, "start_line": 112, "end_line": 137, "nloc": 26, "method_source_normalized": "BuildRequest(ImageReference name, Function<Owner, TarArchive> applicationContent){\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\tAssert.notNull(applicationContent, \"'applicationContent' must not be null\");\n\t\tthis.name = name.inTaggedForm();\n\t\tthis.applicationContent = applicationContent;\n\t\tthis.builder = DEFAULT_BUILDER;\n\t\tthis.trustBuilder = null;\n\t\tthis.runImage = null;\n\t\tthis.env = Collections.emptyMap();\n\t\tthis.cleanCache = false;\n\t\tthis.verboseLogging = false;\n\t\tthis.pullPolicy = PullPolicy.ALWAYS;\n\t\tthis.publish = false;\n\t\tthis.creator = Creator.withVersion(\"\");\n\t\tthis.buildpacks = Collections.emptyList();\n\t\tthis.bindings = Collections.emptyList();\n\t\tthis.network = null;\n\t\tthis.tags = Collections.emptyList();\n\t\tthis.buildWorkspace = null;\n\t\tthis.buildCache = null;\n\t\tthis.launchCache = null;\n\t\tthis.createdDate = null;\n\t\tthis.applicationDirectory = null;\n\t\tthis.securityOptions = null;\n\t\tthis.platform = null;\n\t}", "original_code": "BuildRequest(ImageReference name, Function<Owner, TarArchive> applicationContent) {\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\tAssert.notNull(applicationContent, \"'applicationContent' must not be null\");\n\t\tthis.name = name.inTaggedForm();\n\t\tthis.applicationContent = applicationContent;\n\t\tthis.builder = DEFAULT_BUILDER;\n\t\tthis.trustBuilder = null;\n\t\tthis.runImage = null;\n\t\tthis.env = Collections.emptyMap();\n\t\tthis.cleanCache = false;\n\t\tthis.verboseLogging = false;\n\t\tthis.pullPolicy = PullPolicy.ALWAYS;\n\t\tthis.publish = false;\n\t\tthis.creator = Creator.withVersion(\"\");\n\t\tthis.buildpacks = Collections.emptyList();\n\t\tthis.bindings = Collections.emptyList();\n\t\tthis.network = null;\n\t\tthis.tags = Collections.emptyList();\n\t\tthis.buildWorkspace = null;\n\t\tthis.buildCache = null;\n\t\tthis.launchCache = null;\n\t\tthis.createdDate = null;\n\t\tthis.applicationDirectory = null;\n\t\tthis.securityOptions = null;\n\t\tthis.platform = null;\n\t}", "code_tokens": ["build", "request", "(", "image", "reference", "name", ",", "function", "<", "owner", ",", "tar", "archive", ">", "application", "content", ")", "{", "assert", ".", "not", "null", "(", "name", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "application", "content", ",", "__STR__", ")", ";", "this", ".", "name", "=", "name", ".", "in", "tagged", "form", "(", ")", ";", "this", ".", "application", "content", "=", "application", "content", ";", "this", ".", "builder", "=", "default", "builder", ";", "this", ".", "trust", "builder", "=", "null", ";", "this", ".", "run", "image", "=", "null", ";", "this", ".", "env", "=", "collections", ".", "empty", "map", "(", ")", ";", "this", ".", "clean", "cache", "=", "false", ";", "this", ".", "verbose", "logging", "=", "false", ";", "this", ".", "pull", "policy", "=", "pull", "policy", ".", "always", ";", "this", ".", "publish", "=", "false", ";", "this", ".", "creator", "=", "creator", ".", "with", "version", "(", "__STR__", ")", ";", "this", ".", "buildpacks", "=", "collections", ".", "empty", "list", "(", ")", ";", "this", ".", "bindings", "=", "collections", ".", "empty", "list", "(", ")", ";", "this", ".", "network", "=", "null", ";", "this", ".", "tags", "=", "collections", ".", "empty", "list", "(", ")", ";", "this", ".", "build", "workspace", "=", "null", ";", "this", ".", "build", "cache", "=", "null", ";", "this", ".", "launch", "cache", "=", "null", ";", "this", ".", "created", "date", "=", "null", ";", "this", ".", "application", "directory", "=", "null", ";", "this", ".", "security", "options", "=", "null", ";", "this", ".", "platform", "=", "null", ";", "}"], "token_count": 221, "vocab_size": 62, "cyclomatic_complexity": 1, "ast_node_count": 284, "n_identifiers": 51, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 133, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.405199+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a5c6267ffb288088f537c294e89856487ce3d543", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "BuildRequest", "signature": null, "start_line": 139, "end_line": 168, "nloc": 30, "method_source_normalized": "BuildRequest(ImageReference name, Function<Owner, TarArchive> applicationContent, ImageReference builder,\n\t\t\t@Nullable Boolean trustBuilder, @Nullable ImageReference runImage, Creator creator, Map<String, String> env,\n\t\t\tboolean cleanCache, boolean verboseLogging, PullPolicy pullPolicy, boolean publish,\n\t\t\tList<BuildpackReference> buildpacks, List<Binding> bindings, @Nullable String network,\n\t\t\tList<ImageReference> tags, @Nullable Cache buildWorkspace, @Nullable Cache buildCache,\n\t\t\t@Nullable Cache launchCache, @Nullable Instant createdDate, @Nullable String applicationDirectory,\n\t\t\t@Nullable List<String> securityOptions, @Nullable ImagePlatform platform){\n\t\tthis.name = name;\n\t\tthis.applicationContent = applicationContent;\n\t\tthis.builder = builder;\n\t\tthis.trustBuilder = trustBuilder;\n\t\tthis.runImage = runImage;\n\t\tthis.creator = creator;\n\t\tthis.env = env;\n\t\tthis.cleanCache = cleanCache;\n\t\tthis.verboseLogging = verboseLogging;\n\t\tthis.pullPolicy = pullPolicy;\n\t\tthis.publish = publish;\n\t\tthis.buildpacks = buildpacks;\n\t\tthis.bindings = bindings;\n\t\tthis.network = network;\n\t\tthis.tags = tags;\n\t\tthis.buildWorkspace = buildWorkspace;\n\t\tthis.buildCache = buildCache;\n\t\tthis.launchCache = launchCache;\n\t\tthis.createdDate = createdDate;\n\t\tthis.applicationDirectory = applicationDirectory;\n\t\tthis.securityOptions = securityOptions;\n\t\tthis.platform = platform;\n\t}", "original_code": "BuildRequest(ImageReference name, Function<Owner, TarArchive> applicationContent, ImageReference builder,\n\t\t\t@Nullable Boolean trustBuilder, @Nullable ImageReference runImage, Creator creator, Map<String, String> env,\n\t\t\tboolean cleanCache, boolean verboseLogging, PullPolicy pullPolicy, boolean publish,\n\t\t\tList<BuildpackReference> buildpacks, List<Binding> bindings, @Nullable String network,\n\t\t\tList<ImageReference> tags, @Nullable Cache buildWorkspace, @Nullable Cache buildCache,\n\t\t\t@Nullable Cache launchCache, @Nullable Instant createdDate, @Nullable String applicationDirectory,\n\t\t\t@Nullable List<String> securityOptions, @Nullable ImagePlatform platform) {\n\t\tthis.name = name;\n\t\tthis.applicationContent = applicationContent;\n\t\tthis.builder = builder;\n\t\tthis.trustBuilder = trustBuilder;\n\t\tthis.runImage = runImage;\n\t\tthis.creator = creator;\n\t\tthis.env = env;\n\t\tthis.cleanCache = cleanCache;\n\t\tthis.verboseLogging = verboseLogging;\n\t\tthis.pullPolicy = pullPolicy;\n\t\tthis.publish = publish;\n\t\tthis.buildpacks = buildpacks;\n\t\tthis.bindings = bindings;\n\t\tthis.network = network;\n\t\tthis.tags = tags;\n\t\tthis.buildWorkspace = buildWorkspace;\n\t\tthis.buildCache = buildCache;\n\t\tthis.launchCache = launchCache;\n\t\tthis.createdDate = createdDate;\n\t\tthis.applicationDirectory = applicationDirectory;\n\t\tthis.securityOptions = securityOptions;\n\t\tthis.platform = platform;\n\t}", "code_tokens": ["build", "request", "(", "image", "reference", "name", ",", "function", "<", "owner", ",", "tar", "archive", ">", "application", "content", ",", "image", "reference", "builder", ",", "@", "nullable", "boolean", "trust", "builder", ",", "@", "nullable", "image", "reference", "run", "image", ",", "creator", "creator", ",", "map", "<", "string", ",", "string", ">", "env", ",", "boolean", "clean", "cache", ",", "boolean", "verbose", "logging", ",", "pull", "policy", "pull", "policy", ",", "boolean", "publish", ",", "list", "<", "buildpack", "reference", ">", "buildpacks", ",", "list", "<", "binding", ">", "bindings", ",", "@", "nullable", "string", "network", ",", "list", "<", "image", "reference", ">", "tags", ",", "@", "nullable", "cache", "build", "workspace", ",", "@", "nullable", "cache", "build", "cache", ",", "@", "nullable", "cache", "launch", "cache", ",", "@", "nullable", "instant", "created", "date", ",", "@", "nullable", "string", "application", "directory", ",", "@", "nullable", "list", "<", "string", ">", "security", "options", ",", "@", "nullable", "image", "platform", "platform", ")", "{", "this", ".", "name", "=", "name", ";", "this", ".", "application", "content", "=", "application", "content", ";", "this", ".", "builder", "=", "builder", ";", "this", ".", "trust", "builder", "=", "trust", "builder", ";", "this", ".", "run", "image", "=", "run", "image", ";", "this", ".", "creator", "=", "creator", ";", "this", ".", "env", "=", "env", ";", "this", ".", "clean", "cache", "=", "clean", "cache", ";", "this", ".", "verbose", "logging", "=", "verbose", "logging", ";", "this", ".", "pull", "policy", "=", "pull", "policy", ";", "this", ".", "publish", "=", "publish", ";", "this", ".", "buildpacks", "=", "buildpacks", ";", "this", ".", "bindings", "=", "bindings", ";", "this", ".", "network", "=", "network", ";", "this", ".", "tags", "=", "tags", ";", "this", ".", "build", "workspace", "=", "build", "workspace", ";", "this", ".", "build", "cache", "=", "build", "cache", ";", "this", ".", "launch", "cache", "=", "launch", "cache", ";", "this", ".", "created", "date", "=", "created", "date", ";", "this", ".", "application", "directory", "=", "application", "directory", ";", "this", ".", "security", "options", "=", "security", "options", ";", "this", ".", "platform", "=", "platform", ";", "}"], "token_count": 289, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 367, "n_identifiers": 104, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 186, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.405720+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "93a895aec24fb90a037ea7d0f8673dcf0e616cf0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBuilder", "signature": null, "start_line": 175, "end_line": 182, "nloc": 8, "method_source_normalized": "publicBuildRequestwithBuilder(ImageReference builder){\n\t\tAssert.notNull(builder, \"'builder' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, builder.inTaggedOrDigestForm(), this.trustBuilder,\n\t\t\t\tthis.runImage, this.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy,\n\t\t\t\tthis.publish, this.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace,\n\t\t\t\tthis.buildCache, this.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "original_code": "public BuildRequest withBuilder(ImageReference builder) {\n\t\tAssert.notNull(builder, \"'builder' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, builder.inTaggedOrDigestForm(), this.trustBuilder,\n\t\t\t\tthis.runImage, this.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy,\n\t\t\t\tthis.publish, this.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace,\n\t\t\t\tthis.buildCache, this.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "builder", "(", "image", "reference", "builder", ")", "{", "assert", ".", "not", "null", "(", "builder", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "builder", ".", "in", "tagged", "or", "digest", "form", "(", ")", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 134, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 147, "n_identifiers": 31, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.406078+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5812e7785236a7d8386337237dd211c08b98ce18", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withTrustBuilder", "signature": null, "start_line": 191, "end_line": 196, "nloc": 6, "method_source_normalized": "publicBuildRequestwithTrustBuilder(boolean trustBuilder){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withTrustBuilder(boolean trustBuilder) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "trust", "builder", "(", "boolean", "trust", "builder", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 117, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 26, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.406403+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b7cbf84df7a8f32b868d9977d79b55f2f9a12d4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withRunImage", "signature": null, "start_line": 203, "end_line": 209, "nloc": 7, "method_source_normalized": "publicBuildRequestwithRunImage(ImageReference runImageName){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder,\n\t\t\t\trunImageName.inTaggedOrDigestForm(), this.creator, this.env, this.cleanCache, this.verboseLogging,\n\t\t\t\tthis.pullPolicy, this.publish, this.buildpacks, this.bindings, this.network, this.tags,\n\t\t\t\tthis.buildWorkspace, this.buildCache, this.launchCache, this.createdDate, this.applicationDirectory,\n\t\t\t\tthis.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withRunImage(ImageReference runImageName) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder,\n\t\t\t\trunImageName.inTaggedOrDigestForm(), this.creator, this.env, this.cleanCache, this.verboseLogging,\n\t\t\t\tthis.pullPolicy, this.publish, this.buildpacks, this.bindings, this.network, this.tags,\n\t\t\t\tthis.buildWorkspace, this.buildCache, this.launchCache, this.createdDate, this.applicationDirectory,\n\t\t\t\tthis.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "run", "image", "(", "image", "reference", "run", "image", "name", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "run", "image", "name", ".", "in", "tagged", "or", "digest", "form", "(", ")", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 135, "n_identifiers": 28, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.406744+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dccb23ce0fd47bb050ee03f250d9f6fbc2266ede", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withCreator", "signature": null, "start_line": 216, "end_line": 222, "nloc": 7, "method_source_normalized": "publicBuildRequestwithCreator(Creator creator){\n\t\tAssert.notNull(creator, \"'creator' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tcreator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withCreator(Creator creator) {\n\t\tAssert.notNull(creator, \"'creator' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tcreator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "creator", "(", "creator", "creator", ")", "{", "assert", ".", "not", "null", "(", "creator", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 125, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.407068+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f4516ffcaf759e3822818f308d165afb57a0cda4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withEnv", "signature": null, "start_line": 230, "end_line": 240, "nloc": 11, "method_source_normalized": "publicBuildRequestwithEnv(String name, String value){\n\t\tAssert.hasText(name, \"'name' must not be empty\");\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tMap<String, String> env = new LinkedHashMap<>(this.env);\n\t\tenv.put(name, value);\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, Collections.unmodifiableMap(env), this.cleanCache, this.verboseLogging, this.pullPolicy,\n\t\t\t\tthis.publish, this.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace,\n\t\t\t\tthis.buildCache, this.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "original_code": "public BuildRequest withEnv(String name, String value) {\n\t\tAssert.hasText(name, \"'name' must not be empty\");\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tMap<String, String> env = new LinkedHashMap<>(this.env);\n\t\tenv.put(name, value);\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, Collections.unmodifiableMap(env), this.cleanCache, this.verboseLogging, this.pullPolicy,\n\t\t\t\tthis.publish, this.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace,\n\t\t\t\tthis.buildCache, this.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "env", "(", "string", "name", ",", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "name", ",", "__STR__", ")", ";", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", "this", ".", "env", ")", ";", "env", ".", "put", "(", "name", ",", "value", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "collections", ".", "unmodifiable", "map", "(", "env", ")", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 173, "vocab_size": 57, "cyclomatic_complexity": 1, "ast_node_count": 203, "n_identifiers": 47, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 78, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.407430+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b273d9df0666b203e0121f004e5400fb4dd15255", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withEnv", "signature": null, "start_line": 247, "end_line": 256, "nloc": 10, "method_source_normalized": "publicBuildRequestwithEnv(Map<String, String> env){\n\t\tAssert.notNull(env, \"'env' must not be null\");\n\t\tMap<String, String> updatedEnv = new LinkedHashMap<>(this.env);\n\t\tupdatedEnv.putAll(env);\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, Collections.unmodifiableMap(updatedEnv), this.cleanCache, this.verboseLogging,\n\t\t\t\tthis.pullPolicy, this.publish, this.buildpacks, this.bindings, this.network, this.tags,\n\t\t\t\tthis.buildWorkspace, this.buildCache, this.launchCache, this.createdDate, this.applicationDirectory,\n\t\t\t\tthis.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withEnv(Map<String, String> env) {\n\t\tAssert.notNull(env, \"'env' must not be null\");\n\t\tMap<String, String> updatedEnv = new LinkedHashMap<>(this.env);\n\t\tupdatedEnv.putAll(env);\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, Collections.unmodifiableMap(updatedEnv), this.cleanCache, this.verboseLogging,\n\t\t\t\tthis.pullPolicy, this.publish, this.buildpacks, this.bindings, this.network, this.tags,\n\t\t\t\tthis.buildWorkspace, this.buildCache, this.launchCache, this.createdDate, this.applicationDirectory,\n\t\t\t\tthis.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "env", "(", "map", "<", "string", ",", "string", ">", "env", ")", "{", "assert", ".", "not", "null", "(", "env", ",", "__STR__", ")", ";", "map", "<", "string", ",", "string", ">", "updated", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", "this", ".", "env", ")", ";", "updated", "env", ".", "put", "all", "(", "env", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "collections", ".", "unmodifiable", "map", "(", "updated", "env", ")", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 167, "vocab_size": 58, "cyclomatic_complexity": 1, "ast_node_count": 192, "n_identifiers": 43, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 68, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.407804+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e8e845370b3b8a4be03aacab7378b526fe85c04", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withCleanCache", "signature": null, "start_line": 263, "end_line": 268, "nloc": 6, "method_source_normalized": "publicBuildRequestwithCleanCache(boolean cleanCache){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, cleanCache, this.verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withCleanCache(boolean cleanCache) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, cleanCache, this.verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "clean", "cache", "(", "boolean", "clean", "cache", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 117, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 26, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.408135+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8678692a9800011a64b06d158afe7f4a6c111d36", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withVerboseLogging", "signature": null, "start_line": 275, "end_line": 280, "nloc": 6, "method_source_normalized": "publicBuildRequestwithVerboseLogging(boolean verboseLogging){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withVerboseLogging(boolean verboseLogging) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, verboseLogging, this.pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "verbose", "logging", "(", "boolean", "verbose", "logging", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 117, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 26, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.408454+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e86d340ba67e1ec1b57eb09820c686fea44483c1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withPullPolicy", "signature": null, "start_line": 287, "end_line": 292, "nloc": 6, "method_source_normalized": "publicBuildRequestwithPullPolicy(PullPolicy pullPolicy){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withPullPolicy(PullPolicy pullPolicy) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, pullPolicy, this.publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "pull", "policy", "(", "pull", "policy", "pull", "policy", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 118, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 27, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.408779+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1588c9bbbd619a0e3c7a7cb11eb72e74f8fe0b0b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withPublish", "signature": null, "start_line": 299, "end_line": 304, "nloc": 6, "method_source_normalized": "publicBuildRequestwithPublish(boolean publish){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withPublish(boolean publish) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, publish, this.buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "publish", "(", "boolean", "publish", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 115, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 26, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.409095+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9bc20b4725480c172901ba70d6bfaf2a3a185957", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBuildpacks", "signature": null, "start_line": 312, "end_line": 315, "nloc": 4, "method_source_normalized": "publicBuildRequestwithBuildpacks(BuildpackReference... buildpacks){\n\t\tAssert.notEmpty(buildpacks, \"'buildpacks' must not be empty\");\n\t\treturn withBuildpacks(Arrays.asList(buildpacks));\n\t}", "original_code": "public BuildRequest withBuildpacks(BuildpackReference... buildpacks) {\n\t\tAssert.notEmpty(buildpacks, \"'buildpacks' must not be empty\");\n\t\treturn withBuildpacks(Arrays.asList(buildpacks));\n\t}", "code_tokens": ["public", "build", "request", "with", "buildpacks", "(", "buildpack", "reference", "...", "buildpacks", ")", "{", "assert", ".", "not", "empty", "(", "buildpacks", ",", "__STR__", ")", ";", "return", "with", "buildpacks", "(", "arrays", ".", "as", "list", "(", "buildpacks", ")", ")", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.409363+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a4315081215bf3b509419907ee474012df952e2d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBuildpacks", "signature": null, "start_line": 323, "end_line": 329, "nloc": 7, "method_source_normalized": "publicBuildRequestwithBuildpacks(List<BuildpackReference> buildpacks){\n\t\tAssert.notNull(buildpacks, \"'buildpacks' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish, buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withBuildpacks(List<BuildpackReference> buildpacks) {\n\t\tAssert.notNull(buildpacks, \"'buildpacks' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish, buildpacks,\n\t\t\t\tthis.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache, this.launchCache,\n\t\t\t\tthis.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "buildpacks", "(", "list", "<", "buildpack", "reference", ">", "buildpacks", ")", "{", "assert", ".", "not", "null", "(", "buildpacks", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 129, "vocab_size": 51, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 31, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.409741+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c1a5e803300590a5ecc4e219f001b2b3be9f2854", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBindings", "signature": null, "start_line": 337, "end_line": 340, "nloc": 4, "method_source_normalized": "publicBuildRequestwithBindings(Binding... bindings){\n\t\tAssert.notEmpty(bindings, \"'bindings' must not be empty\");\n\t\treturn withBindings(Arrays.asList(bindings));\n\t}", "original_code": "public BuildRequest withBindings(Binding... bindings) {\n\t\tAssert.notEmpty(bindings, \"'bindings' must not be empty\");\n\t\treturn withBindings(Arrays.asList(bindings));\n\t}", "code_tokens": ["public", "build", "request", "with", "bindings", "(", "binding", "...", "bindings", ")", "{", "assert", ".", "not", "empty", "(", "bindings", ",", "__STR__", ")", ";", "return", "with", "bindings", "(", "arrays", ".", "as", "list", "(", "bindings", ")", ")", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.410008+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1f8ce3418e70c76ed3958116a8ba985b8e67d47d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBindings", "signature": null, "start_line": 348, "end_line": 354, "nloc": 7, "method_source_normalized": "publicBuildRequestwithBindings(List<Binding> bindings){\n\t\tAssert.notNull(bindings, \"'bindings' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withBindings(List<Binding> bindings) {\n\t\tAssert.notNull(bindings, \"'bindings' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "bindings", "(", "list", "<", "binding", ">", "bindings", ")", "{", "assert", ".", "not", "null", "(", "bindings", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 31, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.410321+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4eb8ca3430290c74345b253780cad8cbf3f5ca6e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withNetwork", "signature": null, "start_line": 362, "end_line": 367, "nloc": 6, "method_source_normalized": "publicBuildRequestwithNetwork(@Nullable String network){\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withNetwork(@Nullable String network) {\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "network", "(", "@", "nullable", "string", "network", ")", "{", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 117, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 133, "n_identifiers": 28, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.410642+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e983b678e55940c4686be7b9392ad4ab6488b006", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withTags", "signature": null, "start_line": 374, "end_line": 377, "nloc": 4, "method_source_normalized": "publicBuildRequestwithTags(ImageReference... tags){\n\t\tAssert.notEmpty(tags, \"'tags' must not be empty\");\n\t\treturn withTags(Arrays.asList(tags));\n\t}", "original_code": "public BuildRequest withTags(ImageReference... tags) {\n\t\tAssert.notEmpty(tags, \"'tags' must not be empty\");\n\t\treturn withTags(Arrays.asList(tags));\n\t}", "code_tokens": ["public", "build", "request", "with", "tags", "(", "image", "reference", "...", "tags", ")", "{", "assert", ".", "not", "empty", "(", "tags", ",", "__STR__", ")", ";", "return", "with", "tags", "(", "arrays", ".", "as", "list", "(", "tags", ")", ")", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.410908+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "905b6ed18c3db45e1f1993ec21bbad2df31249ed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withTags", "signature": null, "start_line": 384, "end_line": 390, "nloc": 7, "method_source_normalized": "publicBuildRequestwithTags(List<ImageReference> tags){\n\t\tAssert.notNull(tags, \"'tags' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withTags(List<ImageReference> tags) {\n\t\tAssert.notNull(tags, \"'tags' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "tags", "(", "list", "<", "image", "reference", ">", "tags", ")", "{", "assert", ".", "not", "null", "(", "tags", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 129, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 31, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.411219+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f0de016391de83a8e6c2535cef930f763e6889d5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBuildWorkspace", "signature": null, "start_line": 398, "end_line": 404, "nloc": 7, "method_source_normalized": "publicBuildRequestwithBuildWorkspace(Cache buildWorkspace){\n\t\tAssert.notNull(buildWorkspace, \"'buildWorkspace' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withBuildWorkspace(Cache buildWorkspace) {\n\t\tAssert.notNull(buildWorkspace, \"'buildWorkspace' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "build", "workspace", "(", "cache", "build", "workspace", ")", "{", "assert", ".", "not", "null", "(", "build", "workspace", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.411545+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "35934faf3439226ca7ede3e7a8ead5a50278afb3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withBuildCache", "signature": null, "start_line": 411, "end_line": 417, "nloc": 7, "method_source_normalized": "publicBuildRequestwithBuildCache(Cache buildCache){\n\t\tAssert.notNull(buildCache, \"'buildCache' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withBuildCache(Cache buildCache) {\n\t\tAssert.notNull(buildCache, \"'buildCache' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "build", "cache", "(", "cache", "build", "cache", ")", "{", "assert", ".", "not", "null", "(", "build", "cache", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.411869+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5c63e5517c00a91b9ca04f3636adca8859e71f08", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withLaunchCache", "signature": null, "start_line": 424, "end_line": 430, "nloc": 7, "method_source_normalized": "publicBuildRequestwithLaunchCache(Cache launchCache){\n\t\tAssert.notNull(launchCache, \"'launchCache' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tlaunchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withLaunchCache(Cache launchCache) {\n\t\tAssert.notNull(launchCache, \"'launchCache' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tlaunchCache, this.createdDate, this.applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "launch", "cache", "(", "cache", "launch", "cache", ")", "{", "assert", ".", "not", "null", "(", "launch", "cache", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.412212+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6c879a665b089dd07a63c4776644017e055a5da9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withCreatedDate", "signature": null, "start_line": 437, "end_line": 444, "nloc": 8, "method_source_normalized": "publicBuildRequestwithCreatedDate(String createdDate){\n\t\tAssert.notNull(createdDate, \"'createdDate' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, parseCreatedDate(createdDate), this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "original_code": "public BuildRequest withCreatedDate(String createdDate) {\n\t\tAssert.notNull(createdDate, \"'createdDate' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, parseCreatedDate(createdDate), this.applicationDirectory, this.securityOptions,\n\t\t\t\tthis.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "created", "date", "(", "string", "created", "date", ")", "{", "assert", ".", "not", "null", "(", "created", "date", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "parse", "created", "date", "(", "created", "date", ")", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 133, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 31, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.412540+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a4f9e265d8ab8c98c19aeb93a3a50659407ab15f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "parseCreatedDate", "signature": null, "start_line": 446, "end_line": 456, "nloc": 11, "method_source_normalized": "privateInstantparseCreatedDate(String createdDate){\n\t\tif (\"now\".equalsIgnoreCase(createdDate)) {\n\t\t\treturn Instant.now();\n\t\t}\n\t\ttry {\n\t\t\treturn Instant.parse(createdDate);\n\t\t}\n\t\tcatch (DateTimeParseException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error parsing '\" + createdDate + \"' as an image created date\", ex);\n\t\t}\n\t}", "original_code": "private Instant parseCreatedDate(String createdDate) {\n\t\tif (\"now\".equalsIgnoreCase(createdDate)) {\n\t\t\treturn Instant.now();\n\t\t}\n\t\ttry {\n\t\t\treturn Instant.parse(createdDate);\n\t\t}\n\t\tcatch (DateTimeParseException ex) {\n\t\t\tthrow new IllegalArgumentException(\"Error parsing '\" + createdDate + \"' as an image created date\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "instant", "parse", "created", "date", "(", "string", "created", "date", ")", "{", "if", "(", "__STR__", ".", "equals", "ignore", "case", "(", "created", "date", ")", ")", "{", "return", "instant", ".", "now", "(", ")", ";", "}", "try", "{", "return", "instant", ".", "parse", "(", "created", "date", ")", ";", "}", "catch", "(", "date", "time", "parse", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "created", "date", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 71, "vocab_size": 30, "cyclomatic_complexity": 3, "ast_node_count": 85, "n_identifiers": 16, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 58, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.412833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "705b101fb36f3f529b92c55aee9316ad3b843d12", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withApplicationDirectory", "signature": null, "start_line": 463, "end_line": 469, "nloc": 7, "method_source_normalized": "publicBuildRequestwithApplicationDirectory(String applicationDirectory){\n\t\tAssert.notNull(applicationDirectory, \"'applicationDirectory' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, applicationDirectory, this.securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withApplicationDirectory(String applicationDirectory) {\n\t\tAssert.notNull(applicationDirectory, \"'applicationDirectory' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, applicationDirectory, this.securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "application", "directory", "(", "string", "application", "directory", ")", "{", "assert", ".", "not", "null", "(", "application", "directory", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "application", "directory", ",", "this", ".", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 128, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.413127+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ae188f2923890dbb2f6d1e7ae826738f192e186d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withSecurityOptions", "signature": null, "start_line": 477, "end_line": 483, "nloc": 7, "method_source_normalized": "publicBuildRequestwithSecurityOptions(List<String> securityOptions){\n\t\tAssert.notNull(securityOptions, \"'securityOptions' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, securityOptions, this.platform);\n\t}", "original_code": "public BuildRequest withSecurityOptions(List<String> securityOptions) {\n\t\tAssert.notNull(securityOptions, \"'securityOptions' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, securityOptions, this.platform);\n\t}", "code_tokens": ["public", "build", "request", "with", "security", "options", "(", "list", "<", "string", ">", "security", "options", ")", "{", "assert", ".", "not", "null", "(", "security", "options", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "security", "options", ",", "this", ".", "platform", ")", ";", "}"], "token_count": 131, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 31, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.413437+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "23078189fd3b566c82f3087732e4cdb7ec89153e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "withImagePlatform", "signature": null, "start_line": 491, "end_line": 498, "nloc": 8, "method_source_normalized": "publicBuildRequestwithImagePlatform(String platform){\n\t\tAssert.notNull(platform, \"'platform' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tImagePlatform.of(platform));\n\t}", "original_code": "public BuildRequest withImagePlatform(String platform) {\n\t\tAssert.notNull(platform, \"'platform' must not be null\");\n\t\treturn new BuildRequest(this.name, this.applicationContent, this.builder, this.trustBuilder, this.runImage,\n\t\t\t\tthis.creator, this.env, this.cleanCache, this.verboseLogging, this.pullPolicy, this.publish,\n\t\t\t\tthis.buildpacks, this.bindings, this.network, this.tags, this.buildWorkspace, this.buildCache,\n\t\t\t\tthis.launchCache, this.createdDate, this.applicationDirectory, this.securityOptions,\n\t\t\t\tImagePlatform.of(platform));\n\t}", "code_tokens": ["public", "build", "request", "with", "image", "platform", "(", "string", "platform", ")", "{", "assert", ".", "not", "null", "(", "platform", ",", "__STR__", ")", ";", "return", "new", "build", "request", "(", "this", ".", "name", ",", "this", ".", "application", "content", ",", "this", ".", "builder", ",", "this", ".", "trust", "builder", ",", "this", ".", "run", "image", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "clean", "cache", ",", "this", ".", "verbose", "logging", ",", "this", ".", "pull", "policy", ",", "this", ".", "publish", ",", "this", ".", "buildpacks", ",", "this", ".", "bindings", ",", "this", ".", "network", ",", "this", ".", "tags", ",", "this", ".", "build", "workspace", ",", "this", ".", "build", "cache", ",", "this", ".", "launch", "cache", ",", "this", ".", "created", "date", ",", "this", ".", "application", "directory", ",", "this", ".", "security", "options", ",", "image", "platform", ".", "of", "(", "platform", ")", ")", ";", "}"], "token_count": 132, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 148, "n_identifiers": 32, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.413774+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a69de0174924030c69d92efcc7ef47c9616b598c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 504, "end_line": 506, "nloc": 3, "method_source_normalized": "publicImageReferencegetName(){\n\t\treturn this.name;\n\t}", "original_code": "public ImageReference getName() {\n\t\treturn this.name;\n\t}", "code_tokens": ["public", "image", "reference", "get", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.414019+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c2ff6e83289cdd2039c8c73f962a2afe515228e8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getApplicationContent", "signature": null, "start_line": 515, "end_line": 517, "nloc": 3, "method_source_normalized": "publicTarArchivegetApplicationContent(Owner owner){\n\t\treturn this.applicationContent.apply(owner);\n\t}", "original_code": "public TarArchive getApplicationContent(Owner owner) {\n\t\treturn this.applicationContent.apply(owner);\n\t}", "code_tokens": ["public", "tar", "archive", "get", "application", "content", "(", "owner", "owner", ")", "{", "return", "this", ".", "application", "content", ".", "apply", "(", "owner", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.414320+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fc153dad98bdd4bd2727b4058de8e3a367c8b12a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getBuilder", "signature": null, "start_line": 523, "end_line": 525, "nloc": 3, "method_source_normalized": "publicImageReferencegetBuilder(){\n\t\treturn this.builder;\n\t}", "original_code": "public ImageReference getBuilder() {\n\t\treturn this.builder;\n\t}", "code_tokens": ["public", "image", "reference", "get", "builder", "(", ")", "{", "return", "this", ".", "builder", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.414548+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc1aaeed1b15a2c7ffed454bd79975c880e35a4b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "isTrustBuilder", "signature": null, "start_line": 532, "end_line": 534, "nloc": 3, "method_source_normalized": "publicbooleanisTrustBuilder(){\n\t\treturn (this.trustBuilder != null) ? this.trustBuilder : isBuilderKnownAndTrusted();\n\t}", "original_code": "public boolean isTrustBuilder() {\n\t\treturn (this.trustBuilder != null) ? this.trustBuilder : isBuilderKnownAndTrusted();\n\t}", "code_tokens": ["public", "boolean", "is", "trust", "builder", "(", ")", "{", "return", "(", "this", ".", "trust", "builder", "!=", "null", ")", "?", "this", ".", "trust", "builder", ":", "is", "builder", "known", "and", "trusted", "(", ")", ";", "}"], "token_count": 32, "vocab_size": 20, "cyclomatic_complexity": 2, "ast_node_count": 36, "n_identifiers": 4, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.414792+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3d8e53e447462cc3fc0b214d530e9d6b3e43fa71", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "isBuilderKnownAndTrusted", "signature": null, "start_line": 536, "end_line": 538, "nloc": 3, "method_source_normalized": "privatebooleanisBuilderKnownAndTrusted(){\n\t\treturn KNOWN_TRUSTED_BUILDERS.stream().anyMatch((builder) -> builder.getName().equals(this.builder.getName()));\n\t}", "original_code": "private boolean isBuilderKnownAndTrusted() {\n\t\treturn KNOWN_TRUSTED_BUILDERS.stream().anyMatch((builder) -> builder.getName().equals(this.builder.getName()));\n\t}", "code_tokens": ["private", "boolean", "is", "builder", "known", "and", "trusted", "(", ")", "{", "return", "known", "trusted", "builders", ".", "stream", "(", ")", ".", "any", "match", "(", "(", "builder", ")", "->", "builder", ".", "get", "name", "(", ")", ".", "equals", "(", "this", ".", "builder", ".", "get", "name", "(", ")", ")", ")", ";", "}"], "token_count": 47, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 10, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.415037+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98c1e86ed4c93689df804a624a3860c4dbdfe92f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getRunImage", "signature": null, "start_line": 544, "end_line": 546, "nloc": 3, "method_source_normalized": "public @NullableImageReferencegetRunImage(){\n\t\treturn this.runImage;\n\t}", "original_code": "public @Nullable ImageReference getRunImage() {\n\t\treturn this.runImage;\n\t}", "code_tokens": ["public", "@", "nullable", "image", "reference", "get", "run", "image", "(", ")", "{", "return", "this", ".", "run", "image", ";", "}"], "token_count": 18, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.415279+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "66bc67fe561ac297b1959f00a57597afe085a76f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getCreator", "signature": null, "start_line": 552, "end_line": 554, "nloc": 3, "method_source_normalized": "publicCreatorgetCreator(){\n\t\treturn this.creator;\n\t}", "original_code": "public Creator getCreator() {\n\t\treturn this.creator;\n\t}", "code_tokens": ["public", "creator", "get", "creator", "(", ")", "{", "return", "this", ".", "creator", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.415509+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "45710b2d8182eca68cd25c6215cd6ce33ee31ed5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getEnv", "signature": null, "start_line": 560, "end_line": 562, "nloc": 3, "method_source_normalized": "publicMap<String, String>getEnv(){\n\t\treturn this.env;\n\t}", "original_code": "public Map<String, String> getEnv() {\n\t\treturn this.env;\n\t}", "code_tokens": ["public", "map", "<", "string", ",", "string", ">", "get", "env", "(", ")", "{", "return", "this", ".", "env", ";", "}"], "token_count": 18, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.415747+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b863047cb91066528d9945af891ca499e935c4c6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "isCleanCache", "signature": null, "start_line": 568, "end_line": 570, "nloc": 3, "method_source_normalized": "publicbooleanisCleanCache(){\n\t\treturn this.cleanCache;\n\t}", "original_code": "public boolean isCleanCache() {\n\t\treturn this.cleanCache;\n\t}", "code_tokens": ["public", "boolean", "is", "clean", "cache", "(", ")", "{", "return", "this", ".", "clean", "cache", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.415972+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5dacdbec579e5bd5e34a937a7a78ec4ccfaf8106", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "isVerboseLogging", "signature": null, "start_line": 576, "end_line": 578, "nloc": 3, "method_source_normalized": "publicbooleanisVerboseLogging(){\n\t\treturn this.verboseLogging;\n\t}", "original_code": "public boolean isVerboseLogging() {\n\t\treturn this.verboseLogging;\n\t}", "code_tokens": ["public", "boolean", "is", "verbose", "logging", "(", ")", "{", "return", "this", ".", "verbose", "logging", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.416206+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e77a90fa39f0c40b28bd061a4b41c6be1146f5c8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "isPublish", "signature": null, "start_line": 584, "end_line": 586, "nloc": 3, "method_source_normalized": "publicbooleanisPublish(){\n\t\treturn this.publish;\n\t}", "original_code": "public boolean isPublish() {\n\t\treturn this.publish;\n\t}", "code_tokens": ["public", "boolean", "is", "publish", "(", ")", "{", "return", "this", ".", "publish", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.416436+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6ff9e3a06e5b74b4359106d22261dca8968c7161", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getPullPolicy", "signature": null, "start_line": 592, "end_line": 594, "nloc": 3, "method_source_normalized": "publicPullPolicygetPullPolicy(){\n\t\treturn this.pullPolicy;\n\t}", "original_code": "public PullPolicy getPullPolicy() {\n\t\treturn this.pullPolicy;\n\t}", "code_tokens": ["public", "pull", "policy", "get", "pull", "policy", "(", ")", "{", "return", "this", ".", "pull", "policy", ";", "}"], "token_count": 16, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.416668+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0666270f19cd12377b15cc5e33a8509e9d2f4aae", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getBuildpacks", "signature": null, "start_line": 600, "end_line": 602, "nloc": 3, "method_source_normalized": "publicList<BuildpackReference>getBuildpacks(){\n\t\treturn this.buildpacks;\n\t}", "original_code": "public List<BuildpackReference> getBuildpacks() {\n\t\treturn this.buildpacks;\n\t}", "code_tokens": ["public", "list", "<", "buildpack", "reference", ">", "get", "buildpacks", "(", ")", "{", "return", "this", ".", "buildpacks", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.416898+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "86b9089669bd000b32e7da1f947476434c3fc511", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getBindings", "signature": null, "start_line": 609, "end_line": 611, "nloc": 3, "method_source_normalized": "publicList<Binding>getBindings(){\n\t\treturn this.bindings;\n\t}", "original_code": "public List<Binding> getBindings() {\n\t\treturn this.bindings;\n\t}", "code_tokens": ["public", "list", "<", "binding", ">", "get", "bindings", "(", ")", "{", "return", "this", ".", "bindings", ";", "}"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.417138+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7ef9796d111dc131c25938a817b0db1740d582cb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getNetwork", "signature": null, "start_line": 618, "end_line": 620, "nloc": 3, "method_source_normalized": "public @NullableStringgetNetwork(){\n\t\treturn this.network;\n\t}", "original_code": "public @Nullable String getNetwork() {\n\t\treturn this.network;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "network", "(", ")", "{", "return", "this", ".", "network", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.417373+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2f6336c6f10d9b14090ff5cc80566fef5c19e8f7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getTags", "signature": null, "start_line": 626, "end_line": 628, "nloc": 3, "method_source_normalized": "publicList<ImageReference>getTags(){\n\t\treturn this.tags;\n\t}", "original_code": "public List<ImageReference> getTags() {\n\t\treturn this.tags;\n\t}", "code_tokens": ["public", "list", "<", "image", "reference", ">", "get", "tags", "(", ")", "{", "return", "this", ".", "tags", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.417610+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3d4d0c265a095bc9be63e1a4831821d677ed4401", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getBuildWorkspace", "signature": null, "start_line": 635, "end_line": 637, "nloc": 3, "method_source_normalized": "public @NullableCachegetBuildWorkspace(){\n\t\treturn this.buildWorkspace;\n\t}", "original_code": "public @Nullable Cache getBuildWorkspace() {\n\t\treturn this.buildWorkspace;\n\t}", "code_tokens": ["public", "@", "nullable", "cache", "get", "build", "workspace", "(", ")", "{", "return", "this", ".", "build", "workspace", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.417854+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4dbe42ae5d82efadcd36a520776997164f3f0d34", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getBuildCache", "signature": null, "start_line": 643, "end_line": 645, "nloc": 3, "method_source_normalized": "public @NullableCachegetBuildCache(){\n\t\treturn this.buildCache;\n\t}", "original_code": "public @Nullable Cache getBuildCache() {\n\t\treturn this.buildCache;\n\t}", "code_tokens": ["public", "@", "nullable", "cache", "get", "build", "cache", "(", ")", "{", "return", "this", ".", "build", "cache", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.418073+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "51d6f8332ce9f13d191cfea726d6f0315a6915c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getLaunchCache", "signature": null, "start_line": 651, "end_line": 653, "nloc": 3, "method_source_normalized": "public @NullableCachegetLaunchCache(){\n\t\treturn this.launchCache;\n\t}", "original_code": "public @Nullable Cache getLaunchCache() {\n\t\treturn this.launchCache;\n\t}", "code_tokens": ["public", "@", "nullable", "cache", "get", "launch", "cache", "(", ")", "{", "return", "this", ".", "launch", "cache", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.418304+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed217d1eb686c94884d35a36c487eee5842bb88b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getCreatedDate", "signature": null, "start_line": 659, "end_line": 661, "nloc": 3, "method_source_normalized": "public @NullableInstantgetCreatedDate(){\n\t\treturn this.createdDate;\n\t}", "original_code": "public @Nullable Instant getCreatedDate() {\n\t\treturn this.createdDate;\n\t}", "code_tokens": ["public", "@", "nullable", "instant", "get", "created", "date", "(", ")", "{", "return", "this", ".", "created", "date", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.418528+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bfde8fb7070845e63131b8739e0f09eb60e9e554", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getApplicationDirectory", "signature": null, "start_line": 667, "end_line": 669, "nloc": 3, "method_source_normalized": "public @NullableStringgetApplicationDirectory(){\n\t\treturn this.applicationDirectory;\n\t}", "original_code": "public @Nullable String getApplicationDirectory() {\n\t\treturn this.applicationDirectory;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "application", "directory", "(", ")", "{", "return", "this", ".", "application", "directory", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.418741+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b71ec83beeca21e0cb3a813d7806ec6b6323c342", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getSecurityOptions", "signature": null, "start_line": 676, "end_line": 678, "nloc": 3, "method_source_normalized": "public @NullableList<String>getSecurityOptions(){\n\t\treturn this.securityOptions;\n\t}", "original_code": "public @Nullable List<String> getSecurityOptions() {\n\t\treturn this.securityOptions;\n\t}", "code_tokens": ["public", "@", "nullable", "list", "<", "string", ">", "get", "security", "options", "(", ")", "{", "return", "this", ".", "security", "options", ";", "}"], "token_count": 20, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.418959+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b1648f0e12fb91bcfc8b100ada5fc054e14d513b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "getImagePlatform", "signature": null, "start_line": 685, "end_line": 687, "nloc": 3, "method_source_normalized": "public @NullableImagePlatformgetImagePlatform(){\n\t\treturn this.platform;\n\t}", "original_code": "public @Nullable ImagePlatform getImagePlatform() {\n\t\treturn this.platform;\n\t}", "code_tokens": ["public", "@", "nullable", "image", "platform", "get", "image", "platform", "(", ")", "{", "return", "this", ".", "platform", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.419192+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ede487b88f4bc6f97f8ddfc405c162121b0792d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "forJarFile", "signature": null, "start_line": 694, "end_line": 697, "nloc": 4, "method_source_normalized": "public staticBuildRequestforJarFile(File jarFile){\n\t\tassertJarFile(jarFile);\n\t\treturn forJarFile(ImageReference.forJarFile(jarFile).inTaggedForm(), jarFile);\n\t}", "original_code": "public static BuildRequest forJarFile(File jarFile) {\n\t\tassertJarFile(jarFile);\n\t\treturn forJarFile(ImageReference.forJarFile(jarFile).inTaggedForm(), jarFile);\n\t}", "code_tokens": ["public", "static", "build", "request", "for", "jar", "file", "(", "file", "jar", "file", ")", "{", "assert", "jar", "file", "(", "jar", "file", ")", ";", "return", "for", "jar", "file", "(", "image", "reference", ".", "for", "jar", "file", "(", "jar", "file", ")", ".", "in", "tagged", "form", "(", ")", ",", "jar", "file", ")", ";", "}"], "token_count": 48, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.419436+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78cadd1bb9ce9b5588d81b9caca0b4a143c73aa2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "forJarFile", "signature": null, "start_line": 705, "end_line": 708, "nloc": 4, "method_source_normalized": "public staticBuildRequestforJarFile(ImageReference name, File jarFile){\n\t\tassertJarFile(jarFile);\n\t\treturn new BuildRequest(name, (owner) -> TarArchive.fromZip(jarFile, owner));\n\t}", "original_code": "public static BuildRequest forJarFile(ImageReference name, File jarFile) {\n\t\tassertJarFile(jarFile);\n\t\treturn new BuildRequest(name, (owner) -> TarArchive.fromZip(jarFile, owner));\n\t}", "code_tokens": ["public", "static", "build", "request", "for", "jar", "file", "(", "image", "reference", "name", ",", "file", "jar", "file", ")", "{", "assert", "jar", "file", "(", "jar", "file", ")", ";", "return", "new", "build", "request", "(", "name", ",", "(", "owner", ")", "->", "tar", "archive", ".", "from", "zip", "(", "jar", "file", ",", "owner", ")", ")", ";", "}"], "token_count": 50, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.419689+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec6bf917fdfee95ef19b6749af54f723d8a9468a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 716, "end_line": 718, "nloc": 3, "method_source_normalized": "public staticBuildRequestof(ImageReference name, Function<Owner, TarArchive> applicationContent){\n\t\treturn new BuildRequest(name, applicationContent);\n\t}", "original_code": "public static BuildRequest of(ImageReference name, Function<Owner, TarArchive> applicationContent) {\n\t\treturn new BuildRequest(name, applicationContent);\n\t}", "code_tokens": ["public", "static", "build", "request", "of", "(", "image", "reference", "name", ",", "function", "<", "owner", ",", "tar", "archive", ">", "application", "content", ")", "{", "return", "new", "build", "request", "(", "name", ",", "application", "content", ")", ";", "}"], "token_count": 33, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 11, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.419947+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "94e24b2fc9f5705fa502ba0805d8c828d8919659", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuildRequest.java", "file_blob_sha": null, "method_name": "assertJarFile", "signature": null, "start_line": 720, "end_line": 724, "nloc": 5, "method_source_normalized": "private staticvoidassertJarFile(File jarFile){\n\t\tAssert.notNull(jarFile, \"'jarFile' must not be null\");\n\t\tAssert.isTrue(jarFile.exists(), \"'jarFile' must exist\");\n\t\tAssert.isTrue(jarFile.isFile(), \"'jarFile' must be a file\");\n\t}", "original_code": "private static void assertJarFile(File jarFile) {\n\t\tAssert.notNull(jarFile, \"'jarFile' must not be null\");\n\t\tAssert.isTrue(jarFile.exists(), \"'jarFile' must exist\");\n\t\tAssert.isTrue(jarFile.isFile(), \"'jarFile' must be a file\");\n\t}", "code_tokens": ["private", "static", "void", "assert", "jar", "file", "(", "file", "jar", "file", ")", "{", "assert", ".", "not", "null", "(", "jar", "file", ",", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "jar", "file", ".", "exists", "(", ")", ",", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "jar", "file", ".", "is", "file", "(", ")", ",", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 63, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.420218+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "93252ef8ec7066357d164c30ff3f1ea26f33d3d3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "Buildpacks", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "privateBuildpacks(List<Buildpack> buildpacks){\n\t\tthis.buildpacks = buildpacks;\n\t}", "original_code": "private Buildpacks(List<Buildpack> buildpacks) {\n\t\tthis.buildpacks = buildpacks;\n\t}", "code_tokens": ["private", "buildpacks", "(", "list", "<", "buildpack", ">", "buildpacks", ")", "{", "this", ".", "buildpacks", "=", "buildpacks", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.421499+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a423eacce6217cf82583ca971b69eff4a63b0f37", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "getBuildpacks", "signature": null, "start_line": 47, "end_line": 49, "nloc": 3, "method_source_normalized": "List<Buildpack>getBuildpacks(){\n\t\treturn this.buildpacks;\n\t}", "original_code": "List<Buildpack> getBuildpacks() {\n\t\treturn this.buildpacks;\n\t}", "code_tokens": ["list", "<", "buildpack", ">", "get", "buildpacks", "(", ")", "{", "return", "this", ".", "buildpacks", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.421757+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e05acf3c370060ac41ab88e44c5bd5360dd104a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 51, "end_line": 58, "nloc": 8, "method_source_normalized": "voidapply(IOConsumer<Layer> layers)throws IOException{\n\t\tif (!this.buildpacks.isEmpty()) {\n\t\t\tfor (Buildpack buildpack : this.buildpacks) {\n\t\t\t\tbuildpack.apply(layers);\n\t\t\t}\n\t\t\tlayers.accept(Layer.of(this::addOrderLayerContent));\n\t\t}\n\t}", "original_code": "void apply(IOConsumer<Layer> layers) throws IOException {\n\t\tif (!this.buildpacks.isEmpty()) {\n\t\t\tfor (Buildpack buildpack : this.buildpacks) {\n\t\t\t\tbuildpack.apply(layers);\n\t\t\t}\n\t\t\tlayers.accept(Layer.of(this::addOrderLayerContent));\n\t\t}\n\t}", "code_tokens": ["void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "if", "(", "!", "this", ".", "buildpacks", ".", "is", "empty", "(", ")", ")", "{", "for", "(", "buildpack", "buildpack", ":", "this", ".", "buildpacks", ")", "{", "buildpack", ".", "apply", "(", "layers", ")", ";", "}", "layers", ".", "accept", "(", "layer", ".", "of", "(", "this", "::", "add", "order", "layer", "content", ")", ")", ";", "}", "}"], "token_count": 64, "vocab_size": 31, "cyclomatic_complexity": 3, "ast_node_count": 84, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.422037+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9702f1b9b7056b28be36a23083ddf9fd4c5d9bd5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "addOrderLayerContent", "signature": null, "start_line": 60, "end_line": 62, "nloc": 3, "method_source_normalized": "voidaddOrderLayerContent(Layout layout)throws IOException{\n\t\tlayout.file(\"/cnb/order.toml\", Owner.ROOT, Content.of(getOrderToml()));\n\t}", "original_code": "void addOrderLayerContent(Layout layout) throws IOException {\n\t\tlayout.file(\"/cnb/order.toml\", Owner.ROOT, Content.of(getOrderToml()));\n\t}", "code_tokens": ["void", "add", "order", "layer", "content", "(", "layout", "layout", ")", "throws", "io", "exception", "{", "layout", ".", "file", "(", "__STR__", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "get", "order", "toml", "(", ")", ")", ")", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 11, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.422309+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b2b54c1f75dde0fd273e98fcda19607ee88d3312", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "getOrderToml", "signature": null, "start_line": 64, "end_line": 71, "nloc": 8, "method_source_normalized": "privateStringgetOrderToml(){\n\t\tStringBuilder builder = new StringBuilder();\n\t\tbuilder.append(\"[[order]]\\n\\n\");\n\t\tfor (Buildpack buildpack : this.buildpacks) {\n\t\t\tappendToOrderToml(builder, buildpack.getCoordinates());\n\t\t}\n\t\treturn builder.toString();\n\t}", "original_code": "private String getOrderToml() {\n\t\tStringBuilder builder = new StringBuilder();\n\t\tbuilder.append(\"[[order]]\\n\\n\");\n\t\tfor (Buildpack buildpack : this.buildpacks) {\n\t\t\tappendToOrderToml(builder, buildpack.getCoordinates());\n\t\t}\n\t\treturn builder.toString();\n\t}", "code_tokens": ["private", "string", "get", "order", "toml", "(", ")", "{", "string", "builder", "builder", "=", "new", "string", "builder", "(", ")", ";", "builder", ".", "append", "(", "__STR__", ")", ";", "for", "(", "buildpack", "buildpack", ":", "this", ".", "buildpacks", ")", "{", "append", "to", "order", "toml", "(", "builder", ",", "buildpack", ".", "get", "coordinates", "(", ")", ")", ";", "}", "return", "builder", ".", "to", "string", "(", ")", ";", "}"], "token_count": 60, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 73, "n_identifiers": 16, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.422587+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f1920b3badb967a3c25f64c8b2372e5be686d459", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "appendToOrderToml", "signature": null, "start_line": 73, "end_line": 80, "nloc": 8, "method_source_normalized": "privatevoidappendToOrderToml(StringBuilder builder, BuildpackCoordinates coordinates){\n\t\tbuilder.append(\"  [[order.group]]\\n\");\n\t\tbuilder.append(\"    id = \\\"\" + coordinates.getId() + \"\\\"\\n\");\n\t\tif (StringUtils.hasText(coordinates.getVersion())) {\n\t\t\tbuilder.append(\"    version = \\\"\" + coordinates.getVersion() + \"\\\"\\n\");\n\t\t}\n\t\tbuilder.append(\"\\n\");\n\t}", "original_code": "private void appendToOrderToml(StringBuilder builder, BuildpackCoordinates coordinates) {\n\t\tbuilder.append(\"  [[order.group]]\\n\");\n\t\tbuilder.append(\"    id = \\\"\" + coordinates.getId() + \"\\\"\\n\");\n\t\tif (StringUtils.hasText(coordinates.getVersion())) {\n\t\t\tbuilder.append(\"    version = \\\"\" + coordinates.getVersion() + \"\\\"\\n\");\n\t\t}\n\t\tbuilder.append(\"\\n\");\n\t}", "code_tokens": ["private", "void", "append", "to", "order", "toml", "(", "string", "builder", "builder", ",", "buildpack", "coordinates", "coordinates", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ";", "builder", ".", "append", "(", "__STR__", "+", "coordinates", ".", "get", "id", "(", ")", "+", "__STR__", ")", ";", "if", "(", "string", "utils", ".", "has", "text", "(", "coordinates", ".", "get", "version", "(", ")", ")", ")", "{", "builder", ".", "append", "(", "__STR__", "+", "coordinates", ".", "get", "version", "(", ")", "+", "__STR__", ")", ";", "}", "builder", ".", "append", "(", "__STR__", ")", ";", "}"], "token_count": 81, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 104, "n_identifiers": 21, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.422885+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "04de1f1b1e1a48bd258622f5cfc2c218dc5c6b91", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Buildpacks.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 82, "end_line": 84, "nloc": 3, "method_source_normalized": "staticBuildpacksof(List<Buildpack> buildpacks){\n\t\treturn CollectionUtils.isEmpty(buildpacks) ? EMPTY : new Buildpacks(buildpacks);\n\t}", "original_code": "static Buildpacks of(List<Buildpack> buildpacks) {\n\t\treturn CollectionUtils.isEmpty(buildpacks) ? EMPTY : new Buildpacks(buildpacks);\n\t}", "code_tokens": ["static", "buildpacks", "of", "(", "list", "<", "buildpack", ">", "buildpacks", ")", "{", "return", "collection", "utils", ".", "is", "empty", "(", "buildpacks", ")", "?", "empty", ":", "new", "buildpacks", "(", "buildpacks", ")", ";", "}"], "token_count": 30, "vocab_size": 21, "cyclomatic_complexity": 2, "ast_node_count": 41, "n_identifiers": 11, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.423151+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "762b45b09e5f72c90917fd99eb6e12d3b87477dd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "FileDescriptor", "signature": null, "start_line": 41, "end_line": 45, "nloc": 5, "method_source_normalized": "FileDescriptor(int handle, IntConsumer closer){\n\t\tthis.openHandle = new Handle(handle);\n\t\tthis.closedHandler = new Handle(-1);\n\t\tthis.closer = closer;\n\t}", "original_code": "FileDescriptor(int handle, IntConsumer closer) {\n\t\tthis.openHandle = new Handle(handle);\n\t\tthis.closedHandler = new Handle(-1);\n\t\tthis.closer = closer;\n\t}", "code_tokens": ["file", "descriptor", "(", "int", "handle", ",", "int", "consumer", "closer", ")", "{", "this", ".", "open", "handle", "=", "new", "handle", "(", "handle", ")", ";", "this", ".", "closed", "handler", "=", "new", "handle", "(", "-", "__NUM__", ")", ";", "this", ".", "closer", "=", "closer", ";", "}"], "token_count": 41, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.424231+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9dc113217e760b845136d543af567068a1536a71", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "acquire", "signature": null, "start_line": 52, "end_line": 55, "nloc": 4, "method_source_normalized": "synchronizedHandleacquire(){\n\t\tthis.referenceCount++;\n\t\treturn (this.status != Status.OPEN) ? this.closedHandler : this.openHandle;\n\t}", "original_code": "synchronized Handle acquire() {\n\t\tthis.referenceCount++;\n\t\treturn (this.status != Status.OPEN) ? this.closedHandler : this.openHandle;\n\t}", "code_tokens": ["synchronized", "handle", "acquire", "(", ")", "{", "this", ".", "reference", "count", "++", ";", "return", "(", "this", ".", "status", "!=", "status", ".", "open", ")", "?", "this", ".", "closed", "handler", ":", "this", ".", "open", "handle", ";", "}"], "token_count": 34, "vocab_size": 21, "cyclomatic_complexity": 2, "ast_node_count": 46, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.424495+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98160bf60ec96ca0e1a8e1dcd689eb6aa1a69530", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "release", "signature": null, "start_line": 57, "end_line": 63, "nloc": 7, "method_source_normalized": "private synchronizedvoidrelease(){\n\t\tthis.referenceCount--;\n\t\tif (this.referenceCount == 0 && this.status == Status.CLOSE_PENDING) {\n\t\t\tthis.closer.accept(this.openHandle.value);\n\t\t\tthis.status = Status.CLOSED;\n\t\t}\n\t}", "original_code": "private synchronized void release() {\n\t\tthis.referenceCount--;\n\t\tif (this.referenceCount == 0 && this.status == Status.CLOSE_PENDING) {\n\t\t\tthis.closer.accept(this.openHandle.value);\n\t\t\tthis.status = Status.CLOSED;\n\t\t}\n\t}", "code_tokens": ["private", "synchronized", "void", "release", "(", ")", "{", "this", ".", "reference", "count", "--", ";", "if", "(", "this", ".", "reference", "count", "==", "__NUM__", "&&", "this", ".", "status", "==", "status", ".", "close", "pending", ")", "{", "this", ".", "closer", ".", "accept", "(", "this", ".", "open", "handle", ".", "value", ")", ";", "this", ".", "status", "=", "status", ".", "closed", ";", "}", "}"], "token_count": 56, "vocab_size": 28, "cyclomatic_complexity": 3, "ast_node_count": 78, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.424768+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5f0fb7acc29acc7beaf2378d845225d0118967b8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 68, "end_line": 78, "nloc": 11, "method_source_normalized": "synchronizedvoidclose(){\n\t\tif (this.status == Status.OPEN) {\n\t\t\tif (this.referenceCount == 0) {\n\t\t\t\tthis.closer.accept(this.openHandle.value);\n\t\t\t\tthis.status = Status.CLOSED;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.status = Status.CLOSE_PENDING;\n\t\t\t}\n\t\t}\n\t}", "original_code": "synchronized void close() {\n\t\tif (this.status == Status.OPEN) {\n\t\t\tif (this.referenceCount == 0) {\n\t\t\t\tthis.closer.accept(this.openHandle.value);\n\t\t\t\tthis.status = Status.CLOSED;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.status = Status.CLOSE_PENDING;\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["synchronized", "void", "close", "(", ")", "{", "if", "(", "this", ".", "status", "==", "status", ".", "open", ")", "{", "if", "(", "this", ".", "reference", "count", "==", "__NUM__", ")", "{", "this", ".", "closer", ".", "accept", "(", "this", ".", "open", "handle", ".", "value", ")", ";", "this", ".", "status", "=", "status", ".", "closed", ";", "}", "else", "{", "this", ".", "status", "=", "status", ".", "close", "pending", ";", "}", "}", "}"], "token_count": 64, "vocab_size": 25, "cyclomatic_complexity": 3, "ast_node_count": 91, "n_identifiers": 15, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 55, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.425047+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "26fa5e38acff639947d12671ee3a5cef1810075a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "Handle", "signature": null, "start_line": 96, "end_line": 98, "nloc": 3, "method_source_normalized": "privateHandle(int value){\n\t\t\tthis.value = value;\n\t\t}", "original_code": "private Handle(int value) {\n\t\t\tthis.value = value;\n\t\t}", "code_tokens": ["private", "handle", "(", "int", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.425298+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6f66ebd93e2a571ee2b92192408db2b03704a85a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "isClosed", "signature": null, "start_line": 100, "end_line": 102, "nloc": 3, "method_source_normalized": "booleanisClosed(){\n\t\t\treturn this.value == -1;\n\t\t}", "original_code": "boolean isClosed() {\n\t\t\treturn this.value == -1;\n\t\t}", "code_tokens": ["boolean", "is", "closed", "(", ")", "{", "return", "this", ".", "value", "==", "-", "__NUM__", ";", "}"], "token_count": 15, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 2, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.425529+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b10bb4cc13517b6ddedeb574d5022d98024743cb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "intValue", "signature": null, "start_line": 104, "end_line": 106, "nloc": 3, "method_source_normalized": "intintValue(){\n\t\t\treturn this.value;\n\t\t}", "original_code": "int intValue() {\n\t\t\treturn this.value;\n\t\t}", "code_tokens": ["int", "int", "value", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 12, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.425757+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59f0a00701e9ec1ef9c297c667927c1d9bb3c905", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/FileDescriptor.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 108, "end_line": 113, "nloc": 6, "method_source_normalized": "@Override\n\t\tpublicvoidclose()throws IOException{\n\t\t\tif (!isClosed()) {\n\t\t\t\trelease();\n\t\t\t}\n\t\t}", "original_code": "@Override\n\t\tpublic void close() throws IOException {\n\t\t\tif (!isClosed()) {\n\t\t\t\trelease();\n\t\t\t}\n\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "if", "(", "!", "is", "closed", "(", ")", ")", "{", "release", "(", ")", ";", "}", "}"], "token_count": 26, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 39, "n_identifiers": 5, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.426002+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2f7b95859224eb5cd32d90e50c56f7fd93c0c037", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "NamedPipeSocket", "signature": null, "start_line": 56, "end_line": 58, "nloc": 3, "method_source_normalized": "NamedPipeSocket(String path)throws IOException{\n\t\tthis.channel = open(path);\n\t}", "original_code": "NamedPipeSocket(String path) throws IOException {\n\t\tthis.channel = open(path);\n\t}", "code_tokens": ["named", "pipe", "socket", "(", "string", "path", ")", "throws", "io", "exception", "{", "this", ".", "channel", "=", "open", "(", "path", ")", ";", "}"], "token_count": 21, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.428210+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d8988ea56ede2bacccc6615b28d26440ce4f5949", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "open", "signature": null, "start_line": 60, "end_line": 75, "nloc": 16, "method_source_normalized": "privateAsynchronousFileByteChannelopen(String path)throws IOException{\n\t\tConsumer<String> awaiter = Platform.isWindows() ? new WindowsAwaiter() : new SleepAwaiter();\n\t\tlong startTime = System.nanoTime();\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\treturn new AsynchronousFileByteChannel(AsynchronousFileChannel.open(Paths.get(path),\n\t\t\t\t\t\tStandardOpenOption.READ, StandardOpenOption.WRITE));\n\t\t\t}\n\t\t\tcatch (FileSystemException ex) {\n\t\t\t\tif (System.nanoTime() - startTime >= TIMEOUT) {\n\t\t\t\t\tthrow ex;\n\t\t\t\t}\n\t\t\t\tawaiter.accept(path);\n\t\t\t}\n\t\t}\n\t}", "original_code": "private AsynchronousFileByteChannel open(String path) throws IOException {\n\t\tConsumer<String> awaiter = Platform.isWindows() ? new WindowsAwaiter() : new SleepAwaiter();\n\t\tlong startTime = System.nanoTime();\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\treturn new AsynchronousFileByteChannel(AsynchronousFileChannel.open(Paths.get(path),\n\t\t\t\t\t\tStandardOpenOption.READ, StandardOpenOption.WRITE));\n\t\t\t}\n\t\t\tcatch (FileSystemException ex) {\n\t\t\t\tif (System.nanoTime() - startTime >= TIMEOUT) {\n\t\t\t\t\tthrow ex;\n\t\t\t\t}\n\t\t\t\tawaiter.accept(path);\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["private", "asynchronous", "file", "byte", "channel", "open", "(", "string", "path", ")", "throws", "io", "exception", "{", "consumer", "<", "string", ">", "awaiter", "=", "platform", ".", "is", "windows", "(", ")", "?", "new", "windows", "awaiter", "(", ")", ":", "new", "sleep", "awaiter", "(", ")", ";", "long", "start", "time", "=", "system", ".", "nano", "time", "(", ")", ";", "while", "(", "true", ")", "{", "try", "{", "return", "new", "asynchronous", "file", "byte", "channel", "(", "asynchronous", "file", "channel", ".", "open", "(", "paths", ".", "get", "(", "path", ")", ",", "standard", "open", "option", ".", "read", ",", "standard", "open", "option", ".", "write", ")", ")", ";", "}", "catch", "(", "file", "system", "exception", "ex", ")", "{", "if", "(", "system", ".", "nano", "time", "(", ")", "-", "start", "time", ">=", "timeout", ")", "{", "throw", "ex", ";", "}", "awaiter", ".", "accept", "(", "path", ")", ";", "}", "}", "}"], "token_count": 129, "vocab_size": 53, "cyclomatic_complexity": 5, "ast_node_count": 158, "n_identifiers": 35, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 97, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.428542+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "23007b19c98757d336e1d83ecbc48822fef7656a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "connect", "signature": null, "start_line": 77, "end_line": 80, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidconnect(SocketAddress endpoint)throws IOException{\n\t\t// No-op\n\t}", "original_code": "@Override\n\tpublic void connect(SocketAddress endpoint) throws IOException {\n\t\t// No-op\n\t}", "code_tokens": ["@", "override", "public", "void", "connect", "(", "socket", "address", "endpoint", ")", "throws", "io", "exception", "{", "// No-op", "}"], "token_count": 16, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.428807+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3c0b57b945b73b25b8f15e3149496a64a7f07bcc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "connect", "signature": null, "start_line": 82, "end_line": 85, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidconnect(SocketAddress endpoint, int timeout)throws IOException{\n\t\t// No-op\n\t}", "original_code": "@Override\n\tpublic void connect(SocketAddress endpoint, int timeout) throws IOException {\n\t\t// No-op\n\t}", "code_tokens": ["@", "override", "public", "void", "connect", "(", "socket", "address", "endpoint", ",", "int", "timeout", ")", "throws", "io", "exception", "{", "// No-op", "}"], "token_count": 19, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 6, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.429050+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b5dcef33f22fcaabb6ab09e5f9e9339572c2781a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "getInputStream", "signature": null, "start_line": 87, "end_line": 90, "nloc": 4, "method_source_normalized": "@Override\n\tpublicInputStreamgetInputStream(){\n\t\treturn Channels.newInputStream(this.channel);\n\t}", "original_code": "@Override\n\tpublic InputStream getInputStream() {\n\t\treturn Channels.newInputStream(this.channel);\n\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "input", "stream", "(", ")", "{", "return", "channels", ".", "new", "input", "stream", "(", "this", ".", "channel", ")", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.429293+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "878ba28842d7c315b43e8bbbc37ef4812e0e9201", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "getOutputStream", "signature": null, "start_line": 92, "end_line": 95, "nloc": 4, "method_source_normalized": "@Override\n\tpublicOutputStreamgetOutputStream(){\n\t\treturn Channels.newOutputStream(this.channel);\n\t}", "original_code": "@Override\n\tpublic OutputStream getOutputStream() {\n\t\treturn Channels.newOutputStream(this.channel);\n\t}", "code_tokens": ["@", "override", "public", "output", "stream", "get", "output", "stream", "(", ")", "{", "return", "channels", ".", "new", "output", "stream", "(", "this", ".", "channel", ")", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.429534+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "989a797f1ed5e4a113ad1c7fdfd30070fe75ec1e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 97, "end_line": 102, "nloc": 6, "method_source_normalized": "@Override\n\tpublicvoidclose()throws IOException{\n\t\tif (this.channel != null) {\n\t\t\tthis.channel.close();\n\t\t}\n\t}", "original_code": "@Override\n\tpublic void close() throws IOException {\n\t\tif (this.channel != null) {\n\t\t\tthis.channel.close();\n\t\t}\n\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "if", "(", "this", ".", "channel", "!=", "null", ")", "{", "this", ".", "channel", ".", "close", "(", ")", ";", "}", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 2, "ast_node_count": 44, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.429792+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d68c68bdac52b6f0a785576691eae12fb456e9a0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 110, "end_line": 112, "nloc": 3, "method_source_normalized": "public staticNamedPipeSocketget(String path)throws IOException{\n\t\treturn new NamedPipeSocket(path);\n\t}", "original_code": "public static NamedPipeSocket get(String path) throws IOException {\n\t\treturn new NamedPipeSocket(path);\n\t}", "code_tokens": ["public", "static", "named", "pipe", "socket", "get", "(", "string", "path", ")", "throws", "io", "exception", "{", "return", "new", "named", "pipe", "socket", "(", "path", ")", ";", "}"], "token_count": 24, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.430041+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5d33f3a3c2c6d1c56f6914e7312689d17b818793", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "AsynchronousFileByteChannel", "signature": null, "start_line": 121, "end_line": 123, "nloc": 3, "method_source_normalized": "AsynchronousFileByteChannel(AsynchronousFileChannel fileChannel){\n\t\t\tthis.fileChannel = fileChannel;\n\t\t}", "original_code": "AsynchronousFileByteChannel(AsynchronousFileChannel fileChannel) {\n\t\t\tthis.fileChannel = fileChannel;\n\t\t}", "code_tokens": ["asynchronous", "file", "byte", "channel", "(", "asynchronous", "file", "channel", "file", "channel", ")", "{", "this", ".", "file", "channel", "=", "file", "channel", ";", "}"], "token_count": 21, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.430280+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b8193f833d0238985c69155589846d0d8abbaa14", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "read", "signature": null, "start_line": 125, "end_line": 144, "nloc": 20, "method_source_normalized": "@Override\n\t\tpublic<A>voidread(ByteBuffer dst, A attachment, CompletionHandler<Integer, ? super A> handler){\n\t\t\tthis.fileChannel.read(dst, 0, attachment, new CompletionHandler<>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void completed(Integer read, A attachment) {\n\t\t\t\t\thandler.completed((read > 0) ? read : -1, attachment);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void failed(Throwable exc, A attachment) {\n\t\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\t\thandler.completed(-1, attachment);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\thandler.failed(exc, attachment);\n\t\t\t\t}\n\n\t\t\t});\n\t\t}", "original_code": "@Override\n\t\tpublic <A> void read(ByteBuffer dst, A attachment, CompletionHandler<Integer, ? super A> handler) {\n\t\t\tthis.fileChannel.read(dst, 0, attachment, new CompletionHandler<>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void completed(Integer read, A attachment) {\n\t\t\t\t\thandler.completed((read > 0) ? read : -1, attachment);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void failed(Throwable exc, A attachment) {\n\t\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\t\thandler.completed(-1, attachment);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\thandler.failed(exc, attachment);\n\t\t\t\t}\n\n\t\t\t});\n\t\t}", "code_tokens": ["@", "override", "public", "<", "a", ">", "void", "read", "(", "byte", "buffer", "dst", ",", "a", "attachment", ",", "completion", "handler", "<", "integer", ",", "?", "super", "a", ">", "handler", ")", "{", "this", ".", "file", "channel", ".", "read", "(", "dst", ",", "__NUM__", ",", "attachment", ",", "new", "completion", "handler", "<", ">", "(", ")", "{", "@", "override", "public", "void", "completed", "(", "integer", "read", ",", "a", "attachment", ")", "{", "handler", ".", "completed", "(", "(", "read", ">", "__NUM__", ")", "?", "read", ":", "-", "__NUM__", ",", "attachment", ")", ";", "}", "@", "override", "public", "void", "failed", "(", "throwable", "exc", ",", "a", "attachment", ")", "{", "if", "(", "exc", "instanceof", "asynchronous", "close", "exception", ")", "{", "handler", ".", "completed", "(", "-", "__NUM__", ",", "attachment", ")", ";", "return", ";", "}", "handler", ".", "failed", "(", "exc", ",", "attachment", ")", ";", "}", "}", ")", ";", "}"], "token_count": 130, "vocab_size": 41, "cyclomatic_complexity": 2, "ast_node_count": 179, "n_identifiers": 42, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 127, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.430634+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ad2f99876c3e1bdefcb373180f5e1979c0b4640", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "completed", "signature": null, "start_line": 129, "end_line": 132, "nloc": 4, "method_source_normalized": "@Override\n\t\t\t\tpublicvoidcompleted(Integer read, A attachment){\n\t\t\t\t\thandler.completed((read > 0) ? read : -1, attachment);\n\t\t\t\t}", "original_code": "@Override\n\t\t\t\tpublic void completed(Integer read, A attachment) {\n\t\t\t\t\thandler.completed((read > 0) ? read : -1, attachment);\n\t\t\t\t}", "code_tokens": ["@", "override", "public", "void", "completed", "(", "integer", "read", ",", "a", "attachment", ")", "{", "handler", ".", "completed", "(", "(", "read", ">", "__NUM__", ")", "?", "read", ":", "-", "__NUM__", ",", "attachment", ")", ";", "}"], "token_count": 32, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.430892+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c95fa69291fb3a931da6c926fd131bd519a99590", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "failed", "signature": null, "start_line": 134, "end_line": 141, "nloc": 8, "method_source_normalized": "@Override\n\t\t\t\tpublicvoidfailed(Throwable exc, A attachment){\n\t\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\t\thandler.completed(-1, attachment);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\thandler.failed(exc, attachment);\n\t\t\t\t}", "original_code": "@Override\n\t\t\t\tpublic void failed(Throwable exc, A attachment) {\n\t\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\t\thandler.completed(-1, attachment);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\thandler.failed(exc, attachment);\n\t\t\t\t}", "code_tokens": ["@", "override", "public", "void", "failed", "(", "throwable", "exc", ",", "a", "attachment", ")", "{", "if", "(", "exc", "instanceof", "asynchronous", "close", "exception", ")", "{", "handler", ".", "completed", "(", "-", "__NUM__", ",", "attachment", ")", ";", "return", ";", "}", "handler", ".", "failed", "(", "exc", ",", "attachment", ")", ";", "}"], "token_count": 45, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 62, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.431160+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1197f734c7a08e663403d7f67023d5947904f36f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "read", "signature": null, "start_line": 146, "end_line": 151, "nloc": 6, "method_source_normalized": "@Override\n\t\tpublicFuture<Integer>read(ByteBuffer dst){\n\t\t\tCompletableFutureHandler future = new CompletableFutureHandler();\n\t\t\tthis.fileChannel.read(dst, 0, null, future);\n\t\t\treturn future;\n\t\t}", "original_code": "@Override\n\t\tpublic Future<Integer> read(ByteBuffer dst) {\n\t\t\tCompletableFutureHandler future = new CompletableFutureHandler();\n\t\t\tthis.fileChannel.read(dst, 0, null, future);\n\t\t\treturn future;\n\t\t}", "code_tokens": ["@", "override", "public", "future", "<", "integer", ">", "read", "(", "byte", "buffer", "dst", ")", "{", "completable", "future", "handler", "future", "=", "new", "completable", "future", "handler", "(", ")", ";", "this", ".", "file", "channel", ".", "read", "(", "dst", ",", "__NUM__", ",", "null", ",", "future", ")", ";", "return", "future", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 14, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.431437+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7978d561b92596afc7ec3cff317082e2f055e39f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "write", "signature": null, "start_line": 153, "end_line": 156, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublic<A>voidwrite(ByteBuffer src, A attachment, CompletionHandler<Integer, ? super A> handler){\n\t\t\tthis.fileChannel.write(src, 0, attachment, handler);\n\t\t}", "original_code": "@Override\n\t\tpublic <A> void write(ByteBuffer src, A attachment, CompletionHandler<Integer, ? super A> handler) {\n\t\t\tthis.fileChannel.write(src, 0, attachment, handler);\n\t\t}", "code_tokens": ["@", "override", "public", "<", "a", ">", "void", "write", "(", "byte", "buffer", "src", ",", "a", "attachment", ",", "completion", "handler", "<", "integer", ",", "?", "super", "a", ">", "handler", ")", "{", "this", ".", "file", "channel", ".", "write", "(", "src", ",", "__NUM__", ",", "attachment", ",", "handler", ")", ";", "}"], "token_count": 45, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 16, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.431711+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d72477ca093100ac7e0805f0b83da3d7d22513a7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "write", "signature": null, "start_line": 158, "end_line": 161, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicFuture<Integer>write(ByteBuffer src){\n\t\t\treturn this.fileChannel.write(src, 0);\n\t\t}", "original_code": "@Override\n\t\tpublic Future<Integer> write(ByteBuffer src) {\n\t\t\treturn this.fileChannel.write(src, 0);\n\t\t}", "code_tokens": ["@", "override", "public", "future", "<", "integer", ">", "write", "(", "byte", "buffer", "src", ")", "{", "return", "this", ".", "file", "channel", ".", "write", "(", "src", ",", "__NUM__", ")", ";", "}"], "token_count": 28, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.431962+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e059ab6c08c5a857a97933afe640ca9b558f1793", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 163, "end_line": 166, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicvoidclose()throws IOException{\n\t\t\tthis.fileChannel.close();\n\t\t}", "original_code": "@Override\n\t\tpublic void close() throws IOException {\n\t\t\tthis.fileChannel.close();\n\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "channel", ".", "close", "(", ")", ";", "}"], "token_count": 21, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.432211+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e772a9c8485a43cda7c9aee4a5607ffca901a5a5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "isOpen", "signature": null, "start_line": 168, "end_line": 171, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicbooleanisOpen(){\n\t\t\treturn this.fileChannel.isOpen();\n\t\t}", "original_code": "@Override\n\t\tpublic boolean isOpen() {\n\t\t\treturn this.fileChannel.isOpen();\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "is", "open", "(", ")", "{", "return", "this", ".", "file", "channel", ".", "is", "open", "(", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.432462+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1797927eb0974dd3b12705781fa632f6ff98f39", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "completed", "signature": null, "start_line": 176, "end_line": 179, "nloc": 4, "method_source_normalized": "@Override\n\t\t\tpublicvoidcompleted(Integer read, Object attachment){\n\t\t\t\tcomplete((read > 0) ? read : -1);\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic void completed(Integer read, Object attachment) {\n\t\t\t\tcomplete((read > 0) ? read : -1);\n\t\t\t}", "code_tokens": ["@", "override", "public", "void", "completed", "(", "integer", "read", ",", "object", "attachment", ")", "{", "complete", "(", "(", "read", ">", "__NUM__", ")", "?", "read", ":", "-", "__NUM__", ")", ";", "}"], "token_count": 28, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.432723+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "81c2076b35991a766175d151e2fc4a4daf5cf4c6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "failed", "signature": null, "start_line": 181, "end_line": 188, "nloc": 8, "method_source_normalized": "@Override\n\t\t\tpublicvoidfailed(Throwable exc, Object attachment){\n\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\tcomplete(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcompleteExceptionally(exc);\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic void failed(Throwable exc, Object attachment) {\n\t\t\t\tif (exc instanceof AsynchronousCloseException) {\n\t\t\t\t\tcomplete(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcompleteExceptionally(exc);\n\t\t\t}", "code_tokens": ["@", "override", "public", "void", "failed", "(", "throwable", "exc", ",", "object", "attachment", ")", "{", "if", "(", "exc", "instanceof", "asynchronous", "close", "exception", ")", "{", "complete", "(", "-", "__NUM__", ")", ";", "return", ";", "}", "complete", "exceptionally", "(", "exc", ")", ";", "}"], "token_count": 38, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 54, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.433143+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6ac61395d6c63600acb9be93bd274de8dd6df73d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "accept", "signature": null, "start_line": 199, "end_line": 207, "nloc": 9, "method_source_normalized": "@Override\n\t\tpublicvoidaccept(String path){\n\t\t\ttry {\n\t\t\t\tThread.sleep(WAIT_INTERVAL);\n\t\t\t}\n\t\t\tcatch (InterruptedException ex) {\n\t\t\t\tThread.currentThread().interrupt();\n\t\t\t}\n\t\t}", "original_code": "@Override\n\t\tpublic void accept(String path) {\n\t\t\ttry {\n\t\t\t\tThread.sleep(WAIT_INTERVAL);\n\t\t\t}\n\t\t\tcatch (InterruptedException ex) {\n\t\t\t\tThread.currentThread().interrupt();\n\t\t\t}\n\t\t}", "code_tokens": ["@", "override", "public", "void", "accept", "(", "string", "path", ")", "{", "try", "{", "thread", ".", "sleep", "(", "wait", "interval", ")", ";", "}", "catch", "(", "interrupted", "exception", "ex", ")", "{", "thread", ".", "current", "thread", "(", ")", ".", "interrupt", "(", ")", ";", "}", "}"], "token_count": 41, "vocab_size": 24, "cyclomatic_complexity": 2, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.433430+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "09818201c257d903e91e097c983b5c56f2c7b02b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/NamedPipeSocket.java", "file_blob_sha": null, "method_name": "accept", "signature": null, "start_line": 216, "end_line": 219, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicvoidaccept(String path){\n\t\t\tKernel32.INSTANCE.WaitNamedPipe(path, WAIT_INTERVAL);\n\t\t}", "original_code": "@Override\n\t\tpublic void accept(String path) {\n\t\t\tKernel32.INSTANCE.WaitNamedPipe(path, WAIT_INTERVAL);\n\t\t}", "code_tokens": ["@", "override", "public", "void", "accept", "(", "string", "path", ")", "{", "kernel", "32", ".", "instance", ".", "wait", "named", "pipe", "(", "path", ",", "wait", "interval", ")", ";", "}"], "token_count": 26, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.433690+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bb2e3ba01fdd26c6fa15ba4f88f307ee9bab6ab8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "public staticSocketget(String path)throws IOException{\n\t\treturn new UnixDomainSocket(path);\n\t}", "original_code": "public static Socket get(String path) throws IOException {\n\t\treturn new UnixDomainSocket(path);\n\t}", "code_tokens": ["public", "static", "socket", "get", "(", "string", "path", ")", "throws", "io", "exception", "{", "return", "new", "unix", "domain", "socket", "(", "path", ")", ";", "}"], "token_count": 22, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.434739+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b812dbe355fff151d48c757f1fb72fde514d56c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "UnixDomainSocket", "signature": null, "start_line": 51, "end_line": 54, "nloc": 4, "method_source_normalized": "privateUnixDomainSocket(String path)throws IOException{\n\t\tthis.socketAddress = UnixDomainSocketAddress.of(path);\n\t\tthis.socketChannel = SocketChannel.open(this.socketAddress);\n\t}", "original_code": "private UnixDomainSocket(String path) throws IOException {\n\t\tthis.socketAddress = UnixDomainSocketAddress.of(path);\n\t\tthis.socketChannel = SocketChannel.open(this.socketAddress);\n\t}", "code_tokens": ["private", "unix", "domain", "socket", "(", "string", "path", ")", "throws", "io", "exception", "{", "this", ".", "socket", "address", "=", "unix", "domain", "socket", "address", ".", "of", "(", "path", ")", ";", "this", ".", "socket", "channel", "=", "socket", "channel", ".", "open", "(", "this", ".", "socket", "address", ")", ";", "}"], "token_count": 44, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.435015+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cb160fa994d74bedae73c21c6949a6860539a37b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "getInputStream", "signature": null, "start_line": 56, "end_line": 69, "nloc": 14, "method_source_normalized": "@Override\n\tpublicInputStreamgetInputStream()throws IOException{\n\t\tif (isClosed()) {\n\t\t\tthrow new SocketException(\"Socket is closed\");\n\t\t}\n\t\tif (!isConnected()) {\n\t\t\tthrow new SocketException(\"Socket is not connected\");\n\t\t}\n\t\tif (isInputShutdown()) {\n\t\t\tthrow new SocketException(\"Socket input is shutdown\");\n\t\t}\n\n\t\treturn Channels.newInputStream(this.socketChannel);\n\t}", "original_code": "@Override\n\tpublic InputStream getInputStream() throws IOException {\n\t\tif (isClosed()) {\n\t\t\tthrow new SocketException(\"Socket is closed\");\n\t\t}\n\t\tif (!isConnected()) {\n\t\t\tthrow new SocketException(\"Socket is not connected\");\n\t\t}\n\t\tif (isInputShutdown()) {\n\t\t\tthrow new SocketException(\"Socket input is shutdown\");\n\t\t}\n\n\t\treturn Channels.newInputStream(this.socketChannel);\n\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "input", "stream", "(", ")", "throws", "io", "exception", "{", "if", "(", "is", "closed", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "if", "(", "!", "is", "connected", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "if", "(", "is", "input", "shutdown", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "return", "channels", ".", "new", "input", "stream", "(", "this", ".", "socket", "channel", ")", ";", "}"], "token_count": 81, "vocab_size": 29, "cyclomatic_complexity": 4, "ast_node_count": 102, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.435323+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3967ea76183a66501e3b4a74137724ee49e92c25", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "getOutputStream", "signature": null, "start_line": 71, "end_line": 84, "nloc": 14, "method_source_normalized": "@Override\n\tpublicOutputStreamgetOutputStream()throws IOException{\n\t\tif (isClosed()) {\n\t\t\tthrow new SocketException(\"Socket is closed\");\n\t\t}\n\t\tif (!isConnected()) {\n\t\t\tthrow new SocketException(\"Socket is not connected\");\n\t\t}\n\t\tif (isOutputShutdown()) {\n\t\t\tthrow new SocketException(\"Socket output is shutdown\");\n\t\t}\n\n\t\treturn Channels.newOutputStream(this.socketChannel);\n\t}", "original_code": "@Override\n\tpublic OutputStream getOutputStream() throws IOException {\n\t\tif (isClosed()) {\n\t\t\tthrow new SocketException(\"Socket is closed\");\n\t\t}\n\t\tif (!isConnected()) {\n\t\t\tthrow new SocketException(\"Socket is not connected\");\n\t\t}\n\t\tif (isOutputShutdown()) {\n\t\t\tthrow new SocketException(\"Socket output is shutdown\");\n\t\t}\n\n\t\treturn Channels.newOutputStream(this.socketChannel);\n\t}", "code_tokens": ["@", "override", "public", "output", "stream", "get", "output", "stream", "(", ")", "throws", "io", "exception", "{", "if", "(", "is", "closed", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "if", "(", "!", "is", "connected", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "if", "(", "is", "output", "shutdown", "(", ")", ")", "{", "throw", "new", "socket", "exception", "(", "__STR__", ")", ";", "}", "return", "channels", ".", "new", "output", "stream", "(", "this", ".", "socket", "channel", ")", ";", "}"], "token_count": 81, "vocab_size": 29, "cyclomatic_complexity": 4, "ast_node_count": 102, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.435635+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "25163bec48b33b248418f948405019ed7d2060bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "getLocalSocketAddress", "signature": null, "start_line": 86, "end_line": 89, "nloc": 4, "method_source_normalized": "@Override\n\tpublicSocketAddressgetLocalSocketAddress(){\n\t\treturn this.socketAddress;\n\t}", "original_code": "@Override\n\tpublic SocketAddress getLocalSocketAddress() {\n\t\treturn this.socketAddress;\n\t}", "code_tokens": ["@", "override", "public", "socket", "address", "get", "local", "socket", "address", "(", ")", "{", "return", "this", ".", "socket", "address", ";", "}"], "token_count": 19, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.435886+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ada7527618987c6d8dcb8b551d96ea570c670485", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "getRemoteSocketAddress", "signature": null, "start_line": 91, "end_line": 94, "nloc": 4, "method_source_normalized": "@Override\n\tpublicSocketAddressgetRemoteSocketAddress(){\n\t\treturn this.socketAddress;\n\t}", "original_code": "@Override\n\tpublic SocketAddress getRemoteSocketAddress() {\n\t\treturn this.socketAddress;\n\t}", "code_tokens": ["@", "override", "public", "socket", "address", "get", "remote", "socket", "address", "(", ")", "{", "return", "this", ".", "socket", "address", ";", "}"], "token_count": 19, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.436137+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e322771c23f3cdc5972224b572ea7016270c7bd6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/UnixDomainSocket.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 96, "end_line": 100, "nloc": 5, "method_source_normalized": "@Override\n\tpublicvoidclose()throws IOException{\n\t\tsuper.close();\n\t\tthis.socketChannel.close();\n\t}", "original_code": "@Override\n\tpublic void close() throws IOException {\n\t\tsuper.close();\n\t\tthis.socketChannel.close();\n\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "super", ".", "close", "(", ")", ";", "this", ".", "socket", "channel", ".", "close", "(", ")", ";", "}"], "token_count": 27, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.436392+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f0413f92ba5f634fc359c5e321cdccad42757c76", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "connect", "signature": null, "start_line": 33, "end_line": 35, "nloc": 3, "method_source_normalized": "@Override\n\tpublicvoidconnect(SocketAddress endpoint)throws IOException{\n\t}", "original_code": "@Override\n\tpublic void connect(SocketAddress endpoint) throws IOException {\n\t}", "code_tokens": ["@", "override", "public", "void", "connect", "(", "socket", "address", "endpoint", ")", "throws", "io", "exception", "{", "}"], "token_count": 15, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.437208+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a7855a1fa5dc81b557f52012119af9141a4f8341", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "connect", "signature": null, "start_line": 37, "end_line": 39, "nloc": 3, "method_source_normalized": "@Override\n\tpublicvoidconnect(SocketAddress endpoint, int timeout)throws IOException{\n\t}", "original_code": "@Override\n\tpublic void connect(SocketAddress endpoint, int timeout) throws IOException {\n\t}", "code_tokens": ["@", "override", "public", "void", "connect", "(", "socket", "address", "endpoint", ",", "int", "timeout", ")", "throws", "io", "exception", "{", "}"], "token_count": 18, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.437459+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a5a14be1fb26b1d95f1ac7030a661e41f34cbbeb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "isConnected", "signature": null, "start_line": 41, "end_line": 44, "nloc": 4, "method_source_normalized": "@Override\n\tpublicbooleanisConnected(){\n\t\treturn true;\n\t}", "original_code": "@Override\n\tpublic boolean isConnected() {\n\t\treturn true;\n\t}", "code_tokens": ["@", "override", "public", "boolean", "is", "connected", "(", ")", "{", "return", "true", ";", "}"], "token_count": 13, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.437698+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "01f01e07a63d61511cba16e89ab0b3d16d792782", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "isBound", "signature": null, "start_line": 46, "end_line": 49, "nloc": 4, "method_source_normalized": "@Override\n\tpublicbooleanisBound(){\n\t\treturn true;\n\t}", "original_code": "@Override\n\tpublic boolean isBound() {\n\t\treturn true;\n\t}", "code_tokens": ["@", "override", "public", "boolean", "is", "bound", "(", ")", "{", "return", "true", ";", "}"], "token_count": 13, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.437929+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a87a4f413f00d33ce23fec5fae5787c17de012b4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "shutdownInput", "signature": null, "start_line": 51, "end_line": 54, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidshutdownInput()throws IOException{\n\t\tthrow new UnsupportedSocketOperationException();\n\t}", "original_code": "@Override\n\tpublic void shutdownInput() throws IOException {\n\t\tthrow new UnsupportedSocketOperationException();\n\t}", "code_tokens": ["@", "override", "public", "void", "shutdown", "input", "(", ")", "throws", "io", "exception", "{", "throw", "new", "unsupported", "socket", "operation", "exception", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.438171+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4c2f00391d226501ca240e4041145fbab5897eed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "shutdownOutput", "signature": null, "start_line": 56, "end_line": 59, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidshutdownOutput()throws IOException{\n\t\tthrow new UnsupportedSocketOperationException();\n\t}", "original_code": "@Override\n\tpublic void shutdownOutput() throws IOException {\n\t\tthrow new UnsupportedSocketOperationException();\n\t}", "code_tokens": ["@", "override", "public", "void", "shutdown", "output", "(", ")", "throws", "io", "exception", "{", "throw", "new", "unsupported", "socket", "operation", "exception", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.438414+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5581b28c075b9d682051261a075236f6e170f60f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "getInetAddress", "signature": null, "start_line": 61, "end_line": 64, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableInetAddressgetInetAddress(){\n\t\treturn null;\n\t}", "original_code": "@Override\n\tpublic @Nullable InetAddress getInetAddress() {\n\t\treturn null;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "inet", "address", "get", "inet", "address", "(", ")", "{", "return", "null", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.438653+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "df14fc45d27722f1ebab7a78eb3d43e0ec0c57e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "getLocalAddress", "signature": null, "start_line": 66, "end_line": 69, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableInetAddressgetLocalAddress(){\n\t\treturn null;\n\t}", "original_code": "@Override\n\tpublic @Nullable InetAddress getLocalAddress() {\n\t\treturn null;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "inet", "address", "get", "local", "address", "(", ")", "{", "return", "null", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.438887+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77346d103c042397f3668d40075c0bd614df5174", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "getLocalSocketAddress", "signature": null, "start_line": 71, "end_line": 74, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableSocketAddressgetLocalSocketAddress(){\n\t\treturn null;\n\t}", "original_code": "@Override\n\tpublic @Nullable SocketAddress getLocalSocketAddress() {\n\t\treturn null;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "socket", "address", "get", "local", "socket", "address", "(", ")", "{", "return", "null", ";", "}"], "token_count": 18, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.439120+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "308fb10bc66116db9bae23325d7b178627b49a2b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "getRemoteSocketAddress", "signature": null, "start_line": 76, "end_line": 79, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableSocketAddressgetRemoteSocketAddress(){\n\t\treturn null;\n\t}", "original_code": "@Override\n\tpublic @Nullable SocketAddress getRemoteSocketAddress() {\n\t\treturn null;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "socket", "address", "get", "remote", "socket", "address", "(", ")", "{", "return", "null", ";", "}"], "token_count": 18, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.439353+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20c22eeb4d74c57615a575e9d7c0d4cd7c457bc4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/socket/AbstractSocket.java", "file_blob_sha": null, "method_name": "UnsupportedSocketOperationException", "signature": null, "start_line": 83, "end_line": 85, "nloc": 3, "method_source_normalized": "UnsupportedSocketOperationException(){\n\t\t\tsuper(\"Unsupported socket operation\");\n\t\t}", "original_code": "UnsupportedSocketOperationException() {\n\t\t\tsuper(\"Unsupported socket operation\");\n\t\t}", "code_tokens": ["unsupported", "socket", "operation", "exception", "(", ")", "{", "super", "(", "__STR__", ")", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 15, "n_identifiers": 1, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.439583+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65511b7430b67599dc0c95b1b172e022dc6da928", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerHost.java", "file_blob_sha": null, "method_name": "DockerHost", "signature": null, "start_line": 35, "end_line": 37, "nloc": 3, "method_source_normalized": "publicDockerHost(@Nullable String address){\n\t\tthis(address, false, null);\n\t}", "original_code": "public DockerHost(@Nullable String address) {\n\t\tthis(address, false, null);\n\t}", "code_tokens": ["public", "docker", "host", "(", "@", "nullable", "string", "address", ")", "{", "this", "(", "address", ",", "false", ",", "null", ")", ";", "}"], "token_count": 20, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.440336+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ccf2ed56835dbc7e1a07ee9304b5a4d9807015ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerHost.java", "file_blob_sha": null, "method_name": "DockerHost", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "publicDockerHost(@Nullable String address, boolean secure, @Nullable String certificatePath){\n\t\tthis.address = address;\n\t\tthis.secure = secure;\n\t\tthis.certificatePath = certificatePath;\n\t}", "original_code": "public DockerHost(@Nullable String address, boolean secure, @Nullable String certificatePath) {\n\t\tthis.address = address;\n\t\tthis.secure = secure;\n\t\tthis.certificatePath = certificatePath;\n\t}", "code_tokens": ["public", "docker", "host", "(", "@", "nullable", "string", "address", ",", "boolean", "secure", ",", "@", "nullable", "string", "certificate", "path", ")", "{", "this", ".", "address", "=", "address", ";", "this", ".", "secure", "=", "secure", ";", "this", ".", "certificate", "path", "=", "certificate", "path", ";", "}"], "token_count": 40, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 14, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.440601+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "97a3d1a5cffe3107c43448c82b5506bb36f8e06c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerHost.java", "file_blob_sha": null, "method_name": "getAddress", "signature": null, "start_line": 45, "end_line": 47, "nloc": 3, "method_source_normalized": "public @NullableStringgetAddress(){\n\t\treturn this.address;\n\t}", "original_code": "public @Nullable String getAddress() {\n\t\treturn this.address;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "address", "(", ")", "{", "return", "this", ".", "address", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.440845+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "280b9677d20edea6340698547b1a2943262bc107", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerHost.java", "file_blob_sha": null, "method_name": "isSecure", "signature": null, "start_line": 49, "end_line": 51, "nloc": 3, "method_source_normalized": "publicbooleanisSecure(){\n\t\treturn this.secure;\n\t}", "original_code": "public boolean isSecure() {\n\t\treturn this.secure;\n\t}", "code_tokens": ["public", "boolean", "is", "secure", "(", ")", "{", "return", "this", ".", "secure", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.441077+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3b3f65862f541c7f54f5bdf162a333bee7e2432d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerHost.java", "file_blob_sha": null, "method_name": "getCertificatePath", "signature": null, "start_line": 53, "end_line": 55, "nloc": 3, "method_source_normalized": "public @NullableStringgetCertificatePath(){\n\t\treturn this.certificatePath;\n\t}", "original_code": "public @Nullable String getCertificatePath() {\n\t\treturn this.certificatePath;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "certificate", "path", "(", ")", "{", "return", "this", ".", "certificate", "path", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.441312+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "95e4bd6bd54c703d974b0e0912f4618479d375ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "DockerRegistryConfigAuthentication", "signature": null, "start_line": 56, "end_line": 60, "nloc": 5, "method_source_normalized": "DockerRegistryConfigAuthentication(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler){\n\t\tthis(fallback, credentialHelperExceptionHandler, Environment.SYSTEM,\n\t\t\t\t(helper) -> new CredentialHelper(\"docker-credential-\" + helper));\n\t}", "original_code": "DockerRegistryConfigAuthentication(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler) {\n\t\tthis(fallback, credentialHelperExceptionHandler, Environment.SYSTEM,\n\t\t\t\t(helper) -> new CredentialHelper(\"docker-credential-\" + helper));\n\t}", "code_tokens": ["docker", "registry", "config", "authentication", "(", "@", "nullable", "docker", "registry", "authentication", "fallback", ",", "bi", "consumer", "<", "string", ",", "exception", ">", "credential", "helper", "exception", "handler", ")", "{", "this", "(", "fallback", ",", "credential", "helper", "exception", "handler", ",", "environment", ".", "system", ",", "(", "helper", ")", "->", "new", "credential", "helper", "(", "__STR__", "+", "helper", ")", ")", ";", "}"], "token_count": 53, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.443469+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0c9e1b991134a29f5d8e98f3b1181fedbee297c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "DockerRegistryConfigAuthentication", "signature": null, "start_line": 62, "end_line": 69, "nloc": 8, "method_source_normalized": "DockerRegistryConfigAuthentication(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler, Environment environment,\n\t\t\tFunction<String, CredentialHelper> credentialHelperFactory){\n\t\tthis.fallback = fallback;\n\t\tthis.credentialHelperExceptionHandler = credentialHelperExceptionHandler;\n\t\tthis.dockerConfig = DockerConfigurationMetadata.from(environment).getConfiguration();\n\t\tthis.credentialHelperFactory = credentialHelperFactory;\n\t}", "original_code": "DockerRegistryConfigAuthentication(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler, Environment environment,\n\t\t\tFunction<String, CredentialHelper> credentialHelperFactory) {\n\t\tthis.fallback = fallback;\n\t\tthis.credentialHelperExceptionHandler = credentialHelperExceptionHandler;\n\t\tthis.dockerConfig = DockerConfigurationMetadata.from(environment).getConfiguration();\n\t\tthis.credentialHelperFactory = credentialHelperFactory;\n\t}", "code_tokens": ["docker", "registry", "config", "authentication", "(", "@", "nullable", "docker", "registry", "authentication", "fallback", ",", "bi", "consumer", "<", "string", ",", "exception", ">", "credential", "helper", "exception", "handler", ",", "environment", "environment", ",", "function", "<", "string", ",", "credential", "helper", ">", "credential", "helper", "factory", ")", "{", "this", ".", "fallback", "=", "fallback", ";", "this", ".", "credential", "helper", "exception", "handler", "=", "credential", "helper", "exception", "handler", ";", "this", ".", "docker", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "environment", ")", ".", "get", "configuration", "(", ")", ";", "this", ".", "credential", "helper", "factory", "=", "credential", "helper", "factory", ";", "}"], "token_count": 87, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 25, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.443774+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "44f9f512d50a817fdb0fafdf5c832efca61d5f35", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getAuthHeader", "signature": null, "start_line": 71, "end_line": 74, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableStringgetAuthHeader(){\n\t\treturn getAuthHeader(null);\n\t}", "original_code": "@Override\n\tpublic @Nullable String getAuthHeader() {\n\t\treturn getAuthHeader(null);\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "string", "get", "auth", "header", "(", ")", "{", "return", "get", "auth", "header", "(", "null", ")", ";", "}"], "token_count": 21, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.444038+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ac011b277a25d33bc405e1259687cc8ee2d1db7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getAuthHeader", "signature": null, "start_line": 76, "end_line": 81, "nloc": 6, "method_source_normalized": "@Override\n\tpublic @NullableStringgetAuthHeader(@Nullable ImageReference imageReference){\n\t\tString serverUrl = getServerUrl(imageReference);\n\t\tDockerRegistryAuthentication authentication = getAuthentication(serverUrl);\n\t\treturn (authentication != null) ? authentication.getAuthHeader(imageReference) : null;\n\t}", "original_code": "@Override\n\tpublic @Nullable String getAuthHeader(@Nullable ImageReference imageReference) {\n\t\tString serverUrl = getServerUrl(imageReference);\n\t\tDockerRegistryAuthentication authentication = getAuthentication(serverUrl);\n\t\treturn (authentication != null) ? authentication.getAuthHeader(imageReference) : null;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "string", "get", "auth", "header", "(", "@", "nullable", "image", "reference", "image", "reference", ")", "{", "string", "server", "url", "=", "get", "server", "url", "(", "image", "reference", ")", ";", "docker", "registry", "authentication", "authentication", "=", "get", "authentication", "(", "server", "url", ")", ";", "return", "(", "authentication", "!=", "null", ")", "?", "authentication", ".", "get", "auth", "header", "(", "image", "reference", ")", ":", "null", ";", "}"], "token_count": 62, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 19, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.444332+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a0388c5ef00da48506cc7c6b1c7d4c5401dbe73e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getServerUrl", "signature": null, "start_line": 83, "end_line": 86, "nloc": 4, "method_source_normalized": "private @NullableStringgetServerUrl(@Nullable ImageReference imageReference){\n\t\tString domain = (imageReference != null) ? imageReference.getDomain() : null;\n\t\treturn (!DEFAULT_DOMAIN.equals(domain)) ? domain : INDEX_URL;\n\t}", "original_code": "private @Nullable String getServerUrl(@Nullable ImageReference imageReference) {\n\t\tString domain = (imageReference != null) ? imageReference.getDomain() : null;\n\t\treturn (!DEFAULT_DOMAIN.equals(domain)) ? domain : INDEX_URL;\n\t}", "code_tokens": ["private", "@", "nullable", "string", "get", "server", "url", "(", "@", "nullable", "image", "reference", "image", "reference", ")", "{", "string", "domain", "=", "(", "image", "reference", "!=", "null", ")", "?", "image", "reference", ".", "get", "domain", "(", ")", ":", "null", ";", "return", "(", "!", "default", "domain", ".", "equals", "(", "domain", ")", ")", "?", "domain", ":", "index", "url", ";", "}"], "token_count": 54, "vocab_size": 26, "cyclomatic_complexity": 3, "ast_node_count": 66, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.444609+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "74eebe0b4080b3ab7e0992d31ad2a5be10b6acba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getAuthentication", "signature": null, "start_line": 88, "end_line": 105, "nloc": 18, "method_source_normalized": "private @NullableDockerRegistryAuthenticationgetAuthentication(@Nullable String serverUrl){\n\t\tCredential credentialsFromHelper = getCredentialsFromHelper(serverUrl);\n\t\tMap.Entry<String, Auth> authConfigEntry = getAuthConfigEntry(serverUrl);\n\t\tAuth authConfig = (authConfigEntry != null) ? authConfigEntry.getValue() : null;\n\t\tif (credentialsFromHelper != null) {\n\t\t\treturn getAuthentication(credentialsFromHelper, authConfig, serverUrl);\n\t\t}\n\t\tif (authConfig != null) {\n\t\t\tAssert.state(authConfigEntry != null, \"'authConfigEntry' must not be null\");\n\t\t\tString username = authConfig.getUsername();\n\t\t\tString password = authConfig.getPassword();\n\t\t\tAssert.state(username != null, \"'username' must not be null\");\n\t\t\tAssert.state(password != null, \"'password' must not be null\");\n\t\t\treturn DockerRegistryAuthentication.user(username, password, authConfigEntry.getKey(),\n\t\t\t\t\tauthConfig.getEmail());\n\t\t}\n\t\treturn this.fallback;\n\t}", "original_code": "private @Nullable DockerRegistryAuthentication getAuthentication(@Nullable String serverUrl) {\n\t\tCredential credentialsFromHelper = getCredentialsFromHelper(serverUrl);\n\t\tMap.Entry<String, Auth> authConfigEntry = getAuthConfigEntry(serverUrl);\n\t\tAuth authConfig = (authConfigEntry != null) ? authConfigEntry.getValue() : null;\n\t\tif (credentialsFromHelper != null) {\n\t\t\treturn getAuthentication(credentialsFromHelper, authConfig, serverUrl);\n\t\t}\n\t\tif (authConfig != null) {\n\t\t\tAssert.state(authConfigEntry != null, \"'authConfigEntry' must not be null\");\n\t\t\tString username = authConfig.getUsername();\n\t\t\tString password = authConfig.getPassword();\n\t\t\tAssert.state(username != null, \"'username' must not be null\");\n\t\t\tAssert.state(password != null, \"'password' must not be null\");\n\t\t\treturn DockerRegistryAuthentication.user(username, password, authConfigEntry.getKey(),\n\t\t\t\t\tauthConfig.getEmail());\n\t\t}\n\t\treturn this.fallback;\n\t}", "code_tokens": ["private", "@", "nullable", "docker", "registry", "authentication", "get", "authentication", "(", "@", "nullable", "string", "server", "url", ")", "{", "credential", "credentials", "from", "helper", "=", "get", "credentials", "from", "helper", "(", "server", "url", ")", ";", "map", ".", "entry", "<", "string", ",", "auth", ">", "auth", "config", "entry", "=", "get", "auth", "config", "entry", "(", "server", "url", ")", ";", "auth", "auth", "config", "=", "(", "auth", "config", "entry", "!=", "null", ")", "?", "auth", "config", "entry", ".", "get", "value", "(", ")", ":", "null", ";", "if", "(", "credentials", "from", "helper", "!=", "null", ")", "{", "return", "get", "authentication", "(", "credentials", "from", "helper", ",", "auth", "config", ",", "server", "url", ")", ";", "}", "if", "(", "auth", "config", "!=", "null", ")", "{", "assert", ".", "state", "(", "auth", "config", "entry", "!=", "null", ",", "__STR__", ")", ";", "string", "username", "=", "auth", "config", ".", "get", "username", "(", ")", ";", "string", "password", "=", "auth", "config", ".", "get", "password", "(", ")", ";", "assert", ".", "state", "(", "username", "!=", "null", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "password", "!=", "null", ",", "__STR__", ")", ";", "return", "docker", "registry", "authentication", ".", "user", "(", "username", ",", "password", ",", "auth", "config", "entry", ".", "get", "key", "(", ")", ",", "auth", "config", ".", "get", "email", "(", ")", ")", ";", "}", "return", "this", ".", "fallback", ";", "}"], "token_count": 200, "vocab_size": 45, "cyclomatic_complexity": 4, "ast_node_count": 223, "n_identifiers": 54, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 124, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.444990+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cd7cc21e2375c3e7fb7e01c107984ffc41a34ad1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getAuthentication", "signature": null, "start_line": 107, "end_line": 118, "nloc": 12, "method_source_normalized": "privateDockerRegistryAuthenticationgetAuthentication(Credential credentialsFromHelper, @Nullable Auth authConfig,\n\t\t\t@Nullable String serverUrl){\n\t\tif (credentialsFromHelper.isIdentityToken()) {\n\t\t\treturn DockerRegistryAuthentication.token(credentialsFromHelper.getSecret());\n\t\t}\n\t\tString username = credentialsFromHelper.getUsername();\n\t\tString password = credentialsFromHelper.getSecret();\n\t\tString serverAddress = (StringUtils.hasLength(credentialsFromHelper.getServerUrl()))\n\t\t\t\t? credentialsFromHelper.getServerUrl() : serverUrl;\n\t\tString email = (authConfig != null) ? authConfig.getEmail() : null;\n\t\treturn DockerRegistryAuthentication.user(username, password, serverAddress, email);\n\t}", "original_code": "private DockerRegistryAuthentication getAuthentication(Credential credentialsFromHelper, @Nullable Auth authConfig,\n\t\t\t@Nullable String serverUrl) {\n\t\tif (credentialsFromHelper.isIdentityToken()) {\n\t\t\treturn DockerRegistryAuthentication.token(credentialsFromHelper.getSecret());\n\t\t}\n\t\tString username = credentialsFromHelper.getUsername();\n\t\tString password = credentialsFromHelper.getSecret();\n\t\tString serverAddress = (StringUtils.hasLength(credentialsFromHelper.getServerUrl()))\n\t\t\t\t? credentialsFromHelper.getServerUrl() : serverUrl;\n\t\tString email = (authConfig != null) ? authConfig.getEmail() : null;\n\t\treturn DockerRegistryAuthentication.user(username, password, serverAddress, email);\n\t}", "code_tokens": ["private", "docker", "registry", "authentication", "get", "authentication", "(", "credential", "credentials", "from", "helper", ",", "@", "nullable", "auth", "auth", "config", ",", "@", "nullable", "string", "server", "url", ")", "{", "if", "(", "credentials", "from", "helper", ".", "is", "identity", "token", "(", ")", ")", "{", "return", "docker", "registry", "authentication", ".", "token", "(", "credentials", "from", "helper", ".", "get", "secret", "(", ")", ")", ";", "}", "string", "username", "=", "credentials", "from", "helper", ".", "get", "username", "(", ")", ";", "string", "password", "=", "credentials", "from", "helper", ".", "get", "secret", "(", ")", ";", "string", "server", "address", "=", "(", "string", "utils", ".", "has", "length", "(", "credentials", "from", "helper", ".", "get", "server", "url", "(", ")", ")", ")", "?", "credentials", "from", "helper", ".", "get", "server", "url", "(", ")", ":", "server", "url", ";", "string", "email", "=", "(", "auth", "config", "!=", "null", ")", "?", "auth", "config", ".", "get", "email", "(", ")", ":", "null", ";", "return", "docker", "registry", "authentication", ".", "user", "(", "username", ",", "password", ",", "server", "address", ",", "email", ")", ";", "}"], "token_count": 154, "vocab_size": 42, "cyclomatic_complexity": 4, "ast_node_count": 163, "n_identifiers": 44, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 73, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.445355+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5bb2ce45b36f1ca30cfeb9eeb92b9cb448fb5c4e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getCredentialsFromHelper", "signature": null, "start_line": 120, "end_line": 123, "nloc": 4, "method_source_normalized": "private @NullableCredentialgetCredentialsFromHelper(@Nullable String serverUrl){\n\t\treturn StringUtils.hasLength(serverUrl)\n\t\t\t\t? credentialFromHelperCache.computeIfAbsent(serverUrl, this::computeCredentialsFromHelper) : null;\n\t}", "original_code": "private @Nullable Credential getCredentialsFromHelper(@Nullable String serverUrl) {\n\t\treturn StringUtils.hasLength(serverUrl)\n\t\t\t\t? credentialFromHelperCache.computeIfAbsent(serverUrl, this::computeCredentialsFromHelper) : null;\n\t}", "code_tokens": ["private", "@", "nullable", "credential", "get", "credentials", "from", "helper", "(", "@", "nullable", "string", "server", "url", ")", "{", "return", "string", "utils", ".", "has", "length", "(", "server", "url", ")", "?", "credential", "from", "helper", "cache", ".", "compute", "if", "absent", "(", "server", "url", ",", "this", "::", "compute", "credentials", "from", "helper", ")", ":", "null", ";", "}"], "token_count": 50, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 49, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.445650+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ac5235bbd80b37cfd28ad2037483f37978bf3d6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "computeCredentialsFromHelper", "signature": null, "start_line": 125, "end_line": 138, "nloc": 14, "method_source_normalized": "private @NullableCredentialcomputeCredentialsFromHelper(String serverUrl){\n\t\tCredentialHelper credentialHelper = getCredentialHelper(serverUrl);\n\t\tif (credentialHelper != null) {\n\t\t\ttry {\n\t\t\t\treturn credentialHelper.get(serverUrl);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = \"Error retrieving credentials for '%s' due to: %s\".formatted(serverUrl,\n\t\t\t\t\t\tex.getMessage());\n\t\t\t\tthis.credentialHelperExceptionHandler.accept(message, ex);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "original_code": "private @Nullable Credential computeCredentialsFromHelper(String serverUrl) {\n\t\tCredentialHelper credentialHelper = getCredentialHelper(serverUrl);\n\t\tif (credentialHelper != null) {\n\t\t\ttry {\n\t\t\t\treturn credentialHelper.get(serverUrl);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = \"Error retrieving credentials for '%s' due to: %s\".formatted(serverUrl,\n\t\t\t\t\t\tex.getMessage());\n\t\t\t\tthis.credentialHelperExceptionHandler.accept(message, ex);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["private", "@", "nullable", "credential", "compute", "credentials", "from", "helper", "(", "string", "server", "url", ")", "{", "credential", "helper", "credential", "helper", "=", "get", "credential", "helper", "(", "server", "url", ")", ";", "if", "(", "credential", "helper", "!=", "null", ")", "{", "try", "{", "return", "credential", "helper", ".", "get", "(", "server", "url", ")", ";", "}", "catch", "(", "exception", "ex", ")", "{", "string", "message", "=", "__STR__", ".", "formatted", "(", "server", "url", ",", "ex", ".", "get", "message", "(", ")", ")", ";", "this", ".", "credential", "helper", "exception", "handler", ".", "accept", "(", "message", ",", "ex", ")", ";", "}", "}", "return", "null", ";", "}"], "token_count": 92, "vocab_size": 34, "cyclomatic_complexity": 3, "ast_node_count": 109, "n_identifiers": 25, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.445954+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a7126a8ad11b797667e2d144966e0023fa70bd06", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getCredentialHelper", "signature": null, "start_line": 140, "end_line": 143, "nloc": 4, "method_source_normalized": "private @NullableCredentialHelpergetCredentialHelper(String serverUrl){\n\t\tString name = this.dockerConfig.getCredHelpers().getOrDefault(serverUrl, this.dockerConfig.getCredsStore());\n\t\treturn (StringUtils.hasLength(name)) ? this.credentialHelperFactory.apply(name) : null;\n\t}", "original_code": "private @Nullable CredentialHelper getCredentialHelper(String serverUrl) {\n\t\tString name = this.dockerConfig.getCredHelpers().getOrDefault(serverUrl, this.dockerConfig.getCredsStore());\n\t\treturn (StringUtils.hasLength(name)) ? this.credentialHelperFactory.apply(name) : null;\n\t}", "code_tokens": ["private", "@", "nullable", "credential", "helper", "get", "credential", "helper", "(", "string", "server", "url", ")", "{", "string", "name", "=", "this", ".", "docker", "config", ".", "get", "cred", "helpers", "(", ")", ".", "get", "or", "default", "(", "server", "url", ",", "this", ".", "docker", "config", ".", "get", "creds", "store", "(", ")", ")", ";", "return", "(", "string", "utils", ".", "has", "length", "(", "name", ")", ")", "?", "this", ".", "credential", "helper", "factory", ".", "apply", "(", "name", ")", ":", "null", ";", "}"], "token_count": 73, "vocab_size": 36, "cyclomatic_complexity": 2, "ast_node_count": 80, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.446363+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "41b83e6c53a818606a1960e0f8a5e51931688d80", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthentication.java", "file_blob_sha": null, "method_name": "getAuthConfigEntry", "signature": null, "start_line": 145, "end_line": 155, "nloc": 11, "method_source_normalized": "privateMap.@Nullable Entry<String, Auth>getAuthConfigEntry(@Nullable String serverUrl){\n\t\tif (serverUrl == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (Map.Entry<String, Auth> candidate : this.dockerConfig.getAuths().entrySet()) {\n\t\t\tif (candidate.getKey().equals(serverUrl) || candidate.getKey().endsWith(\"://\" + serverUrl)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "original_code": "private Map.@Nullable Entry<String, Auth> getAuthConfigEntry(@Nullable String serverUrl) {\n\t\tif (serverUrl == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (Map.Entry<String, Auth> candidate : this.dockerConfig.getAuths().entrySet()) {\n\t\t\tif (candidate.getKey().equals(serverUrl) || candidate.getKey().endsWith(\"://\" + serverUrl)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["private", "map", ".", "@", "nullable", "entry", "<", "string", ",", "auth", ">", "get", "auth", "config", "entry", "(", "@", "nullable", "string", "server", "url", ")", "{", "if", "(", "server", "url", "==", "null", ")", "{", "return", "null", ";", "}", "for", "(", "map", ".", "entry", "<", "string", ",", "auth", ">", "candidate", ":", "this", ".", "docker", "config", ".", "get", "auths", "(", ")", ".", "entry", "set", "(", ")", ")", "{", "if", "(", "candidate", ".", "get", "key", "(", ")", ".", "equals", "(", "server", "url", ")", "||", "candidate", ".", "get", "key", "(", ")", ".", "ends", "with", "(", "__STR__", "+", "server", "url", ")", ")", "{", "return", "candidate", ";", "}", "}", "return", "null", ";", "}"], "token_count": 104, "vocab_size": 38, "cyclomatic_complexity": 5, "ast_node_count": 132, "n_identifiers": 27, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.446684+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d6faa0931efe6af3a793355d0faaaf7750a2c380", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConnectionConfiguration.java", "file_blob_sha": null, "method_name": "Host", "signature": null, "start_line": 38, "end_line": 39, "nloc": 2, "method_source_normalized": "recordHost(String address, boolean secure,\n\t\t\t@Nullable String certificatePath)", "original_code": "record Host(String address, boolean secure,\n\t\t\t@Nullable String certificatePath)", "code_tokens": ["record", "host", "(", "string", "address", ",", "boolean", "secure", ",", "@", "nullable", "string", "certificate", "path", ")", ""], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.447415+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bda11814dec589ff85ec9c318b36c5c8885d09b1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConnectionConfiguration.java", "file_blob_sha": null, "method_name": "Host", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "implementsDockerConnectionConfiguration {\n\n\t\tpublicHost(String address){\n\t\t\tthis(address, false, null);\n\t\t}", "original_code": "implements DockerConnectionConfiguration {\n\n\t\tpublic Host(String address) {\n\t\t\tthis(address, false, null);\n\t\t}", "code_tokens": ["implements", "docker", "connection", "configuration", "{", "public", "host", "(", "string", "address", ")", "{", "this", "(", "address", ",", "false", ",", "null", ")", ";", "}"], "token_count": 22, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 8, "ast_max_depth": 4, "ast_error_count": 2, "ast_error_nodes": ["this(address, false, null)", "DockerConnectionConfiguration {\n\n\t\tpublic"], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.447671+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db3088770098f74f34dfeaeefce851139b99d797", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConnectionConfiguration.java", "file_blob_sha": null, "method_name": "hasLength", "signature": null, "start_line": 45, "end_line": 46, "nloc": 2, "method_source_normalized": "publicHost{\n\t\t\tAssert.hasLength(address, \"'address' must not be empty\");", "original_code": "public Host {\n\t\t\tAssert.hasLength(address, \"'address' must not be empty\");", "code_tokens": ["public", "host", "{", "assert", ".", "has", "length", "(", "address", ",", "__STR__", ")", ";"], "token_count": 13, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 2, "ast_error_nodes": ["address, \"'address' must not be empty\"", "{\n\t\t\tAssert."], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.447914+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e77f4aaf3fc4fdf81388f19b7b082079520b63b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "DockerConfigurationMetadata", "signature": null, "start_line": 78, "end_line": 82, "nloc": 5, "method_source_normalized": "privateDockerConfigurationMetadata(String configLocation, DockerConfig config, DockerContext context){\n\t\tthis.configLocation = configLocation;\n\t\tthis.config = config;\n\t\tthis.context = context;\n\t}", "original_code": "private DockerConfigurationMetadata(String configLocation, DockerConfig config, DockerContext context) {\n\t\tthis.configLocation = configLocation;\n\t\tthis.config = config;\n\t\tthis.context = context;\n\t}", "code_tokens": ["private", "docker", "configuration", "metadata", "(", "string", "config", "location", ",", "docker", "config", "config", ",", "docker", "context", "context", ")", "{", "this", ".", "config", "location", "=", "config", "location", ";", "this", ".", "config", "=", "config", ";", "this", ".", "context", "=", "context", ";", "}"], "token_count": 39, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.451415+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2610cce555a105b5b858a9e78b0d145b56c971ed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getConfiguration", "signature": null, "start_line": 84, "end_line": 86, "nloc": 3, "method_source_normalized": "DockerConfiggetConfiguration(){\n\t\treturn this.config;\n\t}", "original_code": "DockerConfig getConfiguration() {\n\t\treturn this.config;\n\t}", "code_tokens": ["docker", "config", "get", "configuration", "(", ")", "{", "return", "this", ".", "config", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.451664+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db2be348309e9a698db69834be9a1300e3f92a68", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getContext", "signature": null, "start_line": 88, "end_line": 90, "nloc": 3, "method_source_normalized": "DockerContextgetContext(){\n\t\treturn this.context;\n\t}", "original_code": "DockerContext getContext() {\n\t\treturn this.context;\n\t}", "code_tokens": ["docker", "context", "get", "context", "(", ")", "{", "return", "this", ".", "context", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.451896+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e686c6b85f033600574b1be162475a308ecee62", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "forContext", "signature": null, "start_line": 92, "end_line": 94, "nloc": 3, "method_source_normalized": "DockerContextforContext(@Nullable String context){\n\t\treturn createDockerContext(this.configLocation, context);\n\t}", "original_code": "DockerContext forContext(@Nullable String context) {\n\t\treturn createDockerContext(this.configLocation, context);\n\t}", "code_tokens": ["docker", "context", "for", "context", "(", "@", "nullable", "string", "context", ")", "{", "return", "create", "docker", "context", "(", "this", ".", "config", "location", ",", "context", ")", ";", "}"], "token_count": 25, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.452142+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62d080dd410caca12442996afca3b7ebe4baa6bb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 96, "end_line": 101, "nloc": 6, "method_source_normalized": "staticDockerConfigurationMetadatafrom(Environment environment){\n\t\tif (environment == Environment.SYSTEM) {\n\t\t\treturn systemEnvironmentConfigurationMetadata.get();\n\t\t}\n\t\treturn create(environment);\n\t}", "original_code": "static DockerConfigurationMetadata from(Environment environment) {\n\t\tif (environment == Environment.SYSTEM) {\n\t\t\treturn systemEnvironmentConfigurationMetadata.get();\n\t\t}\n\t\treturn create(environment);\n\t}", "code_tokens": ["static", "docker", "configuration", "metadata", "from", "(", "environment", "environment", ")", "{", "if", "(", "environment", "==", "environment", ".", "system", ")", "{", "return", "system", "environment", "configuration", "metadata", ".", "get", "(", ")", ";", "}", "return", "create", "(", "environment", ")", ";", "}"], "token_count": 37, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 48, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.452399+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40a5619ad158a512b85a4c29d385dc5fbcdd46c2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 103, "end_line": 109, "nloc": 7, "method_source_normalized": "private staticDockerConfigurationMetadatacreate(Environment environment){\n\t\tString configLocation = environment.get(DOCKER_CONFIG);\n\t\tconfigLocation = (configLocation != null) ? configLocation : getUserHomeConfigLocation();\n\t\tDockerConfig dockerConfig = createDockerConfig(configLocation);\n\t\tDockerContext dockerContext = createDockerContext(configLocation, dockerConfig.getCurrentContext());\n\t\treturn new DockerConfigurationMetadata(configLocation, dockerConfig, dockerContext);\n\t}", "original_code": "private static DockerConfigurationMetadata create(Environment environment) {\n\t\tString configLocation = environment.get(DOCKER_CONFIG);\n\t\tconfigLocation = (configLocation != null) ? configLocation : getUserHomeConfigLocation();\n\t\tDockerConfig dockerConfig = createDockerConfig(configLocation);\n\t\tDockerContext dockerContext = createDockerContext(configLocation, dockerConfig.getCurrentContext());\n\t\treturn new DockerConfigurationMetadata(configLocation, dockerConfig, dockerContext);\n\t}", "code_tokens": ["private", "static", "docker", "configuration", "metadata", "create", "(", "environment", "environment", ")", "{", "string", "config", "location", "=", "environment", ".", "get", "(", "docker", "config", ")", ";", "config", "location", "=", "(", "config", "location", "!=", "null", ")", "?", "config", "location", ":", "get", "user", "home", "config", "location", "(", ")", ";", "docker", "config", "docker", "config", "=", "create", "docker", "config", "(", "config", "location", ")", ";", "docker", "context", "docker", "context", "=", "create", "docker", "context", "(", "config", "location", ",", "docker", "config", ".", "get", "current", "context", "(", ")", ")", ";", "return", "new", "docker", "configuration", "metadata", "(", "config", "location", ",", "docker", "config", ",", "docker", "context", ")", ";", "}"], "token_count": 96, "vocab_size": 29, "cyclomatic_complexity": 2, "ast_node_count": 96, "n_identifiers": 27, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.452694+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "96f9e5db7c3ccc764bfd58d3a15d545c03243717", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getUserHomeConfigLocation", "signature": null, "start_line": 111, "end_line": 113, "nloc": 3, "method_source_normalized": "private staticStringgetUserHomeConfigLocation(){\n\t\treturn Path.of(System.getProperty(\"user.home\"), CONFIG_DIR).toString();\n\t}", "original_code": "private static String getUserHomeConfigLocation() {\n\t\treturn Path.of(System.getProperty(\"user.home\"), CONFIG_DIR).toString();\n\t}", "code_tokens": ["private", "static", "string", "get", "user", "home", "config", "location", "(", ")", "{", "return", "path", ".", "of", "(", "system", ".", "get", "property", "(", "__STR__", ")", ",", "config", "dir", ")", ".", "to", "string", "(", ")", ";", "}"], "token_count": 34, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.452954+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a938928769424ad46151ef5e8e8974f754e38778", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "createDockerConfig", "signature": null, "start_line": 115, "end_line": 126, "nloc": 12, "method_source_normalized": "private staticDockerConfigcreateDockerConfig(String configLocation){\n\t\tPath path = Path.of(configLocation, CONFIG_FILE_NAME);\n\t\tif (!path.toFile().exists()) {\n\t\t\treturn DockerConfig.empty();\n\t\t}\n\t\ttry {\n\t\t\treturn DockerConfig.fromJson(readPathContent(path));\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error parsing Docker configuration file '\" + path + \"'\", ex);\n\t\t}\n\t}", "original_code": "private static DockerConfig createDockerConfig(String configLocation) {\n\t\tPath path = Path.of(configLocation, CONFIG_FILE_NAME);\n\t\tif (!path.toFile().exists()) {\n\t\t\treturn DockerConfig.empty();\n\t\t}\n\t\ttry {\n\t\t\treturn DockerConfig.fromJson(readPathContent(path));\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error parsing Docker configuration file '\" + path + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "docker", "config", "create", "docker", "config", "(", "string", "config", "location", ")", "{", "path", "path", "=", "path", ".", "of", "(", "config", "location", ",", "config", "file", "name", ")", ";", "if", "(", "!", "path", ".", "to", "file", "(", ")", ".", "exists", "(", ")", ")", "{", "return", "docker", "config", ".", "empty", "(", ")", ";", "}", "try", "{", "return", "docker", "config", ".", "from", "json", "(", "read", "path", "content", "(", "path", ")", ")", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "path", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 94, "vocab_size": 40, "cyclomatic_complexity": 3, "ast_node_count": 114, "n_identifiers": 24, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.453256+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4577b785a7eb4dfd2d736567d4e846b22c45de62", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "createDockerContext", "signature": null, "start_line": 128, "end_line": 148, "nloc": 21, "method_source_normalized": "private staticDockerContextcreateDockerContext(String configLocation, @Nullable String currentContext){\n\t\tif (currentContext == null || DEFAULT_CONTEXT.equals(currentContext)) {\n\t\t\treturn DockerContext.empty();\n\t\t}\n\t\tString hash = asHash(currentContext);\n\t\tPath metaPath = Path.of(configLocation, CONTEXTS_DIR, META_DIR, hash, CONTEXT_FILE_NAME);\n\t\tPath tlsPath = Path.of(configLocation, CONTEXTS_DIR, TLS_DIR, hash, DOCKER_ENDPOINT);\n\t\tif (!metaPath.toFile().exists()) {\n\t\t\tthrow new IllegalArgumentException(\"Docker context '\" + currentContext + \"' does not exist\");\n\t\t}\n\t\ttry {\n\t\t\tDockerContext context = DockerContext.fromJson(readPathContent(metaPath));\n\t\t\tif (tlsPath.toFile().isDirectory()) {\n\t\t\t\treturn context.withTlsPath(tlsPath.toString());\n\t\t\t}\n\t\t\treturn context;\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error parsing Docker context metadata file '\" + metaPath + \"'\", ex);\n\t\t}\n\t}", "original_code": "private static DockerContext createDockerContext(String configLocation, @Nullable String currentContext) {\n\t\tif (currentContext == null || DEFAULT_CONTEXT.equals(currentContext)) {\n\t\t\treturn DockerContext.empty();\n\t\t}\n\t\tString hash = asHash(currentContext);\n\t\tPath metaPath = Path.of(configLocation, CONTEXTS_DIR, META_DIR, hash, CONTEXT_FILE_NAME);\n\t\tPath tlsPath = Path.of(configLocation, CONTEXTS_DIR, TLS_DIR, hash, DOCKER_ENDPOINT);\n\t\tif (!metaPath.toFile().exists()) {\n\t\t\tthrow new IllegalArgumentException(\"Docker context '\" + currentContext + \"' does not exist\");\n\t\t}\n\t\ttry {\n\t\t\tDockerContext context = DockerContext.fromJson(readPathContent(metaPath));\n\t\t\tif (tlsPath.toFile().isDirectory()) {\n\t\t\t\treturn context.withTlsPath(tlsPath.toString());\n\t\t\t}\n\t\t\treturn context;\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error parsing Docker context metadata file '\" + metaPath + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "docker", "context", "create", "docker", "context", "(", "string", "config", "location", ",", "@", "nullable", "string", "current", "context", ")", "{", "if", "(", "current", "context", "==", "null", "||", "default", "context", ".", "equals", "(", "current", "context", ")", ")", "{", "return", "docker", "context", ".", "empty", "(", ")", ";", "}", "string", "hash", "=", "as", "hash", "(", "current", "context", ")", ";", "path", "meta", "path", "=", "path", ".", "of", "(", "config", "location", ",", "contexts", "dir", ",", "meta", "dir", ",", "hash", ",", "context", "file", "name", ")", ";", "path", "tls", "path", "=", "path", ".", "of", "(", "config", "location", ",", "contexts", "dir", ",", "tls", "dir", ",", "hash", ",", "docker", "endpoint", ")", ";", "if", "(", "!", "meta", "path", ".", "to", "file", "(", ")", ".", "exists", "(", ")", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "current", "context", "+", "__STR__", ")", ";", "}", "try", "{", "docker", "context", "context", "=", "docker", "context", ".", "from", "json", "(", "read", "path", "content", "(", "meta", "path", ")", ")", ";", "if", "(", "tls", "path", ".", "to", "file", "(", ")", ".", "is", "directory", "(", ")", ")", "{", "return", "context", ".", "with", "tls", "path", "(", "tls", "path", ".", "to", "string", "(", ")", ")", ";", "}", "return", "context", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "meta", "path", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 216, "vocab_size": 60, "cyclomatic_complexity": 6, "ast_node_count": 245, "n_identifiers": 59, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 137, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.453658+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9fae54f741714a42bc6be50e597faee55102cb86", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "asHash", "signature": null, "start_line": 150, "end_line": 159, "nloc": 10, "method_source_normalized": "private staticStringasHash(String currentContext){\n\t\ttry {\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\t\tbyte[] hash = digest.digest(currentContext.getBytes(StandardCharsets.UTF_8));\n\t\t\treturn HexFormat.of().formatHex(hash);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(\"SHA-256 is not available\", ex);\n\t\t}\n\t}", "original_code": "private static String asHash(String currentContext) {\n\t\ttry {\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\t\tbyte[] hash = digest.digest(currentContext.getBytes(StandardCharsets.UTF_8));\n\t\t\treturn HexFormat.of().formatHex(hash);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(\"SHA-256 is not available\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "string", "as", "hash", "(", "string", "current", "context", ")", "{", "try", "{", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "byte", "[", "]", "hash", "=", "digest", ".", "digest", "(", "current", "context", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "return", "hex", "format", ".", "of", "(", ")", ".", "format", "hex", "(", "hash", ")", ";", "}", "catch", "(", "no", "such", "algorithm", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 86, "vocab_size": 43, "cyclomatic_complexity": 2, "ast_node_count": 103, "n_identifiers": 23, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.453980+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "251539ec7492fa82fba71ddb751385041b440e2e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "readPathContent", "signature": null, "start_line": 161, "end_line": 168, "nloc": 8, "method_source_normalized": "private staticStringreadPathContent(Path path){\n\t\ttry {\n\t\t\treturn Files.readString(path);\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(\"Error reading Docker configuration file '\" + path + \"'\", ex);\n\t\t}\n\t}", "original_code": "private static String readPathContent(Path path) {\n\t\ttry {\n\t\t\treturn Files.readString(path);\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(\"Error reading Docker configuration file '\" + path + \"'\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "string", "read", "path", "content", "(", "path", "path", ")", "{", "try", "{", "return", "files", ".", "read", "string", "(", "path", ")", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "path", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 47, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 60, "n_identifiers": 12, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.454260+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e3946ca6dd2e79d1fc12103c9f2f3108c2412dd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "DockerConfig", "signature": null, "start_line": 180, "end_line": 186, "nloc": 7, "method_source_normalized": "privateDockerConfig(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.currentContext = valueAt(\"/currentContext\", String.class);\n\t\t\tthis.credsStore = valueAt(\"/credsStore\", String.class);\n\t\t\tthis.credHelpers = mapAt(\"/credHelpers\", JsonNode::stringValue);\n\t\t\tthis.auths = mapAt(\"/auths\", Auth::new);\n\t\t}", "original_code": "private DockerConfig(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.currentContext = valueAt(\"/currentContext\", String.class);\n\t\t\tthis.credsStore = valueAt(\"/credsStore\", String.class);\n\t\t\tthis.credHelpers = mapAt(\"/credHelpers\", JsonNode::stringValue);\n\t\t\tthis.auths = mapAt(\"/auths\", Auth::new);\n\t\t}", "code_tokens": ["private", "docker", "config", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "current", "context", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "creds", "store", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "cred", "helpers", "=", "map", "at", "(", "__STR__", ",", "json", "node", "::", "string", "value", ")", ";", "this", ".", "auths", "=", "map", "at", "(", "__STR__", ",", "auth", "::", "new", ")", ";", "}"], "token_count": 83, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 21, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.454575+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9074e4ca588b9730ac0b30875e7c06f4a42d9dfa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getCurrentContext", "signature": null, "start_line": 188, "end_line": 190, "nloc": 3, "method_source_normalized": "@NullableStringgetCurrentContext(){\n\t\t\treturn this.currentContext;\n\t\t}", "original_code": "@Nullable String getCurrentContext() {\n\t\t\treturn this.currentContext;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "current", "context", "(", ")", "{", "return", "this", ".", "current", "context", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.454827+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9e8649f30678fc0cbc8fd47027b5a0988cdc13cf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getCredsStore", "signature": null, "start_line": 192, "end_line": 194, "nloc": 3, "method_source_normalized": "@NullableStringgetCredsStore(){\n\t\t\treturn this.credsStore;\n\t\t}", "original_code": "@Nullable String getCredsStore() {\n\t\t\treturn this.credsStore;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "creds", "store", "(", ")", "{", "return", "this", ".", "creds", "store", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.455065+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e64c1d8eb6f9f64e315d853e4b966bba04474390", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getCredHelpers", "signature": null, "start_line": 196, "end_line": 198, "nloc": 3, "method_source_normalized": "Map<String, String>getCredHelpers(){\n\t\t\treturn this.credHelpers;\n\t\t}", "original_code": "Map<String, String> getCredHelpers() {\n\t\t\treturn this.credHelpers;\n\t\t}", "code_tokens": ["map", "<", "string", ",", "string", ">", "get", "cred", "helpers", "(", ")", "{", "return", "this", ".", "cred", "helpers", ";", "}"], "token_count": 19, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.455302+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8c09ad4165fba48519da1795a029c65b899d18eb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getAuths", "signature": null, "start_line": 200, "end_line": 202, "nloc": 3, "method_source_normalized": "Map<String, Auth>getAuths(){\n\t\t\treturn this.auths;\n\t\t}", "original_code": "Map<String, Auth> getAuths() {\n\t\t\treturn this.auths;\n\t\t}", "code_tokens": ["map", "<", "string", ",", "auth", ">", "get", "auths", "(", ")", "{", "return", "this", ".", "auths", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.455630+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "04bc428b96181d57e9470f559143dd97e99935b6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 204, "end_line": 206, "nloc": 3, "method_source_normalized": "staticDockerConfigfromJson(String json){\n\t\t\treturn new DockerConfig(SharedObjectMapper.get().readTree(json));\n\t\t}", "original_code": "static DockerConfig fromJson(String json) {\n\t\t\treturn new DockerConfig(SharedObjectMapper.get().readTree(json));\n\t\t}", "code_tokens": ["static", "docker", "config", "from", "json", "(", "string", "json", ")", "{", "return", "new", "docker", "config", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "json", ")", ")", ";", "}"], "token_count": 31, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.455883+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f3232281cbd209392a6635e2a25e640814155003", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "empty", "signature": null, "start_line": 208, "end_line": 210, "nloc": 3, "method_source_normalized": "staticDockerConfigempty(){\n\t\t\treturn new DockerConfig(NullNode.instance);\n\t\t}", "original_code": "static DockerConfig empty() {\n\t\t\treturn new DockerConfig(NullNode.instance);\n\t\t}", "code_tokens": ["static", "docker", "config", "empty", "(", ")", "{", "return", "new", "docker", "config", "(", "null", "node", ".", "instance", ")", ";", "}"], "token_count": 19, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.456140+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40cc46422451aa3a1b586613bdba2ee91f6d9e4d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "Auth", "signature": null, "start_line": 222, "end_line": 236, "nloc": 15, "method_source_normalized": "Auth(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tString auth = valueAt(\"/auth\", String.class);\n\t\t\tif (StringUtils.hasLength(auth)) {\n\t\t\t\tString[] parts = new String(Base64.getDecoder().decode(auth)).split(\":\", 2);\n\t\t\t\tAssert.state(parts.length == 2, \"Malformed auth in docker configuration metadata\");\n\t\t\t\tthis.username = parts[0];\n\t\t\t\tthis.password = trim(parts[1], Character.MIN_VALUE);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.username = valueAt(\"/username\", String.class);\n\t\t\t\tthis.password = valueAt(\"/password\", String.class);\n\t\t\t}\n\t\t\tthis.email = valueAt(\"/email\", String.class);\n\t\t}", "original_code": "Auth(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tString auth = valueAt(\"/auth\", String.class);\n\t\t\tif (StringUtils.hasLength(auth)) {\n\t\t\t\tString[] parts = new String(Base64.getDecoder().decode(auth)).split(\":\", 2);\n\t\t\t\tAssert.state(parts.length == 2, \"Malformed auth in docker configuration metadata\");\n\t\t\t\tthis.username = parts[0];\n\t\t\t\tthis.password = trim(parts[1], Character.MIN_VALUE);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.username = valueAt(\"/username\", String.class);\n\t\t\t\tthis.password = valueAt(\"/password\", String.class);\n\t\t\t}\n\t\t\tthis.email = valueAt(\"/email\", String.class);\n\t\t}", "code_tokens": ["auth", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "string", "auth", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "if", "(", "string", "utils", ".", "has", "length", "(", "auth", ")", ")", "{", "string", "[", "]", "parts", "=", "new", "string", "(", "base", "64", ".", "get", "decoder", "(", ")", ".", "decode", "(", "auth", ")", ")", ".", "split", "(", "__STR__", ",", "__NUM__", ")", ";", "assert", ".", "state", "(", "parts", ".", "length", "==", "__NUM__", ",", "__STR__", ")", ";", "this", ".", "username", "=", "parts", "[", "__NUM__", "]", ";", "this", ".", "password", "=", "trim", "(", "parts", "[", "__NUM__", "]", ",", "character", ".", "min", "value", ")", ";", "}", "else", "{", "this", ".", "username", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "password", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}", "this", ".", "email", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 159, "vocab_size": 46, "cyclomatic_complexity": 2, "ast_node_count": 213, "n_identifiers": 45, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 98, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.456519+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "040a0ba052b66c0e916c60d703318e823f4bfcee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getUsername", "signature": null, "start_line": 238, "end_line": 240, "nloc": 3, "method_source_normalized": "@NullableStringgetUsername(){\n\t\t\treturn this.username;\n\t\t}", "original_code": "@Nullable String getUsername() {\n\t\t\treturn this.username;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "username", "(", ")", "{", "return", "this", ".", "username", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.456791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "64ea6862c13bd6f58e97de4673b7a700d2707c16", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getPassword", "signature": null, "start_line": 242, "end_line": 244, "nloc": 3, "method_source_normalized": "@NullableStringgetPassword(){\n\t\t\treturn this.password;\n\t\t}", "original_code": "@Nullable String getPassword() {\n\t\t\treturn this.password;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "password", "(", ")", "{", "return", "this", ".", "password", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.457029+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "069c41bfe66a17c1dc09fbe009e4143c08bc09f5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getEmail", "signature": null, "start_line": 246, "end_line": 248, "nloc": 3, "method_source_normalized": "@NullableStringgetEmail(){\n\t\t\treturn this.email;\n\t\t}", "original_code": "@Nullable String getEmail() {\n\t\t\treturn this.email;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "email", "(", ")", "{", "return", "this", ".", "email", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.457272+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e09a7b64ca6a99ec23a12c14d1694207761c51ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "trim", "signature": null, "start_line": 250, "end_line": 253, "nloc": 4, "method_source_normalized": "private staticStringtrim(String source, char character){\n\t\t\tsource = StringUtils.trimLeadingCharacter(source, character);\n\t\t\treturn StringUtils.trimTrailingCharacter(source, character);\n\t\t}", "original_code": "private static String trim(String source, char character) {\n\t\t\tsource = StringUtils.trimLeadingCharacter(source, character);\n\t\t\treturn StringUtils.trimTrailingCharacter(source, character);\n\t\t}", "code_tokens": ["private", "static", "string", "trim", "(", "string", "source", ",", "char", "character", ")", "{", "source", "=", "string", "utils", ".", "trim", "leading", "character", "(", "source", ",", "character", ")", ";", "return", "string", "utils", ".", "trim", "trailing", "character", "(", "source", ",", "character", ")", ";", "}"], "token_count": 40, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 14, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.457534+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "49f2b193c5f2c2ee8b005c0c3ba51fe26ec1b858", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "DockerContext", "signature": null, "start_line": 265, "end_line": 270, "nloc": 6, "method_source_normalized": "privateDockerContext(JsonNode node, @Nullable String tlsPath){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.dockerHost = valueAt(\"/Endpoints/\" + DOCKER_ENDPOINT + \"/Host\", String.class);\n\t\t\tthis.skipTlsVerify = valueAt(\"/Endpoints/\" + DOCKER_ENDPOINT + \"/SkipTLSVerify\", Boolean.class);\n\t\t\tthis.tlsPath = tlsPath;\n\t\t}", "original_code": "private DockerContext(JsonNode node, @Nullable String tlsPath) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.dockerHost = valueAt(\"/Endpoints/\" + DOCKER_ENDPOINT + \"/Host\", String.class);\n\t\t\tthis.skipTlsVerify = valueAt(\"/Endpoints/\" + DOCKER_ENDPOINT + \"/SkipTLSVerify\", Boolean.class);\n\t\t\tthis.tlsPath = tlsPath;\n\t\t}", "code_tokens": ["private", "docker", "context", "(", "json", "node", "node", ",", "@", "nullable", "string", "tls", "path", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "docker", "host", "=", "value", "at", "(", "__STR__", "+", "docker", "endpoint", "+", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "skip", "tls", "verify", "=", "value", "at", "(", "__STR__", "+", "docker", "endpoint", "+", "__STR__", ",", "boolean", ".", "class", ")", ";", "this", ".", "tls", "path", "=", "tls", "path", ";", "}"], "token_count": 77, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 95, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.457839+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9bf0b076bfceee0108ee1ab2f38adb96f3b95746", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getDockerHost", "signature": null, "start_line": 272, "end_line": 274, "nloc": 3, "method_source_normalized": "@NullableStringgetDockerHost(){\n\t\t\treturn this.dockerHost;\n\t\t}", "original_code": "@Nullable String getDockerHost() {\n\t\t\treturn this.dockerHost;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "docker", "host", "(", ")", "{", "return", "this", ".", "docker", "host", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.458088+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8c2a39fbcc966adacc4a9081e7b86e67557b1ebb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "isTlsVerify", "signature": null, "start_line": 276, "end_line": 278, "nloc": 3, "method_source_normalized": "BooleanisTlsVerify(){\n\t\t\treturn this.skipTlsVerify != null && !this.skipTlsVerify;\n\t\t}", "original_code": "Boolean isTlsVerify() {\n\t\t\treturn this.skipTlsVerify != null && !this.skipTlsVerify;\n\t\t}", "code_tokens": ["boolean", "is", "tls", "verify", "(", ")", "{", "return", "this", ".", "skip", "tls", "verify", "!=", "null", "&&", "!", "this", ".", "skip", "tls", "verify", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 2, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.458327+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc78d36042c91729f8c4f455d633c0dceb7d0005", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "getTlsPath", "signature": null, "start_line": 280, "end_line": 282, "nloc": 3, "method_source_normalized": "@NullableStringgetTlsPath(){\n\t\t\treturn this.tlsPath;\n\t\t}", "original_code": "@Nullable String getTlsPath() {\n\t\t\treturn this.tlsPath;\n\t\t}", "code_tokens": ["@", "nullable", "string", "get", "tls", "path", "(", ")", "{", "return", "this", ".", "tls", "path", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.458572+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0542fea8621c41c7e2d879de385c1fa284d816ee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "withTlsPath", "signature": null, "start_line": 284, "end_line": 286, "nloc": 3, "method_source_normalized": "DockerContextwithTlsPath(String tlsPath){\n\t\t\treturn new DockerContext(this.getNode(), tlsPath);\n\t\t}", "original_code": "DockerContext withTlsPath(String tlsPath) {\n\t\t\treturn new DockerContext(this.getNode(), tlsPath);\n\t\t}", "code_tokens": ["docker", "context", "with", "tls", "path", "(", "string", "tls", "path", ")", "{", "return", "new", "docker", "context", "(", "this", ".", "get", "node", "(", ")", ",", "tls", "path", ")", ";", "}"], "token_count": 28, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.458822+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ca8ac95ff58fa2d090a45798105090976a27cd3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "fromJson", "signature": null, "start_line": 288, "end_line": 290, "nloc": 3, "method_source_normalized": "staticDockerContextfromJson(String json){\n\t\t\treturn new DockerContext(SharedObjectMapper.get().readTree(json), null);\n\t\t}", "original_code": "static DockerContext fromJson(String json) {\n\t\t\treturn new DockerContext(SharedObjectMapper.get().readTree(json), null);\n\t\t}", "code_tokens": ["static", "docker", "context", "from", "json", "(", "string", "json", ")", "{", "return", "new", "docker", "context", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "json", ")", ",", "null", ")", ";", "}"], "token_count": 33, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.459080+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "958f85570b6a909d98a5cb92b5a1f700104fca44", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadata.java", "file_blob_sha": null, "method_name": "empty", "signature": null, "start_line": 292, "end_line": 294, "nloc": 3, "method_source_normalized": "staticDockerContextempty(){\n\t\t\treturn new DockerContext(NullNode.instance, null);\n\t\t}", "original_code": "static DockerContext empty() {\n\t\t\treturn new DockerContext(NullNode.instance, null);\n\t\t}", "code_tokens": ["static", "docker", "context", "empty", "(", ")", "{", "return", "new", "docker", "context", "(", "null", "node", ".", "instance", ",", "null", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.459322+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ddcc39147aee5d0cfbcdda3920218b0f11b7435", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "Credential", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "Credential(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.username = extractUsername();\n\t\tthis.secret = extractSecret();\n\t\tthis.serverUrl = valueAt(\"/ServerURL\", String.class);\n\t}", "original_code": "Credential(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.username = extractUsername();\n\t\tthis.secret = extractSecret();\n\t\tthis.serverUrl = valueAt(\"/ServerURL\", String.class);\n\t}", "code_tokens": ["credential", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "username", "=", "extract", "username", "(", ")", ";", "this", ".", "secret", "=", "extract", "secret", "(", ")", ";", "this", ".", "server", "url", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 53, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 71, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.460263+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cd5119e689fd3eee1c40b4b564c65aa6ec9c863f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "extractSecret", "signature": null, "start_line": 54, "end_line": 58, "nloc": 5, "method_source_normalized": "privateStringextractSecret(){\n\t\tString result = valueAt(\"/Secret\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private String extractSecret() {\n\t\tString result = valueAt(\"/Secret\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "string", "extract", "secret", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.460529+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "75becc7e1ee507874917b34984a1a38610670c7c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "extractUsername", "signature": null, "start_line": 60, "end_line": 64, "nloc": 5, "method_source_normalized": "privateStringextractUsername(){\n\t\tString result = valueAt(\"/Username\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private String extractUsername() {\n\t\tString result = valueAt(\"/Username\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "string", "extract", "username", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.460788+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e9d6b304674ad4a3f511a95a5268ff675df57fc0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "getUsername", "signature": null, "start_line": 66, "end_line": 68, "nloc": 3, "method_source_normalized": "StringgetUsername(){\n\t\treturn this.username;\n\t}", "original_code": "String getUsername() {\n\t\treturn this.username;\n\t}", "code_tokens": ["string", "get", "username", "(", ")", "{", "return", "this", ".", "username", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.461030+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40bc21267e6b41504de356665401df610faa2b73", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "getSecret", "signature": null, "start_line": 70, "end_line": 72, "nloc": 3, "method_source_normalized": "StringgetSecret(){\n\t\treturn this.secret;\n\t}", "original_code": "String getSecret() {\n\t\treturn this.secret;\n\t}", "code_tokens": ["string", "get", "secret", "(", ")", "{", "return", "this", ".", "secret", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.461267+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d6402b074f2ebb1ab63c98c42ce3d9f2f555238e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "getServerUrl", "signature": null, "start_line": 74, "end_line": 76, "nloc": 3, "method_source_normalized": "@NullableStringgetServerUrl(){\n\t\treturn this.serverUrl;\n\t}", "original_code": "@Nullable String getServerUrl() {\n\t\treturn this.serverUrl;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "server", "url", "(", ")", "{", "return", "this", ".", "server", "url", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.461503+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1f3ebd37673122e55d8e3987d646e6e22d3d6213", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/Credential.java", "file_blob_sha": null, "method_name": "isIdentityToken", "signature": null, "start_line": 78, "end_line": 80, "nloc": 3, "method_source_normalized": "booleanisIdentityToken(){\n\t\treturn TOKEN_USERNAME.equals(this.username);\n\t}", "original_code": "boolean isIdentityToken() {\n\t\treturn TOKEN_USERNAME.equals(this.username);\n\t}", "code_tokens": ["boolean", "is", "identity", "token", "(", ")", "{", "return", "token", "username", ".", "equals", "(", "this", ".", "username", ")", ";", "}"], "token_count": 19, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.461744+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f68299dab367c66a1e52eec1b2ec4bec77edb902", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthentication.java", "file_blob_sha": null, "method_name": "DockerRegistryUserAuthentication", "signature": null, "start_line": 42, "end_line": 48, "nloc": 7, "method_source_normalized": "DockerRegistryUserAuthentication(String username, String password, @Nullable String url, @Nullable String email){\n\t\tthis.username = username;\n\t\tthis.password = password;\n\t\tthis.url = url;\n\t\tthis.email = email;\n\t\tcreateAuthHeader();\n\t}", "original_code": "DockerRegistryUserAuthentication(String username, String password, @Nullable String url, @Nullable String email) {\n\t\tthis.username = username;\n\t\tthis.password = password;\n\t\tthis.url = url;\n\t\tthis.email = email;\n\t\tcreateAuthHeader();\n\t}", "code_tokens": ["docker", "registry", "user", "authentication", "(", "string", "username", ",", "string", "password", ",", "@", "nullable", "string", "url", ",", "@", "nullable", "string", "email", ")", "{", "this", ".", "username", "=", "username", ";", "this", ".", "password", "=", "password", ";", "this", ".", "url", "=", "url", ";", "this", ".", "email", "=", "email", ";", "create", "auth", "header", "(", ")", ";", "}"], "token_count": 53, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 74, "n_identifiers": 20, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.462467+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "faf584f789a12185576831e05fa004461a6f1dda", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthentication.java", "file_blob_sha": null, "method_name": "getUsername", "signature": null, "start_line": 50, "end_line": 52, "nloc": 3, "method_source_normalized": "StringgetUsername(){\n\t\treturn this.username;\n\t}", "original_code": "String getUsername() {\n\t\treturn this.username;\n\t}", "code_tokens": ["string", "get", "username", "(", ")", "{", "return", "this", ".", "username", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.462717+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1cd91113531820da4ae8fdfd274b8efc95a778eb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthentication.java", "file_blob_sha": null, "method_name": "getPassword", "signature": null, "start_line": 54, "end_line": 56, "nloc": 3, "method_source_normalized": "StringgetPassword(){\n\t\treturn this.password;\n\t}", "original_code": "String getPassword() {\n\t\treturn this.password;\n\t}", "code_tokens": ["string", "get", "password", "(", ")", "{", "return", "this", ".", "password", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.462952+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3934ce6ce240145a84880f4aaa1404d07c1a3bf9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthentication.java", "file_blob_sha": null, "method_name": "getUrl", "signature": null, "start_line": 58, "end_line": 60, "nloc": 3, "method_source_normalized": "@NullableStringgetUrl(){\n\t\treturn this.url;\n\t}", "original_code": "@Nullable String getUrl() {\n\t\treturn this.url;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "url", "(", ")", "{", "return", "this", ".", "url", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.463194+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78843692b589c51ac931533fe84b0d4603be4dd6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthentication.java", "file_blob_sha": null, "method_name": "getEmail", "signature": null, "start_line": 62, "end_line": 64, "nloc": 3, "method_source_normalized": "@NullableStringgetEmail(){\n\t\treturn this.email;\n\t}", "original_code": "@Nullable String getEmail() {\n\t\treturn this.email;\n\t}", "code_tokens": ["@", "nullable", "string", "get", "email", "(", ")", "{", "return", "this", ".", "email", ";", "}"], "token_count": 14, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.463430+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fd3d2f8ffe85c5f31ca0329cc7f7ded0bb81c3a5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "getAuthHeader", "signature": null, "start_line": 48, "end_line": 50, "nloc": 3, "method_source_normalized": "default @NullableStringgetAuthHeader(@Nullable ImageReference imageReference){\n\t\treturn getAuthHeader();\n\t}", "original_code": "default @Nullable String getAuthHeader(@Nullable ImageReference imageReference) {\n\t\treturn getAuthHeader();\n\t}", "code_tokens": ["default", "@", "nullable", "string", "get", "auth", "header", "(", "@", "nullable", "image", "reference", "image", "reference", ")", "{", "return", "get", "auth", "header", "(", ")", ";", "}"], "token_count": 24, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.464257+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "090001aa011ec42cd01294fe27369035b2ef1b8c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "getAuthHeader", "signature": null, "start_line": 56, "end_line": 56, "nloc": 1, "method_source_normalized": "@NullableStringgetAuthHeader();", "original_code": "@Nullable String getAuthHeader();", "code_tokens": ["@", "nullable", "string", "get", "auth", "header", "(", ")", ";"], "token_count": 9, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 11, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 2, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.464498+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ba67c35d310abddb6c79618ef9c8efc306b136e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "token", "signature": null, "start_line": 66, "end_line": 68, "nloc": 3, "method_source_normalized": "staticDockerRegistryAuthenticationtoken(String identityToken){\n\t\treturn new DockerRegistryTokenAuthentication(identityToken);\n\t}", "original_code": "static DockerRegistryAuthentication token(String identityToken) {\n\t\treturn new DockerRegistryTokenAuthentication(identityToken);\n\t}", "code_tokens": ["static", "docker", "registry", "authentication", "token", "(", "string", "identity", "token", ")", "{", "return", "new", "docker", "registry", "token", "authentication", "(", "identity", "token", ")", ";", "}"], "token_count": 23, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.464744+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bef9630333fdfc44328c7179ab47c82680148068", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "user", "signature": null, "start_line": 81, "end_line": 84, "nloc": 4, "method_source_normalized": "staticDockerRegistryAuthenticationuser(String username, String password, @Nullable String serverAddress,\n\t\t\t@Nullable String email){\n\t\treturn new DockerRegistryUserAuthentication(username, password, serverAddress, email);\n\t}", "original_code": "static DockerRegistryAuthentication user(String username, String password, @Nullable String serverAddress,\n\t\t\t@Nullable String email) {\n\t\treturn new DockerRegistryUserAuthentication(username, password, serverAddress, email);\n\t}", "code_tokens": ["static", "docker", "registry", "authentication", "user", "(", "string", "username", ",", "string", "password", ",", "@", "nullable", "string", "server", "address", ",", "@", "nullable", "string", "email", ")", "{", "return", "new", "docker", "registry", "user", "authentication", "(", "username", ",", "password", ",", "server", "address", ",", "email", ")", ";", "}"], "token_count": 42, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 17, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.465008+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "35b06ce8fbffc9c2cfbb0c8c6368695c0adf1cff", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "configuration", "signature": null, "start_line": 96, "end_line": 98, "nloc": 3, "method_source_normalized": "staticDockerRegistryAuthenticationconfiguration(@Nullable DockerRegistryAuthentication fallback){\n\t\treturn configuration(fallback, (message, ex) -> System.out.println(message));\n\t}", "original_code": "static DockerRegistryAuthentication configuration(@Nullable DockerRegistryAuthentication fallback) {\n\t\treturn configuration(fallback, (message, ex) -> System.out.println(message));\n\t}", "code_tokens": ["static", "docker", "registry", "authentication", "configuration", "(", "@", "nullable", "docker", "registry", "authentication", "fallback", ")", "{", "return", "configuration", "(", "fallback", ",", "(", "message", ",", "ex", ")", "->", "system", ".", "out", ".", "println", "(", "message", ")", ")", ";", "}"], "token_count": 36, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.465269+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "792407d2bb9f44196ed5e3f1df38daf625fa5fea", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "configuration", "signature": null, "start_line": 112, "end_line": 116, "nloc": 5, "method_source_normalized": "staticDockerRegistryAuthenticationconfiguration(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler){\n\t\tAssert.notNull(credentialHelperExceptionHandler, () -> \"'credentialHelperExceptionHandler' must not be null\");\n\t\treturn new DockerRegistryConfigAuthentication(fallback, credentialHelperExceptionHandler);\n\t}", "original_code": "static DockerRegistryAuthentication configuration(@Nullable DockerRegistryAuthentication fallback,\n\t\t\tBiConsumer<String, Exception> credentialHelperExceptionHandler) {\n\t\tAssert.notNull(credentialHelperExceptionHandler, () -> \"'credentialHelperExceptionHandler' must not be null\");\n\t\treturn new DockerRegistryConfigAuthentication(fallback, credentialHelperExceptionHandler);\n\t}", "code_tokens": ["static", "docker", "registry", "authentication", "configuration", "(", "@", "nullable", "docker", "registry", "authentication", "fallback", ",", "bi", "consumer", "<", "string", ",", "exception", ">", "credential", "helper", "exception", "handler", ")", "{", "assert", ".", "not", "null", "(", "credential", "helper", "exception", "handler", ",", "(", ")", "->", "__STR__", ")", ";", "return", "new", "docker", "registry", "config", "authentication", "(", "fallback", ",", "credential", "helper", "exception", "handler", ")", ";", "}"], "token_count": 58, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.465542+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "938b95c93d2579b3eac75a332c5facaf5bfc3da3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/JsonEncodedDockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "getAuthHeader", "signature": null, "start_line": 38, "end_line": 41, "nloc": 4, "method_source_normalized": "@Override\n\tpublic @NullableStringgetAuthHeader(){\n\t\treturn this.authHeader;\n\t}", "original_code": "@Override\n\tpublic @Nullable String getAuthHeader() {\n\t\treturn this.authHeader;\n\t}", "code_tokens": ["@", "override", "public", "@", "nullable", "string", "get", "auth", "header", "(", ")", "{", "return", "this", ".", "auth", "header", ";", "}"], "token_count": 19, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.466165+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b1ef9fd4a9024e55f3c4a217c810bff845f9867", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/JsonEncodedDockerRegistryAuthentication.java", "file_blob_sha": null, "method_name": "createAuthHeader", "signature": null, "start_line": 43, "end_line": 50, "nloc": 8, "method_source_normalized": "protectedvoidcreateAuthHeader(){\n\t\ttry {\n\t\t\tthis.authHeader = Base64.getUrlEncoder().encodeToString(SharedObjectMapper.get().writeValueAsBytes(this));\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error creating Docker registry authentication header\", ex);\n\t\t}\n\t}", "original_code": "protected void createAuthHeader() {\n\t\ttry {\n\t\t\tthis.authHeader = Base64.getUrlEncoder().encodeToString(SharedObjectMapper.get().writeValueAsBytes(this));\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\tthrow new IllegalStateException(\"Error creating Docker registry authentication header\", ex);\n\t\t}\n\t}", "code_tokens": ["protected", "void", "create", "auth", "header", "(", ")", "{", "try", "{", "this", ".", "auth", "header", "=", "base", "64", ".", "get", "url", "encoder", "(", ")", ".", "encode", "to", "string", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "write", "value", "as", "bytes", "(", "this", ")", ")", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 66, "vocab_size": 39, "cyclomatic_complexity": 2, "ast_node_count": 74, "n_identifiers": 12, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.466441+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "012d699a103c0cdca765547cc637ac35150b4d7e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelper.java", "file_blob_sha": null, "method_name": "CredentialHelper", "signature": null, "start_line": 48, "end_line": 50, "nloc": 3, "method_source_normalized": "CredentialHelper(String executable){\n\t\tthis.executable = executable;\n\t}", "original_code": "CredentialHelper(String executable) {\n\t\tthis.executable = executable;\n\t}", "code_tokens": ["credential", "helper", "(", "string", "executable", ")", "{", "this", ".", "executable", "=", "executable", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.467755+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "90ccdcab6aa3ff22d3c75f4c6993b50e2fa610d6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelper.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 52, "end_line": 75, "nloc": 24, "method_source_normalized": "@NullableCredentialget(String serverUrl)throws IOException{\n\t\tProcessBuilder processBuilder = processBuilder(\"get\");\n\t\tProcess process = start(processBuilder);\n\t\ttry (OutputStream request = process.getOutputStream()) {\n\t\t\trequest.write(serverUrl.getBytes(StandardCharsets.UTF_8));\n\t\t}\n\t\ttry {\n\t\t\tint exitCode = process.waitFor();\n\t\t\ttry (InputStream response = process.getInputStream()) {\n\t\t\t\tif (exitCode == 0) {\n\t\t\t\t\treturn new Credential(SharedObjectMapper.get().readTree(response));\n\t\t\t\t}\n\t\t\t\tString errorMessage = new String(response.readAllBytes(), StandardCharsets.UTF_8);\n\t\t\t\tif (!isCredentialsNotFoundError(errorMessage)) {\n\t\t\t\t\tthrow new IOException(\"%s' exited with code %d: %s\".formatted(process, exitCode, errorMessage));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tcatch (InterruptedException ex) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "@Nullable Credential get(String serverUrl) throws IOException {\n\t\tProcessBuilder processBuilder = processBuilder(\"get\");\n\t\tProcess process = start(processBuilder);\n\t\ttry (OutputStream request = process.getOutputStream()) {\n\t\t\trequest.write(serverUrl.getBytes(StandardCharsets.UTF_8));\n\t\t}\n\t\ttry {\n\t\t\tint exitCode = process.waitFor();\n\t\t\ttry (InputStream response = process.getInputStream()) {\n\t\t\t\tif (exitCode == 0) {\n\t\t\t\t\treturn new Credential(SharedObjectMapper.get().readTree(response));\n\t\t\t\t}\n\t\t\t\tString errorMessage = new String(response.readAllBytes(), StandardCharsets.UTF_8);\n\t\t\t\tif (!isCredentialsNotFoundError(errorMessage)) {\n\t\t\t\t\tthrow new IOException(\"%s' exited with code %d: %s\".formatted(process, exitCode, errorMessage));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tcatch (InterruptedException ex) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["@", "nullable", "credential", "get", "(", "string", "server", "url", ")", "throws", "io", "exception", "{", "process", "builder", "process", "builder", "=", "process", "builder", "(", "__STR__", ")", ";", "process", "process", "=", "start", "(", "process", "builder", ")", ";", "try", "(", "output", "stream", "request", "=", "process", ".", "get", "output", "stream", "(", ")", ")", "{", "request", ".", "write", "(", "server", "url", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}", "try", "{", "int", "exit", "code", "=", "process", ".", "wait", "for", "(", ")", ";", "try", "(", "input", "stream", "response", "=", "process", ".", "get", "input", "stream", "(", ")", ")", "{", "if", "(", "exit", "code", "==", "__NUM__", ")", "{", "return", "new", "credential", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "response", ")", ")", ";", "}", "string", "error", "message", "=", "new", "string", "(", "response", ".", "read", "all", "bytes", "(", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "if", "(", "!", "is", "credentials", "not", "found", "error", "(", "error", "message", ")", ")", "{", "throw", "new", "io", "exception", "(", "__STR__", ".", "formatted", "(", "process", ",", "exit", "code", ",", "error", "message", ")", ")", ";", "}", "return", "null", ";", "}", "}", "catch", "(", "interrupted", "exception", "ex", ")", "{", "thread", ".", "current", "thread", "(", ")", ".", "interrupt", "(", ")", ";", "return", "null", ";", "}", "}"], "token_count": 207, "vocab_size": 66, "cyclomatic_complexity": 4, "ast_node_count": 250, "n_identifiers": 55, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 145, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.468152+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8a7797617e66ff567fea7c8a964623b38e949ace", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelper.java", "file_blob_sha": null, "method_name": "processBuilder", "signature": null, "start_line": 77, "end_line": 84, "nloc": 8, "method_source_normalized": "privateProcessBuilderprocessBuilder(String action){\n\t\tProcessBuilder processBuilder = new ProcessBuilder().redirectErrorStream(true);\n\t\tif (Platform.isWindows()) {\n\t\t\tprocessBuilder.command(\"cmd\", \"/c\");\n\t\t}\n\t\tprocessBuilder.command(this.executable, action);\n\t\treturn processBuilder;\n\t}", "original_code": "private ProcessBuilder processBuilder(String action) {\n\t\tProcessBuilder processBuilder = new ProcessBuilder().redirectErrorStream(true);\n\t\tif (Platform.isWindows()) {\n\t\t\tprocessBuilder.command(\"cmd\", \"/c\");\n\t\t}\n\t\tprocessBuilder.command(this.executable, action);\n\t\treturn processBuilder;\n\t}", "code_tokens": ["private", "process", "builder", "process", "builder", "(", "string", "action", ")", "{", "process", "builder", "process", "builder", "=", "new", "process", "builder", "(", ")", ".", "redirect", "error", "stream", "(", "true", ")", ";", "if", "(", "platform", ".", "is", "windows", "(", ")", ")", "{", "process", "builder", ".", "command", "(", "__STR__", ",", "__STR__", ")", ";", "}", "process", "builder", ".", "command", "(", "this", ".", "executable", ",", "action", ")", ";", "return", "process", "builder", ";", "}"], "token_count": 66, "vocab_size": 27, "cyclomatic_complexity": 2, "ast_node_count": 79, "n_identifiers": 17, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.468461+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "86fb0859ec5a34ed5916b0aaa33015355d9d7592", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelper.java", "file_blob_sha": null, "method_name": "start", "signature": null, "start_line": 86, "end_line": 105, "nloc": 20, "method_source_normalized": "privateProcessstart(ProcessBuilder processBuilder)throws IOException{\n\t\ttry {\n\t\t\treturn processBuilder.start();\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tif (!Platform.isMac()) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tList<String> command = new ArrayList<>(processBuilder.command());\n\t\t\t\tcommand.set(0, USR_LOCAL_BIN + command.get(0));\n\t\t\t\treturn processBuilder.command(command).start();\n\t\t\t}\n\t\t\tcatch (Exception suppressed) {\n\t\t\t\t// Suppresses the exception and rethrows the original exception\n\t\t\t\tex.addSuppressed(suppressed);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}\n\t}", "original_code": "private Process start(ProcessBuilder processBuilder) throws IOException {\n\t\ttry {\n\t\t\treturn processBuilder.start();\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tif (!Platform.isMac()) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tList<String> command = new ArrayList<>(processBuilder.command());\n\t\t\t\tcommand.set(0, USR_LOCAL_BIN + command.get(0));\n\t\t\t\treturn processBuilder.command(command).start();\n\t\t\t}\n\t\t\tcatch (Exception suppressed) {\n\t\t\t\t// Suppresses the exception and rethrows the original exception\n\t\t\t\tex.addSuppressed(suppressed);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["private", "process", "start", "(", "process", "builder", "process", "builder", ")", "throws", "io", "exception", "{", "try", "{", "return", "process", "builder", ".", "start", "(", ")", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "if", "(", "!", "platform", ".", "is", "mac", "(", ")", ")", "{", "throw", "ex", ";", "}", "try", "{", "list", "<", "string", ">", "command", "=", "new", "array", "list", "<", ">", "(", "process", "builder", ".", "command", "(", ")", ")", ";", "command", ".", "set", "(", "__NUM__", ",", "usr", "local", "bin", "+", "command", ".", "get", "(", "__NUM__", ")", ")", ";", "return", "process", "builder", ".", "command", "(", "command", ")", ".", "start", "(", ")", ";", "}", "catch", "(", "exception", "suppressed", ")", "{", "// Suppresses the exception and rethrows the original exception", "ex", ".", "add", "suppressed", "(", "suppressed", ")", ";", "throw", "ex", ";", "}", "}", "}"], "token_count": 121, "vocab_size": 42, "cyclomatic_complexity": 4, "ast_node_count": 162, "n_identifiers": 33, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 112, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.468796+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0a42da486734b9f91aeb6e2b681740503f90b47c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelper.java", "file_blob_sha": null, "method_name": "isCredentialsNotFoundError", "signature": null, "start_line": 107, "end_line": 109, "nloc": 3, "method_source_normalized": "private staticbooleanisCredentialsNotFoundError(String message){\n\t\treturn CREDENTIAL_NOT_FOUND_MESSAGES.contains(message.trim());\n\t}", "original_code": "private static boolean isCredentialsNotFoundError(String message) {\n\t\treturn CREDENTIAL_NOT_FOUND_MESSAGES.contains(message.trim());\n\t}", "code_tokens": ["private", "static", "boolean", "is", "credentials", "not", "found", "error", "(", "string", "message", ")", "{", "return", "credential", "not", "found", "messages", ".", "contains", "(", "message", ".", "trim", "(", ")", ")", ";", "}"], "token_count": 29, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.469062+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc2bd8881370e3754e9290ea26aff7d8157c9f63", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "ResolvedDockerHost", "signature": null, "start_line": 50, "end_line": 52, "nloc": 3, "method_source_normalized": "ResolvedDockerHost(@Nullable String address){\n\t\tsuper(address);\n\t}", "original_code": "ResolvedDockerHost(@Nullable String address) {\n\t\tsuper(address);\n\t}", "code_tokens": ["resolved", "docker", "host", "(", "@", "nullable", "string", "address", ")", "{", "super", "(", "address", ")", ";", "}"], "token_count": 16, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.470742+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b44995f32a2727f661edba8a0e3b804c0cf994e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "ResolvedDockerHost", "signature": null, "start_line": 54, "end_line": 56, "nloc": 3, "method_source_normalized": "ResolvedDockerHost(@Nullable String address, boolean secure, @Nullable String certificatePath){\n\t\tsuper(address, secure, certificatePath);\n\t}", "original_code": "ResolvedDockerHost(@Nullable String address, boolean secure, @Nullable String certificatePath) {\n\t\tsuper(address, secure, certificatePath);\n\t}", "code_tokens": ["resolved", "docker", "host", "(", "@", "nullable", "string", "address", ",", "boolean", "secure", ",", "@", "nullable", "string", "certificate", "path", ")", "{", "super", "(", "address", ",", "secure", ",", "certificate", "path", ")", ";", "}"], "token_count": 30, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 11, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.470995+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1d57dc18f8808c224168e231cb3eabe554f7e5d8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "getAddress", "signature": null, "start_line": 58, "end_line": 65, "nloc": 8, "method_source_normalized": "@Override\n\tpublicStringgetAddress(){\n\t\tString address = super.getAddress();\n\t\tif (address == null) {\n\t\t\taddress = getDefaultAddress();\n\t\t}\n\t\treturn address.startsWith(UNIX_SOCKET_PREFIX) ? address.substring(UNIX_SOCKET_PREFIX.length()) : address;\n\t}", "original_code": "@Override\n\tpublic String getAddress() {\n\t\tString address = super.getAddress();\n\t\tif (address == null) {\n\t\t\taddress = getDefaultAddress();\n\t\t}\n\t\treturn address.startsWith(UNIX_SOCKET_PREFIX) ? address.substring(UNIX_SOCKET_PREFIX.length()) : address;\n\t}", "code_tokens": ["@", "override", "public", "string", "get", "address", "(", ")", "{", "string", "address", "=", "super", ".", "get", "address", "(", ")", ";", "if", "(", "address", "==", "null", ")", "{", "address", "=", "get", "default", "address", "(", ")", ";", "}", "return", "address", ".", "starts", "with", "(", "unix", "socket", "prefix", ")", "?", "address", ".", "substring", "(", "unix", "socket", "prefix", ".", "length", "(", ")", ")", ":", "address", ";", "}"], "token_count": 62, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 78, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.471279+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "678d5beb879f8dccd96fd952c685295bbe9a3afb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "isRemote", "signature": null, "start_line": 67, "end_line": 69, "nloc": 3, "method_source_normalized": "publicbooleanisRemote(){\n\t\treturn getAddress().startsWith(\"http\") || getAddress().startsWith(\"tcp\");\n\t}", "original_code": "public boolean isRemote() {\n\t\treturn getAddress().startsWith(\"http\") || getAddress().startsWith(\"tcp\");\n\t}", "code_tokens": ["public", "boolean", "is", "remote", "(", ")", "{", "return", "get", "address", "(", ")", ".", "starts", "with", "(", "__STR__", ")", "||", "get", "address", "(", ")", ".", "starts", "with", "(", "__STR__", ")", ";", "}"], "token_count": 31, "vocab_size": 17, "cyclomatic_complexity": 2, "ast_node_count": 40, "n_identifiers": 5, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.471533+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fc01e5fe522461c9dc1286fc44d0822607959388", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "isLocalFileReference", "signature": null, "start_line": 71, "end_line": 78, "nloc": 8, "method_source_normalized": "publicbooleanisLocalFileReference(){\n\t\ttry {\n\t\t\treturn Files.exists(Paths.get(getAddress()));\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn false;\n\t\t}\n\t}", "original_code": "public boolean isLocalFileReference() {\n\t\ttry {\n\t\t\treturn Files.exists(Paths.get(getAddress()));\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn false;\n\t\t}\n\t}", "code_tokens": ["public", "boolean", "is", "local", "file", "reference", "(", ")", "{", "try", "{", "return", "files", ".", "exists", "(", "paths", ".", "get", "(", "get", "address", "(", ")", ")", ")", ";", "}", "catch", "(", "exception", "ex", ")", "{", "return", "false", ";", "}", "}"], "token_count": 39, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 53, "n_identifiers": 8, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.471790+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "335caae0a13b9dc19c12a3737fe70d4f79ba3048", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 85, "end_line": 87, "nloc": 3, "method_source_normalized": "public staticResolvedDockerHostfrom(@Nullable DockerConnectionConfiguration connectionConfiguration){\n\t\treturn from(Environment.SYSTEM, connectionConfiguration);\n\t}", "original_code": "public static ResolvedDockerHost from(@Nullable DockerConnectionConfiguration connectionConfiguration) {\n\t\treturn from(Environment.SYSTEM, connectionConfiguration);\n\t}", "code_tokens": ["public", "static", "resolved", "docker", "host", "from", "(", "@", "nullable", "docker", "connection", "configuration", "connection", "configuration", ")", "{", "return", "from", "(", "environment", ".", "system", ",", "connection", "configuration", ")", ";", "}"], "token_count": 28, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.472046+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2ee448fca7499fbec802506ab1f001bd0c0f7a30", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 89, "end_line": 113, "nloc": 25, "method_source_normalized": "staticResolvedDockerHostfrom(Environment environment,\n\t\t\t@Nullable DockerConnectionConfiguration connectionConfiguration){\n\t\tDockerConfigurationMetadata environmentConfiguration = DockerConfigurationMetadata.from(environment);\n\t\tif (environment.get(DOCKER_CONTEXT) != null) {\n\t\t\tDockerContext context = environmentConfiguration.forContext(environment.get(DOCKER_CONTEXT));\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\tif (connectionConfiguration instanceof DockerConnectionConfiguration.Context contextConfiguration) {\n\t\t\tDockerContext context = environmentConfiguration.forContext(contextConfiguration.context());\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\tif (environment.get(DOCKER_HOST) != null) {\n\t\t\treturn new ResolvedDockerHost(environment.get(DOCKER_HOST), isTrue(environment.get(DOCKER_TLS_VERIFY)),\n\t\t\t\t\tenvironment.get(DOCKER_CERT_PATH));\n\t\t}\n\t\tif (connectionConfiguration instanceof DockerConnectionConfiguration.Host addressConfiguration) {\n\t\t\treturn new ResolvedDockerHost(addressConfiguration.address(), addressConfiguration.secure(),\n\t\t\t\t\taddressConfiguration.certificatePath());\n\t\t}\n\t\tif (environmentConfiguration.getContext().getDockerHost() != null) {\n\t\t\tDockerContext context = environmentConfiguration.getContext();\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\treturn new ResolvedDockerHost(getDefaultAddress());\n\t}", "original_code": "static ResolvedDockerHost from(Environment environment,\n\t\t\t@Nullable DockerConnectionConfiguration connectionConfiguration) {\n\t\tDockerConfigurationMetadata environmentConfiguration = DockerConfigurationMetadata.from(environment);\n\t\tif (environment.get(DOCKER_CONTEXT) != null) {\n\t\t\tDockerContext context = environmentConfiguration.forContext(environment.get(DOCKER_CONTEXT));\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\tif (connectionConfiguration instanceof DockerConnectionConfiguration.Context contextConfiguration) {\n\t\t\tDockerContext context = environmentConfiguration.forContext(contextConfiguration.context());\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\tif (environment.get(DOCKER_HOST) != null) {\n\t\t\treturn new ResolvedDockerHost(environment.get(DOCKER_HOST), isTrue(environment.get(DOCKER_TLS_VERIFY)),\n\t\t\t\t\tenvironment.get(DOCKER_CERT_PATH));\n\t\t}\n\t\tif (connectionConfiguration instanceof DockerConnectionConfiguration.Host addressConfiguration) {\n\t\t\treturn new ResolvedDockerHost(addressConfiguration.address(), addressConfiguration.secure(),\n\t\t\t\t\taddressConfiguration.certificatePath());\n\t\t}\n\t\tif (environmentConfiguration.getContext().getDockerHost() != null) {\n\t\t\tDockerContext context = environmentConfiguration.getContext();\n\t\t\treturn new ResolvedDockerHost(context.getDockerHost(), context.isTlsVerify(), context.getTlsPath());\n\t\t}\n\t\treturn new ResolvedDockerHost(getDefaultAddress());\n\t}", "code_tokens": ["static", "resolved", "docker", "host", "from", "(", "environment", "environment", ",", "@", "nullable", "docker", "connection", "configuration", "connection", "configuration", ")", "{", "docker", "configuration", "metadata", "environment", "configuration", "=", "docker", "configuration", "metadata", ".", "from", "(", "environment", ")", ";", "if", "(", "environment", ".", "get", "(", "docker", "context", ")", "!=", "null", ")", "{", "docker", "context", "context", "=", "environment", "configuration", ".", "for", "context", "(", "environment", ".", "get", "(", "docker", "context", ")", ")", ";", "return", "new", "resolved", "docker", "host", "(", "context", ".", "get", "docker", "host", "(", ")", ",", "context", ".", "is", "tls", "verify", "(", ")", ",", "context", ".", "get", "tls", "path", "(", ")", ")", ";", "}", "if", "(", "connection", "configuration", "instanceof", "docker", "connection", "configuration", ".", "context", "context", "configuration", ")", "{", "docker", "context", "context", "=", "environment", "configuration", ".", "for", "context", "(", "context", "configuration", ".", "context", "(", ")", ")", ";", "return", "new", "resolved", "docker", "host", "(", "context", ".", "get", "docker", "host", "(", ")", ",", "context", ".", "is", "tls", "verify", "(", ")", ",", "context", ".", "get", "tls", "path", "(", ")", ")", ";", "}", "if", "(", "environment", ".", "get", "(", "docker", "host", ")", "!=", "null", ")", "{", "return", "new", "resolved", "docker", "host", "(", "environment", ".", "get", "(", "docker", "host", ")", ",", "is", "true", "(", "environment", ".", "get", "(", "docker", "tls", "verify", ")", ")", ",", "environment", ".", "get", "(", "docker", "cert", "path", ")", ")", ";", "}", "if", "(", "connection", "configuration", "instanceof", "docker", "connection", "configuration", ".", "host", "address", "configuration", ")", "{", "return", "new", "resolved", "docker", "host", "(", "address", "configuration", ".", "address", "(", ")", ",", "address", "configuration", ".", "secure", "(", ")", ",", "address", "configuration", ".", "certificate", "path", "(", ")", ")", ";", "}", "if", "(", "environment", "configuration", ".", "get", "context", "(", ")", ".", "get", "docker", "host", "(", ")", "!=", "null", ")", "{", "docker", "context", "context", "=", "environment", "configuration", ".", "get", "context", "(", ")", ";", "return", "new", "resolved", "docker", "host", "(", "context", ".", "get", "docker", "host", "(", ")", ",", "context", ".", "is", "tls", "verify", "(", ")", ",", "context", ".", "get", "tls", "path", "(", ")", ")", ";", "}", "return", "new", "resolved", "docker", "host", "(", "get", "default", "address", "(", ")", ")", ";", "}"], "token_count": 333, "vocab_size": 38, "cyclomatic_complexity": 6, "ast_node_count": 368, "n_identifiers": 87, "ast_max_depth": 11, "ast_error_count": 2, "ast_error_nodes": ["addressConfiguration", "contextConfiguration"], "n_whitespaces": 146, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.472512+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "793465645c4f2bce507099b1fa6005c0a2412a9c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "getDefaultAddress", "signature": null, "start_line": 115, "end_line": 117, "nloc": 3, "method_source_normalized": "private staticStringgetDefaultAddress(){\n\t\treturn Platform.isWindows() ? WINDOWS_NAMED_PIPE_PATH : DOMAIN_SOCKET_PATH;\n\t}", "original_code": "private static String getDefaultAddress() {\n\t\treturn Platform.isWindows() ? WINDOWS_NAMED_PIPE_PATH : DOMAIN_SOCKET_PATH;\n\t}", "code_tokens": ["private", "static", "string", "get", "default", "address", "(", ")", "{", "return", "platform", ".", "is", "windows", "(", ")", "?", "windows", "named", "pipe", "path", ":", "domain", "socket", "path", ";", "}"], "token_count": 27, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.472809+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6a1425ef8399ddd5bccfff5f7d7cc05eeee5f0ff", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHost.java", "file_blob_sha": null, "method_name": "isTrue", "signature": null, "start_line": 119, "end_line": 126, "nloc": 8, "method_source_normalized": "private staticbooleanisTrue(@Nullable String value){\n\t\ttry {\n\t\t\treturn (value != null) && (Integer.parseInt(value) == 1);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\treturn false;\n\t\t}\n\t}", "original_code": "private static boolean isTrue(@Nullable String value) {\n\t\ttry {\n\t\t\treturn (value != null) && (Integer.parseInt(value) == 1);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\treturn false;\n\t\t}\n\t}", "code_tokens": ["private", "static", "boolean", "is", "true", "(", "@", "nullable", "string", "value", ")", "{", "try", "{", "return", "(", "value", "!=", "null", ")", "&&", "(", "integer", ".", "parse", "int", "(", "value", ")", "==", "__NUM__", ")", ";", "}", "catch", "(", "number", "format", "exception", "ex", ")", "{", "return", "false", ";", "}", "}"], "token_count": 47, "vocab_size": 31, "cyclomatic_complexity": 3, "ast_node_count": 65, "n_identifiers": 10, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.473084+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4c1072f9031ba79e33577b4b806161cedb7b4d64", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryTokenAuthentication.java", "file_blob_sha": null, "method_name": "DockerRegistryTokenAuthentication", "signature": null, "start_line": 32, "end_line": 35, "nloc": 4, "method_source_normalized": "DockerRegistryTokenAuthentication(String token){\n\t\tthis.token = token;\n\t\tcreateAuthHeader();\n\t}", "original_code": "DockerRegistryTokenAuthentication(String token) {\n\t\tthis.token = token;\n\t\tcreateAuthHeader();\n\t}", "code_tokens": ["docker", "registry", "token", "authentication", "(", "string", "token", ")", "{", "this", ".", "token", "=", "token", ";", "create", "auth", "header", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.473693+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bbe23ca6214a09fc57237e8d77c930b5e927a699", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryTokenAuthentication.java", "file_blob_sha": null, "method_name": "getToken", "signature": null, "start_line": 37, "end_line": 39, "nloc": 3, "method_source_normalized": "StringgetToken(){\n\t\treturn this.token;\n\t}", "original_code": "String getToken() {\n\t\treturn this.token;\n\t}", "code_tokens": ["string", "get", "token", "(", ")", "{", "return", "this", ".", "token", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.473934+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e33c5a3c0626497adefa04826e4db6e6fada1b83", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "PemPrivateKeyParser", "signature": null, "start_line": 115, "end_line": 116, "nloc": 2, "method_source_normalized": "privatePemPrivateKeyParser(){\n\t}", "original_code": "private PemPrivateKeyParser() {\n\t}", "code_tokens": ["private", "pem", "private", "key", "parser", "(", ")", "{", "}"], "token_count": 9, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.480750+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7ce1dd049ef4d50b8d2d52e5b86add70b3a4b341", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "createKeySpecForPkcs1Rsa", "signature": null, "start_line": 118, "end_line": 120, "nloc": 3, "method_source_normalized": "private staticPKCS8EncodedKeySpeccreateKeySpecForPkcs1Rsa(byte[] bytes, @Nullable String password){\n\t\treturn createKeySpecForAlgorithm(bytes, RSA_ALGORITHM, null);\n\t}", "original_code": "private static PKCS8EncodedKeySpec createKeySpecForPkcs1Rsa(byte[] bytes, @Nullable String password) {\n\t\treturn createKeySpecForAlgorithm(bytes, RSA_ALGORITHM, null);\n\t}", "code_tokens": ["private", "static", "pkcs", "8", "encoded", "key", "spec", "create", "key", "spec", "for", "pkcs", "1", "rsa", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "return", "create", "key", "spec", "for", "algorithm", "(", "bytes", ",", "rsa", "algorithm", ",", "null", ")", ";", "}"], "token_count": 42, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.481019+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aa0d2886b70d7e40319da2fa1e8531673a76064c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "createKeySpecForSec1Ec", "signature": null, "start_line": 122, "end_line": 137, "nloc": 16, "method_source_normalized": "private staticPKCS8EncodedKeySpeccreateKeySpecForSec1Ec(byte[] bytes, @Nullable String password){\n\t\tDerElement ecPrivateKey = DerElement.of(bytes);\n\t\tAssert.state(ecPrivateKey != null, \"Unable to find private key\");\n\t\tAssert.state(ecPrivateKey.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should be an ASN.1 encoded sequence\");\n\t\tDerElement version = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(version != null && version.isType(ValueType.PRIMITIVE, TagType.INTEGER),\n\t\t\t\t\"Key spec should start with version\");\n\t\tAssert.state(version.getContents().remaining() == 1 && version.getContents().get() == 1,\n\t\t\t\t\"Key spec version must be 1\");\n\t\tDerElement privateKey = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(privateKey != null && privateKey.isType(ValueType.PRIMITIVE, TagType.OCTET_STRING),\n\t\t\t\t\"Key spec should contain private key\");\n\t\tDerElement parameters = DerElement.of(ecPrivateKey.getContents());\n\t\treturn createKeySpecForAlgorithm(bytes, ELLIPTIC_CURVE_ALGORITHM, getEcParameters(parameters));\n\t}", "original_code": "private static PKCS8EncodedKeySpec createKeySpecForSec1Ec(byte[] bytes, @Nullable String password) {\n\t\tDerElement ecPrivateKey = DerElement.of(bytes);\n\t\tAssert.state(ecPrivateKey != null, \"Unable to find private key\");\n\t\tAssert.state(ecPrivateKey.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should be an ASN.1 encoded sequence\");\n\t\tDerElement version = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(version != null && version.isType(ValueType.PRIMITIVE, TagType.INTEGER),\n\t\t\t\t\"Key spec should start with version\");\n\t\tAssert.state(version.getContents().remaining() == 1 && version.getContents().get() == 1,\n\t\t\t\t\"Key spec version must be 1\");\n\t\tDerElement privateKey = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(privateKey != null && privateKey.isType(ValueType.PRIMITIVE, TagType.OCTET_STRING),\n\t\t\t\t\"Key spec should contain private key\");\n\t\tDerElement parameters = DerElement.of(ecPrivateKey.getContents());\n\t\treturn createKeySpecForAlgorithm(bytes, ELLIPTIC_CURVE_ALGORITHM, getEcParameters(parameters));\n\t}", "code_tokens": ["private", "static", "pkcs", "8", "encoded", "key", "spec", "create", "key", "spec", "for", "sec", "1", "ec", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "der", "element", "ec", "private", "key", "=", "der", "element", ".", "of", "(", "bytes", ")", ";", "assert", ".", "state", "(", "ec", "private", "key", "!=", "null", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "ec", "private", "key", ".", "is", "type", "(", "value", "type", ".", "encoded", ",", "tag", "type", ".", "sequence", ")", ",", "__STR__", ")", ";", "der", "element", "version", "=", "der", "element", ".", "of", "(", "ec", "private", "key", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "version", "!=", "null", "&&", "version", ".", "is", "type", "(", "value", "type", ".", "primitive", ",", "tag", "type", ".", "integer", ")", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "version", ".", "get", "contents", "(", ")", ".", "remaining", "(", ")", "==", "__NUM__", "&&", "version", ".", "get", "contents", "(", ")", ".", "get", "(", ")", "==", "__NUM__", ",", "__STR__", ")", ";", "der", "element", "private", "key", "=", "der", "element", ".", "of", "(", "ec", "private", "key", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "private", "key", "!=", "null", "&&", "private", "key", ".", "is", "type", "(", "value", "type", ".", "primitive", ",", "tag", "type", ".", "octet", "string", ")", ",", "__STR__", ")", ";", "der", "element", "parameters", "=", "der", "element", ".", "of", "(", "ec", "private", "key", ".", "get", "contents", "(", ")", ")", ";", "return", "create", "key", "spec", "for", "algorithm", "(", "bytes", ",", "elliptic", "curve", "algorithm", ",", "get", "ec", "parameters", "(", "parameters", ")", ")", ";", "}"], "token_count": 248, "vocab_size": 56, "cyclomatic_complexity": 4, "ast_node_count": 273, "n_identifiers": 71, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 121, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.481439+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2a58fa899f91256afd38e4581d07a79a3d7b71d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "getEcParameters", "signature": null, "start_line": 139, "end_line": 148, "nloc": 10, "method_source_normalized": "private staticEncodedOidgetEcParameters(@Nullable DerElement parameters){\n\t\tif (parameters == null) {\n\t\t\treturn ELLIPTIC_CURVE_384_BIT;\n\t\t}\n\t\tAssert.state(parameters.isType(ValueType.ENCODED), \"Key spec should contain encoded parameters\");\n\t\tDerElement contents = DerElement.of(parameters.getContents());\n\t\tAssert.state(contents != null && contents.isType(ValueType.PRIMITIVE, TagType.OBJECT_IDENTIFIER),\n\t\t\t\t\"Key spec parameters should contain object identifier\");\n\t\treturn EncodedOid.of(contents);\n\t}", "original_code": "private static EncodedOid getEcParameters(@Nullable DerElement parameters) {\n\t\tif (parameters == null) {\n\t\t\treturn ELLIPTIC_CURVE_384_BIT;\n\t\t}\n\t\tAssert.state(parameters.isType(ValueType.ENCODED), \"Key spec should contain encoded parameters\");\n\t\tDerElement contents = DerElement.of(parameters.getContents());\n\t\tAssert.state(contents != null && contents.isType(ValueType.PRIMITIVE, TagType.OBJECT_IDENTIFIER),\n\t\t\t\t\"Key spec parameters should contain object identifier\");\n\t\treturn EncodedOid.of(contents);\n\t}", "code_tokens": ["private", "static", "encoded", "oid", "get", "ec", "parameters", "(", "@", "nullable", "der", "element", "parameters", ")", "{", "if", "(", "parameters", "==", "null", ")", "{", "return", "elliptic", "curve", "384", "bit", ";", "}", "assert", ".", "state", "(", "parameters", ".", "is", "type", "(", "value", "type", ".", "encoded", ")", ",", "__STR__", ")", ";", "der", "element", "contents", "=", "der", "element", ".", "of", "(", "parameters", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "contents", "!=", "null", "&&", "contents", ".", "is", "type", "(", "value", "type", ".", "primitive", ",", "tag", "type", ".", "object", "identifier", ")", ",", "__STR__", ")", ";", "return", "encoded", "oid", ".", "of", "(", "contents", ")", ";", "}"], "token_count": 102, "vocab_size": 41, "cyclomatic_complexity": 3, "ast_node_count": 121, "n_identifiers": 31, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 61, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.481791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "46b8626e9cd93679197977d1ffe2be10b39fe209", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "createKeySpecForAlgorithm", "signature": null, "start_line": 150, "end_line": 165, "nloc": 16, "method_source_normalized": "private staticPKCS8EncodedKeySpeccreateKeySpecForAlgorithm(byte[] bytes, EncodedOid algorithm,\n\t\t\t@Nullable EncodedOid parameters){\n\t\ttry {\n\t\t\tDerEncoder encoder = new DerEncoder();\n\t\t\tencoder.integer(0x00); // Version 0\n\t\t\tDerEncoder algorithmIdentifier = new DerEncoder();\n\t\t\talgorithmIdentifier.objectIdentifier(algorithm);\n\t\t\talgorithmIdentifier.objectIdentifier(parameters);\n\t\t\tencoder.sequence(algorithmIdentifier.toByteArray());\n\t\t\tencoder.octetString(bytes);\n\t\t\treturn new PKCS8EncodedKeySpec(encoder.toSequence());\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "private static PKCS8EncodedKeySpec createKeySpecForAlgorithm(byte[] bytes, EncodedOid algorithm,\n\t\t\t@Nullable EncodedOid parameters) {\n\t\ttry {\n\t\t\tDerEncoder encoder = new DerEncoder();\n\t\t\tencoder.integer(0x00); // Version 0\n\t\t\tDerEncoder algorithmIdentifier = new DerEncoder();\n\t\t\talgorithmIdentifier.objectIdentifier(algorithm);\n\t\t\talgorithmIdentifier.objectIdentifier(parameters);\n\t\t\tencoder.sequence(algorithmIdentifier.toByteArray());\n\t\t\tencoder.octetString(bytes);\n\t\t\treturn new PKCS8EncodedKeySpec(encoder.toSequence());\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "pkcs", "8", "encoded", "key", "spec", "create", "key", "spec", "for", "algorithm", "(", "byte", "[", "]", "bytes", ",", "encoded", "oid", "algorithm", ",", "@", "nullable", "encoded", "oid", "parameters", ")", "{", "try", "{", "der", "encoder", "encoder", "=", "new", "der", "encoder", "(", ")", ";", "encoder", ".", "integer", "(", "0x00", ")", ";", "// Version 0", "der", "encoder", "algorithm", "identifier", "=", "new", "der", "encoder", "(", ")", ";", "algorithm", "identifier", ".", "object", "identifier", "(", "algorithm", ")", ";", "algorithm", "identifier", ".", "object", "identifier", "(", "parameters", ")", ";", "encoder", ".", "sequence", "(", "algorithm", "identifier", ".", "to", "byte", "array", "(", ")", ")", ";", "encoder", ".", "octet", "string", "(", "bytes", ")", ";", "return", "new", "pkcs", "8", "encoded", "key", "spec", "(", "encoder", ".", "to", "sequence", "(", ")", ")", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 135, "vocab_size": 48, "cyclomatic_complexity": 2, "ast_node_count": 155, "n_identifiers": 36, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 82, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.482138+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "df0e95f46fdd5a9f32b44c5a5cd3ce3393ce5048", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "createKeySpecForPkcs8", "signature": null, "start_line": 167, "end_line": 183, "nloc": 17, "method_source_normalized": "private staticPKCS8EncodedKeySpeccreateKeySpecForPkcs8(byte[] bytes, @Nullable String password){\n\t\tDerElement ecPrivateKey = DerElement.of(bytes);\n\t\tAssert.state(ecPrivateKey != null, \"Unable to find private key\");\n\t\tAssert.state(ecPrivateKey.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should be an ASN.1 encoded sequence\");\n\t\tDerElement version = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(version != null && version.isType(ValueType.PRIMITIVE, TagType.INTEGER),\n\t\t\t\t\"Key spec should start with version\");\n\t\tDerElement sequence = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(sequence != null && sequence.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should contain private key\");\n\t\tDerElement algorithmId = DerElement.of(sequence.getContents());\n\t\tAssert.state(algorithmId != null && algorithmId.isType(ValueType.PRIMITIVE, TagType.OBJECT_IDENTIFIER),\n\t\t\t\t\"Key spec container object identifier\");\n\t\tString algorithmName = ALGORITHMS.get(EncodedOid.of(algorithmId));\n\t\treturn (algorithmName != null) ? new PKCS8EncodedKeySpec(bytes, algorithmName) : new PKCS8EncodedKeySpec(bytes);\n\t}", "original_code": "private static PKCS8EncodedKeySpec createKeySpecForPkcs8(byte[] bytes, @Nullable String password) {\n\t\tDerElement ecPrivateKey = DerElement.of(bytes);\n\t\tAssert.state(ecPrivateKey != null, \"Unable to find private key\");\n\t\tAssert.state(ecPrivateKey.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should be an ASN.1 encoded sequence\");\n\t\tDerElement version = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(version != null && version.isType(ValueType.PRIMITIVE, TagType.INTEGER),\n\t\t\t\t\"Key spec should start with version\");\n\t\tDerElement sequence = DerElement.of(ecPrivateKey.getContents());\n\t\tAssert.state(sequence != null && sequence.isType(ValueType.ENCODED, TagType.SEQUENCE),\n\t\t\t\t\"Key spec should contain private key\");\n\t\tDerElement algorithmId = DerElement.of(sequence.getContents());\n\t\tAssert.state(algorithmId != null && algorithmId.isType(ValueType.PRIMITIVE, TagType.OBJECT_IDENTIFIER),\n\t\t\t\t\"Key spec container object identifier\");\n\t\tString algorithmName = ALGORITHMS.get(EncodedOid.of(algorithmId));\n\t\treturn (algorithmName != null) ? new PKCS8EncodedKeySpec(bytes, algorithmName) : new PKCS8EncodedKeySpec(bytes);\n\t}", "code_tokens": ["private", "static", "pkcs", "8", "encoded", "key", "spec", "create", "key", "spec", "for", "pkcs", "8", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "der", "element", "ec", "private", "key", "=", "der", "element", ".", "of", "(", "bytes", ")", ";", "assert", ".", "state", "(", "ec", "private", "key", "!=", "null", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "ec", "private", "key", ".", "is", "type", "(", "value", "type", ".", "encoded", ",", "tag", "type", ".", "sequence", ")", ",", "__STR__", ")", ";", "der", "element", "version", "=", "der", "element", ".", "of", "(", "ec", "private", "key", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "version", "!=", "null", "&&", "version", ".", "is", "type", "(", "value", "type", ".", "primitive", ",", "tag", "type", ".", "integer", ")", ",", "__STR__", ")", ";", "der", "element", "sequence", "=", "der", "element", ".", "of", "(", "ec", "private", "key", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "sequence", "!=", "null", "&&", "sequence", ".", "is", "type", "(", "value", "type", ".", "encoded", ",", "tag", "type", ".", "sequence", ")", ",", "__STR__", ")", ";", "der", "element", "algorithm", "id", "=", "der", "element", ".", "of", "(", "sequence", ".", "get", "contents", "(", ")", ")", ";", "assert", ".", "state", "(", "algorithm", "id", "!=", "null", "&&", "algorithm", "id", ".", "is", "type", "(", "value", "type", ".", "primitive", ",", "tag", "type", ".", "object", "identifier", ")", ",", "__STR__", ")", ";", "string", "algorithm", "name", "=", "algorithms", ".", "get", "(", "encoded", "oid", ".", "of", "(", "algorithm", "id", ")", ")", ";", "return", "(", "algorithm", "name", "!=", "null", ")", "?", "new", "pkcs", "8", "encoded", "key", "spec", "(", "bytes", ",", "algorithm", "name", ")", ":", "new", "pkcs", "8", "encoded", "key", "spec", "(", "bytes", ")", ";", "}"], "token_count": 267, "vocab_size": 56, "cyclomatic_complexity": 5, "ast_node_count": 293, "n_identifiers": 80, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 132, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.482577+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ab395afd1d9b745a9fac61fb685651889ed523e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "createKeySpecForPkcs8Encrypted", "signature": null, "start_line": 185, "end_line": 187, "nloc": 3, "method_source_normalized": "private staticPKCS8EncodedKeySpeccreateKeySpecForPkcs8Encrypted(byte[] bytes, @Nullable String password){\n\t\treturn Pkcs8PrivateKeyDecryptor.decrypt(bytes, password);\n\t}", "original_code": "private static PKCS8EncodedKeySpec createKeySpecForPkcs8Encrypted(byte[] bytes, @Nullable String password) {\n\t\treturn Pkcs8PrivateKeyDecryptor.decrypt(bytes, password);\n\t}", "code_tokens": ["private", "static", "pkcs", "8", "encoded", "key", "spec", "create", "key", "spec", "for", "pkcs", "8", "encrypted", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "return", "pkcs", "8", "private", "key", "decryptor", ".", "decrypt", "(", "bytes", ",", "password", ")", ";", "}"], "token_count": 41, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.482870+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8a4427e178311c6a785b6e1803e3cb334babcb96", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 194, "end_line": 196, "nloc": 3, "method_source_normalized": "static @NullablePrivateKeyparse(String text){\n\t\treturn parse(text, null);\n\t}", "original_code": "static @Nullable PrivateKey parse(String text) {\n\t\treturn parse(text, null);\n\t}", "code_tokens": ["static", "@", "nullable", "private", "key", "parse", "(", "string", "text", ")", "{", "return", "parse", "(", "text", ",", "null", ")", ";", "}"], "token_count": 20, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.483117+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "81408c4a0937d700f2b58f41a89b20817f112d72", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 205, "end_line": 221, "nloc": 17, "method_source_normalized": "static @NullablePrivateKeyparse(@Nullable String text, @Nullable String password){\n\t\tif (text == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tfor (PemParser pemParser : PEM_PARSERS) {\n\t\t\t\tPrivateKey privateKey = pemParser.parse(text, password);\n\t\t\t\tif (privateKey != null) {\n\t\t\t\t\treturn privateKey;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow new IllegalStateException(\"Error loading private key file: \" + ex.getMessage(), ex);\n\t\t}\n\t\tthrow new IllegalStateException(\"Missing private key or unrecognized format\");\n\t}", "original_code": "static @Nullable PrivateKey parse(@Nullable String text, @Nullable String password) {\n\t\tif (text == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tfor (PemParser pemParser : PEM_PARSERS) {\n\t\t\t\tPrivateKey privateKey = pemParser.parse(text, password);\n\t\t\t\tif (privateKey != null) {\n\t\t\t\t\treturn privateKey;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow new IllegalStateException(\"Error loading private key file: \" + ex.getMessage(), ex);\n\t\t}\n\t\tthrow new IllegalStateException(\"Missing private key or unrecognized format\");\n\t}", "code_tokens": ["static", "@", "nullable", "private", "key", "parse", "(", "@", "nullable", "string", "text", ",", "@", "nullable", "string", "password", ")", "{", "if", "(", "text", "==", "null", ")", "{", "return", "null", ";", "}", "try", "{", "for", "(", "pem", "parser", "pem", "parser", ":", "pem", "parsers", ")", "{", "private", "key", "private", "key", "=", "pem", "parser", ".", "parse", "(", "text", ",", "password", ")", ";", "if", "(", "private", "key", "!=", "null", ")", "{", "return", "private", "key", ";", "}", "}", "}", "catch", "(", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "ex", ".", "get", "message", "(", ")", ",", "ex", ")", ";", "}", "throw", "new", "illegal", "state", "exception", "(", "__STR__", ")", ";", "}"], "token_count": 107, "vocab_size": 39, "cyclomatic_complexity": 5, "ast_node_count": 135, "n_identifiers": 28, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 109, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.483431+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14a00758ad1188a1c5d1e03cf40e9f7e237e78b7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "PemParser", "signature": null, "start_line": 234, "end_line": 239, "nloc": 6, "method_source_normalized": "PemParser(String header, String footer,\n\t\t\t\tBiFunction<byte[], @Nullable String, PKCS8EncodedKeySpec> keySpecFactory, String... algorithms){\n\t\t\tthis.pattern = Pattern.compile(header + BASE64_TEXT + footer, Pattern.CASE_INSENSITIVE);\n\t\t\tthis.keySpecFactory = keySpecFactory;\n\t\t\tthis.algorithms = algorithms;\n\t\t}", "original_code": "PemParser(String header, String footer,\n\t\t\t\tBiFunction<byte[], @Nullable String, PKCS8EncodedKeySpec> keySpecFactory, String... algorithms) {\n\t\t\tthis.pattern = Pattern.compile(header + BASE64_TEXT + footer, Pattern.CASE_INSENSITIVE);\n\t\t\tthis.keySpecFactory = keySpecFactory;\n\t\t\tthis.algorithms = algorithms;\n\t\t}", "code_tokens": ["pem", "parser", "(", "string", "header", ",", "string", "footer", ",", "bi", "function", "<", "byte", "[", "]", ",", "@", "nullable", "string", ",", "pkcs", "8", "encoded", "key", "spec", ">", "key", "spec", "factory", ",", "string", "...", "algorithms", ")", "{", "this", ".", "pattern", "=", "pattern", ".", "compile", "(", "header", "+", "base", "64", "text", "+", "footer", ",", "pattern", ".", "case", "insensitive", ")", ";", "this", ".", "key", "spec", "factory", "=", "key", "spec", "factory", ";", "this", ".", "algorithms", "=", "algorithms", ";", "}"], "token_count": 74, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 88, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.483745+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0fb65e4c917073b02675e1cc3915d85a97cd73c4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 241, "end_line": 244, "nloc": 4, "method_source_normalized": "@NullablePrivateKeyparse(String text, @Nullable String password){\n\t\t\tMatcher matcher = this.pattern.matcher(text);\n\t\t\treturn (!matcher.find()) ? null : parse(decodeBase64(matcher.group(BASE64_TEXT_GROUP)), password);\n\t\t}", "original_code": "@Nullable PrivateKey parse(String text, @Nullable String password) {\n\t\t\tMatcher matcher = this.pattern.matcher(text);\n\t\t\treturn (!matcher.find()) ? null : parse(decodeBase64(matcher.group(BASE64_TEXT_GROUP)), password);\n\t\t}", "code_tokens": ["@", "nullable", "private", "key", "parse", "(", "string", "text", ",", "@", "nullable", "string", "password", ")", "{", "matcher", "matcher", "=", "this", ".", "pattern", ".", "matcher", "(", "text", ")", ";", "return", "(", "!", "matcher", ".", "find", "(", ")", ")", "?", "null", ":", "parse", "(", "decode", "base", "64", "(", "matcher", ".", "group", "(", "base", "64", "text", "group", ")", ")", ",", "password", ")", ";", "}"], "token_count": 60, "vocab_size": 29, "cyclomatic_complexity": 2, "ast_node_count": 80, "n_identifiers": 21, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.484030+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1787a4044ac49c6edf26b1da092f55b72a31bd7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "decodeBase64", "signature": null, "start_line": 246, "end_line": 249, "nloc": 4, "method_source_normalized": "private staticbyte[]decodeBase64(String content){\n\t\t\tbyte[] contentBytes = content.replaceAll(\"\\r\", \"\").replaceAll(\"\\n\", \"\").getBytes();\n\t\t\treturn Base64.getDecoder().decode(contentBytes);\n\t\t}", "original_code": "private static byte[] decodeBase64(String content) {\n\t\t\tbyte[] contentBytes = content.replaceAll(\"\\r\", \"\").replaceAll(\"\\n\", \"\").getBytes();\n\t\t\treturn Base64.getDecoder().decode(contentBytes);\n\t\t}", "code_tokens": ["private", "static", "byte", "[", "]", "decode", "base", "64", "(", "string", "content", ")", "{", "byte", "[", "]", "content", "bytes", "=", "content", ".", "replace", "all", "(", "__STR__", ",", "__STR__", ")", ".", "replace", "all", "(", "__STR__", ",", "__STR__", ")", ".", "get", "bytes", "(", ")", ";", "return", "base", "64", ".", "get", "decoder", "(", ")", ".", "decode", "(", "content", "bytes", ")", ";", "}"], "token_count": 58, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.484306+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fea07b18a1d566825cff1ed61927dd4ab899edb4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 251, "end_line": 272, "nloc": 22, "method_source_normalized": "private @NullablePrivateKeyparse(byte[] bytes, @Nullable String password){\n\t\t\tPKCS8EncodedKeySpec keySpec = this.keySpecFactory.apply(bytes, password);\n\t\t\tif (keySpec.getAlgorithm() != null) {\n\t\t\t\ttry {\n\t\t\t\t\tKeyFactory keyFactory = KeyFactory.getInstance(keySpec.getAlgorithm());\n\t\t\t\t\treturn keyFactory.generatePrivate(keySpec);\n\t\t\t\t}\n\t\t\t\tcatch (InvalidKeySpecException | NoSuchAlgorithmException ex) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (String algorithm : this.algorithms) {\n\t\t\t\ttry {\n\t\t\t\t\tKeyFactory keyFactory = KeyFactory.getInstance(algorithm);\n\t\t\t\t\treturn keyFactory.generatePrivate(keySpec);\n\t\t\t\t}\n\t\t\t\tcatch (InvalidKeySpecException | NoSuchAlgorithmException ex) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "original_code": "private @Nullable PrivateKey parse(byte[] bytes, @Nullable String password) {\n\t\t\tPKCS8EncodedKeySpec keySpec = this.keySpecFactory.apply(bytes, password);\n\t\t\tif (keySpec.getAlgorithm() != null) {\n\t\t\t\ttry {\n\t\t\t\t\tKeyFactory keyFactory = KeyFactory.getInstance(keySpec.getAlgorithm());\n\t\t\t\t\treturn keyFactory.generatePrivate(keySpec);\n\t\t\t\t}\n\t\t\t\tcatch (InvalidKeySpecException | NoSuchAlgorithmException ex) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (String algorithm : this.algorithms) {\n\t\t\t\ttry {\n\t\t\t\t\tKeyFactory keyFactory = KeyFactory.getInstance(algorithm);\n\t\t\t\t\treturn keyFactory.generatePrivate(keySpec);\n\t\t\t\t}\n\t\t\t\tcatch (InvalidKeySpecException | NoSuchAlgorithmException ex) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["private", "@", "nullable", "private", "key", "parse", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "pkcs", "8", "encoded", "key", "spec", "key", "spec", "=", "this", ".", "key", "spec", "factory", ".", "apply", "(", "bytes", ",", "password", ")", ";", "if", "(", "key", "spec", ".", "get", "algorithm", "(", ")", "!=", "null", ")", "{", "try", "{", "key", "factory", "key", "factory", "=", "key", "factory", ".", "get", "instance", "(", "key", "spec", ".", "get", "algorithm", "(", ")", ")", ";", "return", "key", "factory", ".", "generate", "private", "(", "key", "spec", ")", ";", "}", "catch", "(", "invalid", "key", "spec", "exception", "|", "no", "such", "algorithm", "exception", "ex", ")", "{", "// Ignore", "}", "}", "for", "(", "string", "algorithm", ":", "this", ".", "algorithms", ")", "{", "try", "{", "key", "factory", "key", "factory", "=", "key", "factory", ".", "get", "instance", "(", "algorithm", ")", ";", "return", "key", "factory", ".", "generate", "private", "(", "key", "spec", ")", ";", "}", "catch", "(", "invalid", "key", "spec", "exception", "|", "no", "such", "algorithm", "exception", "ex", ")", "{", "// Ignore", "}", "}", "return", "null", ";", "}"], "token_count": 162, "vocab_size": 46, "cyclomatic_complexity": 5, "ast_node_count": 179, "n_identifiers": 41, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 147, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.484731+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ff975b5ac0d35cd495c09446acc5c35341382f79", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "objectIdentifier", "signature": null, "start_line": 283, "end_line": 286, "nloc": 4, "method_source_normalized": "voidobjectIdentifier(@Nullable EncodedOid encodedOid)throws IOException{\n\t\t\tint code = (encodedOid != null) ? 0x06 : 0x05;\n\t\t\tcodeLengthBytes(code, (encodedOid != null) ? encodedOid.toByteArray() : null);\n\t\t}", "original_code": "void objectIdentifier(@Nullable EncodedOid encodedOid) throws IOException {\n\t\t\tint code = (encodedOid != null) ? 0x06 : 0x05;\n\t\t\tcodeLengthBytes(code, (encodedOid != null) ? encodedOid.toByteArray() : null);\n\t\t}", "code_tokens": ["void", "object", "identifier", "(", "@", "nullable", "encoded", "oid", "encoded", "oid", ")", "throws", "io", "exception", "{", "int", "code", "=", "(", "encoded", "oid", "!=", "null", ")", "?", "0x06", ":", "0x05", ";", "code", "length", "bytes", "(", "code", ",", "(", "encoded", "oid", "!=", "null", ")", "?", "encoded", "oid", ".", "to", "byte", "array", "(", ")", ":", "null", ")", ";", "}"], "token_count": 55, "vocab_size": 31, "cyclomatic_complexity": 3, "ast_node_count": 65, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.485034+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f60bc636fcd3988fc40a42009a032f5492cc2d7c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "integer", "signature": null, "start_line": 288, "end_line": 290, "nloc": 3, "method_source_normalized": "voidinteger(int... encodedInteger)throws IOException{\n\t\t\tcodeLengthBytes(0x02, bytes(encodedInteger));\n\t\t}", "original_code": "void integer(int... encodedInteger) throws IOException {\n\t\t\tcodeLengthBytes(0x02, bytes(encodedInteger));\n\t\t}", "code_tokens": ["void", "integer", "(", "int", "...", "encoded", "integer", ")", "throws", "io", "exception", "{", "code", "length", "bytes", "(", "0x02", ",", "bytes", "(", "encoded", "integer", ")", ")", ";", "}"], "token_count": 26, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.485290+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f8d4e72c7055f4b0b3b14ba12afc5dbb274a6ffc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "octetString", "signature": null, "start_line": 292, "end_line": 294, "nloc": 3, "method_source_normalized": "voidoctetString(byte[] bytes)throws IOException{\n\t\t\tcodeLengthBytes(0x04, bytes);\n\t\t}", "original_code": "void octetString(byte[] bytes) throws IOException {\n\t\t\tcodeLengthBytes(0x04, bytes);\n\t\t}", "code_tokens": ["void", "octet", "string", "(", "byte", "[", "]", "bytes", ")", "throws", "io", "exception", "{", "code", "length", "bytes", "(", "0x04", ",", "bytes", ")", ";", "}"], "token_count": 23, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.485537+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77fe8bc77b6c3d08439c84c8b3ca4d5f7ca12e05", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "sequence", "signature": null, "start_line": 296, "end_line": 298, "nloc": 3, "method_source_normalized": "voidsequence(byte[] bytes)throws IOException{\n\t\t\tcodeLengthBytes(0x30, bytes);\n\t\t}", "original_code": "void sequence(byte[] bytes) throws IOException {\n\t\t\tcodeLengthBytes(0x30, bytes);\n\t\t}", "code_tokens": ["void", "sequence", "(", "byte", "[", "]", "bytes", ")", "throws", "io", "exception", "{", "code", "length", "bytes", "(", "0x30", ",", "bytes", ")", ";", "}"], "token_count": 22, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.485779+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bdc72aabebafcc18adb3827910081189315ec426", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "codeLengthBytes", "signature": null, "start_line": 300, "end_line": 321, "nloc": 22, "method_source_normalized": "voidcodeLengthBytes(int code, byte @Nullable [] bytes)throws IOException{\n\t\t\tthis.stream.write(code);\n\t\t\tint length = (bytes != null) ? bytes.length : 0;\n\t\t\tif (length <= 127) {\n\t\t\t\tthis.stream.write(length & 0xFF);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tByteArrayOutputStream lengthStream = new ByteArrayOutputStream();\n\t\t\t\twhile (length != 0) {\n\t\t\t\t\tlengthStream.write(length & 0xFF);\n\t\t\t\t\tlength = length >> 8;\n\t\t\t\t}\n\t\t\t\tbyte[] lengthBytes = lengthStream.toByteArray();\n\t\t\t\tthis.stream.write(0x80 | lengthBytes.length);\n\t\t\t\tfor (int i = lengthBytes.length - 1; i >= 0; i--) {\n\t\t\t\t\tthis.stream.write(lengthBytes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bytes != null) {\n\t\t\t\tthis.stream.write(bytes);\n\t\t\t}\n\t\t}", "original_code": "void codeLengthBytes(int code, byte @Nullable [] bytes) throws IOException {\n\t\t\tthis.stream.write(code);\n\t\t\tint length = (bytes != null) ? bytes.length : 0;\n\t\t\tif (length <= 127) {\n\t\t\t\tthis.stream.write(length & 0xFF);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tByteArrayOutputStream lengthStream = new ByteArrayOutputStream();\n\t\t\t\twhile (length != 0) {\n\t\t\t\t\tlengthStream.write(length & 0xFF);\n\t\t\t\t\tlength = length >> 8;\n\t\t\t\t}\n\t\t\t\tbyte[] lengthBytes = lengthStream.toByteArray();\n\t\t\t\tthis.stream.write(0x80 | lengthBytes.length);\n\t\t\t\tfor (int i = lengthBytes.length - 1; i >= 0; i--) {\n\t\t\t\t\tthis.stream.write(lengthBytes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bytes != null) {\n\t\t\t\tthis.stream.write(bytes);\n\t\t\t}\n\t\t}", "code_tokens": ["void", "code", "length", "bytes", "(", "int", "code", ",", "byte", "@", "nullable", "[", "]", "bytes", ")", "throws", "io", "exception", "{", "this", ".", "stream", ".", "write", "(", "code", ")", ";", "int", "length", "=", "(", "bytes", "!=", "null", ")", "?", "bytes", ".", "length", ":", "__NUM__", ";", "if", "(", "length", "<=", "__NUM__", ")", "{", "this", ".", "stream", ".", "write", "(", "length", "&", "0xFF", ")", ";", "}", "else", "{", "byte", "array", "output", "stream", "length", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "while", "(", "length", "!=", "__NUM__", ")", "{", "length", "stream", ".", "write", "(", "length", "&", "0xFF", ")", ";", "length", "=", "length", ">>", "__NUM__", ";", "}", "byte", "[", "]", "length", "bytes", "=", "length", "stream", ".", "to", "byte", "array", "(", ")", ";", "this", ".", "stream", ".", "write", "(", "0x80", "|", "length", "bytes", ".", "length", ")", ";", "for", "(", "int", "i", "=", "length", "bytes", ".", "length", "-", "__NUM__", ";", "i", ">=", "__NUM__", ";", "i", "--", ")", "{", "this", ".", "stream", ".", "write", "(", "length", "bytes", "[", "i", "]", ")", ";", "}", "}", "if", "(", "bytes", "!=", "null", ")", "{", "this", ".", "stream", ".", "write", "(", "bytes", ")", ";", "}", "}"], "token_count": 185, "vocab_size": 47, "cyclomatic_complexity": 6, "ast_node_count": 249, "n_identifiers": 45, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 157, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.486150+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "06db572b6d8c3fbc9308bdf35dc8121c9c79e657", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "bytes", "signature": null, "start_line": 323, "end_line": 332, "nloc": 10, "method_source_normalized": "private staticbyte @Nullable []bytes(int @Nullable ... elements){\n\t\t\tif (elements == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbyte[] result = new byte[elements.length];\n\t\t\tfor (int i = 0; i < elements.length; i++) {\n\t\t\t\tresult[i] = (byte) elements[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}", "original_code": "private static byte @Nullable [] bytes(int @Nullable ... elements) {\n\t\t\tif (elements == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbyte[] result = new byte[elements.length];\n\t\t\tfor (int i = 0; i < elements.length; i++) {\n\t\t\t\tresult[i] = (byte) elements[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}", "code_tokens": ["private", "static", "byte", "@", "nullable", "[", "]", "bytes", "(", "int", "@", "nullable", ".", ".", ".", "elements", ")", "{", "if", "(", "elements", "==", "null", ")", "{", "return", "null", ";", "}", "byte", "[", "]", "result", "=", "new", "byte", "[", "elements", ".", "length", "]", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "elements", ".", "length", ";", "i", "++", ")", "{", "result", "[", "i", "]", "=", "(", "byte", ")", "elements", "[", "i", "]", ";", "}", "return", "result", ";", "}"], "token_count": 77, "vocab_size": 29, "cyclomatic_complexity": 3, "ast_node_count": 119, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 2, "ast_error_nodes": ["int @Nullable ... elements", ".."], "n_whitespaces": 68, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.486474+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b5421541c4982f020352c1677c9946118db6c5fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "toSequence", "signature": null, "start_line": 334, "end_line": 338, "nloc": 5, "method_source_normalized": "byte[]toSequence()throws IOException{\n\t\t\tDerEncoder sequenceEncoder = new DerEncoder();\n\t\t\tsequenceEncoder.sequence(toByteArray());\n\t\t\treturn sequenceEncoder.toByteArray();\n\t\t}", "original_code": "byte[] toSequence() throws IOException {\n\t\t\tDerEncoder sequenceEncoder = new DerEncoder();\n\t\t\tsequenceEncoder.sequence(toByteArray());\n\t\t\treturn sequenceEncoder.toByteArray();\n\t\t}", "code_tokens": ["byte", "[", "]", "to", "sequence", "(", ")", "throws", "io", "exception", "{", "der", "encoder", "sequence", "encoder", "=", "new", "der", "encoder", "(", ")", ";", "sequence", "encoder", ".", "sequence", "(", "to", "byte", "array", "(", ")", ")", ";", "return", "sequence", "encoder", ".", "to", "byte", "array", "(", ")", ";", "}"], "token_count": 45, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.486746+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "563e1183e84a5a4d9ea65576ac3a891d36cbf4be", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "toByteArray", "signature": null, "start_line": 340, "end_line": 342, "nloc": 3, "method_source_normalized": "byte[]toByteArray(){\n\t\t\treturn this.stream.toByteArray();\n\t\t}", "original_code": "byte[] toByteArray() {\n\t\t\treturn this.stream.toByteArray();\n\t\t}", "code_tokens": ["byte", "[", "]", "to", "byte", "array", "(", ")", "{", "return", "this", ".", "stream", ".", "to", "byte", "array", "(", ")", ";", "}"], "token_count": 21, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 3, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.486988+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "00295261aa60251bcd885881fbd4e66c29c71ba7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "DerElement", "signature": null, "start_line": 357, "end_line": 366, "nloc": 10, "method_source_normalized": "privateDerElement(ByteBuffer bytes){\n\t\t\tbyte b = bytes.get();\n\t\t\tthis.valueType = ((b & 0x20) == 0) ? ValueType.PRIMITIVE : ValueType.ENCODED;\n\t\t\tthis.tagType = decodeTagType(b, bytes);\n\t\t\tint length = decodeLength(bytes);\n\t\t\tbytes.limit(bytes.position() + length);\n\t\t\tthis.contents = bytes.slice();\n\t\t\tbytes.limit(bytes.capacity());\n\t\t\tbytes.position(bytes.position() + length);\n\t\t}", "original_code": "private DerElement(ByteBuffer bytes) {\n\t\t\tbyte b = bytes.get();\n\t\t\tthis.valueType = ((b & 0x20) == 0) ? ValueType.PRIMITIVE : ValueType.ENCODED;\n\t\t\tthis.tagType = decodeTagType(b, bytes);\n\t\t\tint length = decodeLength(bytes);\n\t\t\tbytes.limit(bytes.position() + length);\n\t\t\tthis.contents = bytes.slice();\n\t\t\tbytes.limit(bytes.capacity());\n\t\t\tbytes.position(bytes.position() + length);\n\t\t}", "code_tokens": ["private", "der", "element", "(", "byte", "buffer", "bytes", ")", "{", "byte", "b", "=", "bytes", ".", "get", "(", ")", ";", "this", ".", "value", "type", "=", "(", "(", "b", "&", "0x20", ")", "==", "__NUM__", ")", "?", "value", "type", ".", "primitive", ":", "value", "type", ".", "encoded", ";", "this", ".", "tag", "type", "=", "decode", "tag", "type", "(", "b", ",", "bytes", ")", ";", "int", "length", "=", "decode", "length", "(", "bytes", ")", ";", "bytes", ".", "limit", "(", "bytes", ".", "position", "(", ")", "+", "length", ")", ";", "this", ".", "contents", "=", "bytes", ".", "slice", "(", ")", ";", "bytes", ".", "limit", "(", "bytes", ".", "capacity", "(", ")", ")", ";", "bytes", ".", "position", "(", "bytes", ".", "position", "(", ")", "+", "length", ")", ";", "}"], "token_count": 114, "vocab_size": 37, "cyclomatic_complexity": 2, "ast_node_count": 157, "n_identifiers": 36, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 63, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.487312+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32c637e41bbaac6a657c6793d1c9cd43c9b93091", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "decodeTagType", "signature": null, "start_line": 368, "end_line": 381, "nloc": 14, "method_source_normalized": "privatelongdecodeTagType(byte b, ByteBuffer bytes){\n\t\t\tlong tagType = (b & 0x1F);\n\t\t\tif (tagType != 0x1F) {\n\t\t\t\treturn tagType;\n\t\t\t}\n\t\t\ttagType = 0;\n\t\t\tb = bytes.get();\n\t\t\twhile ((b & 0x80) != 0) {\n\t\t\t\ttagType <<= 7;\n\t\t\t\ttagType = tagType | (b & 0x7F);\n\t\t\t\tb = bytes.get();\n\t\t\t}\n\t\t\treturn tagType;\n\t\t}", "original_code": "private long decodeTagType(byte b, ByteBuffer bytes) {\n\t\t\tlong tagType = (b & 0x1F);\n\t\t\tif (tagType != 0x1F) {\n\t\t\t\treturn tagType;\n\t\t\t}\n\t\t\ttagType = 0;\n\t\t\tb = bytes.get();\n\t\t\twhile ((b & 0x80) != 0) {\n\t\t\t\ttagType <<= 7;\n\t\t\t\ttagType = tagType | (b & 0x7F);\n\t\t\t\tb = bytes.get();\n\t\t\t}\n\t\t\treturn tagType;\n\t\t}", "code_tokens": ["private", "long", "decode", "tag", "type", "(", "byte", "b", ",", "byte", "buffer", "bytes", ")", "{", "long", "tag", "type", "=", "(", "b", "&", "0x1F", ")", ";", "if", "(", "tag", "type", "!=", "0x1F", ")", "{", "return", "tag", "type", ";", "}", "tag", "type", "=", "__NUM__", ";", "b", "=", "bytes", ".", "get", "(", ")", ";", "while", "(", "(", "b", "&", "0x80", ")", "!=", "__NUM__", ")", "{", "tag", "type", "<<=", "__NUM__", ";", "tag", "type", "=", "tag", "type", "|", "(", "b", "&", "0x7F", ")", ";", "b", "=", "bytes", ".", "get", "(", ")", ";", "}", "return", "tag", "type", ";", "}"], "token_count": 92, "vocab_size": 29, "cyclomatic_complexity": 3, "ast_node_count": 123, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.487629+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "53cb51aee08b21ad3221d58c7bec82b9aa7c1685", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "decodeLength", "signature": null, "start_line": 383, "end_line": 398, "nloc": 16, "method_source_normalized": "privateintdecodeLength(ByteBuffer bytes){\n\t\t\tbyte b = bytes.get();\n\t\t\tif ((b & 0x80) == 0) {\n\t\t\t\treturn b & 0x7F;\n\t\t\t}\n\t\t\tint numberOfLengthBytes = (b & 0x7F);\n\t\t\tAssert.state(numberOfLengthBytes != 0, \"Infinite length encoding is not supported\");\n\t\t\tAssert.state(numberOfLengthBytes != 0x7F, \"Reserved length encoding is not supported\");\n\t\t\tAssert.state(numberOfLengthBytes <= 4, \"Length overflow\");\n\t\t\tint length = 0;\n\t\t\tfor (int i = 0; i < numberOfLengthBytes; i++) {\n\t\t\t\tlength <<= 8;\n\t\t\t\tlength |= (bytes.get() & 0xFF);\n\t\t\t}\n\t\t\treturn length;\n\t\t}", "original_code": "private int decodeLength(ByteBuffer bytes) {\n\t\t\tbyte b = bytes.get();\n\t\t\tif ((b & 0x80) == 0) {\n\t\t\t\treturn b & 0x7F;\n\t\t\t}\n\t\t\tint numberOfLengthBytes = (b & 0x7F);\n\t\t\tAssert.state(numberOfLengthBytes != 0, \"Infinite length encoding is not supported\");\n\t\t\tAssert.state(numberOfLengthBytes != 0x7F, \"Reserved length encoding is not supported\");\n\t\t\tAssert.state(numberOfLengthBytes <= 4, \"Length overflow\");\n\t\t\tint length = 0;\n\t\t\tfor (int i = 0; i < numberOfLengthBytes; i++) {\n\t\t\t\tlength <<= 8;\n\t\t\t\tlength |= (bytes.get() & 0xFF);\n\t\t\t}\n\t\t\treturn length;\n\t\t}", "code_tokens": ["private", "int", "decode", "length", "(", "byte", "buffer", "bytes", ")", "{", "byte", "b", "=", "bytes", ".", "get", "(", ")", ";", "if", "(", "(", "b", "&", "0x80", ")", "==", "__NUM__", ")", "{", "return", "b", "&", "0x7F", ";", "}", "int", "number", "of", "length", "bytes", "=", "(", "b", "&", "0x7F", ")", ";", "assert", ".", "state", "(", "number", "of", "length", "bytes", "!=", "__NUM__", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "number", "of", "length", "bytes", "!=", "0x7F", ",", "__STR__", ")", ";", "assert", ".", "state", "(", "number", "of", "length", "bytes", "<=", "__NUM__", ",", "__STR__", ")", ";", "int", "length", "=", "__NUM__", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "number", "of", "length", "bytes", ";", "i", "++", ")", "{", "length", "<<=", "__NUM__", ";", "length", "|=", "(", "bytes", ".", "get", "(", ")", "&", "0xFF", ")", ";", "}", "return", "length", ";", "}"], "token_count": 134, "vocab_size": 38, "cyclomatic_complexity": 3, "ast_node_count": 172, "n_identifiers": 29, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 122, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.487973+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b315664f5b925b5df06f72f55fb36b532517596a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "isType", "signature": null, "start_line": 400, "end_line": 402, "nloc": 3, "method_source_normalized": "booleanisType(ValueType valueType){\n\t\t\treturn this.valueType == valueType;\n\t\t}", "original_code": "boolean isType(ValueType valueType) {\n\t\t\treturn this.valueType == valueType;\n\t\t}", "code_tokens": ["boolean", "is", "type", "(", "value", "type", "value", "type", ")", "{", "return", "this", ".", "value", "type", "==", "value", "type", ";", "}"], "token_count": 20, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.488233+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "da897cb93754646992c490afa80dd4c9962c5619", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "isType", "signature": null, "start_line": 404, "end_line": 406, "nloc": 3, "method_source_normalized": "booleanisType(ValueType valueType, TagType tagType){\n\t\t\treturn this.valueType == valueType && this.tagType == tagType.getNumber();\n\t\t}", "original_code": "boolean isType(ValueType valueType, TagType tagType) {\n\t\t\treturn this.valueType == valueType && this.tagType == tagType.getNumber();\n\t\t}", "code_tokens": ["boolean", "is", "type", "(", "value", "type", "value", "type", ",", "tag", "type", "tag", "type", ")", "{", "return", "this", ".", "value", "type", "==", "value", "type", "&&", "this", ".", "tag", "type", "==", "tag", "type", ".", "get", "number", "(", ")", ";", "}"], "token_count": 38, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 41, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.488488+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1327b88759cd42388cb97872c8534d4da907fd3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "getContents", "signature": null, "start_line": 408, "end_line": 410, "nloc": 3, "method_source_normalized": "ByteBuffergetContents(){\n\t\t\treturn this.contents;\n\t\t}", "original_code": "ByteBuffer getContents() {\n\t\t\treturn this.contents;\n\t\t}", "code_tokens": ["byte", "buffer", "get", "contents", "(", ")", "{", "return", "this", ".", "contents", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.488723+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eaee84f0be7ab42c2eb3921c41841d49263a55d1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 412, "end_line": 414, "nloc": 3, "method_source_normalized": "static @NullableDerElementof(byte[] bytes){\n\t\t\treturn of(ByteBuffer.wrap(bytes));\n\t\t}", "original_code": "static @Nullable DerElement of(byte[] bytes) {\n\t\t\treturn of(ByteBuffer.wrap(bytes));\n\t\t}", "code_tokens": ["static", "@", "nullable", "der", "element", "of", "(", "byte", "[", "]", "bytes", ")", "{", "return", "of", "(", "byte", "buffer", ".", "wrap", "(", "bytes", ")", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.488966+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7bc3edabde512474d502da7f3a7849e69ef59179", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 416, "end_line": 418, "nloc": 3, "method_source_normalized": "static @NullableDerElementof(ByteBuffer bytes){\n\t\t\treturn (bytes.remaining() > 0) ? new DerElement(bytes) : null;\n\t\t}", "original_code": "static @Nullable DerElement of(ByteBuffer bytes) {\n\t\t\treturn (bytes.remaining() > 0) ? new DerElement(bytes) : null;\n\t\t}", "code_tokens": ["static", "@", "nullable", "der", "element", "of", "(", "byte", "buffer", "bytes", ")", "{", "return", "(", "bytes", ".", "remaining", "(", ")", ">", "__NUM__", ")", "?", "new", "der", "element", "(", "bytes", ")", ":", "null", ";", "}"], "token_count": 33, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 44, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.489218+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9f89471c5fc47085573121983535b8d1852496b3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "TagType", "signature": null, "start_line": 432, "end_line": 434, "nloc": 3, "method_source_normalized": "TagType(int number){\n\t\t\t\tthis.number = number;\n\t\t\t}", "original_code": "TagType(int number) {\n\t\t\t\tthis.number = number;\n\t\t\t}", "code_tokens": ["tag", "type", "(", "int", "number", ")", "{", "this", ".", "number", "=", "number", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.489468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b9acc79d1754330922491a1599115325983381da", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "getNumber", "signature": null, "start_line": 436, "end_line": 438, "nloc": 3, "method_source_normalized": "intgetNumber(){\n\t\t\t\treturn this.number;\n\t\t\t}", "original_code": "int getNumber() {\n\t\t\t\treturn this.number;\n\t\t\t}", "code_tokens": ["int", "get", "number", "(", ")", "{", "return", "this", ".", "number", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.489703+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "def65b6f6503822df57a78fc9d9d4dc429f4b8cf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "decrypt", "signature": null, "start_line": 451, "end_line": 466, "nloc": 16, "method_source_normalized": "staticPKCS8EncodedKeySpecdecrypt(byte[] bytes, @Nullable String password){\n\t\t\tAssert.state(password != null, \"Password is required for an encrypted private key\");\n\t\t\ttry {\n\t\t\t\tEncryptedPrivateKeyInfo keyInfo = new EncryptedPrivateKeyInfo(bytes);\n\t\t\t\tAlgorithmParameters algorithmParameters = keyInfo.getAlgParameters();\n\t\t\t\tString encryptionAlgorithm = getEncryptionAlgorithm(algorithmParameters, keyInfo.getAlgName());\n\t\t\t\tSecretKeyFactory keyFactory = SecretKeyFactory.getInstance(encryptionAlgorithm);\n\t\t\t\tSecretKey key = keyFactory.generateSecret(new PBEKeySpec(password.toCharArray()));\n\t\t\t\tCipher cipher = Cipher.getInstance(encryptionAlgorithm);\n\t\t\t\tcipher.init(Cipher.DECRYPT_MODE, key, algorithmParameters);\n\t\t\t\treturn keyInfo.getKeySpec(cipher);\n\t\t\t}\n\t\t\tcatch (IOException | GeneralSecurityException ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"Error decrypting private key\", ex);\n\t\t\t}\n\t\t}", "original_code": "static PKCS8EncodedKeySpec decrypt(byte[] bytes, @Nullable String password) {\n\t\t\tAssert.state(password != null, \"Password is required for an encrypted private key\");\n\t\t\ttry {\n\t\t\t\tEncryptedPrivateKeyInfo keyInfo = new EncryptedPrivateKeyInfo(bytes);\n\t\t\t\tAlgorithmParameters algorithmParameters = keyInfo.getAlgParameters();\n\t\t\t\tString encryptionAlgorithm = getEncryptionAlgorithm(algorithmParameters, keyInfo.getAlgName());\n\t\t\t\tSecretKeyFactory keyFactory = SecretKeyFactory.getInstance(encryptionAlgorithm);\n\t\t\t\tSecretKey key = keyFactory.generateSecret(new PBEKeySpec(password.toCharArray()));\n\t\t\t\tCipher cipher = Cipher.getInstance(encryptionAlgorithm);\n\t\t\t\tcipher.init(Cipher.DECRYPT_MODE, key, algorithmParameters);\n\t\t\t\treturn keyInfo.getKeySpec(cipher);\n\t\t\t}\n\t\t\tcatch (IOException | GeneralSecurityException ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"Error decrypting private key\", ex);\n\t\t\t}\n\t\t}", "code_tokens": ["static", "pkcs", "8", "encoded", "key", "spec", "decrypt", "(", "byte", "[", "]", "bytes", ",", "@", "nullable", "string", "password", ")", "{", "assert", ".", "state", "(", "password", "!=", "null", ",", "__STR__", ")", ";", "try", "{", "encrypted", "private", "key", "info", "key", "info", "=", "new", "encrypted", "private", "key", "info", "(", "bytes", ")", ";", "algorithm", "parameters", "algorithm", "parameters", "=", "key", "info", ".", "get", "alg", "parameters", "(", ")", ";", "string", "encryption", "algorithm", "=", "get", "encryption", "algorithm", "(", "algorithm", "parameters", ",", "key", "info", ".", "get", "alg", "name", "(", ")", ")", ";", "secret", "key", "factory", "key", "factory", "=", "secret", "key", "factory", ".", "get", "instance", "(", "encryption", "algorithm", ")", ";", "secret", "key", "key", "=", "key", "factory", ".", "generate", "secret", "(", "new", "pbe", "key", "spec", "(", "password", ".", "to", "char", "array", "(", ")", ")", ")", ";", "cipher", "cipher", "=", "cipher", ".", "get", "instance", "(", "encryption", "algorithm", ")", ";", "cipher", ".", "init", "(", "cipher", ".", "decrypt", "mode", ",", "key", ",", "algorithm", "parameters", ")", ";", "return", "key", "info", ".", "get", "key", "spec", "(", "cipher", ")", ";", "}", "catch", "(", "io", "exception", "|", "general", "security", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 188, "vocab_size": 61, "cyclomatic_complexity": 2, "ast_node_count": 200, "n_identifiers": 54, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 121, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.490069+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32b77eda41fec980cb2cb5bd9d8d0b1a8bafafa6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "getEncryptionAlgorithm", "signature": null, "start_line": 468, "end_line": 473, "nloc": 6, "method_source_normalized": "private staticStringgetEncryptionAlgorithm(@Nullable AlgorithmParameters algParameters, String algName){\n\t\t\tif (algParameters != null && PBES2_ALGORITHM.equals(algName)) {\n\t\t\t\treturn algParameters.toString();\n\t\t\t}\n\t\t\treturn algName;\n\t\t}", "original_code": "private static String getEncryptionAlgorithm(@Nullable AlgorithmParameters algParameters, String algName) {\n\t\t\tif (algParameters != null && PBES2_ALGORITHM.equals(algName)) {\n\t\t\t\treturn algParameters.toString();\n\t\t\t}\n\t\t\treturn algName;\n\t\t}", "code_tokens": ["private", "static", "string", "get", "encryption", "algorithm", "(", "@", "nullable", "algorithm", "parameters", "alg", "parameters", ",", "string", "alg", "name", ")", "{", "if", "(", "alg", "parameters", "!=", "null", "&&", "pbes", "2", "algorithm", ".", "equals", "(", "alg", "name", ")", ")", "{", "return", "alg", "parameters", ".", "to", "string", "(", ")", ";", "}", "return", "alg", "name", ";", "}"], "token_count": 52, "vocab_size": 27, "cyclomatic_complexity": 3, "ast_node_count": 59, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.490429+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9dcac9ee1a8c5cc9176bb7df8a962378eac826e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "EncodedOid", "signature": null, "start_line": 494, "end_line": 496, "nloc": 3, "method_source_normalized": "privateEncodedOid(byte[] value){\n\t\t\tthis.value = value;\n\t\t}", "original_code": "private EncodedOid(byte[] value) {\n\t\t\tthis.value = value;\n\t\t}", "code_tokens": ["private", "encoded", "oid", "(", "byte", "[", "]", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.490709+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "69e39a8a8be28190f570c18a08d3b64560d7f158", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "toByteArray", "signature": null, "start_line": 498, "end_line": 500, "nloc": 3, "method_source_normalized": "byte[]toByteArray(){\n\t\t\treturn this.value.clone();\n\t\t}", "original_code": "byte[] toByteArray() {\n\t\t\treturn this.value.clone();\n\t\t}", "code_tokens": ["byte", "[", "]", "to", "byte", "array", "(", ")", "{", "return", "this", ".", "value", ".", "clone", "(", ")", ";", "}"], "token_count": 19, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 3, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.490949+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ebc06fcf8503302475866db7671fbd1997bb568e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 502, "end_line": 511, "nloc": 10, "method_source_normalized": "@Override\n\t\tpublicbooleanequals(Object obj){\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Arrays.equals(this.value, ((EncodedOid) obj).value);\n\t\t}", "original_code": "@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Arrays.equals(this.value, ((EncodedOid) obj).value);\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "return", "arrays", ".", "equals", "(", "this", ".", "value", ",", "(", "(", "encoded", "oid", ")", "obj", ")", ".", "value", ")", ";", "}"], "token_count": 65, "vocab_size": 29, "cyclomatic_complexity": 4, "ast_node_count": 91, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 57, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.491236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f209372bc40b6a6ec48cb905ae88eb473233e979", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 513, "end_line": 516, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicinthashCode(){\n\t\t\treturn Arrays.hashCode(this.value);\n\t\t}", "original_code": "@Override\n\t\tpublic int hashCode() {\n\t\t\treturn Arrays.hashCode(this.value);\n\t\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "arrays", ".", "hash", "code", "(", "this", ".", "value", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.491493+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "169a9944facc8cd5ed64e82c20f0932857cde7ce", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 518, "end_line": 520, "nloc": 3, "method_source_normalized": "staticEncodedOidof(String hexString){\n\t\t\treturn of(HexFormat.of().parseHex(hexString));\n\t\t}", "original_code": "static EncodedOid of(String hexString) {\n\t\t\treturn of(HexFormat.of().parseHex(hexString));\n\t\t}", "code_tokens": ["static", "encoded", "oid", "of", "(", "string", "hex", "string", ")", "{", "return", "of", "(", "hex", "format", ".", "of", "(", ")", ".", "parse", "hex", "(", "hex", "string", ")", ")", ";", "}"], "token_count": 29, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.491745+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "adca9e40fe5c7e8008064f0ab7217890ad2e1ac0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 522, "end_line": 524, "nloc": 3, "method_source_normalized": "staticEncodedOidof(DerElement derElement){\n\t\t\treturn of(derElement.getContents());\n\t\t}", "original_code": "static EncodedOid of(DerElement derElement) {\n\t\t\treturn of(derElement.getContents());\n\t\t}", "code_tokens": ["static", "encoded", "oid", "of", "(", "der", "element", "der", "element", ")", "{", "return", "of", "(", "der", "element", ".", "get", "contents", "(", ")", ")", ";", "}"], "token_count": 24, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.491987+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "904b068c833d0853df2ae97766b30ad2a6ab86ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 526, "end_line": 528, "nloc": 3, "method_source_normalized": "staticEncodedOidof(ByteBuffer byteBuffer){\n\t\t\treturn of(byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n\t\t}", "original_code": "static EncodedOid of(ByteBuffer byteBuffer) {\n\t\t\treturn of(byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());\n\t\t}", "code_tokens": ["static", "encoded", "oid", "of", "(", "byte", "buffer", "byte", "buffer", ")", "{", "return", "of", "(", "byte", "buffer", ".", "array", "(", ")", ",", "byte", "buffer", ".", "array", "offset", "(", ")", "+", "byte", "buffer", ".", "position", "(", ")", ",", "byte", "buffer", ".", "remaining", "(", ")", ")", ";", "}"], "token_count": 45, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.492245+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "71f4134c00e0c465f721d073e01c440b99ce58be", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 530, "end_line": 532, "nloc": 3, "method_source_normalized": "staticEncodedOidof(byte[] bytes){\n\t\t\treturn of(bytes, 0, bytes.length);\n\t\t}", "original_code": "static EncodedOid of(byte[] bytes) {\n\t\t\treturn of(bytes, 0, bytes.length);\n\t\t}", "code_tokens": ["static", "encoded", "oid", "of", "(", "byte", "[", "]", "bytes", ")", "{", "return", "of", "(", "bytes", ",", "__NUM__", ",", "bytes", ".", "length", ")", ";", "}"], "token_count": 24, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.492492+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58fba339a00c149de49d6d0fec45c4ae672cf538", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 534, "end_line": 538, "nloc": 5, "method_source_normalized": "staticEncodedOidof(byte[] bytes, int off, int len){\n\t\t\tbyte[] value = new byte[len];\n\t\t\tSystem.arraycopy(bytes, off, value, 0, len);\n\t\t\treturn new EncodedOid(value);\n\t\t}", "original_code": "static EncodedOid of(byte[] bytes, int off, int len) {\n\t\t\tbyte[] value = new byte[len];\n\t\t\tSystem.arraycopy(bytes, off, value, 0, len);\n\t\t\treturn new EncodedOid(value);\n\t\t}", "code_tokens": ["static", "encoded", "oid", "of", "(", "byte", "[", "]", "bytes", ",", "int", "off", ",", "int", "len", ")", "{", "byte", "[", "]", "value", "=", "new", "byte", "[", "len", "]", ";", "system", ".", "arraycopy", "(", "bytes", ",", "off", ",", "value", ",", "__NUM__", ",", "len", ")", ";", "return", "new", "encoded", "oid", "(", "value", ")", ";", "}"], "token_count": 52, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 76, "n_identifiers": 15, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.492762+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0e01535518581f4728925fd57f9b9a8eac2cdfb4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactory.java", "file_blob_sha": null, "method_name": "SslContextFactory", "signature": null, "start_line": 45, "end_line": 46, "nloc": 2, "method_source_normalized": "publicSslContextFactory(){\n\t}", "original_code": "public SslContextFactory() {\n\t}", "code_tokens": ["public", "ssl", "context", "factory", "(", ")", "{", "}"], "token_count": 8, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.494023+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "21a9e01aeab69bab75004e63606524fb1d816b67", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactory.java", "file_blob_sha": null, "method_name": "forDirectory", "signature": null, "start_line": 54, "end_line": 73, "nloc": 20, "method_source_normalized": "publicSSLContextforDirectory(String directory){\n\t\ttry {\n\t\t\tPath keyPath = Paths.get(directory, \"key.pem\");\n\t\t\tPath certPath = Paths.get(directory, \"cert.pem\");\n\t\t\tPath caPath = Paths.get(directory, \"ca.pem\");\n\t\t\tPath caKeyPath = Paths.get(directory, \"ca-key.pem\");\n\t\t\tverifyCertificateFiles(keyPath, certPath, caPath);\n\t\t\tKeyManagerFactory keyManagerFactory = getKeyManagerFactory(keyPath, certPath);\n\t\t\tTrustManagerFactory trustManagerFactory = getTrustManagerFactory(caPath, caKeyPath);\n\t\t\tSSLContext sslContext = SSLContext.getInstance(\"TLS\");\n\t\t\tsslContext.init(keyManagerFactory.getKeyManagers(), trustManagerFactory.getTrustManagers(), null);\n\t\t\treturn sslContext;\n\t\t}\n\t\tcatch (RuntimeException ex) {\n\t\t\tthrow ex;\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex.getMessage(), ex);\n\t\t}\n\t}", "original_code": "public SSLContext forDirectory(String directory) {\n\t\ttry {\n\t\t\tPath keyPath = Paths.get(directory, \"key.pem\");\n\t\t\tPath certPath = Paths.get(directory, \"cert.pem\");\n\t\t\tPath caPath = Paths.get(directory, \"ca.pem\");\n\t\t\tPath caKeyPath = Paths.get(directory, \"ca-key.pem\");\n\t\t\tverifyCertificateFiles(keyPath, certPath, caPath);\n\t\t\tKeyManagerFactory keyManagerFactory = getKeyManagerFactory(keyPath, certPath);\n\t\t\tTrustManagerFactory trustManagerFactory = getTrustManagerFactory(caPath, caKeyPath);\n\t\t\tSSLContext sslContext = SSLContext.getInstance(\"TLS\");\n\t\t\tsslContext.init(keyManagerFactory.getKeyManagers(), trustManagerFactory.getTrustManagers(), null);\n\t\t\treturn sslContext;\n\t\t}\n\t\tcatch (RuntimeException ex) {\n\t\t\tthrow ex;\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex.getMessage(), ex);\n\t\t}\n\t}", "code_tokens": ["public", "ssl", "context", "for", "directory", "(", "string", "directory", ")", "{", "try", "{", "path", "key", "path", "=", "paths", ".", "get", "(", "directory", ",", "__STR__", ")", ";", "path", "cert", "path", "=", "paths", ".", "get", "(", "directory", ",", "__STR__", ")", ";", "path", "ca", "path", "=", "paths", ".", "get", "(", "directory", ",", "__STR__", ")", ";", "path", "ca", "key", "path", "=", "paths", ".", "get", "(", "directory", ",", "__STR__", ")", ";", "verify", "certificate", "files", "(", "key", "path", ",", "cert", "path", ",", "ca", "path", ")", ";", "key", "manager", "factory", "key", "manager", "factory", "=", "get", "key", "manager", "factory", "(", "key", "path", ",", "cert", "path", ")", ";", "trust", "manager", "factory", "trust", "manager", "factory", "=", "get", "trust", "manager", "factory", "(", "ca", "path", ",", "ca", "key", "path", ")", ";", "ssl", "context", "ssl", "context", "=", "ssl", "context", ".", "get", "instance", "(", "__STR__", ")", ";", "ssl", "context", ".", "init", "(", "key", "manager", "factory", ".", "get", "key", "managers", "(", ")", ",", "trust", "manager", "factory", ".", "get", "trust", "managers", "(", ")", ",", "null", ")", ";", "return", "ssl", "context", ";", "}", "catch", "(", "runtime", "exception", "ex", ")", "{", "throw", "ex", ";", "}", "catch", "(", "exception", "ex", ")", "{", "throw", "new", "runtime", "exception", "(", "ex", ".", "get", "message", "(", ")", ",", "ex", ")", ";", "}", "}"], "token_count": 199, "vocab_size": 40, "cyclomatic_complexity": 3, "ast_node_count": 211, "n_identifiers": 58, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 115, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.494392+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1a8349879295d825a2bd49ae8cf623a9576dda84", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactory.java", "file_blob_sha": null, "method_name": "getKeyManagerFactory", "signature": null, "start_line": 75, "end_line": 80, "nloc": 6, "method_source_normalized": "privateKeyManagerFactorygetKeyManagerFactory(Path keyPath, Path certPath)throws Exception{\n\t\tKeyStore store = KeyStoreFactory.create(certPath, keyPath, KEY_STORE_ALIAS);\n\t\tKeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n\t\tfactory.init(store, NO_PASSWORD);\n\t\treturn factory;\n\t}", "original_code": "private KeyManagerFactory getKeyManagerFactory(Path keyPath, Path certPath) throws Exception {\n\t\tKeyStore store = KeyStoreFactory.create(certPath, keyPath, KEY_STORE_ALIAS);\n\t\tKeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n\t\tfactory.init(store, NO_PASSWORD);\n\t\treturn factory;\n\t}", "code_tokens": ["private", "key", "manager", "factory", "get", "key", "manager", "factory", "(", "path", "key", "path", ",", "path", "cert", "path", ")", "throws", "exception", "{", "key", "store", "store", "=", "key", "store", "factory", ".", "create", "(", "cert", "path", ",", "key", "path", ",", "key", "store", "alias", ")", ";", "key", "manager", "factory", "factory", "=", "key", "manager", "factory", ".", "get", "instance", "(", "key", "manager", "factory", ".", "get", "default", "algorithm", "(", ")", ")", ";", "factory", ".", "init", "(", "store", ",", "no", "password", ")", ";", "return", "factory", ";", "}"], "token_count": 78, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.494699+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14b8a8f2b1ae1703262edd5a23cdc4984af53da3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactory.java", "file_blob_sha": null, "method_name": "getTrustManagerFactory", "signature": null, "start_line": 82, "end_line": 88, "nloc": 7, "method_source_normalized": "privateTrustManagerFactorygetTrustManagerFactory(Path caPath, Path caKeyPath)throws NoSuchAlgorithmException, KeyStoreException{\n\t\tKeyStore store = KeyStoreFactory.create(caPath, caKeyPath, KEY_STORE_ALIAS);\n\t\tTrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n\t\tfactory.init(store);\n\t\treturn factory;\n\t}", "original_code": "private TrustManagerFactory getTrustManagerFactory(Path caPath, Path caKeyPath)\n\t\t\tthrows NoSuchAlgorithmException, KeyStoreException {\n\t\tKeyStore store = KeyStoreFactory.create(caPath, caKeyPath, KEY_STORE_ALIAS);\n\t\tTrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n\t\tfactory.init(store);\n\t\treturn factory;\n\t}", "code_tokens": ["private", "trust", "manager", "factory", "get", "trust", "manager", "factory", "(", "path", "ca", "path", ",", "path", "ca", "key", "path", ")", "throws", "no", "such", "algorithm", "exception", ",", "key", "store", "exception", "{", "key", "store", "store", "=", "key", "store", "factory", ".", "create", "(", "ca", "path", ",", "ca", "key", "path", ",", "key", "store", "alias", ")", ";", "trust", "manager", "factory", "factory", "=", "trust", "manager", "factory", ".", "get", "instance", "(", "trust", "manager", "factory", ".", "get", "default", "algorithm", "(", ")", ")", ";", "factory", ".", "init", "(", "store", ")", ";", "return", "factory", ";", "}"], "token_count": 84, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.494984+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8bc3c3320788f6e06bb6e777188183908fd905ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactory.java", "file_blob_sha": null, "method_name": "verifyCertificateFiles", "signature": null, "start_line": 90, "end_line": 95, "nloc": 6, "method_source_normalized": "private staticvoidverifyCertificateFiles(Path... paths){\n\t\tfor (Path path : paths) {\n\t\t\tAssert.state(Files.exists(path) && Files.isRegularFile(path),\n\t\t\t\t\t\"Certificate path must contain the files 'ca.pem', 'cert.pem', and 'key.pem' files\");\n\t\t}\n\t}", "original_code": "private static void verifyCertificateFiles(Path... paths) {\n\t\tfor (Path path : paths) {\n\t\t\tAssert.state(Files.exists(path) && Files.isRegularFile(path),\n\t\t\t\t\t\"Certificate path must contain the files 'ca.pem', 'cert.pem', and 'key.pem' files\");\n\t\t}\n\t}", "code_tokens": ["private", "static", "void", "verify", "certificate", "files", "(", "path", "...", "paths", ")", "{", "for", "(", "path", "path", ":", "paths", ")", "{", "assert", ".", "state", "(", "files", ".", "exists", "(", "path", ")", "&&", "files", ".", "is", "regular", "file", "(", "path", ")", ",", "__STR__", ")", ";", "}", "}"], "token_count": 45, "vocab_size": 26, "cyclomatic_complexity": 3, "ast_node_count": 57, "n_identifiers": 14, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.495251+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "86a86826a29317150f81ff36b982263ae89488a5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java", "file_blob_sha": null, "method_name": "PemCertificateParser", "signature": null, "start_line": 52, "end_line": 53, "nloc": 2, "method_source_normalized": "privatePemCertificateParser(){\n\t}", "original_code": "private PemCertificateParser() {\n\t}", "code_tokens": ["private", "pem", "certificate", "parser", "(", ")", "{", "}"], "token_count": 8, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.496525+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e66bf0c8918ca1bb4c2136cbcfc0dbe7832e132", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 60, "end_line": 70, "nloc": 11, "method_source_normalized": "@Contract(\"!null -> !null\")\n\tstatic @NullableList<X509Certificate>parse(@Nullable String text){\n\t\tif (text == null) {\n\t\t\treturn null;\n\t\t}\n\t\tCertificateFactory factory = getCertificateFactory();\n\t\tList<X509Certificate> certs = new ArrayList<>();\n\t\treadCertificates(text, factory, certs::add);\n\t\tAssert.state(!CollectionUtils.isEmpty(certs), \"Missing certificates or unrecognized format\");\n\t\treturn List.copyOf(certs);\n\t}", "original_code": "@Contract(\"!null -> !null\")\n\tstatic @Nullable List<X509Certificate> parse(@Nullable String text) {\n\t\tif (text == null) {\n\t\t\treturn null;\n\t\t}\n\t\tCertificateFactory factory = getCertificateFactory();\n\t\tList<X509Certificate> certs = new ArrayList<>();\n\t\treadCertificates(text, factory, certs::add);\n\t\tAssert.state(!CollectionUtils.isEmpty(certs), \"Missing certificates or unrecognized format\");\n\t\treturn List.copyOf(certs);\n\t}", "code_tokens": ["@", "contract", "(", "__STR__", ")", "static", "@", "nullable", "list", "<", "x", "509", "certificate", ">", "parse", "(", "@", "nullable", "string", "text", ")", "{", "if", "(", "text", "==", "null", ")", "{", "return", "null", ";", "}", "certificate", "factory", "factory", "=", "get", "certificate", "factory", "(", ")", ";", "list", "<", "x", "509", "certificate", ">", "certs", "=", "new", "array", "list", "<", ">", "(", ")", ";", "read", "certificates", "(", "text", ",", "factory", ",", "certs", "::", "add", ")", ";", "assert", ".", "state", "(", "!", "collection", "utils", ".", "is", "empty", "(", "certs", ")", ",", "__STR__", ")", ";", "return", "list", ".", "copy", "of", "(", "certs", ")", ";", "}"], "token_count": 98, "vocab_size": 44, "cyclomatic_complexity": 2, "ast_node_count": 128, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 57, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.496848+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4998da9603a40bf33327a2b253191c5d8765135b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java", "file_blob_sha": null, "method_name": "getCertificateFactory", "signature": null, "start_line": 72, "end_line": 79, "nloc": 8, "method_source_normalized": "private staticCertificateFactorygetCertificateFactory(){\n\t\ttry {\n\t\t\treturn CertificateFactory.getInstance(\"X.509\");\n\t\t}\n\t\tcatch (CertificateException ex) {\n\t\t\tthrow new IllegalStateException(\"Unable to get X.509 certificate factory\", ex);\n\t\t}\n\t}", "original_code": "private static CertificateFactory getCertificateFactory() {\n\t\ttry {\n\t\t\treturn CertificateFactory.getInstance(\"X.509\");\n\t\t}\n\t\tcatch (CertificateException ex) {\n\t\t\tthrow new IllegalStateException(\"Unable to get X.509 certificate factory\", ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "certificate", "factory", "get", "certificate", "factory", "(", ")", "{", "try", "{", "return", "certificate", "factory", ".", "get", "instance", "(", "__STR__", ")", ";", "}", "catch", "(", "certificate", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 2, "ast_node_count": 51, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.497127+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "37eb6b224ae0f949ae14719d266472837ae97650", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java", "file_blob_sha": null, "method_name": "readCertificates", "signature": null, "start_line": 81, "end_line": 96, "nloc": 16, "method_source_normalized": "private staticvoidreadCertificates(String text, CertificateFactory factory, Consumer<X509Certificate> consumer){\n\t\ttry {\n\t\t\tMatcher matcher = PATTERN.matcher(text);\n\t\t\twhile (matcher.find()) {\n\t\t\t\tString encodedText = matcher.group(1);\n\t\t\t\tbyte[] decodedBytes = decodeBase64(encodedText);\n\t\t\t\tByteArrayInputStream inputStream = new ByteArrayInputStream(decodedBytes);\n\t\t\t\twhile (inputStream.available() > 0) {\n\t\t\t\t\tconsumer.accept((X509Certificate) factory.generateCertificate(inputStream));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (CertificateException ex) {\n\t\t\tthrow new IllegalStateException(\"Error reading certificate: \" + ex.getMessage(), ex);\n\t\t}\n\t}", "original_code": "private static void readCertificates(String text, CertificateFactory factory, Consumer<X509Certificate> consumer) {\n\t\ttry {\n\t\t\tMatcher matcher = PATTERN.matcher(text);\n\t\t\twhile (matcher.find()) {\n\t\t\t\tString encodedText = matcher.group(1);\n\t\t\t\tbyte[] decodedBytes = decodeBase64(encodedText);\n\t\t\t\tByteArrayInputStream inputStream = new ByteArrayInputStream(decodedBytes);\n\t\t\t\twhile (inputStream.available() > 0) {\n\t\t\t\t\tconsumer.accept((X509Certificate) factory.generateCertificate(inputStream));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (CertificateException ex) {\n\t\t\tthrow new IllegalStateException(\"Error reading certificate: \" + ex.getMessage(), ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "void", "read", "certificates", "(", "string", "text", ",", "certificate", "factory", "factory", ",", "consumer", "<", "x", "509", "certificate", ">", "consumer", ")", "{", "try", "{", "matcher", "matcher", "=", "pattern", ".", "matcher", "(", "text", ")", ";", "while", "(", "matcher", ".", "find", "(", ")", ")", "{", "string", "encoded", "text", "=", "matcher", ".", "group", "(", "__NUM__", ")", ";", "byte", "[", "]", "decoded", "bytes", "=", "decode", "base", "64", "(", "encoded", "text", ")", ";", "byte", "array", "input", "stream", "input", "stream", "=", "new", "byte", "array", "input", "stream", "(", "decoded", "bytes", ")", ";", "while", "(", "input", "stream", ".", "available", "(", ")", ">", "__NUM__", ")", "{", "consumer", ".", "accept", "(", "(", "x", "509", "certificate", ")", "factory", ".", "generate", "certificate", "(", "input", "stream", ")", ")", ";", "}", "}", "}", "catch", "(", "certificate", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "ex", ".", "get", "message", "(", ")", ",", "ex", ")", ";", "}", "}"], "token_count": 146, "vocab_size": 55, "cyclomatic_complexity": 4, "ast_node_count": 177, "n_identifiers": 40, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 102, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.497475+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eb98f44bc340be3b876eb5f2fe1c5d1c19af9782", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java", "file_blob_sha": null, "method_name": "decodeBase64", "signature": null, "start_line": 98, "end_line": 101, "nloc": 4, "method_source_normalized": "private staticbyte[]decodeBase64(String content){\n\t\tbyte[] bytes = content.replaceAll(\"\\r\", \"\").replaceAll(\"\\n\", \"\").getBytes();\n\t\treturn Base64.getDecoder().decode(bytes);\n\t}", "original_code": "private static byte[] decodeBase64(String content) {\n\t\tbyte[] bytes = content.replaceAll(\"\\r\", \"\").replaceAll(\"\\n\", \"\").getBytes();\n\t\treturn Base64.getDecoder().decode(bytes);\n\t}", "code_tokens": ["private", "static", "byte", "[", "]", "decode", "base", "64", "(", "string", "content", ")", "{", "byte", "[", "]", "bytes", "=", "content", ".", "replace", "all", "(", "__STR__", ",", "__STR__", ")", ".", "replace", "all", "(", "__STR__", ",", "__STR__", ")", ".", "get", "bytes", "(", ")", ";", "return", "base", "64", ".", "get", "decoder", "(", ")", ".", "decode", "(", "bytes", ")", ";", "}"], "token_count": 56, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.497769+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59a869c30f46669dddfd9d7758d0bd011a2ead6f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactory.java", "file_blob_sha": null, "method_name": "KeyStoreFactory", "signature": null, "start_line": 42, "end_line": 43, "nloc": 2, "method_source_normalized": "privateKeyStoreFactory(){\n\t}", "original_code": "private KeyStoreFactory() {\n\t}", "code_tokens": ["private", "key", "store", "factory", "(", ")", "{", "}"], "token_count": 8, "vocab_size": 8, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.498946+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "06040aa9c7b2a2a09fffc056d37198d8d9b598bc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactory.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 53, "end_line": 70, "nloc": 18, "method_source_normalized": "staticKeyStorecreate(Path certPath, Path keyPath, String alias){\n\t\ttry {\n\t\t\tKeyStore keyStore = getKeyStore();\n\t\t\tString certificateText = Files.readString(certPath);\n\t\t\tList<X509Certificate> certificates = PemCertificateParser.parse(certificateText);\n\t\t\tPrivateKey privateKey = getPrivateKey(keyPath);\n\t\t\ttry {\n\t\t\t\taddCertificates(keyStore, certificates.toArray(X509Certificate[]::new), privateKey, alias);\n\t\t\t}\n\t\t\tcatch (KeyStoreException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Error adding certificates to KeyStore: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t\treturn keyStore;\n\t\t}\n\t\tcatch (GeneralSecurityException | IOException ex) {\n\t\t\tthrow new IllegalStateException(\"Error creating KeyStore: \" + ex.getMessage(), ex);\n\t\t}\n\t}", "original_code": "static KeyStore create(Path certPath, Path keyPath, String alias) {\n\t\ttry {\n\t\t\tKeyStore keyStore = getKeyStore();\n\t\t\tString certificateText = Files.readString(certPath);\n\t\t\tList<X509Certificate> certificates = PemCertificateParser.parse(certificateText);\n\t\t\tPrivateKey privateKey = getPrivateKey(keyPath);\n\t\t\ttry {\n\t\t\t\taddCertificates(keyStore, certificates.toArray(X509Certificate[]::new), privateKey, alias);\n\t\t\t}\n\t\t\tcatch (KeyStoreException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Error adding certificates to KeyStore: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t\treturn keyStore;\n\t\t}\n\t\tcatch (GeneralSecurityException | IOException ex) {\n\t\t\tthrow new IllegalStateException(\"Error creating KeyStore: \" + ex.getMessage(), ex);\n\t\t}\n\t}", "code_tokens": ["static", "key", "store", "create", "(", "path", "cert", "path", ",", "path", "key", "path", ",", "string", "alias", ")", "{", "try", "{", "key", "store", "key", "store", "=", "get", "key", "store", "(", ")", ";", "string", "certificate", "text", "=", "files", ".", "read", "string", "(", "cert", "path", ")", ";", "list", "<", "x", "509", "certificate", ">", "certificates", "=", "pem", "certificate", "parser", ".", "parse", "(", "certificate", "text", ")", ";", "private", "key", "private", "key", "=", "get", "private", "key", "(", "key", "path", ")", ";", "try", "{", "add", "certificates", "(", "key", "store", ",", "certificates", ".", "to", "array", "(", "x", "509", "certificate", "[", "]", "::", "new", ")", ",", "private", "key", ",", "alias", ")", ";", "}", "catch", "(", "key", "store", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "ex", ".", "get", "message", "(", ")", ",", "ex", ")", ";", "}", "return", "key", "store", ";", "}", "catch", "(", "general", "security", "exception", "|", "io", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "__STR__", "+", "ex", ".", "get", "message", "(", ")", ",", "ex", ")", ";", "}", "}"], "token_count": 166, "vocab_size": 53, "cyclomatic_complexity": 3, "ast_node_count": 186, "n_identifiers": 47, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 116, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.499298+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59c62bd718ee976a80970229614b5270fcbd1b1b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactory.java", "file_blob_sha": null, "method_name": "getKeyStore", "signature": null, "start_line": 72, "end_line": 77, "nloc": 6, "method_source_normalized": "private staticKeyStoregetKeyStore()throws KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException{\n\t\tKeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n\t\tkeyStore.load(null);\n\t\treturn keyStore;\n\t}", "original_code": "private static KeyStore getKeyStore()\n\t\t\tthrows KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException {\n\t\tKeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n\t\tkeyStore.load(null);\n\t\treturn keyStore;\n\t}", "code_tokens": ["private", "static", "key", "store", "get", "key", "store", "(", ")", "throws", "key", "store", "exception", ",", "io", "exception", ",", "no", "such", "algorithm", "exception", ",", "certificate", "exception", "{", "key", "store", "key", "store", "=", "key", "store", ".", "get", "instance", "(", "key", "store", ".", "get", "default", "type", "(", ")", ")", ";", "key", "store", ".", "load", "(", "null", ")", ";", "return", "key", "store", ";", "}"], "token_count": 59, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.499589+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ac4bd212fbc2182efa5b00e48d866f30e56f2661", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactory.java", "file_blob_sha": null, "method_name": "getPrivateKey", "signature": null, "start_line": 79, "end_line": 85, "nloc": 7, "method_source_normalized": "private static @NullablePrivateKeygetPrivateKey(@Nullable Path path)throws IOException{\n\t\tif (path != null && Files.exists(path)) {\n\t\t\tString text = Files.readString(path);\n\t\t\treturn PemPrivateKeyParser.parse(text);\n\t\t}\n\t\treturn null;\n\t}", "original_code": "private static @Nullable PrivateKey getPrivateKey(@Nullable Path path) throws IOException {\n\t\tif (path != null && Files.exists(path)) {\n\t\t\tString text = Files.readString(path);\n\t\t\treturn PemPrivateKeyParser.parse(text);\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["private", "static", "@", "nullable", "private", "key", "get", "private", "key", "(", "@", "nullable", "path", "path", ")", "throws", "io", "exception", "{", "if", "(", "path", "!=", "null", "&&", "files", ".", "exists", "(", "path", ")", ")", "{", "string", "text", "=", "files", ".", "read", "string", "(", "path", ")", ";", "return", "pem", "private", "key", "parser", ".", "parse", "(", "text", ")", ";", "}", "return", "null", ";", "}"], "token_count": 60, "vocab_size": 30, "cyclomatic_complexity": 3, "ast_node_count": 76, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.499875+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39d5cd3bfcb4f92e2c03a7cf0d9655e0c62ba776", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactory.java", "file_blob_sha": null, "method_name": "addCertificates", "signature": null, "start_line": 87, "end_line": 97, "nloc": 11, "method_source_normalized": "private staticvoidaddCertificates(KeyStore keyStore, X509Certificate[] certificates,\n\t\t\t@Nullable PrivateKey privateKey, String alias)throws KeyStoreException{\n\t\tif (privateKey != null) {\n\t\t\tkeyStore.setKeyEntry(alias, privateKey, NO_PASSWORD, certificates);\n\t\t}\n\t\telse {\n\t\t\tfor (int index = 0; index < certificates.length; index++) {\n\t\t\t\tkeyStore.setCertificateEntry(alias + \"-\" + index, certificates[index]);\n\t\t\t}\n\t\t}\n\t}", "original_code": "private static void addCertificates(KeyStore keyStore, X509Certificate[] certificates,\n\t\t\t@Nullable PrivateKey privateKey, String alias) throws KeyStoreException {\n\t\tif (privateKey != null) {\n\t\t\tkeyStore.setKeyEntry(alias, privateKey, NO_PASSWORD, certificates);\n\t\t}\n\t\telse {\n\t\t\tfor (int index = 0; index < certificates.length; index++) {\n\t\t\t\tkeyStore.setCertificateEntry(alias + \"-\" + index, certificates[index]);\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["private", "static", "void", "add", "certificates", "(", "key", "store", "key", "store", ",", "x", "509", "certificate", "[", "]", "certificates", ",", "@", "nullable", "private", "key", "private", "key", ",", "string", "alias", ")", "throws", "key", "store", "exception", "{", "if", "(", "private", "key", "!=", "null", ")", "{", "key", "store", ".", "set", "key", "entry", "(", "alias", ",", "private", "key", ",", "no", "password", ",", "certificates", ")", ";", "}", "else", "{", "for", "(", "int", "index", "=", "__NUM__", ";", "index", "<", "certificates", ".", "length", ";", "index", "++", ")", "{", "key", "store", ".", "set", "certificate", "entry", "(", "alias", "+", "__STR__", "+", "index", ",", "certificates", "[", "index", "]", ")", ";", "}", "}", "}"], "token_count": 101, "vocab_size": 43, "cyclomatic_complexity": 3, "ast_node_count": 118, "n_identifiers": 29, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 70, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.500198+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "11e30538cc00e6c132e7a1ad53a4cf751edca4b3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Message.java", "file_blob_sha": null, "method_name": "Message", "signature": null, "start_line": 33, "end_line": 36, "nloc": 4, "method_source_normalized": "@JsonCreatorMessage(@JsonProperty(\"message\") @Nullable String message){\n\t\tthis.message = message;\n\t}", "original_code": "@JsonCreator\n\tMessage(@JsonProperty(\"message\") @Nullable String message) {\n\t\tthis.message = message;\n\t}", "code_tokens": ["@", "json", "creator", "message", "(", "@", "json", "property", "(", "__STR__", ")", "@", "nullable", "string", "message", ")", "{", "this", ".", "message", "=", "message", ";", "}"], "token_count": 24, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.500922+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "631f65c8301c95fb0b6ae6c31ceb50c7b1ab8a84", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Message.java", "file_blob_sha": null, "method_name": "getMessage", "signature": null, "start_line": 42, "end_line": 44, "nloc": 3, "method_source_normalized": "public @NullableStringgetMessage(){\n\t\treturn this.message;\n\t}", "original_code": "public @Nullable String getMessage() {\n\t\treturn this.message;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "message", "(", ")", "{", "return", "this", ".", "message", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.501178+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "194f1c7d69d9db367e4fbab35ec6b1038c13f809", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Message.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 46, "end_line": 49, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn (this.message == null) ? \"<null>\" : this.message;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn (this.message == null) ? \"<null>\" : this.message;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "(", "this", ".", "message", "==", "null", ")", "?", "__STR__", ":", "this", ".", "message", ";", "}"], "token_count": 25, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 5, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.501444+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e851d490ed757c963db35a3d153f4585265881c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "DockerEngineException", "signature": null, "start_line": 43, "end_line": 50, "nloc": 8, "method_source_normalized": "publicDockerEngineException(String host, URI uri, int statusCode, String reasonPhrase, @Nullable Errors errors,\n\t\t\t@Nullable Message responseMessage){\n\t\tsuper(buildMessage(host, uri, statusCode, reasonPhrase, errors, responseMessage));\n\t\tthis.statusCode = statusCode;\n\t\tthis.reasonPhrase = reasonPhrase;\n\t\tthis.errors = errors;\n\t\tthis.responseMessage = responseMessage;\n\t}", "original_code": "public DockerEngineException(String host, URI uri, int statusCode, String reasonPhrase, @Nullable Errors errors,\n\t\t\t@Nullable Message responseMessage) {\n\t\tsuper(buildMessage(host, uri, statusCode, reasonPhrase, errors, responseMessage));\n\t\tthis.statusCode = statusCode;\n\t\tthis.reasonPhrase = reasonPhrase;\n\t\tthis.errors = errors;\n\t\tthis.responseMessage = responseMessage;\n\t}", "code_tokens": ["public", "docker", "engine", "exception", "(", "string", "host", ",", "uri", "uri", ",", "int", "status", "code", ",", "string", "reason", "phrase", ",", "@", "nullable", "errors", "errors", ",", "@", "nullable", "message", "response", "message", ")", "{", "super", "(", "build", "message", "(", "host", ",", "uri", ",", "status", "code", ",", "reason", "phrase", ",", "errors", ",", "response", "message", ")", ")", ";", "this", ".", "status", "code", "=", "status", "code", ";", "this", ".", "reason", "phrase", "=", "reason", "phrase", ";", "this", ".", "errors", "=", "errors", ";", "this", ".", "response", "message", "=", "response", "message", ";", "}"], "token_count": 84, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 29, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.502565+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a1da3e1c23df14e2a4da9ecdfd9e7e42d36b9441", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "getStatusCode", "signature": null, "start_line": 56, "end_line": 58, "nloc": 3, "method_source_normalized": "publicintgetStatusCode(){\n\t\treturn this.statusCode;\n\t}", "original_code": "public int getStatusCode() {\n\t\treturn this.statusCode;\n\t}", "code_tokens": ["public", "int", "get", "status", "code", "(", ")", "{", "return", "this", ".", "status", "code", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.502822+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "48d329a57a0040fce77b76aae83ccc306bcf1a1b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "getReasonPhrase", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "publicStringgetReasonPhrase(){\n\t\treturn this.reasonPhrase;\n\t}", "original_code": "public String getReasonPhrase() {\n\t\treturn this.reasonPhrase;\n\t}", "code_tokens": ["public", "string", "get", "reason", "phrase", "(", ")", "{", "return", "this", ".", "reason", "phrase", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.503063+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fc9564f7b14143bb0b4392a02d5b3ed9a475d542", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "getErrors", "signature": null, "start_line": 73, "end_line": 75, "nloc": 3, "method_source_normalized": "public @NullableErrorsgetErrors(){\n\t\treturn this.errors;\n\t}", "original_code": "public @Nullable Errors getErrors() {\n\t\treturn this.errors;\n\t}", "code_tokens": ["public", "@", "nullable", "errors", "get", "errors", "(", ")", "{", "return", "this", ".", "errors", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.503307+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "833d840b833e7395df9dfe371a54442d5f990ea5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "getResponseMessage", "signature": null, "start_line": 82, "end_line": 84, "nloc": 3, "method_source_normalized": "public @NullableMessagegetResponseMessage(){\n\t\treturn this.responseMessage;\n\t}", "original_code": "public @Nullable Message getResponseMessage() {\n\t\treturn this.responseMessage;\n\t}", "code_tokens": ["public", "@", "nullable", "message", "get", "response", "message", "(", ")", "{", "return", "this", ".", "response", "message", ";", "}"], "token_count": 17, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.503552+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0e181b7e9e7eb34340314fcfb46a4f696052bbe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineException.java", "file_blob_sha": null, "method_name": "buildMessage", "signature": null, "start_line": 86, "end_line": 102, "nloc": 17, "method_source_normalized": "private staticStringbuildMessage(String host, URI uri, int statusCode, String reasonPhrase,\n\t\t\t@Nullable Errors errors, @Nullable Message responseMessage){\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tAssert.notNull(uri, \"'uri' must not be null\");\n\t\tStringBuilder message = new StringBuilder(\n\t\t\t\t\"Docker API call to '\" + host + uri + \"' failed with status code \" + statusCode);\n\t\tif (StringUtils.hasLength(reasonPhrase)) {\n\t\t\tmessage.append(\" \\\"\").append(reasonPhrase).append(\"\\\"\");\n\t\t}\n\t\tif (responseMessage != null && StringUtils.hasLength(responseMessage.getMessage())) {\n\t\t\tmessage.append(\" and message \\\"\").append(responseMessage.getMessage()).append(\"\\\"\");\n\t\t}\n\t\tif (errors != null && !errors.isEmpty()) {\n\t\t\tmessage.append(\" \").append(errors);\n\t\t}\n\t\treturn message.toString();\n\t}", "original_code": "private static String buildMessage(String host, URI uri, int statusCode, String reasonPhrase,\n\t\t\t@Nullable Errors errors, @Nullable Message responseMessage) {\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tAssert.notNull(uri, \"'uri' must not be null\");\n\t\tStringBuilder message = new StringBuilder(\n\t\t\t\t\"Docker API call to '\" + host + uri + \"' failed with status code \" + statusCode);\n\t\tif (StringUtils.hasLength(reasonPhrase)) {\n\t\t\tmessage.append(\" \\\"\").append(reasonPhrase).append(\"\\\"\");\n\t\t}\n\t\tif (responseMessage != null && StringUtils.hasLength(responseMessage.getMessage())) {\n\t\t\tmessage.append(\" and message \\\"\").append(responseMessage.getMessage()).append(\"\\\"\");\n\t\t}\n\t\tif (errors != null && !errors.isEmpty()) {\n\t\t\tmessage.append(\" \").append(errors);\n\t\t}\n\t\treturn message.toString();\n\t}", "code_tokens": ["private", "static", "string", "build", "message", "(", "string", "host", ",", "uri", "uri", ",", "int", "status", "code", ",", "string", "reason", "phrase", ",", "@", "nullable", "errors", "errors", ",", "@", "nullable", "message", "response", "message", ")", "{", "assert", ".", "not", "null", "(", "host", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "uri", ",", "__STR__", ")", ";", "string", "builder", "message", "=", "new", "string", "builder", "(", "__STR__", "+", "host", "+", "uri", "+", "__STR__", "+", "status", "code", ")", ";", "if", "(", "string", "utils", ".", "has", "length", "(", "reason", "phrase", ")", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "reason", "phrase", ")", ".", "append", "(", "__STR__", ")", ";", "}", "if", "(", "response", "message", "!=", "null", "&&", "string", "utils", ".", "has", "length", "(", "response", "message", ".", "get", "message", "(", ")", ")", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "response", "message", ".", "get", "message", "(", ")", ")", ".", "append", "(", "__STR__", ")", ";", "}", "if", "(", "errors", "!=", "null", "&&", "!", "errors", ".", "is", "empty", "(", ")", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "errors", ")", ";", "}", "return", "message", ".", "to", "string", "(", ")", ";", "}"], "token_count": 188, "vocab_size": 44, "cyclomatic_complexity": 6, "ast_node_count": 241, "n_identifiers": 55, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 120, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.503940+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4dc50c916b828dc87baa943904ae919fc8be93f1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionException.java", "file_blob_sha": null, "method_name": "DockerConnectionException", "signature": null, "start_line": 34, "end_line": 36, "nloc": 3, "method_source_normalized": "publicDockerConnectionException(String host, Exception cause){\n\t\tsuper(buildMessage(host, cause), cause);\n\t}", "original_code": "public DockerConnectionException(String host, Exception cause) {\n\t\tsuper(buildMessage(host, cause), cause);\n\t}", "code_tokens": ["public", "docker", "connection", "exception", "(", "string", "host", ",", "exception", "cause", ")", "{", "super", "(", "build", "message", "(", "host", ",", "cause", ")", ",", "cause", ")", ";", "}"], "token_count": 26, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.504767+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "60f20a8c4d4ca9e8dec97aba6a84972da3179bdc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionException.java", "file_blob_sha": null, "method_name": "buildMessage", "signature": null, "start_line": 38, "end_line": 48, "nloc": 11, "method_source_normalized": "private staticStringbuildMessage(String host, Exception cause){\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tAssert.notNull(cause, \"'cause' must not be null\");\n\t\tStringBuilder message = new StringBuilder(\"Connection to the Docker daemon at '\" + host + \"' failed\");\n\t\tString causeMessage = getCauseMessage(cause);\n\t\tif (StringUtils.hasText(causeMessage)) {\n\t\t\tmessage.append(\" with error \\\"\").append(causeMessage).append(\"\\\"\");\n\t\t}\n\t\tmessage.append(\"; ensure the Docker daemon is running and accessible\");\n\t\treturn message.toString();\n\t}", "original_code": "private static String buildMessage(String host, Exception cause) {\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tAssert.notNull(cause, \"'cause' must not be null\");\n\t\tStringBuilder message = new StringBuilder(\"Connection to the Docker daemon at '\" + host + \"' failed\");\n\t\tString causeMessage = getCauseMessage(cause);\n\t\tif (StringUtils.hasText(causeMessage)) {\n\t\t\tmessage.append(\" with error \\\"\").append(causeMessage).append(\"\\\"\");\n\t\t}\n\t\tmessage.append(\"; ensure the Docker daemon is running and accessible\");\n\t\treturn message.toString();\n\t}", "code_tokens": ["private", "static", "string", "build", "message", "(", "string", "host", ",", "exception", "cause", ")", "{", "assert", ".", "not", "null", "(", "host", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "cause", ",", "__STR__", ")", ";", "string", "builder", "message", "=", "new", "string", "builder", "(", "__STR__", "+", "host", "+", "__STR__", ")", ";", "string", "cause", "message", "=", "get", "cause", "message", "(", "cause", ")", ";", "if", "(", "string", "utils", ".", "has", "text", "(", "cause", "message", ")", ")", "{", "message", ".", "append", "(", "__STR__", ")", ".", "append", "(", "cause", "message", ")", ".", "append", "(", "__STR__", ")", ";", "}", "message", ".", "append", "(", "__STR__", ")", ";", "return", "message", ".", "to", "string", "(", ")", ";", "}"], "token_count": 107, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 134, "n_identifiers": 32, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 79, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.505086+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ef75aea8241665f8c4e3e0e5fdc97d63b29a5500", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionException.java", "file_blob_sha": null, "method_name": "getCauseMessage", "signature": null, "start_line": 50, "end_line": 55, "nloc": 6, "method_source_normalized": "private static @NullableStringgetCauseMessage(Exception cause){\n\t\tif (cause.getCause() != null && cause.getCause().getClass().getName().equals(JNA_EXCEPTION_CLASS_NAME)) {\n\t\t\treturn cause.getCause().getMessage();\n\t\t}\n\t\treturn cause.getMessage();\n\t}", "original_code": "private static @Nullable String getCauseMessage(Exception cause) {\n\t\tif (cause.getCause() != null && cause.getCause().getClass().getName().equals(JNA_EXCEPTION_CLASS_NAME)) {\n\t\t\treturn cause.getCause().getMessage();\n\t\t}\n\t\treturn cause.getMessage();\n\t}", "code_tokens": ["private", "static", "@", "nullable", "string", "get", "cause", "message", "(", "exception", "cause", ")", "{", "if", "(", "cause", ".", "get", "cause", "(", ")", "!=", "null", "&&", "cause", ".", "get", "cause", "(", ")", ".", "get", "class", "(", ")", ".", "get", "name", "(", ")", ".", "equals", "(", "jna", "exception", "class", "name", ")", ")", "{", "return", "cause", ".", "get", "cause", "(", ")", ".", "get", "message", "(", ")", ";", "}", "return", "cause", ".", "get", "message", "(", ")", ";", "}"], "token_count": 73, "vocab_size": 24, "cyclomatic_complexity": 3, "ast_node_count": 90, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.505383+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f4d98cec49f67ef2ce804506e5b331bcb328904b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransport.java", "file_blob_sha": null, "method_name": "RemoteHttpClientTransport", "signature": null, "start_line": 51, "end_line": 53, "nloc": 3, "method_source_normalized": "privateRemoteHttpClientTransport(HttpClient client, HttpHost host){\n\t\tsuper(client, host);\n\t}", "original_code": "private RemoteHttpClientTransport(HttpClient client, HttpHost host) {\n\t\tsuper(client, host);\n\t}", "code_tokens": ["private", "remote", "http", "client", "transport", "(", "http", "client", "client", ",", "http", "host", "host", ")", "{", "super", "(", "client", ",", "host", ")", ";", "}"], "token_count": 23, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 7, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.506791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4ebeed7d11f3323bd56920f7efeff6145c43bf9e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransport.java", "file_blob_sha": null, "method_name": "createIfPossible", "signature": null, "start_line": 55, "end_line": 57, "nloc": 3, "method_source_normalized": "static @NullableRemoteHttpClientTransportcreateIfPossible(ResolvedDockerHost dockerHost){\n\t\treturn createIfPossible(dockerHost, new SslContextFactory());\n\t}", "original_code": "static @Nullable RemoteHttpClientTransport createIfPossible(ResolvedDockerHost dockerHost) {\n\t\treturn createIfPossible(dockerHost, new SslContextFactory());\n\t}", "code_tokens": ["static", "@", "nullable", "remote", "http", "client", "transport", "create", "if", "possible", "(", "resolved", "docker", "host", "docker", "host", ")", "{", "return", "create", "if", "possible", "(", "docker", "host", ",", "new", "ssl", "context", "factory", "(", ")", ")", ";", "}"], "token_count": 35, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.507049+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ff8222d490034f8730f64a7fe7824fa5a853be8d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransport.java", "file_blob_sha": null, "method_name": "createIfPossible", "signature": null, "start_line": 59, "end_line": 70, "nloc": 12, "method_source_normalized": "static @NullableRemoteHttpClientTransportcreateIfPossible(ResolvedDockerHost dockerHost,\n\t\t\tSslContextFactory sslContextFactory){\n\t\tif (!dockerHost.isRemote()) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn create(dockerHost, sslContextFactory, HttpHost.create(dockerHost.getAddress()));\n\t\t}\n\t\tcatch (URISyntaxException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "static @Nullable RemoteHttpClientTransport createIfPossible(ResolvedDockerHost dockerHost,\n\t\t\tSslContextFactory sslContextFactory) {\n\t\tif (!dockerHost.isRemote()) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn create(dockerHost, sslContextFactory, HttpHost.create(dockerHost.getAddress()));\n\t\t}\n\t\tcatch (URISyntaxException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["static", "@", "nullable", "remote", "http", "client", "transport", "create", "if", "possible", "(", "resolved", "docker", "host", "docker", "host", ",", "ssl", "context", "factory", "ssl", "context", "factory", ")", "{", "if", "(", "!", "docker", "host", ".", "is", "remote", "(", ")", ")", "{", "return", "null", ";", "}", "try", "{", "return", "create", "(", "docker", "host", ",", "ssl", "context", "factory", ",", "http", "host", ".", "create", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ")", ";", "}", "catch", "(", "uri", "syntax", "exception", "ex", ")", "{", "return", "null", ";", "}", "}"], "token_count": 82, "vocab_size": 35, "cyclomatic_complexity": 3, "ast_node_count": 88, "n_identifiers": 18, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.507340+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77263bc14ddf7a35e2f2e71ff207b6e0f5347292", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransport.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 72, "end_line": 86, "nloc": 15, "method_source_normalized": "private staticRemoteHttpClientTransportcreate(DockerHost host, SslContextFactory sslContextFactory,\n\t\t\tHttpHost tcpHost){\n\t\tSocketConfig socketConfig = SocketConfig.copy(SocketConfig.DEFAULT).setSoTimeout(SOCKET_TIMEOUT).build();\n\t\tPoolingHttpClientConnectionManagerBuilder connectionManagerBuilder = PoolingHttpClientConnectionManagerBuilder\n\t\t\t.create()\n\t\t\t.setDefaultSocketConfig(socketConfig);\n\t\tif (host.isSecure()) {\n\t\t\tconnectionManagerBuilder.setTlsSocketStrategy(getTlsSocketStrategy(host, sslContextFactory));\n\t\t}\n\t\tHttpClientBuilder builder = HttpClients.custom();\n\t\tbuilder.setConnectionManager(connectionManagerBuilder.build());\n\t\tString scheme = host.isSecure() ? \"https\" : \"http\";\n\t\tHttpHost httpHost = new HttpHost(scheme, tcpHost.getHostName(), tcpHost.getPort());\n\t\treturn new RemoteHttpClientTransport(builder.build(), httpHost);\n\t}", "original_code": "private static RemoteHttpClientTransport create(DockerHost host, SslContextFactory sslContextFactory,\n\t\t\tHttpHost tcpHost) {\n\t\tSocketConfig socketConfig = SocketConfig.copy(SocketConfig.DEFAULT).setSoTimeout(SOCKET_TIMEOUT).build();\n\t\tPoolingHttpClientConnectionManagerBuilder connectionManagerBuilder = PoolingHttpClientConnectionManagerBuilder\n\t\t\t.create()\n\t\t\t.setDefaultSocketConfig(socketConfig);\n\t\tif (host.isSecure()) {\n\t\t\tconnectionManagerBuilder.setTlsSocketStrategy(getTlsSocketStrategy(host, sslContextFactory));\n\t\t}\n\t\tHttpClientBuilder builder = HttpClients.custom();\n\t\tbuilder.setConnectionManager(connectionManagerBuilder.build());\n\t\tString scheme = host.isSecure() ? \"https\" : \"http\";\n\t\tHttpHost httpHost = new HttpHost(scheme, tcpHost.getHostName(), tcpHost.getPort());\n\t\treturn new RemoteHttpClientTransport(builder.build(), httpHost);\n\t}", "code_tokens": ["private", "static", "remote", "http", "client", "transport", "create", "(", "docker", "host", "host", ",", "ssl", "context", "factory", "ssl", "context", "factory", ",", "http", "host", "tcp", "host", ")", "{", "socket", "config", "socket", "config", "=", "socket", "config", ".", "copy", "(", "socket", "config", ".", "default", ")", ".", "set", "so", "timeout", "(", "socket", "timeout", ")", ".", "build", "(", ")", ";", "pooling", "http", "client", "connection", "manager", "builder", "connection", "manager", "builder", "=", "pooling", "http", "client", "connection", "manager", "builder", ".", "create", "(", ")", ".", "set", "default", "socket", "config", "(", "socket", "config", ")", ";", "if", "(", "host", ".", "is", "secure", "(", ")", ")", "{", "connection", "manager", "builder", ".", "set", "tls", "socket", "strategy", "(", "get", "tls", "socket", "strategy", "(", "host", ",", "ssl", "context", "factory", ")", ")", ";", "}", "http", "client", "builder", "builder", "=", "http", "clients", ".", "custom", "(", ")", ";", "builder", ".", "set", "connection", "manager", "(", "connection", "manager", "builder", ".", "build", "(", ")", ")", ";", "string", "scheme", "=", "host", ".", "is", "secure", "(", ")", "?", "__STR__", ":", "__STR__", ";", "http", "host", "http", "host", "=", "new", "http", "host", "(", "scheme", ",", "tcp", "host", ".", "get", "host", "name", "(", ")", ",", "tcp", "host", ".", "get", "port", "(", ")", ")", ";", "return", "new", "remote", "http", "client", "transport", "(", "builder", ".", "build", "(", ")", ",", "http", "host", ")", ";", "}"], "token_count": 204, "vocab_size": 50, "cyclomatic_complexity": 3, "ast_node_count": 199, "n_identifiers": 54, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.507717+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb3c9815305c26baea527e98d56445d3fb8f5da1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransport.java", "file_blob_sha": null, "method_name": "getTlsSocketStrategy", "signature": null, "start_line": 88, "end_line": 94, "nloc": 7, "method_source_normalized": "private staticTlsSocketStrategygetTlsSocketStrategy(DockerHost host, SslContextFactory sslContextFactory){\n\t\tString directory = host.getCertificatePath();\n\t\tAssert.state(StringUtils.hasText(directory),\n\t\t\t\t\"Docker host TLS verification requires trust material location to be specified with certificate path\");\n\t\tSSLContext sslContext = sslContextFactory.forDirectory(directory);\n\t\treturn new DefaultClientTlsStrategy(sslContext);\n\t}", "original_code": "private static TlsSocketStrategy getTlsSocketStrategy(DockerHost host, SslContextFactory sslContextFactory) {\n\t\tString directory = host.getCertificatePath();\n\t\tAssert.state(StringUtils.hasText(directory),\n\t\t\t\t\"Docker host TLS verification requires trust material location to be specified with certificate path\");\n\t\tSSLContext sslContext = sslContextFactory.forDirectory(directory);\n\t\treturn new DefaultClientTlsStrategy(sslContext);\n\t}", "code_tokens": ["private", "static", "tls", "socket", "strategy", "get", "tls", "socket", "strategy", "(", "docker", "host", "host", ",", "ssl", "context", "factory", "ssl", "context", "factory", ")", "{", "string", "directory", "=", "host", ".", "get", "certificate", "path", "(", ")", ";", "assert", ".", "state", "(", "string", "utils", ".", "has", "text", "(", "directory", ")", ",", "__STR__", ")", ";", "ssl", "context", "ssl", "context", "=", "ssl", "context", "factory", ".", "for", "directory", "(", "directory", ")", ";", "return", "new", "default", "client", "tls", "strategy", "(", "ssl", "context", ")", ";", "}"], "token_count": 76, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 22, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.508025+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e67c0d1fd582753b11a3fe5742ae1bf88f36c4e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "LocalHttpClientTransport", "signature": null, "start_line": 63, "end_line": 65, "nloc": 3, "method_source_normalized": "privateLocalHttpClientTransport(HttpClient client, HttpHost host){\n\t\tsuper(client, host);\n\t}", "original_code": "private LocalHttpClientTransport(HttpClient client, HttpHost host) {\n\t\tsuper(client, host);\n\t}", "code_tokens": ["private", "local", "http", "client", "transport", "(", "http", "client", "client", ",", "http", "host", "host", ")", "{", "super", "(", "client", ",", "host", ")", ";", "}"], "token_count": 23, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 7, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.509996+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4c483ecc0e344b96ed48b542dfba51c1cbbf632c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "beforeExecute", "signature": null, "start_line": 67, "end_line": 70, "nloc": 4, "method_source_normalized": "@Override\n\tprotectedvoidbeforeExecute(HttpRequest request){\n\t\trequest.setHeader(\"Host\", LOCAL_DOCKER_HOST.toHostString());\n\t}", "original_code": "@Override\n\tprotected void beforeExecute(HttpRequest request) {\n\t\trequest.setHeader(\"Host\", LOCAL_DOCKER_HOST.toHostString());\n\t}", "code_tokens": ["@", "override", "protected", "void", "before", "execute", "(", "http", "request", "request", ")", "{", "request", ".", "set", "header", "(", "__STR__", ",", "local", "docker", "host", ".", "to", "host", "string", "(", ")", ")", ";", "}"], "token_count": 31, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.510259+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6167193147627244b029cac09ee415a2b454b2c8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 72, "end_line": 78, "nloc": 7, "method_source_normalized": "staticLocalHttpClientTransportcreate(ResolvedDockerHost dockerHost){\n\t\tHttpClientBuilder builder = HttpClients.custom()\n\t\t\t.setConnectionManager(new LocalConnectionManager(dockerHost))\n\t\t\t.setRoutePlanner(new LocalRoutePlanner());\n\t\tHttpHost host = new HttpHost(DOCKER_SCHEME, dockerHost.getAddress());\n\t\treturn new LocalHttpClientTransport(builder.build(), host);\n\t}", "original_code": "static LocalHttpClientTransport create(ResolvedDockerHost dockerHost) {\n\t\tHttpClientBuilder builder = HttpClients.custom()\n\t\t\t.setConnectionManager(new LocalConnectionManager(dockerHost))\n\t\t\t.setRoutePlanner(new LocalRoutePlanner());\n\t\tHttpHost host = new HttpHost(DOCKER_SCHEME, dockerHost.getAddress());\n\t\treturn new LocalHttpClientTransport(builder.build(), host);\n\t}", "code_tokens": ["static", "local", "http", "client", "transport", "create", "(", "resolved", "docker", "host", "docker", "host", ")", "{", "http", "client", "builder", "builder", "=", "http", "clients", ".", "custom", "(", ")", ".", "set", "connection", "manager", "(", "new", "local", "connection", "manager", "(", "docker", "host", ")", ")", ".", "set", "route", "planner", "(", "new", "local", "route", "planner", "(", ")", ")", ";", "http", "host", "host", "=", "new", "http", "host", "(", "docker", "scheme", ",", "docker", "host", ".", "get", "address", "(", ")", ")", ";", "return", "new", "local", "http", "client", "transport", "(", "builder", ".", "build", "(", ")", ",", "host", ")", ";", "}"], "token_count": 89, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 23, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.510551+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7b487dd3beeccba4179fe26cdabc8148bdd17523", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "LocalConnectionManager", "signature": null, "start_line": 91, "end_line": 94, "nloc": 4, "method_source_normalized": "LocalConnectionManager(ResolvedDockerHost dockerHost){\n\t\t\tsuper(createhttpClientConnectionOperator(dockerHost), null);\n\t\t\tsetConnectionConfig(CONNECTION_CONFIG);\n\t\t}", "original_code": "LocalConnectionManager(ResolvedDockerHost dockerHost) {\n\t\t\tsuper(createhttpClientConnectionOperator(dockerHost), null);\n\t\t\tsetConnectionConfig(CONNECTION_CONFIG);\n\t\t}", "code_tokens": ["local", "connection", "manager", "(", "resolved", "docker", "host", "docker", "host", ")", "{", "super", "(", "createhttp", "client", "connection", "operator", "(", "docker", "host", ")", ",", "null", ")", ";", "set", "connection", "config", "(", "connection", "config", ")", ";", "}"], "token_count": 34, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.510981+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fd393a88a1d88f29d837660465b9b802a9b8620b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "createhttpClientConnectionOperator", "signature": null, "start_line": 96, "end_line": 101, "nloc": 6, "method_source_normalized": "private staticDefaultHttpClientConnectionOperatorcreatehttpClientConnectionOperator(\n\t\t\t\tResolvedDockerHost dockerHost){\n\t\t\tLocalDetachedSocketFactory detachedSocketFactory = new LocalDetachedSocketFactory(dockerHost);\n\t\t\tLocalDnsResolver dnsResolver = new LocalDnsResolver();\n\t\t\treturn new DefaultHttpClientConnectionOperator(detachedSocketFactory, null, dnsResolver, NO_TLS_SOCKET);\n\t\t}", "original_code": "private static DefaultHttpClientConnectionOperator createhttpClientConnectionOperator(\n\t\t\t\tResolvedDockerHost dockerHost) {\n\t\t\tLocalDetachedSocketFactory detachedSocketFactory = new LocalDetachedSocketFactory(dockerHost);\n\t\t\tLocalDnsResolver dnsResolver = new LocalDnsResolver();\n\t\t\treturn new DefaultHttpClientConnectionOperator(detachedSocketFactory, null, dnsResolver, NO_TLS_SOCKET);\n\t\t}", "code_tokens": ["private", "static", "default", "http", "client", "connection", "operator", "createhttp", "client", "connection", "operator", "(", "resolved", "docker", "host", "docker", "host", ")", "{", "local", "detached", "socket", "factory", "detached", "socket", "factory", "=", "new", "local", "detached", "socket", "factory", "(", "docker", "host", ")", ";", "local", "dns", "resolver", "dns", "resolver", "=", "new", "local", "dns", "resolver", "(", ")", ";", "return", "new", "default", "http", "client", "connection", "operator", "(", "detached", "socket", "factory", ",", "null", ",", "dns", "resolver", ",", "no", "tls", "socket", ")", ";", "}"], "token_count": 73, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 15, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.511257+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "05644adb18c49b1ee5ca788667fc7b2c58bdf1b4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "LocalDetachedSocketFactory", "signature": null, "start_line": 114, "end_line": 116, "nloc": 3, "method_source_normalized": "LocalDetachedSocketFactory(ResolvedDockerHost dockerHost){\n\t\t\tthis.dockerHost = dockerHost;\n\t\t}", "original_code": "LocalDetachedSocketFactory(ResolvedDockerHost dockerHost) {\n\t\t\tthis.dockerHost = dockerHost;\n\t\t}", "code_tokens": ["local", "detached", "socket", "factory", "(", "resolved", "docker", "host", "docker", "host", ")", "{", "this", ".", "docker", "host", "=", "docker", "host", ";", "}"], "token_count": 21, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.511514+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5ce3cd41855353bc7ff50357ad4982d9b4a235c0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 118, "end_line": 125, "nloc": 8, "method_source_normalized": "@Override\n\t\tpublicSocketcreate(Proxy proxy)throws IOException{\n\t\t\tString address = this.dockerHost.getAddress();\n\t\t\tif (address.startsWith(NPIPE_PREFIX)) {\n\t\t\t\treturn NamedPipeSocket.get(address.substring(NPIPE_PREFIX.length()));\n\t\t\t}\n\t\t\treturn (!Platform.isWindows()) ? UnixDomainSocket.get(address) : NamedPipeSocket.get(address);\n\t\t}", "original_code": "@Override\n\t\tpublic Socket create(Proxy proxy) throws IOException {\n\t\t\tString address = this.dockerHost.getAddress();\n\t\t\tif (address.startsWith(NPIPE_PREFIX)) {\n\t\t\t\treturn NamedPipeSocket.get(address.substring(NPIPE_PREFIX.length()));\n\t\t\t}\n\t\t\treturn (!Platform.isWindows()) ? UnixDomainSocket.get(address) : NamedPipeSocket.get(address);\n\t\t}", "code_tokens": ["@", "override", "public", "socket", "create", "(", "proxy", "proxy", ")", "throws", "io", "exception", "{", "string", "address", "=", "this", ".", "docker", "host", ".", "get", "address", "(", ")", ";", "if", "(", "address", ".", "starts", "with", "(", "npipe", "prefix", ")", ")", "{", "return", "named", "pipe", "socket", ".", "get", "(", "address", ".", "substring", "(", "npipe", "prefix", ".", "length", "(", ")", ")", ")", ";", "}", "return", "(", "!", "platform", ".", "is", "windows", "(", ")", ")", "?", "unix", "domain", "socket", ".", "get", "(", "address", ")", ":", "named", "pipe", "socket", ".", "get", "(", "address", ")", ";", "}"], "token_count": 89, "vocab_size": 40, "cyclomatic_complexity": 2, "ast_node_count": 110, "n_identifiers": 27, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.511831+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d245d960d664cfa0720f0bad08b5638b9ba79464", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "resolve", "signature": null, "start_line": 136, "end_line": 139, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicInetAddress[]resolve(String host){\n\t\t\treturn new InetAddress[] { LOOPBACK };\n\t\t}", "original_code": "@Override\n\t\tpublic InetAddress[] resolve(String host) {\n\t\t\treturn new InetAddress[] { LOOPBACK };\n\t\t}", "code_tokens": ["@", "override", "public", "inet", "address", "[", "]", "resolve", "(", "string", "host", ")", "{", "return", "new", "inet", "address", "[", "]", "{", "loopback", "}", ";", "}"], "token_count": 24, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.512112+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f43716923cb56dd0f5aa546c187fdc2562683ec3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "resolveCanonicalHostname", "signature": null, "start_line": 141, "end_line": 144, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringresolveCanonicalHostname(String host){\n\t\t\treturn LOOPBACK.getCanonicalHostName();\n\t\t}", "original_code": "@Override\n\t\tpublic String resolveCanonicalHostname(String host) {\n\t\t\treturn LOOPBACK.getCanonicalHostName();\n\t\t}", "code_tokens": ["@", "override", "public", "string", "resolve", "canonical", "hostname", "(", "string", "host", ")", "{", "return", "loopback", ".", "get", "canonical", "host", "name", "(", ")", ";", "}"], "token_count": 23, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.512363+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e16d1ca3920d119317394268c0b0d5f3bb11ba27", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransport.java", "file_blob_sha": null, "method_name": "determineRoute", "signature": null, "start_line": 153, "end_line": 156, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicHttpRoutedetermineRoute(HttpHost target, HttpContext context){\n\t\t\treturn new HttpRoute(LOCAL_DOCKER_HOST);\n\t\t}", "original_code": "@Override\n\t\tpublic HttpRoute determineRoute(HttpHost target, HttpContext context) {\n\t\t\treturn new HttpRoute(LOCAL_DOCKER_HOST);\n\t\t}", "code_tokens": ["@", "override", "public", "http", "route", "determine", "route", "(", "http", "host", "target", ",", "http", "context", "context", ")", "{", "return", "new", "http", "route", "(", "local", "docker", "host", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.512630+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77ab6fb0b833ea3ff0f45507b5f4a6b35240da79", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 48, "end_line": 48, "nloc": 1, "method_source_normalized": "Responseget(URI uri)throws IOException;", "original_code": "Response get(URI uri) throws IOException;", "code_tokens": ["response", "get", "(", "uri", "uri", ")", "throws", "io", "exception", ";"], "token_count": 10, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 13, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.513612+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8c585c85d582dc5a1b0a4473528d069bcf664fa6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 56, "end_line": 56, "nloc": 1, "method_source_normalized": "Responsepost(URI uri)throws IOException;", "original_code": "Response post(URI uri) throws IOException;", "code_tokens": ["response", "post", "(", "uri", "uri", ")", "throws", "io", "exception", ";"], "token_count": 10, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 13, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.513858+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78f4b3de4cd8de7e782af7ee366a01157f92b3f0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 65, "end_line": 65, "nloc": 1, "method_source_normalized": "Responsepost(URI uri, @Nullable String registryAuth)throws IOException;", "original_code": "Response post(URI uri, @Nullable String registryAuth) throws IOException;", "code_tokens": ["response", "post", "(", "uri", "uri", ",", "@", "nullable", "string", "registry", "auth", ")", "throws", "io", "exception", ";"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 7, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.514106+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1e55e7f355c581e38b7fab6f3c9239d261dd8cc6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 75, "end_line": 75, "nloc": 1, "method_source_normalized": "Responsepost(URI uri, String contentType, IOConsumer<OutputStream> writer)throws IOException;", "original_code": "Response post(URI uri, String contentType, IOConsumer<OutputStream> writer) throws IOException;", "code_tokens": ["response", "post", "(", "uri", "uri", ",", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "throws", "io", "exception", ";"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.514354+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1edbabc156a8c370dc0fe87bae32c2790fd0dde", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "put", "signature": null, "start_line": 85, "end_line": 85, "nloc": 1, "method_source_normalized": "Responseput(URI uri, String contentType, IOConsumer<OutputStream> writer)throws IOException;", "original_code": "Response put(URI uri, String contentType, IOConsumer<OutputStream> writer) throws IOException;", "code_tokens": ["response", "put", "(", "uri", "uri", ",", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "throws", "io", "exception", ";"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.514601+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c843999eae685d8972e12ca0723a8647e9b3ca6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "delete", "signature": null, "start_line": 93, "end_line": 93, "nloc": 1, "method_source_normalized": "Responsedelete(URI uri)throws IOException;", "original_code": "Response delete(URI uri) throws IOException;", "code_tokens": ["response", "delete", "(", "uri", "uri", ")", "throws", "io", "exception", ";"], "token_count": 10, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 13, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.514837+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6042517a5895c59804e1517e41ff5f1f1c5c146", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "head", "signature": null, "start_line": 101, "end_line": 101, "nloc": 1, "method_source_normalized": "Responsehead(URI uri)throws IOException;", "original_code": "Response head(URI uri) throws IOException;", "code_tokens": ["response", "head", "(", "uri", "uri", ")", "throws", "io", "exception", ";"], "token_count": 10, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 13, "n_identifiers": 5, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.515069+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "491fbec86b39d7342d803143d3f7c0afbb47c48c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 108, "end_line": 112, "nloc": 5, "method_source_normalized": "staticHttpTransportcreate(@Nullable DockerConnectionConfiguration connectionConfiguration){\n\t\tResolvedDockerHost host = ResolvedDockerHost.from(connectionConfiguration);\n\t\tHttpTransport remote = RemoteHttpClientTransport.createIfPossible(host);\n\t\treturn (remote != null) ? remote : LocalHttpClientTransport.create(host);\n\t}", "original_code": "static HttpTransport create(@Nullable DockerConnectionConfiguration connectionConfiguration) {\n\t\tResolvedDockerHost host = ResolvedDockerHost.from(connectionConfiguration);\n\t\tHttpTransport remote = RemoteHttpClientTransport.createIfPossible(host);\n\t\treturn (remote != null) ? remote : LocalHttpClientTransport.create(host);\n\t}", "code_tokens": ["static", "http", "transport", "create", "(", "@", "nullable", "docker", "connection", "configuration", "connection", "configuration", ")", "{", "resolved", "docker", "host", "host", "=", "resolved", "docker", "host", ".", "from", "(", "connection", "configuration", ")", ";", "http", "transport", "remote", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "host", ")", ";", "return", "(", "remote", "!=", "null", ")", "?", "remote", ":", "local", "http", "client", "transport", ".", "create", "(", "host", ")", ";", "}"], "token_count": 65, "vocab_size": 29, "cyclomatic_complexity": 2, "ast_node_count": 68, "n_identifiers": 20, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.515343+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9198eaf72a3ec97461aeeac282adc558c8446497", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 124, "end_line": 124, "nloc": 1, "method_source_normalized": "InputStreamgetContent()throws IOException;", "original_code": "InputStream getContent() throws IOException;", "code_tokens": ["input", "stream", "get", "content", "(", ")", "throws", "io", "exception", ";"], "token_count": 10, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 3, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 3, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.515585+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce0f2ea3c2f84bf4c32893fbb151f5390df6a6e1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransport.java", "file_blob_sha": null, "method_name": "getHeader", "signature": null, "start_line": 126, "end_line": 128, "nloc": 3, "method_source_normalized": "default @NullableHeadergetHeader(String name){\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}", "original_code": "default @Nullable Header getHeader(String name) {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}", "code_tokens": ["default", "@", "nullable", "header", "get", "header", "(", "string", "name", ")", "{", "throw", "new", "unsupported", "operation", "exception", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.515826+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7c888378deb186a6745582032bab0b453f39e084", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "Errors", "signature": null, "start_line": 38, "end_line": 41, "nloc": 4, "method_source_normalized": "@JsonCreatorErrors(@JsonProperty(\"errors\") @Nullable List<Error> errors){\n\t\tthis.errors = (errors != null) ? errors : Collections.emptyList();\n\t}", "original_code": "@JsonCreator\n\tErrors(@JsonProperty(\"errors\") @Nullable List<Error> errors) {\n\t\tthis.errors = (errors != null) ? errors : Collections.emptyList();\n\t}", "code_tokens": ["@", "json", "creator", "errors", "(", "@", "json", "property", "(", "__STR__", ")", "@", "nullable", "list", "<", "error", ">", "errors", ")", "{", "this", ".", "errors", "=", "(", "errors", "!=", "null", ")", "?", "errors", ":", "collections", ".", "empty", "list", "(", ")", ";", "}"], "token_count": 40, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.516812+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9e572602d4271055252e17cb90f1dc51a1d407c9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "iterator", "signature": null, "start_line": 43, "end_line": 46, "nloc": 4, "method_source_normalized": "@Override\n\tpublicIterator<Errors.Error>iterator(){\n\t\treturn this.errors.iterator();\n\t}", "original_code": "@Override\n\tpublic Iterator<Errors.Error> iterator() {\n\t\treturn this.errors.iterator();\n\t}", "code_tokens": ["@", "override", "public", "iterator", "<", "errors", ".", "error", ">", "iterator", "(", ")", "{", "return", "this", ".", "errors", ".", "iterator", "(", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.517075+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9dbdf70dc870dde2f94441debd645a3ee9c7dd9e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "stream", "signature": null, "start_line": 52, "end_line": 54, "nloc": 3, "method_source_normalized": "publicStream<Error>stream(){\n\t\treturn this.errors.stream();\n\t}", "original_code": "public Stream<Error> stream() {\n\t\treturn this.errors.stream();\n\t}", "code_tokens": ["public", "stream", "<", "error", ">", "stream", "(", ")", "{", "return", "this", ".", "errors", ".", "stream", "(", ")", ";", "}"], "token_count": 19, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.517319+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d32f5e85803bfb169785bd4ebd1221d68c432665", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "isEmpty", "signature": null, "start_line": 60, "end_line": 62, "nloc": 3, "method_source_normalized": "publicbooleanisEmpty(){\n\t\treturn this.errors.isEmpty();\n\t}", "original_code": "public boolean isEmpty() {\n\t\treturn this.errors.isEmpty();\n\t}", "code_tokens": ["public", "boolean", "is", "empty", "(", ")", "{", "return", "this", ".", "errors", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 3, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.517560+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "164b429995837b57e3874d815e8f2b6530824329", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 64, "end_line": 67, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.errors.toString();\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.errors.toString();\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "errors", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.517801+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e23520d7911fbbd3e57f41125116eb63a6afc9c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "Error", "signature": null, "start_line": 78, "end_line": 82, "nloc": 5, "method_source_normalized": "@JsonCreatorError(String code, String message){\n\t\t\tthis.code = code;\n\t\t\tthis.message = message;\n\t\t}", "original_code": "@JsonCreator\n\t\tError(String code, String message) {\n\t\t\tthis.code = code;\n\t\t\tthis.message = message;\n\t\t}", "code_tokens": ["@", "json", "creator", "error", "(", "string", "code", ",", "string", "message", ")", "{", "this", ".", "code", "=", "code", ";", "this", ".", "message", "=", "message", ";", "}"], "token_count": 25, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.518057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "92b61cba3a0b5efbbae52f7d438cb89bf0cc315c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "getCode", "signature": null, "start_line": 88, "end_line": 90, "nloc": 3, "method_source_normalized": "publicStringgetCode(){\n\t\t\treturn this.code;\n\t\t}", "original_code": "public String getCode() {\n\t\t\treturn this.code;\n\t\t}", "code_tokens": ["public", "string", "get", "code", "(", ")", "{", "return", "this", ".", "code", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.518291+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f5a5512c423fff286d8711dee1e5485b815d7e91", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "getMessage", "signature": null, "start_line": 96, "end_line": 98, "nloc": 3, "method_source_normalized": "publicStringgetMessage(){\n\t\t\treturn this.message;\n\t\t}", "original_code": "public String getMessage() {\n\t\t\treturn this.message;\n\t\t}", "code_tokens": ["public", "string", "get", "message", "(", ")", "{", "return", "this", ".", "message", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.518522+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77b5562588fb07aadae1c723d0fadebf9187dc57", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/Errors.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 100, "end_line": 103, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.code + \": \" + this.message;\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.code + \": \" + this.message;\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "code", "+", "__STR__", "+", "this", ".", "message", ";", "}"], "token_count": 21, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.518764+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "150df16bb10fdce32272cb6b2de8f36c8fba783a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "HttpClientTransport", "signature": null, "start_line": 66, "end_line": 71, "nloc": 6, "method_source_normalized": "protectedHttpClientTransport(HttpClient client, HttpHost host){\n\t\tAssert.notNull(client, \"'client' must not be null\");\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tthis.client = client;\n\t\tthis.host = host;\n\t}", "original_code": "protected HttpClientTransport(HttpClient client, HttpHost host) {\n\t\tAssert.notNull(client, \"'client' must not be null\");\n\t\tAssert.notNull(host, \"'host' must not be null\");\n\t\tthis.client = client;\n\t\tthis.host = host;\n\t}", "code_tokens": ["protected", "http", "client", "transport", "(", "http", "client", "client", ",", "http", "host", "host", ")", "{", "assert", ".", "not", "null", "(", "client", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "host", ",", "__STR__", ")", ";", "this", ".", "client", "=", "client", ";", "this", ".", "host", "=", "host", ";", "}"], "token_count": 47, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 15, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.521888+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6b2f70628a2ed3e9ded834c99d2f20418fddcf0f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "get", "signature": null, "start_line": 78, "end_line": 81, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponseget(URI uri){\n\t\treturn execute(new HttpGet(uri));\n\t}", "original_code": "@Override\n\tpublic Response get(URI uri) {\n\t\treturn execute(new HttpGet(uri));\n\t}", "code_tokens": ["@", "override", "public", "response", "get", "(", "uri", "uri", ")", "{", "return", "execute", "(", "new", "http", "get", "(", "uri", ")", ")", ";", "}"], "token_count": 22, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.522156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e2594747c1d9f8fdbd4ce413bc150f7053eb89e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 88, "end_line": 91, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponsepost(URI uri){\n\t\treturn execute(new HttpPost(uri));\n\t}", "original_code": "@Override\n\tpublic Response post(URI uri) {\n\t\treturn execute(new HttpPost(uri));\n\t}", "code_tokens": ["@", "override", "public", "response", "post", "(", "uri", "uri", ")", "{", "return", "execute", "(", "new", "http", "post", "(", "uri", ")", ")", ";", "}"], "token_count": 22, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.522413+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ecb5f5ea63e0ef7b47ab3b2c97eb60981af7d6d1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 99, "end_line": 102, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponsepost(URI uri, @Nullable String registryAuth){\n\t\treturn execute(new HttpPost(uri), registryAuth);\n\t}", "original_code": "@Override\n\tpublic Response post(URI uri, @Nullable String registryAuth) {\n\t\treturn execute(new HttpPost(uri), registryAuth);\n\t}", "code_tokens": ["@", "override", "public", "response", "post", "(", "uri", "uri", ",", "@", "nullable", "string", "registry", "auth", ")", "{", "return", "execute", "(", "new", "http", "post", "(", "uri", ")", ",", "registry", "auth", ")", ";", "}"], "token_count": 31, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.522675+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e219bc4884de0821245ffe7bde1f00bdeaf3789", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "post", "signature": null, "start_line": 111, "end_line": 114, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponsepost(URI uri, String contentType, IOConsumer<OutputStream> writer){\n\t\treturn execute(new HttpPost(uri), contentType, writer);\n\t}", "original_code": "@Override\n\tpublic Response post(URI uri, String contentType, IOConsumer<OutputStream> writer) {\n\t\treturn execute(new HttpPost(uri), contentType, writer);\n\t}", "code_tokens": ["@", "override", "public", "response", "post", "(", "uri", "uri", ",", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "{", "return", "execute", "(", "new", "http", "post", "(", "uri", ")", ",", "content", "type", ",", "writer", ")", ";", "}"], "token_count": 39, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.522945+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8bc10be98aee84048370817f383295985f7207b6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "put", "signature": null, "start_line": 123, "end_line": 126, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponseput(URI uri, String contentType, IOConsumer<OutputStream> writer){\n\t\treturn execute(new HttpPut(uri), contentType, writer);\n\t}", "original_code": "@Override\n\tpublic Response put(URI uri, String contentType, IOConsumer<OutputStream> writer) {\n\t\treturn execute(new HttpPut(uri), contentType, writer);\n\t}", "code_tokens": ["@", "override", "public", "response", "put", "(", "uri", "uri", ",", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "{", "return", "execute", "(", "new", "http", "put", "(", "uri", ")", ",", "content", "type", ",", "writer", ")", ";", "}"], "token_count": 39, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.523207+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b1a0610d4916f9e3c1765806c36048ba9c12d3ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "delete", "signature": null, "start_line": 133, "end_line": 136, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponsedelete(URI uri){\n\t\treturn execute(new HttpDelete(uri));\n\t}", "original_code": "@Override\n\tpublic Response delete(URI uri) {\n\t\treturn execute(new HttpDelete(uri));\n\t}", "code_tokens": ["@", "override", "public", "response", "delete", "(", "uri", "uri", ")", "{", "return", "execute", "(", "new", "http", "delete", "(", "uri", ")", ")", ";", "}"], "token_count": 22, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.523457+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a293e626fb6042740fa03ceeaff4654fd83bdda", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "head", "signature": null, "start_line": 143, "end_line": 146, "nloc": 4, "method_source_normalized": "@Override\n\tpublicResponsehead(URI uri){\n\t\treturn execute(new HttpHead(uri));\n\t}", "original_code": "@Override\n\tpublic Response head(URI uri) {\n\t\treturn execute(new HttpHead(uri));\n\t}", "code_tokens": ["@", "override", "public", "response", "head", "(", "uri", "uri", ")", "{", "return", "execute", "(", "new", "http", "head", "(", "uri", ")", ")", ";", "}"], "token_count": 22, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.523717+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "abf833c692841095b57bfe3040cbcf648420c984", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "execute", "signature": null, "start_line": 148, "end_line": 151, "nloc": 4, "method_source_normalized": "privateResponseexecute(HttpUriRequestBase request, String contentType, IOConsumer<OutputStream> writer){\n\t\trequest.setEntity(new WritableHttpEntity(contentType, writer));\n\t\treturn execute(request);\n\t}", "original_code": "private Response execute(HttpUriRequestBase request, String contentType, IOConsumer<OutputStream> writer) {\n\t\trequest.setEntity(new WritableHttpEntity(contentType, writer));\n\t\treturn execute(request);\n\t}", "code_tokens": ["private", "response", "execute", "(", "http", "uri", "request", "base", "request", ",", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "{", "request", ".", "set", "entity", "(", "new", "writable", "http", "entity", "(", "content", "type", ",", "writer", ")", ")", ";", "return", "execute", "(", "request", ")", ";", "}"], "token_count": 47, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.523986+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec0d87a9b1e6d695f3a6a74e09f8bb1304bc9401", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "execute", "signature": null, "start_line": 153, "end_line": 158, "nloc": 6, "method_source_normalized": "privateResponseexecute(HttpUriRequestBase request, @Nullable String registryAuth){\n\t\tif (StringUtils.hasText(registryAuth)) {\n\t\t\trequest.setHeader(REGISTRY_AUTH_HEADER, registryAuth);\n\t\t}\n\t\treturn execute(request);\n\t}", "original_code": "private Response execute(HttpUriRequestBase request, @Nullable String registryAuth) {\n\t\tif (StringUtils.hasText(registryAuth)) {\n\t\t\trequest.setHeader(REGISTRY_AUTH_HEADER, registryAuth);\n\t\t}\n\t\treturn execute(request);\n\t}", "code_tokens": ["private", "response", "execute", "(", "http", "uri", "request", "base", "request", ",", "@", "nullable", "string", "registry", "auth", ")", "{", "if", "(", "string", "utils", ".", "has", "text", "(", "registry", "auth", ")", ")", "{", "request", ".", "set", "header", "(", "registry", "auth", "header", ",", "registry", "auth", ")", ";", "}", "return", "execute", "(", "request", ")", ";", "}"], "token_count": 51, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 59, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.524265+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "afecdc75f17ab07d9ff9c8bb7f603c81b237e167", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "execute", "signature": null, "start_line": 160, "end_line": 178, "nloc": 19, "method_source_normalized": "privateResponseexecute(HttpUriRequest request){\n\t\ttry {\n\t\t\tbeforeExecute(request);\n\t\t\tClassicHttpResponse response = this.client.executeOpen(this.host, request, null);\n\t\t\tint statusCode = response.getCode();\n\t\t\tif (statusCode >= 400 && statusCode <= 500) {\n\t\t\t\tbyte[] content = readContent(response);\n\t\t\t\tresponse.close();\n\t\t\t\tErrors errors = (statusCode != 500) ? deserializeErrors(content) : null;\n\t\t\t\tMessage message = deserializeMessage(content);\n\t\t\t\tthrow new DockerEngineException(this.host.toHostString(), request.getUri(), statusCode,\n\t\t\t\t\t\tresponse.getReasonPhrase(), errors, message);\n\t\t\t}\n\t\t\treturn new HttpClientResponse(response);\n\t\t}\n\t\tcatch (IOException | URISyntaxException ex) {\n\t\t\tthrow new DockerConnectionException(this.host.toHostString(), ex);\n\t\t}\n\t}", "original_code": "private Response execute(HttpUriRequest request) {\n\t\ttry {\n\t\t\tbeforeExecute(request);\n\t\t\tClassicHttpResponse response = this.client.executeOpen(this.host, request, null);\n\t\t\tint statusCode = response.getCode();\n\t\t\tif (statusCode >= 400 && statusCode <= 500) {\n\t\t\t\tbyte[] content = readContent(response);\n\t\t\t\tresponse.close();\n\t\t\t\tErrors errors = (statusCode != 500) ? deserializeErrors(content) : null;\n\t\t\t\tMessage message = deserializeMessage(content);\n\t\t\t\tthrow new DockerEngineException(this.host.toHostString(), request.getUri(), statusCode,\n\t\t\t\t\t\tresponse.getReasonPhrase(), errors, message);\n\t\t\t}\n\t\t\treturn new HttpClientResponse(response);\n\t\t}\n\t\tcatch (IOException | URISyntaxException ex) {\n\t\t\tthrow new DockerConnectionException(this.host.toHostString(), ex);\n\t\t}\n\t}", "code_tokens": ["private", "response", "execute", "(", "http", "uri", "request", "request", ")", "{", "try", "{", "before", "execute", "(", "request", ")", ";", "classic", "http", "response", "response", "=", "this", ".", "client", ".", "execute", "open", "(", "this", ".", "host", ",", "request", ",", "null", ")", ";", "int", "status", "code", "=", "response", ".", "get", "code", "(", ")", ";", "if", "(", "status", "code", ">=", "__NUM__", "&&", "status", "code", "<=", "__NUM__", ")", "{", "byte", "[", "]", "content", "=", "read", "content", "(", "response", ")", ";", "response", ".", "close", "(", ")", ";", "errors", "errors", "=", "(", "status", "code", "!=", "__NUM__", ")", "?", "deserialize", "errors", "(", "content", ")", ":", "null", ";", "message", "message", "=", "deserialize", "message", "(", "content", ")", ";", "throw", "new", "docker", "engine", "exception", "(", "this", ".", "host", ".", "to", "host", "string", "(", ")", ",", "request", ".", "get", "uri", "(", ")", ",", "status", "code", ",", "response", ".", "get", "reason", "phrase", "(", ")", ",", "errors", ",", "message", ")", ";", "}", "return", "new", "http", "client", "response", "(", "response", ")", ";", "}", "catch", "(", "io", "exception", "|", "uri", "syntax", "exception", "ex", ")", "{", "throw", "new", "docker", "connection", "exception", "(", "this", ".", "host", ".", "to", "host", "string", "(", ")", ",", "ex", ")", ";", "}", "}"], "token_count": 189, "vocab_size": 59, "cyclomatic_complexity": 5, "ast_node_count": 229, "n_identifiers": 50, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 126, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.524769+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "95407537eeecf27192f0214db9ee7631f5f4894f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "beforeExecute", "signature": null, "start_line": 180, "end_line": 181, "nloc": 2, "method_source_normalized": "protectedvoidbeforeExecute(HttpRequest request){\n\t}", "original_code": "protected void beforeExecute(HttpRequest request) {\n\t}", "code_tokens": ["protected", "void", "before", "execute", "(", "http", "request", "request", ")", "{", "}"], "token_count": 11, "vocab_size": 10, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 6, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.525042+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1f78ddb47a5a38454fe037690c3c0c37f341ed4a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "readContent", "signature": null, "start_line": 183, "end_line": 191, "nloc": 9, "method_source_normalized": "privatebyte @Nullable []readContent(ClassicHttpResponse response)throws IOException{\n\t\tHttpEntity entity = response.getEntity();\n\t\tif (entity == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry (InputStream stream = entity.getContent()) {\n\t\t\treturn (stream != null) ? stream.readAllBytes() : null;\n\t\t}\n\t}", "original_code": "private byte @Nullable [] readContent(ClassicHttpResponse response) throws IOException {\n\t\tHttpEntity entity = response.getEntity();\n\t\tif (entity == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry (InputStream stream = entity.getContent()) {\n\t\t\treturn (stream != null) ? stream.readAllBytes() : null;\n\t\t}\n\t}", "code_tokens": ["private", "byte", "@", "nullable", "[", "]", "read", "content", "(", "classic", "http", "response", "response", ")", "throws", "io", "exception", "{", "http", "entity", "entity", "=", "response", ".", "get", "entity", "(", ")", ";", "if", "(", "entity", "==", "null", ")", "{", "return", "null", ";", "}", "try", "(", "input", "stream", "stream", "=", "entity", ".", "get", "content", "(", ")", ")", "{", "return", "(", "stream", "!=", "null", ")", "?", "stream", ".", "read", "all", "bytes", "(", ")", ":", "null", ";", "}", "}"], "token_count": 73, "vocab_size": 35, "cyclomatic_complexity": 3, "ast_node_count": 94, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.525341+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2614de2311ca289a07d247343520eed9ec163f49", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "deserializeErrors", "signature": null, "start_line": 193, "end_line": 203, "nloc": 11, "method_source_normalized": "private @NullableErrorsdeserializeErrors(byte @Nullable [] content){\n\t\tif (content == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn SharedObjectMapper.get().readValue(content, Errors.class);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "private @Nullable Errors deserializeErrors(byte @Nullable [] content) {\n\t\tif (content == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn SharedObjectMapper.get().readValue(content, Errors.class);\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["private", "@", "nullable", "errors", "deserialize", "errors", "(", "byte", "@", "nullable", "[", "]", "content", ")", "{", "if", "(", "content", "==", "null", ")", "{", "return", "null", ";", "}", "try", "{", "return", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "value", "(", "content", ",", "errors", ".", "class", ")", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "return", "null", ";", "}", "}"], "token_count": 60, "vocab_size": 32, "cyclomatic_complexity": 3, "ast_node_count": 83, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.525636+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "95e7e2d1191df7927a047e1b5bad2051f9808f0b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "deserializeMessage", "signature": null, "start_line": 205, "end_line": 216, "nloc": 12, "method_source_normalized": "private @NullableMessagedeserializeMessage(byte @Nullable [] content){\n\t\tif (content == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tMessage message = SharedObjectMapper.get().readValue(content, Message.class);\n\t\t\treturn (message.getMessage() != null) ? message : null;\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "original_code": "private @Nullable Message deserializeMessage(byte @Nullable [] content) {\n\t\tif (content == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tMessage message = SharedObjectMapper.get().readValue(content, Message.class);\n\t\t\treturn (message.getMessage() != null) ? message : null;\n\t\t}\n\t\tcatch (JacksonException ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "code_tokens": ["private", "@", "nullable", "message", "deserialize", "message", "(", "byte", "@", "nullable", "[", "]", "content", ")", "{", "if", "(", "content", "==", "null", ")", "{", "return", "null", ";", "}", "try", "{", "message", "message", "=", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "value", "(", "content", ",", "message", ".", "class", ")", ";", "return", "(", "message", ".", "get", "message", "(", ")", "!=", "null", ")", "?", "message", ":", "null", ";", "}", "catch", "(", "jackson", "exception", "ex", ")", "{", "return", "null", ";", "}", "}"], "token_count": 78, "vocab_size": 36, "cyclomatic_complexity": 4, "ast_node_count": 107, "n_identifiers": 19, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.525943+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "628c84931dea4ad12fed41d50d46f1a10038d6af", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "getHost", "signature": null, "start_line": 218, "end_line": 220, "nloc": 3, "method_source_normalized": "HttpHostgetHost(){\n\t\treturn this.host;\n\t}", "original_code": "HttpHost getHost() {\n\t\treturn this.host;\n\t}", "code_tokens": ["http", "host", "get", "host", "(", ")", "{", "return", "this", ".", "host", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.526192+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f0e70e6644dc85f48d616f81ee8dbf1932fb970e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "WritableHttpEntity", "signature": null, "start_line": 229, "end_line": 232, "nloc": 4, "method_source_normalized": "WritableHttpEntity(String contentType, IOConsumer<OutputStream> writer){\n\t\t\tsuper(contentType, \"UTF-8\");\n\t\t\tthis.writer = writer;\n\t\t}", "original_code": "WritableHttpEntity(String contentType, IOConsumer<OutputStream> writer) {\n\t\t\tsuper(contentType, \"UTF-8\");\n\t\t\tthis.writer = writer;\n\t\t}", "code_tokens": ["writable", "http", "entity", "(", "string", "content", "type", ",", "io", "consumer", "<", "output", "stream", ">", "writer", ")", "{", "super", "(", "content", "type", ",", "__STR__", ")", ";", "this", ".", "writer", "=", "writer", ";", "}"], "token_count": 32, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.526448+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0512616de823bf4733b1ca5fc0934ef2f420a1f8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "isRepeatable", "signature": null, "start_line": 234, "end_line": 237, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicbooleanisRepeatable(){\n\t\t\treturn false;\n\t\t}", "original_code": "@Override\n\t\tpublic boolean isRepeatable() {\n\t\t\treturn false;\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "is", "repeatable", "(", ")", "{", "return", "false", ";", "}"], "token_count": 13, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.526688+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "38075a02b5132c40ad2d4ee7bd77f2778362a760", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "getContentLength", "signature": null, "start_line": 239, "end_line": 245, "nloc": 7, "method_source_normalized": "@Override\n\t\tpubliclonggetContentLength(){\n\t\t\tif (this.getContentType() != null && this.getContentType().equals(\"application/json\")) {\n\t\t\t\treturn calculateStringContentLength();\n\t\t\t}\n\t\t\treturn -1;\n\t\t}", "original_code": "@Override\n\t\tpublic long getContentLength() {\n\t\t\tif (this.getContentType() != null && this.getContentType().equals(\"application/json\")) {\n\t\t\t\treturn calculateStringContentLength();\n\t\t\t}\n\t\t\treturn -1;\n\t\t}", "code_tokens": ["@", "override", "public", "long", "get", "content", "length", "(", ")", "{", "if", "(", "this", ".", "get", "content", "type", "(", ")", "!=", "null", "&&", "this", ".", "get", "content", "type", "(", ")", ".", "equals", "(", "__STR__", ")", ")", "{", "return", "calculate", "string", "content", "length", "(", ")", ";", "}", "return", "-", "__NUM__", ";", "}"], "token_count": 50, "vocab_size": 26, "cyclomatic_complexity": 3, "ast_node_count": 63, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.526951+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4fdc7aa93c368f3c052ebcd78a1f665597de2caf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 247, "end_line": 250, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicInputStreamgetContent()throws UnsupportedOperationException{\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}", "original_code": "@Override\n\t\tpublic InputStream getContent() throws UnsupportedOperationException {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "content", "(", ")", "throws", "unsupported", "operation", "exception", "{", "throw", "new", "unsupported", "operation", "exception", "(", ")", ";", "}"], "token_count": 23, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.527200+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9901d72f862e8cf88f0893aa809c65e5651b49ff", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "writeTo", "signature": null, "start_line": 252, "end_line": 255, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicvoidwriteTo(OutputStream outputStream)throws IOException{\n\t\t\tthis.writer.accept(outputStream);\n\t\t}", "original_code": "@Override\n\t\tpublic void writeTo(OutputStream outputStream) throws IOException {\n\t\t\tthis.writer.accept(outputStream);\n\t\t}", "code_tokens": ["@", "override", "public", "void", "write", "to", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "this", ".", "writer", ".", "accept", "(", "output", "stream", ")", ";", "}"], "token_count": 27, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.527448+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "57358b7208a1655fe0a7985a24a0a028902cd163", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "isStreaming", "signature": null, "start_line": 257, "end_line": 260, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicbooleanisStreaming(){\n\t\t\treturn true;\n\t\t}", "original_code": "@Override\n\t\tpublic boolean isStreaming() {\n\t\t\treturn true;\n\t\t}", "code_tokens": ["@", "override", "public", "boolean", "is", "streaming", "(", ")", "{", "return", "true", ";", "}"], "token_count": 13, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.527683+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e6f6f79bf60aaf5ef1dc4050d46ffacb4a63387d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "calculateStringContentLength", "signature": null, "start_line": 262, "end_line": 271, "nloc": 10, "method_source_normalized": "privateintcalculateStringContentLength(){\n\t\t\ttry {\n\t\t\t\tByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\t\t\t\tthis.writer.accept(bytes);\n\t\t\t\treturn bytes.toByteArray().length;\n\t\t\t}\n\t\t\tcatch (IOException ex) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}", "original_code": "private int calculateStringContentLength() {\n\t\t\ttry {\n\t\t\t\tByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\t\t\t\tthis.writer.accept(bytes);\n\t\t\t\treturn bytes.toByteArray().length;\n\t\t\t}\n\t\t\tcatch (IOException ex) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}", "code_tokens": ["private", "int", "calculate", "string", "content", "length", "(", ")", "{", "try", "{", "byte", "array", "output", "stream", "bytes", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "this", ".", "writer", ".", "accept", "(", "bytes", ")", ";", "return", "bytes", ".", "to", "byte", "array", "(", ")", ".", "length", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "return", "-", "__NUM__", ";", "}", "}"], "token_count": 59, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 72, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.527951+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58df41c63fe218d1463813ced6df7afb2a5be607", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 273, "end_line": 275, "nloc": 3, "method_source_normalized": "@Override\n\t\tpublicvoidclose()throws IOException{\n\t\t}", "original_code": "@Override\n\t\tpublic void close() throws IOException {\n\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "}"], "token_count": 12, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.528193+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ec3f3526373bdc48bf8f07b2011b27f4b5f338c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "HttpClientResponse", "signature": null, "start_line": 286, "end_line": 288, "nloc": 3, "method_source_normalized": "HttpClientResponse(ClassicHttpResponse response){\n\t\t\tthis.response = response;\n\t\t}", "original_code": "HttpClientResponse(ClassicHttpResponse response) {\n\t\t\tthis.response = response;\n\t\t}", "code_tokens": ["http", "client", "response", "(", "classic", "http", "response", "response", ")", "{", "this", ".", "response", "=", "response", ";", "}"], "token_count": 17, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.528433+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9b018648f4d6ca73aab0ba6d96a90ebd60427fde", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 290, "end_line": 293, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicInputStreamgetContent()throws IOException{\n\t\t\treturn this.response.getEntity().getContent();\n\t\t}", "original_code": "@Override\n\t\tpublic InputStream getContent() throws IOException {\n\t\t\treturn this.response.getEntity().getContent();\n\t\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "content", "(", ")", "throws", "io", "exception", "{", "return", "this", ".", "response", ".", "get", "entity", "(", ")", ".", "get", "content", "(", ")", ";", "}"], "token_count": 29, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.528679+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2261780729a270dae0e19b5f8438c7ef76b7c3ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "getHeader", "signature": null, "start_line": 295, "end_line": 298, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicHeadergetHeader(String name){\n\t\t\treturn this.response.getFirstHeader(name);\n\t\t}", "original_code": "@Override\n\t\tpublic Header getHeader(String name) {\n\t\t\treturn this.response.getFirstHeader(name);\n\t\t}", "code_tokens": ["@", "override", "public", "header", "get", "header", "(", "string", "name", ")", "{", "return", "this", ".", "response", ".", "get", "first", "header", "(", "name", ")", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.528925+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "91ff86e756d00bc4f9b5293a8197c4375f9aa682", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransport.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 300, "end_line": 303, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicvoidclose()throws IOException{\n\t\t\tthis.response.close();\n\t\t}", "original_code": "@Override\n\t\tpublic void close() throws IOException {\n\t\t\tthis.response.close();\n\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "throws", "io", "exception", "{", "this", ".", "response", ".", "close", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.529169+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "215dbc3c28f67ca10fd55b5ee56d24b7263b23ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "getArchive", "signature": null, "start_line": 34, "end_line": 34, "nloc": 1, "method_source_normalized": "TarArchivegetArchive();", "original_code": "TarArchive getArchive();", "code_tokens": ["tar", "archive", "get", "archive", "(", ")", ";"], "token_count": 7, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.529828+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "df6df9629f9c4f1c2da33ce0937791a3c1022e62", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "getDestinationPath", "signature": null, "start_line": 40, "end_line": 40, "nloc": 1, "method_source_normalized": "StringgetDestinationPath();", "original_code": "String getDestinationPath();", "code_tokens": ["string", "get", "destination", "path", "(", ")", ";"], "token_count": 7, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.530060+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e7ddc08e82bbaad67d41844f5bed1d38a370814", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 48, "end_line": 50, "nloc": 3, "method_source_normalized": "staticContainerContentof(TarArchive archive){\n\t\treturn of(archive, \"/\");\n\t}", "original_code": "static ContainerContent of(TarArchive archive) {\n\t\treturn of(archive, \"/\");\n\t}", "code_tokens": ["static", "container", "content", "of", "(", "tar", "archive", "archive", ")", "{", "return", "of", "(", "archive", ",", "__STR__", ")", ";", "}"], "token_count": 19, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.530296+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a1016c1a4260970b6a2b29687c4c66d36eb1cb0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 58, "end_line": 74, "nloc": 17, "method_source_normalized": "staticContainerContentof(TarArchive archive, String destinationPath){\n\t\tAssert.notNull(archive, \"'archive' must not be null\");\n\t\tAssert.hasText(destinationPath, \"'destinationPath' must not be empty\");\n\t\treturn new ContainerContent() {\n\n\t\t\t@Override\n\t\t\tpublic TarArchive getArchive() {\n\t\t\t\treturn archive;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String getDestinationPath() {\n\t\t\t\treturn destinationPath;\n\t\t\t}\n\n\t\t};\n\t}", "original_code": "static ContainerContent of(TarArchive archive, String destinationPath) {\n\t\tAssert.notNull(archive, \"'archive' must not be null\");\n\t\tAssert.hasText(destinationPath, \"'destinationPath' must not be empty\");\n\t\treturn new ContainerContent() {\n\n\t\t\t@Override\n\t\t\tpublic TarArchive getArchive() {\n\t\t\t\treturn archive;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String getDestinationPath() {\n\t\t\t\treturn destinationPath;\n\t\t\t}\n\n\t\t};\n\t}", "code_tokens": ["static", "container", "content", "of", "(", "tar", "archive", "archive", ",", "string", "destination", "path", ")", "{", "assert", ".", "not", "null", "(", "archive", ",", "__STR__", ")", ";", "assert", ".", "has", "text", "(", "destination", "path", ",", "__STR__", ")", ";", "return", "new", "container", "content", "(", ")", "{", "@", "override", "public", "tar", "archive", "get", "archive", "(", ")", "{", "return", "archive", ";", "}", "@", "override", "public", "string", "get", "destination", "path", "(", ")", "{", "return", "destination", "path", ";", "}", "}", ";", "}"], "token_count": 74, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 78, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.530582+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "79f74a55a9b05a9e28a496bf50b2acf3c01872e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "getArchive", "signature": null, "start_line": 63, "end_line": 66, "nloc": 4, "method_source_normalized": "@Override\n\t\t\tpublicTarArchivegetArchive(){\n\t\t\t\treturn archive;\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic TarArchive getArchive() {\n\t\t\t\treturn archive;\n\t\t\t}", "code_tokens": ["@", "override", "public", "tar", "archive", "get", "archive", "(", ")", "{", "return", "archive", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.530824+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f52ada5761e83d6bee17b31297ed56a36b721a95", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContent.java", "file_blob_sha": null, "method_name": "getDestinationPath", "signature": null, "start_line": 68, "end_line": 71, "nloc": 4, "method_source_normalized": "@Override\n\t\t\tpublicStringgetDestinationPath(){\n\t\t\t\treturn destinationPath;\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic String getDestinationPath() {\n\t\t\t\treturn destinationPath;\n\t\t\t}", "code_tokens": ["@", "override", "public", "string", "get", "destination", "path", "(", ")", "{", "return", "destination", "path", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 4, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.531060+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32ef73f6927de01df7052e6a45d546265401f886", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "ContainerStatus", "signature": null, "start_line": 42, "end_line": 46, "nloc": 5, "method_source_normalized": "ContainerStatus(int statusCode, @Nullable String waitingErrorMessage){\n\t\tsuper(NullNode.getInstance(), MethodHandles.lookup());\n\t\tthis.statusCode = statusCode;\n\t\tthis.waitingErrorMessage = waitingErrorMessage;\n\t}", "original_code": "ContainerStatus(int statusCode, @Nullable String waitingErrorMessage) {\n\t\tsuper(NullNode.getInstance(), MethodHandles.lookup());\n\t\tthis.statusCode = statusCode;\n\t\tthis.waitingErrorMessage = waitingErrorMessage;\n\t}", "code_tokens": ["container", "status", "(", "int", "status", "code", ",", "@", "nullable", "string", "waiting", "error", "message", ")", "{", "super", "(", "null", "node", ".", "get", "instance", "(", ")", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "status", "code", "=", "status", "code", ";", "this", ".", "waiting", "error", "message", "=", "waiting", "error", "message", ";", "}"], "token_count": 52, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.532013+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "957d6354f7f7f16d4aadd9bf093875014dcaffe5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "ContainerStatus", "signature": null, "start_line": 48, "end_line": 52, "nloc": 5, "method_source_normalized": "ContainerStatus(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.statusCode = extractStatusCode();\n\t\tthis.waitingErrorMessage = valueAt(\"/Error/Message\", String.class);\n\t}", "original_code": "ContainerStatus(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.statusCode = extractStatusCode();\n\t\tthis.waitingErrorMessage = valueAt(\"/Error/Message\", String.class);\n\t}", "code_tokens": ["container", "status", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "status", "code", "=", "extract", "status", "code", "(", ")", ";", "this", ".", "waiting", "error", "message", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 48, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.532287+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec6e35a52a08801e9e51c639722836a96453dc1e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "extractStatusCode", "signature": null, "start_line": 54, "end_line": 58, "nloc": 5, "method_source_normalized": "privateIntegerextractStatusCode(){\n\t\tInteger result = valueAt(\"/StatusCode\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Integer extractStatusCode() {\n\t\tInteger result = valueAt(\"/StatusCode\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "integer", "extract", "status", "code", "(", ")", "{", "integer", "result", "=", "value", "at", "(", "__STR__", ",", "integer", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.532553+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d957b74f97d2da253db3de32ad3ee3a4c3c3c68", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "getStatusCode", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "publicintgetStatusCode(){\n\t\treturn this.statusCode;\n\t}", "original_code": "public int getStatusCode() {\n\t\treturn this.statusCode;\n\t}", "code_tokens": ["public", "int", "get", "status", "code", "(", ")", "{", "return", "this", ".", "status", "code", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 19, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.532793+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aa0ffb49548fa8fcfa66bac64f2997582e5f395a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "getWaitingErrorMessage", "signature": null, "start_line": 72, "end_line": 74, "nloc": 3, "method_source_normalized": "public @NullableStringgetWaitingErrorMessage(){\n\t\treturn this.waitingErrorMessage;\n\t}", "original_code": "public @Nullable String getWaitingErrorMessage() {\n\t\treturn this.waitingErrorMessage;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "waiting", "error", "message", "(", ")", "{", "return", "this", ".", "waiting", "error", "message", ";", "}"], "token_count": 19, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.533030+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "52121bd7d31425b0c25fd5009e6658e8da0e8a7d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 83, "end_line": 85, "nloc": 3, "method_source_normalized": "public staticContainerStatusof(InputStream content)throws IOException{\n\t\treturn of(content, ContainerStatus::new);\n\t}", "original_code": "public static ContainerStatus of(InputStream content) throws IOException {\n\t\treturn of(content, ContainerStatus::new);\n\t}", "code_tokens": ["public", "static", "container", "status", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "container", "status", "::", "new", ")", ";", "}"], "token_count": 26, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.533272+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "531e0cf44bdf75710144396cd3501583ce5d2472", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 93, "end_line": 95, "nloc": 3, "method_source_normalized": "public staticContainerStatusof(int statusCode, @Nullable String errorMessage){\n\t\treturn new ContainerStatus(statusCode, errorMessage);\n\t}", "original_code": "public static ContainerStatus of(int statusCode, @Nullable String errorMessage) {\n\t\treturn new ContainerStatus(statusCode, errorMessage);\n\t}", "code_tokens": ["public", "static", "container", "status", "of", "(", "int", "status", "code", ",", "@", "nullable", "string", "error", "message", ")", "{", "return", "new", "container", "status", "(", "status", "code", ",", "error", "message", ")", ";", "}"], "token_count": 30, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.533521+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "248d4f42e837cc45887793b85e4f141f13fa7b1e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "Regex", "signature": null, "start_line": 73, "end_line": 75, "nloc": 3, "method_source_normalized": "privateRegex(CharSequence value){\n\t\tthis.value = value.toString();\n\t}", "original_code": "private Regex(CharSequence value) {\n\t\tthis.value = value.toString();\n\t}", "code_tokens": ["private", "regex", "(", "char", "sequence", "value", ")", "{", "this", ".", "value", "=", "value", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.534993+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e66a6506d0d4db5a27cfb6552c31e772ca233a14", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "oneOrMoreTimes", "signature": null, "start_line": 77, "end_line": 79, "nloc": 3, "method_source_normalized": "privateRegexoneOrMoreTimes(){\n\t\treturn new Regex(this.value + \"+\");\n\t}", "original_code": "private Regex oneOrMoreTimes() {\n\t\treturn new Regex(this.value + \"+\");\n\t}", "code_tokens": ["private", "regex", "one", "or", "more", "times", "(", ")", "{", "return", "new", "regex", "(", "this", ".", "value", "+", "__STR__", ")", ";", "}"], "token_count": 21, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.535244+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c16f0fc0e6e90d19f758ae175de1ef9339592b86", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "zeroOrOnce", "signature": null, "start_line": 81, "end_line": 83, "nloc": 3, "method_source_normalized": "privateRegexzeroOrOnce(){\n\t\treturn new Regex(this.value + \"?\");\n\t}", "original_code": "private Regex zeroOrOnce() {\n\t\treturn new Regex(this.value + \"?\");\n\t}", "code_tokens": ["private", "regex", "zero", "or", "once", "(", ")", "{", "return", "new", "regex", "(", "this", ".", "value", "+", "__STR__", ")", ";", "}"], "token_count": 20, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.535487+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5dcc7a2520c879b4d15f53e2a418a7550f246134", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "compile", "signature": null, "start_line": 85, "end_line": 87, "nloc": 3, "method_source_normalized": "Patterncompile(){\n\t\treturn Pattern.compile(\"^\" + this.value + \"$\");\n\t}", "original_code": "Pattern compile() {\n\t\treturn Pattern.compile(\"^\" + this.value + \"$\");\n\t}", "code_tokens": ["pattern", "compile", "(", ")", "{", "return", "pattern", ".", "compile", "(", "__STR__", "+", "this", ".", "value", "+", "__STR__", ")", ";", "}"], "token_count": 20, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.535730+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "83fbab68759783b8cc33c7f773c34bb6bf3382eb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "length", "signature": null, "start_line": 89, "end_line": 92, "nloc": 4, "method_source_normalized": "@Override\n\tpublicintlength(){\n\t\treturn this.value.length();\n\t}", "original_code": "@Override\n\tpublic int length() {\n\t\treturn this.value.length();\n\t}", "code_tokens": ["@", "override", "public", "int", "length", "(", ")", "{", "return", "this", ".", "value", ".", "length", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.535972+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17dd4658182bf0014b7f38ffc5b19bfc770bb616", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "charAt", "signature": null, "start_line": 94, "end_line": 97, "nloc": 4, "method_source_normalized": "@Override\n\tpubliccharcharAt(int index){\n\t\treturn this.value.charAt(index);\n\t}", "original_code": "@Override\n\tpublic char charAt(int index) {\n\t\treturn this.value.charAt(index);\n\t}", "code_tokens": ["@", "override", "public", "char", "char", "at", "(", "int", "index", ")", "{", "return", "this", ".", "value", ".", "char", "at", "(", "index", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.536222+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "259e927581e4cf3479f127698af4070a1a45bb40", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "subSequence", "signature": null, "start_line": 99, "end_line": 102, "nloc": 4, "method_source_normalized": "@Override\n\tpublicCharSequencesubSequence(int start, int end){\n\t\treturn this.value.subSequence(start, end);\n\t}", "original_code": "@Override\n\tpublic CharSequence subSequence(int start, int end) {\n\t\treturn this.value.subSequence(start, end);\n\t}", "code_tokens": ["@", "override", "public", "char", "sequence", "sub", "sequence", "(", "int", "start", ",", "int", "end", ")", "{", "return", "this", ".", "value", ".", "sub", "sequence", "(", "start", ",", "end", ")", ";", "}"], "token_count": 29, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.536473+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "19c7aa22a974096a854ef99f0fb8555eebcb526d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 104, "end_line": 107, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.536715+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e879d1c7bc38d76cec2fd40ee3ddcc32916fcc0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 109, "end_line": 111, "nloc": 3, "method_source_normalized": "private staticRegexof(CharSequence... expressions){\n\t\treturn new Regex(String.join(\"\", expressions));\n\t}", "original_code": "private static Regex of(CharSequence... expressions) {\n\t\treturn new Regex(String.join(\"\", expressions));\n\t}", "code_tokens": ["private", "static", "regex", "of", "(", "char", "sequence", "...", "expressions", ")", "{", "return", "new", "regex", "(", "string", ".", "join", "(", "__STR__", ",", "expressions", ")", ")", ";", "}"], "token_count": 26, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.536963+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "068a1015eded6bdee13f6d801f5b5acec521beaf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "oneOf", "signature": null, "start_line": 113, "end_line": 115, "nloc": 3, "method_source_normalized": "private staticRegexoneOf(CharSequence... expressions){\n\t\treturn new Regex(\"(?:\" + String.join(\"|\", expressions) + \")\");\n\t}", "original_code": "private static Regex oneOf(CharSequence... expressions) {\n\t\treturn new Regex(\"(?:\" + String.join(\"|\", expressions) + \")\");\n\t}", "code_tokens": ["private", "static", "regex", "one", "of", "(", "char", "sequence", "...", "expressions", ")", "{", "return", "new", "regex", "(", "__STR__", "+", "string", ".", "join", "(", "__STR__", ",", "expressions", ")", "+", "__STR__", ")", ";", "}"], "token_count": 31, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.537216+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6b14fd6bdfbcdcf2ab86f05f6f5e9238c87ddb41", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Regex.java", "file_blob_sha": null, "method_name": "group", "signature": null, "start_line": 117, "end_line": 119, "nloc": 3, "method_source_normalized": "private staticRegexgroup(CharSequence... expressions){\n\t\treturn new Regex(\"(?:\" + String.join(\"\", expressions) + \")\");\n\t}", "original_code": "private static Regex group(CharSequence... expressions) {\n\t\treturn new Regex(\"(?:\" + String.join(\"\", expressions) + \")\");\n\t}", "code_tokens": ["private", "static", "regex", "group", "(", "char", "sequence", "...", "expressions", ")", "{", "return", "new", "regex", "(", "__STR__", "+", "string", ".", "join", "(", "__STR__", ",", "expressions", ")", "+", "__STR__", ")", ";", "}"], "token_count": 30, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.537468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0cc6a8025c4b58c37f00e5406d2639aedecae740", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "ImageConfig", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "ImageConfig(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.labels = extractLabels();\n\t\tthis.configEnv = parseConfigEnv();\n\t}", "original_code": "ImageConfig(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.labels = extractLabels();\n\t\tthis.configEnv = parseConfigEnv();\n\t}", "code_tokens": ["image", "config", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "labels", "=", "extract", "labels", "(", ")", ";", "this", ".", "config", "env", "=", "parse", "config", "env", "(", ")", ";", "}"], "token_count": 41, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.538932+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d33d87152276012ef70c80553dd25b4a7b6ece3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "extractLabels", "signature": null, "start_line": 50, "end_line": 57, "nloc": 8, "method_source_normalized": "@SuppressWarnings(\"unchecked\")\n\tprivateMap<String, String>extractLabels(){\n\t\tMap<String, String> labels = valueAt(\"/Labels\", Map.class);\n\t\tif (labels == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\treturn labels;\n\t}", "original_code": "@SuppressWarnings(\"unchecked\")\n\tprivate Map<String, String> extractLabels() {\n\t\tMap<String, String> labels = valueAt(\"/Labels\", Map.class);\n\t\tif (labels == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\treturn labels;\n\t}", "code_tokens": ["@", "suppress", "warnings", "(", "__STR__", ")", "private", "map", "<", "string", ",", "string", ">", "extract", "labels", "(", ")", "{", "map", "<", "string", ",", "string", ">", "labels", "=", "value", "at", "(", "__STR__", ",", "map", ".", "class", ")", ";", "if", "(", "labels", "==", "null", ")", "{", "return", "collections", ".", "empty", "map", "(", ")", ";", "}", "return", "labels", ";", "}"], "token_count": 56, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 75, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.539226+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4973304e39f0bc1c8392a63d586b50a0ded31457", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "parseConfigEnv", "signature": null, "start_line": 59, "end_line": 72, "nloc": 14, "method_source_normalized": "privateMap<String, @Nullable String>parseConfigEnv(){\n\t\tString[] entries = valueAt(\"/Env\", String[].class);\n\t\tif (entries == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tMap<String, @Nullable String> env = new LinkedHashMap<>();\n\t\tfor (String entry : entries) {\n\t\t\tint i = entry.indexOf('=');\n\t\t\tString name = (i != -1) ? entry.substring(0, i) : entry;\n\t\t\tString value = (i != -1) ? entry.substring(i + 1) : null;\n\t\t\tenv.put(name, value);\n\t\t}\n\t\treturn Collections.unmodifiableMap(env);\n\t}", "original_code": "private Map<String, @Nullable String> parseConfigEnv() {\n\t\tString[] entries = valueAt(\"/Env\", String[].class);\n\t\tif (entries == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tMap<String, @Nullable String> env = new LinkedHashMap<>();\n\t\tfor (String entry : entries) {\n\t\t\tint i = entry.indexOf('=');\n\t\t\tString name = (i != -1) ? entry.substring(0, i) : entry;\n\t\t\tString value = (i != -1) ? entry.substring(i + 1) : null;\n\t\t\tenv.put(name, value);\n\t\t}\n\t\treturn Collections.unmodifiableMap(env);\n\t}", "code_tokens": ["private", "map", "<", "string", ",", "@", "nullable", "string", ">", "parse", "config", "env", "(", ")", "{", "string", "[", "]", "entries", "=", "value", "at", "(", "__STR__", ",", "string", "[", "]", ".", "class", ")", ";", "if", "(", "entries", "==", "null", ")", "{", "return", "collections", ".", "empty", "map", "(", ")", ";", "}", "map", "<", "string", ",", "@", "nullable", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "for", "(", "string", "entry", ":", "entries", ")", "{", "int", "i", "=", "entry", ".", "index", "of", "(", "__STR__", ")", ";", "string", "name", "=", "(", "i", "!=", "-", "__NUM__", ")", "?", "entry", ".", "substring", "(", "__NUM__", ",", "i", ")", ":", "entry", ";", "string", "value", "=", "(", "i", "!=", "-", "__NUM__", ")", "?", "entry", ".", "substring", "(", "i", "+", "__NUM__", ")", ":", "null", ";", "env", ".", "put", "(", "name", ",", "value", ")", ";", "}", "return", "collections", ".", "unmodifiable", "map", "(", "env", ")", ";", "}"], "token_count": 148, "vocab_size": 50, "cyclomatic_complexity": 5, "ast_node_count": 204, "n_identifiers": 44, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 94, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.539586+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2f41bd8fa648665d50e8d9f07fd9f3f2f7c8680d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "getNodeCopy", "signature": null, "start_line": 74, "end_line": 76, "nloc": 3, "method_source_normalized": "JsonNodegetNodeCopy(){\n\t\treturn super.getNode().deepCopy();\n\t}", "original_code": "JsonNode getNodeCopy() {\n\t\treturn super.getNode().deepCopy();\n\t}", "code_tokens": ["json", "node", "get", "node", "copy", "(", ")", "{", "return", "super", ".", "get", "node", "(", ")", ".", "deep", "copy", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 4, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.539848+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "80b755df8bb87e58a178c432234a6f16fee3beef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "getLabels", "signature": null, "start_line": 83, "end_line": 85, "nloc": 3, "method_source_normalized": "publicMap<String, String>getLabels(){\n\t\treturn this.labels;\n\t}", "original_code": "public Map<String, String> getLabels() {\n\t\treturn this.labels;\n\t}", "code_tokens": ["public", "map", "<", "string", ",", "string", ">", "get", "labels", "(", ")", "{", "return", "this", ".", "labels", ";", "}"], "token_count": 18, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 5, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.540087+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1909ea16e529fd2be3801a41bdead841d9bd9a95", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "getEnv", "signature": null, "start_line": 92, "end_line": 94, "nloc": 3, "method_source_normalized": "publicMap<String, @Nullable String>getEnv(){\n\t\treturn this.configEnv;\n\t}", "original_code": "public Map<String, @Nullable String> getEnv() {\n\t\treturn this.configEnv;\n\t}", "code_tokens": ["public", "map", "<", "string", ",", "@", "nullable", "string", ">", "get", "env", "(", ")", "{", "return", "this", ".", "config", "env", ";", "}"], "token_count": 21, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.540329+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3038546424bf6704057c75174776db0959ae4eff", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "copy", "signature": null, "start_line": 101, "end_line": 104, "nloc": 4, "method_source_normalized": "publicImageConfigcopy(Consumer<Update> update){\n\t\treturn new Update(this).run(update);\n\n\t}", "original_code": "public ImageConfig copy(Consumer<Update> update) {\n\t\treturn new Update(this).run(update);\n\n\t}", "code_tokens": ["public", "image", "config", "copy", "(", "consumer", "<", "update", ">", "update", ")", "{", "return", "new", "update", "(", "this", ")", ".", "run", "(", "update", ")", ";", "}"], "token_count": 25, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.540581+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "607b51a3c89eb38bc2e05dd76d3a822dc95d3a2d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "Update", "signature": null, "start_line": 113, "end_line": 115, "nloc": 3, "method_source_normalized": "privateUpdate(ImageConfig source){\n\t\t\tthis.copy = (ObjectNode) source.getNode().deepCopy();\n\t\t}", "original_code": "private Update(ImageConfig source) {\n\t\t\tthis.copy = (ObjectNode) source.getNode().deepCopy();\n\t\t}", "code_tokens": ["private", "update", "(", "image", "config", "source", ")", "{", "this", ".", "copy", "=", "(", "object", "node", ")", "source", ".", "get", "node", "(", ")", ".", "deep", "copy", "(", ")", ";", "}"], "token_count": 29, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.540839+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "19b930414184df2d5771499aa2f58148d28207bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "run", "signature": null, "start_line": 117, "end_line": 120, "nloc": 4, "method_source_normalized": "privateImageConfigrun(Consumer<Update> update){\n\t\t\tupdate.accept(this);\n\t\t\treturn new ImageConfig(this.copy);\n\t\t}", "original_code": "private ImageConfig run(Consumer<Update> update) {\n\t\t\tupdate.accept(this);\n\t\t\treturn new ImageConfig(this.copy);\n\t\t}", "code_tokens": ["private", "image", "config", "run", "(", "consumer", "<", "update", ">", "update", ")", "{", "update", ".", "accept", "(", "this", ")", ";", "return", "new", "image", "config", "(", "this", ".", "copy", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.541093+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8de6cf01d4c06b77b61292b450e52dd395b70aa9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfig.java", "file_blob_sha": null, "method_name": "withLabel", "signature": null, "start_line": 127, "end_line": 133, "nloc": 7, "method_source_normalized": "publicvoidwithLabel(String label, String value){\n\t\t\tJsonNode labels = this.copy.at(\"/Labels\");\n\t\t\tif (labels.isMissingNode()) {\n\t\t\t\tlabels = this.copy.putObject(\"Labels\");\n\t\t\t}\n\t\t\t((ObjectNode) labels).put(label, value);\n\t\t}", "original_code": "public void withLabel(String label, String value) {\n\t\t\tJsonNode labels = this.copy.at(\"/Labels\");\n\t\t\tif (labels.isMissingNode()) {\n\t\t\t\tlabels = this.copy.putObject(\"Labels\");\n\t\t\t}\n\t\t\t((ObjectNode) labels).put(label, value);\n\t\t}", "code_tokens": ["public", "void", "with", "label", "(", "string", "label", ",", "string", "value", ")", "{", "json", "node", "labels", "=", "this", ".", "copy", ".", "at", "(", "__STR__", ")", ";", "if", "(", "labels", ".", "is", "missing", "node", "(", ")", ")", "{", "labels", "=", "this", ".", "copy", ".", "put", "object", "(", "__STR__", ")", ";", "}", "(", "(", "object", "node", ")", "labels", ")", ".", "put", "(", "label", ",", "value", ")", ";", "}"], "token_count": 65, "vocab_size": 26, "cyclomatic_complexity": 2, "ast_node_count": 85, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.541378+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99c443ff16fdb7e17aeda31a34dc144db8c1fd20", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "Image", "signature": null, "start_line": 55, "end_line": 64, "nloc": 10, "method_source_normalized": "Image(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.digests = childrenAt(\"/RepoDigests\", JsonNode::asString);\n\t\tthis.config = new ImageConfig(getNode().at(\"/Config\"));\n\t\tthis.layers = extractLayers(valueAt(\"/RootFS/Layers\", String[].class));\n\t\tthis.os = valueAt(\"/Os\", String.class);\n\t\tthis.architecture = valueAt(\"/Architecture\", String.class);\n\t\tthis.variant = valueAt(\"/Variant\", String.class);\n\t\tthis.created = valueAt(\"/Created\", String.class);\n\t}", "original_code": "Image(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.digests = childrenAt(\"/RepoDigests\", JsonNode::asString);\n\t\tthis.config = new ImageConfig(getNode().at(\"/Config\"));\n\t\tthis.layers = extractLayers(valueAt(\"/RootFS/Layers\", String[].class));\n\t\tthis.os = valueAt(\"/Os\", String.class);\n\t\tthis.architecture = valueAt(\"/Architecture\", String.class);\n\t\tthis.variant = valueAt(\"/Variant\", String.class);\n\t\tthis.created = valueAt(\"/Created\", String.class);\n\t}", "code_tokens": ["image", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "digests", "=", "children", "at", "(", "__STR__", ",", "json", "node", "::", "as", "string", ")", ";", "this", ".", "config", "=", "new", "image", "config", "(", "get", "node", "(", ")", ".", "at", "(", "__STR__", ")", ")", ";", "this", ".", "layers", "=", "extract", "layers", "(", "value", "at", "(", "__STR__", ",", "string", "[", "]", ".", "class", ")", ")", ";", "this", ".", "os", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "architecture", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "variant", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "created", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "}"], "token_count": 131, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 175, "n_identifiers": 34, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.542757+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a64c7e64ee5d87ee0528f84a0f9e0b3af1dbd61", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "extractLayers", "signature": null, "start_line": 66, "end_line": 71, "nloc": 6, "method_source_normalized": "privateList<LayerId>extractLayers(String @Nullable [] layers){\n\t\tif (layers == null) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\treturn Arrays.stream(layers).map(LayerId::of).toList();\n\t}", "original_code": "private List<LayerId> extractLayers(String @Nullable [] layers) {\n\t\tif (layers == null) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\treturn Arrays.stream(layers).map(LayerId::of).toList();\n\t}", "code_tokens": ["private", "list", "<", "layer", "id", ">", "extract", "layers", "(", "string", "@", "nullable", "[", "]", "layers", ")", "{", "if", "(", "layers", "==", "null", ")", "{", "return", "collections", ".", "empty", "list", "(", ")", ";", "}", "return", "arrays", ".", "stream", "(", "layers", ")", ".", "map", "(", "layer", "id", "::", "of", ")", ".", "to", "list", "(", ")", ";", "}"], "token_count": 55, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 75, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.543057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3dace582b1aa767243110980a48b39013b99fc0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getDigests", "signature": null, "start_line": 77, "end_line": 79, "nloc": 3, "method_source_normalized": "publicList<String>getDigests(){\n\t\treturn this.digests;\n\t}", "original_code": "public List<String> getDigests() {\n\t\treturn this.digests;\n\t}", "code_tokens": ["public", "list", "<", "string", ">", "get", "digests", "(", ")", "{", "return", "this", ".", "digests", ";", "}"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.543304+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3832fd032045ea69284ef7dd40592a96f44fede2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getConfig", "signature": null, "start_line": 85, "end_line": 87, "nloc": 3, "method_source_normalized": "publicImageConfiggetConfig(){\n\t\treturn this.config;\n\t}", "original_code": "public ImageConfig getConfig() {\n\t\treturn this.config;\n\t}", "code_tokens": ["public", "image", "config", "get", "config", "(", ")", "{", "return", "this", ".", "config", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.543539+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c79afd87ef9b58de7e96a3d71a4659cc6e53eb1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getLayers", "signature": null, "start_line": 93, "end_line": 95, "nloc": 3, "method_source_normalized": "publicList<LayerId>getLayers(){\n\t\treturn this.layers;\n\t}", "original_code": "public List<LayerId> getLayers() {\n\t\treturn this.layers;\n\t}", "code_tokens": ["public", "list", "<", "layer", "id", ">", "get", "layers", "(", ")", "{", "return", "this", ".", "layers", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.543773+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f7e75e61be7cc47c000e057fdddb54a36c9b3ac7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getOs", "signature": null, "start_line": 101, "end_line": 103, "nloc": 3, "method_source_normalized": "publicStringgetOs(){\n\t\treturn (StringUtils.hasText(this.os)) ? this.os : \"linux\";\n\t}", "original_code": "public String getOs() {\n\t\treturn (StringUtils.hasText(this.os)) ? this.os : \"linux\";\n\t}", "code_tokens": ["public", "string", "get", "os", "(", ")", "{", "return", "(", "string", "utils", ".", "has", "text", "(", "this", ".", "os", ")", ")", "?", "this", ".", "os", ":", "__STR__", ";", "}"], "token_count": 28, "vocab_size": 18, "cyclomatic_complexity": 2, "ast_node_count": 36, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.544023+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce7ba2320b9b04fee88d75df0e97faf2f5fbf3d8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getArchitecture", "signature": null, "start_line": 109, "end_line": 111, "nloc": 3, "method_source_normalized": "public @NullableStringgetArchitecture(){\n\t\treturn this.architecture;\n\t}", "original_code": "public @Nullable String getArchitecture() {\n\t\treturn this.architecture;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "architecture", "(", ")", "{", "return", "this", ".", "architecture", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.544260+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39c0c81671865bdd2a5487266c88f2f179140fe8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getVariant", "signature": null, "start_line": 117, "end_line": 119, "nloc": 3, "method_source_normalized": "public @NullableStringgetVariant(){\n\t\treturn this.variant;\n\t}", "original_code": "public @Nullable String getVariant() {\n\t\treturn this.variant;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "variant", "(", ")", "{", "return", "this", ".", "variant", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.544495+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "434392465fe1311b04936d2403e1b96021653f95", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "getCreated", "signature": null, "start_line": 125, "end_line": 127, "nloc": 3, "method_source_normalized": "public @NullableStringgetCreated(){\n\t\treturn this.created;\n\t}", "original_code": "public @Nullable String getCreated() {\n\t\treturn this.created;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "created", "(", ")", "{", "return", "this", ".", "created", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.544734+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6244468217f4a9d0bf608761257cf24ab777cdaa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Image.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 135, "end_line": 137, "nloc": 3, "method_source_normalized": "public staticImageof(InputStream content)throws IOException{\n\t\treturn of(content, Image::new);\n\t}", "original_code": "public static Image of(InputStream content) throws IOException {\n\t\treturn of(content, Image::new);\n\t}", "code_tokens": ["public", "static", "image", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "image", "::", "new", ")", ";", "}"], "token_count": 24, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.544984+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a0d5a944e43f88d380690658ab1c03cd4aefc331", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "ImageReference", "signature": null, "start_line": 52, "end_line": 58, "nloc": 7, "method_source_normalized": "privateImageReference(ImageName name, @Nullable String tag, @Nullable String digest){\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\tthis.name = name;\n\t\tthis.tag = tag;\n\t\tthis.digest = digest;\n\t\tthis.string = buildString(name.toString(), tag, digest);\n\t}", "original_code": "private ImageReference(ImageName name, @Nullable String tag, @Nullable String digest) {\n\t\tAssert.notNull(name, \"'name' must not be null\");\n\t\tthis.name = name;\n\t\tthis.tag = tag;\n\t\tthis.digest = digest;\n\t\tthis.string = buildString(name.toString(), tag, digest);\n\t}", "code_tokens": ["private", "image", "reference", "(", "image", "name", "name", ",", "@", "nullable", "string", "tag", ",", "@", "nullable", "string", "digest", ")", "{", "assert", ".", "not", "null", "(", "name", ",", "__STR__", ")", ";", "this", ".", "name", "=", "name", ";", "this", ".", "tag", "=", "tag", ";", "this", ".", "digest", "=", "digest", ";", "this", ".", "string", "=", "build", "string", "(", "name", ".", "to", "string", "(", ")", ",", "tag", ",", "digest", ")", ";", "}"], "token_count": 67, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 92, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.548291+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "45e79fb2c45b2d20084d0bfec1f4573f1de75283", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "getDomain", "signature": null, "start_line": 65, "end_line": 67, "nloc": 3, "method_source_normalized": "publicStringgetDomain(){\n\t\treturn this.name.getDomain();\n\t}", "original_code": "public String getDomain() {\n\t\treturn this.name.getDomain();\n\t}", "code_tokens": ["public", "string", "get", "domain", "(", ")", "{", "return", "this", ".", "name", ".", "get", "domain", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.548549+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d98de476798b982e3567df24d53dbc7cf1fc3e78", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 74, "end_line": 76, "nloc": 3, "method_source_normalized": "publicStringgetName(){\n\t\treturn this.name.getName();\n\t}", "original_code": "public String getName() {\n\t\treturn this.name.getName();\n\t}", "code_tokens": ["public", "string", "get", "name", "(", ")", "{", "return", "this", ".", "name", ".", "get", "name", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.548790+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6a458cbc43d45143cb12326cc3b7401fb34f2fa9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "getTag", "signature": null, "start_line": 82, "end_line": 84, "nloc": 3, "method_source_normalized": "public @NullableStringgetTag(){\n\t\treturn this.tag;\n\t}", "original_code": "public @Nullable String getTag() {\n\t\treturn this.tag;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "tag", "(", ")", "{", "return", "this", ".", "tag", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.549023+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b086c5ffc455f64eb844c3beb91969550ba3311c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "getDigest", "signature": null, "start_line": 90, "end_line": 92, "nloc": 3, "method_source_normalized": "public @NullableStringgetDigest(){\n\t\treturn this.digest;\n\t}", "original_code": "public @Nullable String getDigest() {\n\t\treturn this.digest;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "digest", "(", ")", "{", "return", "this", ".", "digest", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.549254+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "46ed0abaabb909b19b3a3ee99d71b40b3f6d947e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 94, "end_line": 108, "nloc": 15, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImageReference other = (ImageReference) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.name.equals(other.name);\n\t\tresult = result && ObjectUtils.nullSafeEquals(this.tag, other.tag);\n\t\tresult = result && ObjectUtils.nullSafeEquals(this.digest, other.digest);\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImageReference other = (ImageReference) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.name.equals(other.name);\n\t\tresult = result && ObjectUtils.nullSafeEquals(this.tag, other.tag);\n\t\tresult = result && ObjectUtils.nullSafeEquals(this.digest, other.digest);\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "image", "reference", "other", "=", "(", "image", "reference", ")", "obj", ";", "boolean", "result", "=", "true", ";", "result", "=", "result", "&&", "this", ".", "name", ".", "equals", "(", "other", ".", "name", ")", ";", "result", "=", "result", "&&", "object", "utils", ".", "null", "safe", "equals", "(", "this", ".", "tag", ",", "other", ".", "tag", ")", ";", "result", "=", "result", "&&", "object", "utils", ".", "null", "safe", "equals", "(", "this", ".", "digest", ",", "other", ".", "digest", ")", ";", "return", "result", ";", "}"], "token_count": 120, "vocab_size": 37, "cyclomatic_complexity": 7, "ast_node_count": 161, "n_identifiers": 36, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 83, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.549594+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8192ad065af18f4768d1bb7dc008d7832fe935c5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 110, "end_line": 118, "nloc": 9, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.name.hashCode();\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.tag);\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.digest);\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.name.hashCode();\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.tag);\n\t\tresult = prime * result + ObjectUtils.nullSafeHashCode(this.digest);\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "final", "int", "prime", "=", "__NUM__", ";", "int", "result", "=", "__NUM__", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "name", ".", "hash", "code", "(", ")", ";", "result", "=", "prime", "*", "result", "+", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "tag", ")", ";", "result", "=", "prime", "*", "result", "+", "object", "utils", ".", "null", "safe", "hash", "code", "(", "this", ".", "digest", ")", ";", "return", "result", ";", "}"], "token_count": 77, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.549915+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f7891ece32387292aee7ad8998a431f7ea548262", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 120, "end_line": 123, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.string;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.string;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "string", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.550167+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d32bf718313fb530f8b88c80c7902d295d1734e8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "toLegacyString", "signature": null, "start_line": 125, "end_line": 127, "nloc": 3, "method_source_normalized": "publicStringtoLegacyString(){\n\t\treturn buildString(this.name.toLegacyString(), this.tag, this.digest);\n\t}", "original_code": "public String toLegacyString() {\n\t\treturn buildString(this.name.toLegacyString(), this.tag, this.digest);\n\t}", "code_tokens": ["public", "string", "to", "legacy", "string", "(", ")", "{", "return", "build", "string", "(", "this", ".", "name", ".", "to", "legacy", "string", "(", ")", ",", "this", ".", "tag", ",", "this", ".", "digest", ")", ";", "}"], "token_count": 32, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.550415+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1d20986bdc794d3f5920f7eb08152cc81a70abaa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "buildString", "signature": null, "start_line": 129, "end_line": 138, "nloc": 10, "method_source_normalized": "privateStringbuildString(String name, @Nullable String tag, @Nullable String digest){\n\t\tStringBuilder string = new StringBuilder(name);\n\t\tif (tag != null) {\n\t\t\tstring.append(\":\").append(tag);\n\t\t}\n\t\tif (digest != null) {\n\t\t\tstring.append(\"@\").append(digest);\n\t\t}\n\t\treturn string.toString();\n\t}", "original_code": "private String buildString(String name, @Nullable String tag, @Nullable String digest) {\n\t\tStringBuilder string = new StringBuilder(name);\n\t\tif (tag != null) {\n\t\t\tstring.append(\":\").append(tag);\n\t\t}\n\t\tif (digest != null) {\n\t\t\tstring.append(\"@\").append(digest);\n\t\t}\n\t\treturn string.toString();\n\t}", "code_tokens": ["private", "string", "build", "string", "(", "string", "name", ",", "@", "nullable", "string", "tag", ",", "@", "nullable", "string", "digest", ")", "{", "string", "builder", "string", "=", "new", "string", "builder", "(", "name", ")", ";", "if", "(", "tag", "!=", "null", ")", "{", "string", ".", "append", "(", "__STR__", ")", ".", "append", "(", "tag", ")", ";", "}", "if", "(", "digest", "!=", "null", ")", "{", "string", ".", "append", "(", "__STR__", ")", ".", "append", "(", "digest", ")", ";", "}", "return", "string", ".", "to", "string", "(", ")", ";", "}"], "token_count": 79, "vocab_size": 25, "cyclomatic_complexity": 3, "ast_node_count": 111, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.550713+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c9a1c9b4076629053fe0b51aa9294ee2a5a4ed1a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "withDigest", "signature": null, "start_line": 145, "end_line": 147, "nloc": 3, "method_source_normalized": "publicImageReferencewithDigest(String digest){\n\t\treturn new ImageReference(this.name, null, digest);\n\t}", "original_code": "public ImageReference withDigest(String digest) {\n\t\treturn new ImageReference(this.name, null, digest);\n\t}", "code_tokens": ["public", "image", "reference", "with", "digest", "(", "string", "digest", ")", "{", "return", "new", "image", "reference", "(", "this", ".", "name", ",", "null", ",", "digest", ")", ";", "}"], "token_count": 25, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.550973+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5eed085319dd17038c2efd62d3e6d2ab5a47a269", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "inTaggedForm", "signature": null, "start_line": 155, "end_line": 158, "nloc": 4, "method_source_normalized": "publicImageReferenceinTaggedForm(){\n\t\tAssert.state(this.digest == null, () -> \"Image reference '\" + this + \"' cannot contain a digest\");\n\t\treturn new ImageReference(this.name, (this.tag != null) ? this.tag : LATEST, null);\n\t}", "original_code": "public ImageReference inTaggedForm() {\n\t\tAssert.state(this.digest == null, () -> \"Image reference '\" + this + \"' cannot contain a digest\");\n\t\treturn new ImageReference(this.name, (this.tag != null) ? this.tag : LATEST, null);\n\t}", "code_tokens": ["public", "image", "reference", "in", "tagged", "form", "(", ")", "{", "assert", ".", "state", "(", "this", ".", "digest", "==", "null", ",", "(", ")", "->", "__STR__", "+", "this", "+", "__STR__", ")", ";", "return", "new", "image", "reference", "(", "this", ".", "name", ",", "(", "this", ".", "tag", "!=", "null", ")", "?", "this", ".", "tag", ":", "latest", ",", "null", ")", ";", "}"], "token_count": 56, "vocab_size": 30, "cyclomatic_complexity": 2, "ast_node_count": 74, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.551242+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "177a5368abd1a88f6fd2e5e75ef9fd9dc2e8c7b1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "inTaglessForm", "signature": null, "start_line": 165, "end_line": 170, "nloc": 6, "method_source_normalized": "publicImageReferenceinTaglessForm(){\n\t\tif (this.tag == null) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new ImageReference(this.name, null, this.digest);\n\t}", "original_code": "public ImageReference inTaglessForm() {\n\t\tif (this.tag == null) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new ImageReference(this.name, null, this.digest);\n\t}", "code_tokens": ["public", "image", "reference", "in", "tagless", "form", "(", ")", "{", "if", "(", "this", ".", "tag", "==", "null", ")", "{", "return", "this", ";", "}", "return", "new", "image", "reference", "(", "this", ".", "name", ",", "null", ",", "this", ".", "digest", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 2, "ast_node_count": 50, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.551503+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "274bcc42c48b3c3060e6567f0cb57d0f3240375c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "inTaggedOrDigestForm", "signature": null, "start_line": 177, "end_line": 182, "nloc": 6, "method_source_normalized": "publicImageReferenceinTaggedOrDigestForm(){\n\t\tif (this.digest != null) {\n\t\t\treturn this;\n\t\t}\n\t\treturn inTaggedForm();\n\t}", "original_code": "public ImageReference inTaggedOrDigestForm() {\n\t\tif (this.digest != null) {\n\t\t\treturn this;\n\t\t}\n\t\treturn inTaggedForm();\n\t}", "code_tokens": ["public", "image", "reference", "in", "tagged", "or", "digest", "form", "(", ")", "{", "if", "(", "this", ".", "digest", "!=", "null", ")", "{", "return", "this", ";", "}", "return", "in", "tagged", "form", "(", ")", ";", "}"], "token_count": 32, "vocab_size": 19, "cyclomatic_complexity": 2, "ast_node_count": 38, "n_identifiers": 4, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.551757+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eabe7667eba7658ff11ad019ddbeaea32afaee1d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "forJarFile", "signature": null, "start_line": 190, "end_line": 208, "nloc": 19, "method_source_normalized": "public staticImageReferenceforJarFile(File jarFile){\n\t\tAssert.notNull(jarFile, \"'jarFile' must not be null\");\n\t\tString filename = jarFile.getName();\n\t\tAssert.isTrue(filename.toLowerCase(Locale.ROOT).endsWith(\".jar\"),\n\t\t\t\t() -> \"'jarFile' must end with '.jar' [\" + jarFile + \"]\");\n\t\tfilename = filename.substring(0, filename.length() - 4);\n\t\tint firstDot = filename.indexOf('.');\n\t\tif (firstDot == -1) {\n\t\t\treturn of(filename);\n\t\t}\n\t\tString name = filename.substring(0, firstDot);\n\t\tString version = filename.substring(firstDot + 1);\n\t\tMatcher matcher = JAR_VERSION_PATTERN.matcher(name);\n\t\tif (matcher.matches()) {\n\t\t\tname = matcher.group(1);\n\t\t\tversion = matcher.group(2).substring(1) + \".\" + version;\n\t\t}\n\t\treturn of(ImageName.of(name), version);\n\t}", "original_code": "public static ImageReference forJarFile(File jarFile) {\n\t\tAssert.notNull(jarFile, \"'jarFile' must not be null\");\n\t\tString filename = jarFile.getName();\n\t\tAssert.isTrue(filename.toLowerCase(Locale.ROOT).endsWith(\".jar\"),\n\t\t\t\t() -> \"'jarFile' must end with '.jar' [\" + jarFile + \"]\");\n\t\tfilename = filename.substring(0, filename.length() - 4);\n\t\tint firstDot = filename.indexOf('.');\n\t\tif (firstDot == -1) {\n\t\t\treturn of(filename);\n\t\t}\n\t\tString name = filename.substring(0, firstDot);\n\t\tString version = filename.substring(firstDot + 1);\n\t\tMatcher matcher = JAR_VERSION_PATTERN.matcher(name);\n\t\tif (matcher.matches()) {\n\t\t\tname = matcher.group(1);\n\t\t\tversion = matcher.group(2).substring(1) + \".\" + version;\n\t\t}\n\t\treturn of(ImageName.of(name), version);\n\t}", "code_tokens": ["public", "static", "image", "reference", "for", "jar", "file", "(", "file", "jar", "file", ")", "{", "assert", ".", "not", "null", "(", "jar", "file", ",", "__STR__", ")", ";", "string", "filename", "=", "jar", "file", ".", "get", "name", "(", ")", ";", "assert", ".", "is", "true", "(", "filename", ".", "to", "lower", "case", "(", "locale", ".", "root", ")", ".", "ends", "with", "(", "__STR__", ")", ",", "(", ")", "->", "__STR__", "+", "jar", "file", "+", "__STR__", ")", ";", "filename", "=", "filename", ".", "substring", "(", "__NUM__", ",", "filename", ".", "length", "(", ")", "-", "__NUM__", ")", ";", "int", "first", "dot", "=", "filename", ".", "index", "of", "(", "__STR__", ")", ";", "if", "(", "first", "dot", "==", "-", "__NUM__", ")", "{", "return", "of", "(", "filename", ")", ";", "}", "string", "name", "=", "filename", ".", "substring", "(", "__NUM__", ",", "first", "dot", ")", ";", "string", "version", "=", "filename", ".", "substring", "(", "first", "dot", "+", "__NUM__", ")", ";", "matcher", "matcher", "=", "jar", "version", "pattern", ".", "matcher", "(", "name", ")", ";", "if", "(", "matcher", ".", "matches", "(", ")", ")", "{", "name", "=", "matcher", ".", "group", "(", "__NUM__", ")", ";", "version", "=", "matcher", ".", "group", "(", "__NUM__", ")", ".", "substring", "(", "__NUM__", ")", "+", "__STR__", "+", "version", ";", "}", "return", "of", "(", "image", "name", ".", "of", "(", "name", ")", ",", "version", ")", ";", "}"], "token_count": 203, "vocab_size": 51, "cyclomatic_complexity": 3, "ast_node_count": 261, "n_identifiers": 60, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 119, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.552149+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0d0df97e4f1293fb15d73968be4b0427beacbede", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "random", "signature": null, "start_line": 215, "end_line": 217, "nloc": 3, "method_source_normalized": "public staticImageReferencerandom(String prefix){\n\t\treturn ImageReference.random(prefix, 10);\n\t}", "original_code": "public static ImageReference random(String prefix) {\n\t\treturn ImageReference.random(prefix, 10);\n\t}", "code_tokens": ["public", "static", "image", "reference", "random", "(", "string", "prefix", ")", "{", "return", "image", "reference", ".", "random", "(", "prefix", ",", "__NUM__", ")", ";", "}"], "token_count": 22, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.552423+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f2447097b8cfffc4a10b2a979acb77c98181db55", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "random", "signature": null, "start_line": 225, "end_line": 227, "nloc": 3, "method_source_normalized": "public staticImageReferencerandom(String prefix, int randomLength){\n\t\treturn of(RandomString.generate(prefix, randomLength));\n\t}", "original_code": "public static ImageReference random(String prefix, int randomLength) {\n\t\treturn of(RandomString.generate(prefix, randomLength));\n\t}", "code_tokens": ["public", "static", "image", "reference", "random", "(", "string", "prefix", ",", "int", "random", "length", ")", "{", "return", "of", "(", "random", "string", ".", "generate", "(", "prefix", ",", "random", "length", ")", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.552674+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8bc1df8532234f61d13403496aec2fc3da3dd4aa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 242, "end_line": 274, "nloc": 33, "method_source_normalized": "public staticImageReferenceof(String value){\n\t\tAssert.hasText(value, \"'value' must not be null\");\n\t\tString domain = ImageName.parseDomain(value);\n\t\tString path = (domain != null) ? value.substring(domain.length() + 1) : value;\n\t\tString digest = null;\n\t\tint digestSplit = path.indexOf(\"@\");\n\t\tif (digestSplit != -1) {\n\t\t\tString remainder = path.substring(digestSplit + 1);\n\t\t\tMatcher matcher = Regex.DIGEST.matcher(remainder);\n\t\t\tif (matcher.find()) {\n\t\t\t\tdigest = remainder.substring(0, matcher.end());\n\t\t\t\tremainder = remainder.substring(matcher.end());\n\t\t\t\tpath = path.substring(0, digestSplit) + remainder;\n\t\t\t}\n\t\t}\n\t\tString tag = null;\n\t\tint tagSplit = path.lastIndexOf(\":\");\n\t\tif (tagSplit != -1) {\n\t\t\tString remainder = path.substring(tagSplit + 1);\n\t\t\tMatcher matcher = Regex.TAG.matcher(remainder);\n\t\t\tif (matcher.find()) {\n\t\t\t\ttag = remainder.substring(0, matcher.end());\n\t\t\t\tremainder = remainder.substring(matcher.end());\n\t\t\t\tpath = path.substring(0, tagSplit) + remainder;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(isLowerCase(path) && matchesPathRegex(path),\n\t\t\t\t() -> \"'value' [\" + value + \"] must be an image reference in the form \"\n\t\t\t\t\t\t+ \"'[domainHost:port/][path/]name[:tag][@digest]' \"\n\t\t\t\t\t\t+ \"(with 'path' and 'name' containing only [a-z0-9][.][_][-])\");\n\t\tImageName name = new ImageName(domain, path);\n\t\treturn new ImageReference(name, tag, digest);\n\t}", "original_code": "public static ImageReference of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be null\");\n\t\tString domain = ImageName.parseDomain(value);\n\t\tString path = (domain != null) ? value.substring(domain.length() + 1) : value;\n\t\tString digest = null;\n\t\tint digestSplit = path.indexOf(\"@\");\n\t\tif (digestSplit != -1) {\n\t\t\tString remainder = path.substring(digestSplit + 1);\n\t\t\tMatcher matcher = Regex.DIGEST.matcher(remainder);\n\t\t\tif (matcher.find()) {\n\t\t\t\tdigest = remainder.substring(0, matcher.end());\n\t\t\t\tremainder = remainder.substring(matcher.end());\n\t\t\t\tpath = path.substring(0, digestSplit) + remainder;\n\t\t\t}\n\t\t}\n\t\tString tag = null;\n\t\tint tagSplit = path.lastIndexOf(\":\");\n\t\tif (tagSplit != -1) {\n\t\t\tString remainder = path.substring(tagSplit + 1);\n\t\t\tMatcher matcher = Regex.TAG.matcher(remainder);\n\t\t\tif (matcher.find()) {\n\t\t\t\ttag = remainder.substring(0, matcher.end());\n\t\t\t\tremainder = remainder.substring(matcher.end());\n\t\t\t\tpath = path.substring(0, tagSplit) + remainder;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(isLowerCase(path) && matchesPathRegex(path),\n\t\t\t\t() -> \"'value' [\" + value + \"] must be an image reference in the form \"\n\t\t\t\t\t\t+ \"'[domainHost:port/][path/]name[:tag][@digest]' \"\n\t\t\t\t\t\t+ \"(with 'path' and 'name' containing only [a-z0-9][.][_][-])\");\n\t\tImageName name = new ImageName(domain, path);\n\t\treturn new ImageReference(name, tag, digest);\n\t}", "code_tokens": ["public", "static", "image", "reference", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "string", "domain", "=", "image", "name", ".", "parse", "domain", "(", "value", ")", ";", "string", "path", "=", "(", "domain", "!=", "null", ")", "?", "value", ".", "substring", "(", "domain", ".", "length", "(", ")", "+", "__NUM__", ")", ":", "value", ";", "string", "digest", "=", "null", ";", "int", "digest", "split", "=", "path", ".", "index", "of", "(", "__STR__", ")", ";", "if", "(", "digest", "split", "!=", "-", "__NUM__", ")", "{", "string", "remainder", "=", "path", ".", "substring", "(", "digest", "split", "+", "__NUM__", ")", ";", "matcher", "matcher", "=", "regex", ".", "digest", ".", "matcher", "(", "remainder", ")", ";", "if", "(", "matcher", ".", "find", "(", ")", ")", "{", "digest", "=", "remainder", ".", "substring", "(", "__NUM__", ",", "matcher", ".", "end", "(", ")", ")", ";", "remainder", "=", "remainder", ".", "substring", "(", "matcher", ".", "end", "(", ")", ")", ";", "path", "=", "path", ".", "substring", "(", "__NUM__", ",", "digest", "split", ")", "+", "remainder", ";", "}", "}", "string", "tag", "=", "null", ";", "int", "tag", "split", "=", "path", ".", "last", "index", "of", "(", "__STR__", ")", ";", "if", "(", "tag", "split", "!=", "-", "__NUM__", ")", "{", "string", "remainder", "=", "path", ".", "substring", "(", "tag", "split", "+", "__NUM__", ")", ";", "matcher", "matcher", "=", "regex", ".", "tag", ".", "matcher", "(", "remainder", ")", ";", "if", "(", "matcher", ".", "find", "(", ")", ")", "{", "tag", "=", "remainder", ".", "substring", "(", "__NUM__", ",", "matcher", ".", "end", "(", ")", ")", ";", "remainder", "=", "remainder", ".", "substring", "(", "matcher", ".", "end", "(", ")", ")", ";", "path", "=", "path", ".", "substring", "(", "__NUM__", ",", "tag", "split", ")", "+", "remainder", ";", "}", "}", "assert", ".", "is", "true", "(", "is", "lower", "case", "(", "path", ")", "&&", "matches", "path", "regex", "(", "path", ")", ",", "(", ")", "->", "__STR__", "+", "value", "+", "__STR__", "+", "__STR__", "+", "__STR__", ")", ";", "image", "name", "name", "=", "new", "image", "name", "(", "domain", ",", "path", ")", ";", "return", "new", "image", "reference", "(", "name", ",", "tag", ",", "digest", ")", ";", "}"], "token_count": 324, "vocab_size": 53, "cyclomatic_complexity": 7, "ast_node_count": 432, "n_identifiers": 104, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 245, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.553169+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2efe912c5f9b5a257386d125f3a4d3556afea10d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "isLowerCase", "signature": null, "start_line": 276, "end_line": 278, "nloc": 3, "method_source_normalized": "private staticbooleanisLowerCase(String path){\n\t\treturn path.toLowerCase(Locale.ENGLISH).equals(path);\n\t}", "original_code": "private static boolean isLowerCase(String path) {\n\t\treturn path.toLowerCase(Locale.ENGLISH).equals(path);\n\t}", "code_tokens": ["private", "static", "boolean", "is", "lower", "case", "(", "string", "path", ")", "{", "return", "path", ".", "to", "lower", "case", "(", "locale", ".", "english", ")", ".", "equals", "(", "path", ")", ";", "}"], "token_count": 29, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 9, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.553472+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a8a5df09b253f947df5a0ac6d7840dbf456c333", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "matchesPathRegex", "signature": null, "start_line": 280, "end_line": 282, "nloc": 3, "method_source_normalized": "private staticbooleanmatchesPathRegex(String path){\n\t\treturn Regex.PATH.matcher(path).matches();\n\t}", "original_code": "private static boolean matchesPathRegex(String path) {\n\t\treturn Regex.PATH.matcher(path).matches();\n\t}", "code_tokens": ["private", "static", "boolean", "matches", "path", "regex", "(", "string", "path", ")", "{", "return", "regex", ".", "path", ".", "matcher", "(", "path", ")", ".", "matches", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.553723+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "48cf9c98d983d9e242645825640bbe114aea9148", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 289, "end_line": 291, "nloc": 3, "method_source_normalized": "public staticImageReferenceof(ImageName name){\n\t\treturn new ImageReference(name, null, null);\n\t}", "original_code": "public static ImageReference of(ImageName name) {\n\t\treturn new ImageReference(name, null, null);\n\t}", "code_tokens": ["public", "static", "image", "reference", "of", "(", "image", "name", "name", ")", "{", "return", "new", "image", "reference", "(", "name", ",", "null", ",", "null", ")", ";", "}"], "token_count": 24, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.554057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7c97d367ba7d54714c6bed0fb74fe659c6331c70", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 299, "end_line": 301, "nloc": 3, "method_source_normalized": "public staticImageReferenceof(ImageName name, String tag){\n\t\treturn new ImageReference(name, tag, null);\n\t}", "original_code": "public static ImageReference of(ImageName name, String tag) {\n\t\treturn new ImageReference(name, tag, null);\n\t}", "code_tokens": ["public", "static", "image", "reference", "of", "(", "image", "name", "name", ",", "string", "tag", ")", "{", "return", "new", "image", "reference", "(", "name", ",", "tag", ",", "null", ")", ";", "}"], "token_count": 27, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.554309+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "277f3f1350b5517882b89bddfbb480b471fcefe7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 311, "end_line": 313, "nloc": 3, "method_source_normalized": "public staticImageReferenceof(ImageName name, String tag, String digest){\n\t\treturn new ImageReference(name, tag, digest);\n\t}", "original_code": "public static ImageReference of(ImageName name, String tag, String digest) {\n\t\treturn new ImageReference(name, tag, digest);\n\t}", "code_tokens": ["public", "static", "image", "reference", "of", "(", "image", "name", "name", ",", "string", "tag", ",", "string", "digest", ")", "{", "return", "new", "image", "reference", "(", "name", ",", "tag", ",", "digest", ")", ";", "}"], "token_count": 30, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 12, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.554561+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "01962d1c7883def8a05f91fc0b110b3480e9484f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "ApiVersion", "signature": null, "start_line": 41, "end_line": 44, "nloc": 4, "method_source_normalized": "privateApiVersion(int major, int minor){\n\t\tthis.major = major;\n\t\tthis.minor = minor;\n\t}", "original_code": "private ApiVersion(int major, int minor) {\n\t\tthis.major = major;\n\t\tthis.minor = minor;\n\t}", "code_tokens": ["private", "api", "version", "(", "int", "major", ",", "int", "minor", ")", "{", "this", ".", "major", "=", "major", ";", "this", ".", "minor", "=", "minor", ";", "}"], "token_count": 24, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.555903+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20f781ca21c1c423522a72286b0bcb18eb23f750", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "getMajor", "signature": null, "start_line": 50, "end_line": 52, "nloc": 3, "method_source_normalized": "intgetMajor(){\n\t\treturn this.major;\n\t}", "original_code": "int getMajor() {\n\t\treturn this.major;\n\t}", "code_tokens": ["int", "get", "major", "(", ")", "{", "return", "this", ".", "major", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.556156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0d264fff9b80f1a802252c78fe3e5b170d415e8e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "getMinor", "signature": null, "start_line": 58, "end_line": 60, "nloc": 3, "method_source_normalized": "intgetMinor(){\n\t\treturn this.minor;\n\t}", "original_code": "int getMinor() {\n\t\treturn this.minor;\n\t}", "code_tokens": ["int", "get", "minor", "(", ")", "{", "return", "this", ".", "minor", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 17, "n_identifiers": 2, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.556396+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b52d673a09028f545c999fbeb79b36ba495f5127", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "supports", "signature": null, "start_line": 69, "end_line": 77, "nloc": 9, "method_source_normalized": "publicbooleansupports(ApiVersion other){\n\t\tif (equals(other)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.major == 0 || this.major != other.major) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.minor >= other.minor;\n\t}", "original_code": "public boolean supports(ApiVersion other) {\n\t\tif (equals(other)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.major == 0 || this.major != other.major) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.minor >= other.minor;\n\t}", "code_tokens": ["public", "boolean", "supports", "(", "api", "version", "other", ")", "{", "if", "(", "equals", "(", "other", ")", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "major", "==", "__NUM__", "||", "this", ".", "major", "!=", "other", ".", "major", ")", "{", "return", "false", ";", "}", "return", "this", ".", "minor", ">=", "other", ".", "minor", ";", "}"], "token_count": 52, "vocab_size": 25, "cyclomatic_complexity": 4, "ast_node_count": 76, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.556666+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b269b5834c3194f3048a08b7c126ee714591d7c6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "supportsAny", "signature": null, "start_line": 85, "end_line": 92, "nloc": 8, "method_source_normalized": "publicbooleansupportsAny(ApiVersion... others){\n\t\tfor (ApiVersion other : others) {\n\t\t\tif (supports(other)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "original_code": "public boolean supportsAny(ApiVersion... others) {\n\t\tfor (ApiVersion other : others) {\n\t\t\tif (supports(other)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "code_tokens": ["public", "boolean", "supports", "any", "(", "api", "version", "...", "others", ")", "{", "for", "(", "api", "version", "other", ":", "others", ")", "{", "if", "(", "supports", "(", "other", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "token_count": 37, "vocab_size": 20, "cyclomatic_complexity": 3, "ast_node_count": 49, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.556930+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "53f605e91911b9b4bb39adc632f241bf0aecca24", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 94, "end_line": 104, "nloc": 11, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tApiVersion other = (ApiVersion) obj;\n\t\treturn (this.major == other.major) && (this.minor == other.minor);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tApiVersion other = (ApiVersion) obj;\n\t\treturn (this.major == other.major) && (this.minor == other.minor);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "api", "version", "other", "=", "(", "api", "version", ")", "obj", ";", "return", "(", "this", ".", "major", "==", "other", ".", "major", ")", "&&", "(", "this", ".", "minor", "==", "other", ".", "minor", ")", ";", "}"], "token_count": 78, "vocab_size": 32, "cyclomatic_complexity": 5, "ast_node_count": 111, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.557236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e646291b9d3983794cd8123826b925ecb291d6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 106, "end_line": 109, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn this.major * 31 + this.minor;\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn this.major * 31 + this.minor;\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "this", ".", "major", "*", "__NUM__", "+", "this", ".", "minor", ";", "}"], "token_count": 21, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 4, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.557497+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d707d5d18f86dfb390514a7df69e1c43ff7b3ef5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 111, "end_line": 114, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.major + \".\" + this.minor;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.major + \".\" + this.minor;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "major", "+", "__STR__", "+", "this", ".", "minor", ";", "}"], "token_count": 21, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.557747+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1dba840db5267c88201ce4295dca438962f474c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "parse", "signature": null, "start_line": 122, "end_line": 135, "nloc": 14, "method_source_normalized": "public staticApiVersionparse(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tMatcher matcher = PATTERN.matcher(value);\n\t\tAssert.isTrue(matcher.matches(),\n\t\t\t\t() -> \"'value' [%s] must contain a well formed version number\".formatted(value));\n\t\ttry {\n\t\t\tint major = Integer.parseInt(matcher.group(1));\n\t\t\tint minor = Integer.parseInt(matcher.group(2));\n\t\t\treturn new ApiVersion(major, minor);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\tthrow new IllegalArgumentException(\"'value' must contain a well formed version number [\" + value + \"]\", ex);\n\t\t}\n\t}", "original_code": "public static ApiVersion parse(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tMatcher matcher = PATTERN.matcher(value);\n\t\tAssert.isTrue(matcher.matches(),\n\t\t\t\t() -> \"'value' [%s] must contain a well formed version number\".formatted(value));\n\t\ttry {\n\t\t\tint major = Integer.parseInt(matcher.group(1));\n\t\t\tint minor = Integer.parseInt(matcher.group(2));\n\t\t\treturn new ApiVersion(major, minor);\n\t\t}\n\t\tcatch (NumberFormatException ex) {\n\t\t\tthrow new IllegalArgumentException(\"'value' must contain a well formed version number [\" + value + \"]\", ex);\n\t\t}\n\t}", "code_tokens": ["public", "static", "api", "version", "parse", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "matcher", "matcher", "=", "pattern", ".", "matcher", "(", "value", ")", ";", "assert", ".", "is", "true", "(", "matcher", ".", "matches", "(", ")", ",", "(", ")", "->", "__STR__", ".", "formatted", "(", "value", ")", ")", ";", "try", "{", "int", "major", "=", "integer", ".", "parse", "int", "(", "matcher", ".", "group", "(", "__NUM__", ")", ")", ";", "int", "minor", "=", "integer", ".", "parse", "int", "(", "matcher", ".", "group", "(", "__NUM__", ")", ")", ";", "return", "new", "api", "version", "(", "major", ",", "minor", ")", ";", "}", "catch", "(", "number", "format", "exception", "ex", ")", "{", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "value", "+", "__STR__", ",", "ex", ")", ";", "}", "}"], "token_count": 122, "vocab_size": 44, "cyclomatic_complexity": 2, "ast_node_count": 161, "n_identifiers": 36, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 95, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.558082+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ecc339e468bdee049b43155b764cffa82bd6c8f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersion.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 137, "end_line": 139, "nloc": 3, "method_source_normalized": "public staticApiVersionof(int major, int minor){\n\t\treturn new ApiVersion(major, minor);\n\t}", "original_code": "public static ApiVersion of(int major, int minor) {\n\t\treturn new ApiVersion(major, minor);\n\t}", "code_tokens": ["public", "static", "api", "version", "of", "(", "int", "major", ",", "int", "minor", ")", "{", "return", "new", "api", "version", "(", "major", ",", "minor", ")", ";", "}"], "token_count": 24, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.558351+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c2779185245b83b2b61fd98907a7d3ae2f9a98bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "Manifest", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "protectedManifest(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.mediaType = valueAt(\"/mediaType\", String.class);\n\t\tthis.layers = childrenAt(\"/layers\", BlobReference::new);\n\t}", "original_code": "protected Manifest(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.mediaType = valueAt(\"/mediaType\", String.class);\n\t\tthis.layers = childrenAt(\"/layers\", BlobReference::new);\n\t}", "code_tokens": ["protected", "manifest", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "schema", "version", "=", "extract", "schema", "version", "(", ")", ";", "this", ".", "media", "type", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "layers", "=", "children", "at", "(", "__STR__", ",", "blob", "reference", "::", "new", ")", ";", "}"], "token_count": 62, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.559265+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a426d198f8b40f108cfdb9b6cfe3c8de1e7a5f78", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "extractSchemaVersion", "signature": null, "start_line": 54, "end_line": 58, "nloc": 5, "method_source_normalized": "privateIntegerextractSchemaVersion(){\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Integer extractSchemaVersion() {\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "integer", "extract", "schema", "version", "(", ")", "{", "integer", "result", "=", "value", "at", "(", "__STR__", ",", "integer", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.559537+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4637609faa8c198c9fcaf4df53983b556d1a19a2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "getSchemaVersion", "signature": null, "start_line": 60, "end_line": 62, "nloc": 3, "method_source_normalized": "publicIntegergetSchemaVersion(){\n\t\treturn this.schemaVersion;\n\t}", "original_code": "public Integer getSchemaVersion() {\n\t\treturn this.schemaVersion;\n\t}", "code_tokens": ["public", "integer", "get", "schema", "version", "(", ")", "{", "return", "this", ".", "schema", "version", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.559781+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5f3babb35fcc72821d27f917f54b6a4dd858737d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "getMediaType", "signature": null, "start_line": 64, "end_line": 66, "nloc": 3, "method_source_normalized": "public @NullableStringgetMediaType(){\n\t\treturn this.mediaType;\n\t}", "original_code": "public @Nullable String getMediaType() {\n\t\treturn this.mediaType;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "media", "type", "(", ")", "{", "return", "this", ".", "media", "type", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.560018+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "df7c1d1c24b3ec1a7c0cf49d8f9fdcca28a717ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "getLayers", "signature": null, "start_line": 68, "end_line": 70, "nloc": 3, "method_source_normalized": "publicList<BlobReference>getLayers(){\n\t\treturn this.layers;\n\t}", "original_code": "public List<BlobReference> getLayers() {\n\t\treturn this.layers;\n\t}", "code_tokens": ["public", "list", "<", "blob", "reference", ">", "get", "layers", "(", ")", "{", "return", "this", ".", "layers", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.560255+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4aa97c164cb463094d0dda6b21699f8006151c5c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Manifest.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 78, "end_line": 80, "nloc": 3, "method_source_normalized": "public staticManifestof(InputStream content)throws IOException{\n\t\treturn of(content, Manifest::new);\n\t}", "original_code": "public static Manifest of(InputStream content) throws IOException {\n\t\treturn of(content, Manifest::new);\n\t}", "code_tokens": ["public", "static", "manifest", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "manifest", "::", "new", ")", ";", "}"], "token_count": 24, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.560503+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cd00dc9d9a60bdff9f2d92273be3f405b859da2e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "LayerId", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "privateLayerId(String value, String algorithm, String hash){\n\t\tthis.value = value;\n\t\tthis.algorithm = algorithm;\n\t\tthis.hash = hash;\n\t}", "original_code": "private LayerId(String value, String algorithm, String hash) {\n\t\tthis.value = value;\n\t\tthis.algorithm = algorithm;\n\t\tthis.hash = hash;\n\t}", "code_tokens": ["private", "layer", "id", "(", "string", "value", ",", "string", "algorithm", ",", "string", "hash", ")", "{", "this", ".", "value", "=", "value", ";", "this", ".", "algorithm", "=", "algorithm", ";", "this", ".", "hash", "=", "hash", ";", "}"], "token_count": 33, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.561576+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "53b03251fbd29450f95708c836b6fd65ce4ea267", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "getAlgorithm", "signature": null, "start_line": 49, "end_line": 51, "nloc": 3, "method_source_normalized": "publicStringgetAlgorithm(){\n\t\treturn this.algorithm;\n\t}", "original_code": "public String getAlgorithm() {\n\t\treturn this.algorithm;\n\t}", "code_tokens": ["public", "string", "get", "algorithm", "(", ")", "{", "return", "this", ".", "algorithm", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.561821+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dcd6ea6d6a388d120f6e0505574db67b95a49a69", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "getHash", "signature": null, "start_line": 57, "end_line": 59, "nloc": 3, "method_source_normalized": "publicStringgetHash(){\n\t\treturn this.hash;\n\t}", "original_code": "public String getHash() {\n\t\treturn this.hash;\n\t}", "code_tokens": ["public", "string", "get", "hash", "(", ")", "{", "return", "this", ".", "hash", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.562062+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5b21fbdccfe754f165e15bc64912bbc7e508130a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 61, "end_line": 70, "nloc": 10, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (obj == this) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((LayerId) obj).value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (obj == this) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((LayerId) obj).value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "obj", "==", "this", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "return", "this", ".", "value", ".", "equals", "(", "(", "(", "layer", "id", ")", "obj", ")", ".", "value", ")", ";", "}"], "token_count": 65, "vocab_size": 28, "cyclomatic_complexity": 4, "ast_node_count": 93, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.562361+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "29ebab5f1c16ed536ff428d57a27f0f2c4ed3725", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 72, "end_line": 75, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn this.value.hashCode();\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn this.value.hashCode();\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "this", ".", "value", ".", "hash", "code", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.562617+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e4e59aa9610ef0f8068d3a571067c24e828a6a6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 77, "end_line": 80, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.562854+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "921a7503af2dbf3a34bcea9d21630b08ae145a88", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 87, "end_line": 92, "nloc": 6, "method_source_normalized": "public staticLayerIdof(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tint i = value.indexOf(':');\n\t\tAssert.isTrue(i >= 0, () -> \"'value' [%s] must contain a valid layer ID\".formatted(value));\n\t\treturn new LayerId(value, value.substring(0, i), value.substring(i + 1));\n\t}", "original_code": "public static LayerId of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tint i = value.indexOf(':');\n\t\tAssert.isTrue(i >= 0, () -> \"'value' [%s] must contain a valid layer ID\".formatted(value));\n\t\treturn new LayerId(value, value.substring(0, i), value.substring(i + 1));\n\t}", "code_tokens": ["public", "static", "layer", "id", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "int", "i", "=", "value", ".", "index", "of", "(", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "i", ">=", "__NUM__", ",", "(", ")", "->", "__STR__", ".", "formatted", "(", "value", ")", ")", ";", "return", "new", "layer", "id", "(", "value", ",", "value", ".", "substring", "(", "__NUM__", ",", "i", ")", ",", "value", ".", "substring", "(", "i", "+", "__NUM__", ")", ")", ";", "}"], "token_count": 78, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 23, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.563138+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8b87baf0b1171eee43631d8a374def6b4d951822", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/LayerId.java", "file_blob_sha": null, "method_name": "ofSha256Digest", "signature": null, "start_line": 99, "end_line": 105, "nloc": 7, "method_source_normalized": "public staticLayerIdofSha256Digest(byte[] digest){\n\t\tAssert.notNull(digest, \"'digest' must not be null\");\n\t\tAssert.isTrue(digest.length == 32, \"'digest' must be exactly 32 bytes\");\n\t\tString algorithm = \"sha256\";\n\t\tString hash = String.format(\"%064x\", new BigInteger(1, digest));\n\t\treturn new LayerId(algorithm + \":\" + hash, algorithm, hash);\n\t}", "original_code": "public static LayerId ofSha256Digest(byte[] digest) {\n\t\tAssert.notNull(digest, \"'digest' must not be null\");\n\t\tAssert.isTrue(digest.length == 32, \"'digest' must be exactly 32 bytes\");\n\t\tString algorithm = \"sha256\";\n\t\tString hash = String.format(\"%064x\", new BigInteger(1, digest));\n\t\treturn new LayerId(algorithm + \":\" + hash, algorithm, hash);\n\t}", "code_tokens": ["public", "static", "layer", "id", "of", "sha", "256", "digest", "(", "byte", "[", "]", "digest", ")", "{", "assert", ".", "not", "null", "(", "digest", ",", "__STR__", ")", ";", "assert", ".", "is", "true", "(", "digest", ".", "length", "==", "__NUM__", ",", "__STR__", ")", ";", "string", "algorithm", "=", "__STR__", ";", "string", "hash", "=", "string", ".", "format", "(", "__STR__", ",", "new", "big", "integer", "(", "__NUM__", ",", "digest", ")", ")", ";", "return", "new", "layer", "id", "(", "algorithm", "+", "__STR__", "+", "hash", ",", "algorithm", ",", "hash", ")", ";", "}"], "token_count": 80, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 101, "n_identifiers": 23, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.563444+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "27ce16605f0a16c7a362876707d377a809fb646e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "ImageName", "signature": null, "start_line": 46, "end_line": 51, "nloc": 6, "method_source_normalized": "ImageName(@Nullable String domain, String path){\n\t\tAssert.hasText(path, \"'path' must not be empty\");\n\t\tthis.domain = getDomainOrDefault(domain);\n\t\tthis.name = getNameWithDefaultPath(this.domain, path);\n\t\tthis.string = this.domain + \"/\" + this.name;\n\t}", "original_code": "ImageName(@Nullable String domain, String path) {\n\t\tAssert.hasText(path, \"'path' must not be empty\");\n\t\tthis.domain = getDomainOrDefault(domain);\n\t\tthis.name = getNameWithDefaultPath(this.domain, path);\n\t\tthis.string = this.domain + \"/\" + this.name;\n\t}", "code_tokens": ["image", "name", "(", "@", "nullable", "string", "domain", ",", "string", "path", ")", "{", "assert", ".", "has", "text", "(", "path", ",", "__STR__", ")", ";", "this", ".", "domain", "=", "get", "domain", "or", "default", "(", "domain", ")", ";", "this", ".", "name", "=", "get", "name", "with", "default", "path", "(", "this", ".", "domain", ",", "path", ")", ";", "this", ".", "string", "=", "this", ".", "domain", "+", "__STR__", "+", "this", ".", "name", ";", "}"], "token_count": 66, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 19, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.564995+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d561dda52236951e924a8e7a82ea010ab0fbf58e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "getDomain", "signature": null, "start_line": 57, "end_line": 59, "nloc": 3, "method_source_normalized": "publicStringgetDomain(){\n\t\treturn this.domain;\n\t}", "original_code": "public String getDomain() {\n\t\treturn this.domain;\n\t}", "code_tokens": ["public", "string", "get", "domain", "(", ")", "{", "return", "this", ".", "domain", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.565250+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8b83385fee911dc5cab6f25f93c275ec1b532a02", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 65, "end_line": 67, "nloc": 3, "method_source_normalized": "publicStringgetName(){\n\t\treturn this.name;\n\t}", "original_code": "public String getName() {\n\t\treturn this.name;\n\t}", "code_tokens": ["public", "string", "get", "name", "(", ")", "{", "return", "this", ".", "name", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.565491+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d6c5993fa88cb7da254ab56b7c11794d1453f656", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 69, "end_line": 82, "nloc": 14, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImageName other = (ImageName) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.domain.equals(other.domain);\n\t\tresult = result && this.name.equals(other.name);\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImageName other = (ImageName) obj;\n\t\tboolean result = true;\n\t\tresult = result && this.domain.equals(other.domain);\n\t\tresult = result && this.name.equals(other.name);\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "image", "name", "other", "=", "(", "image", "name", ")", "obj", ";", "boolean", "result", "=", "true", ";", "result", "=", "result", "&&", "this", ".", "domain", ".", "equals", "(", "other", ".", "domain", ")", ";", "result", "=", "result", "&&", "this", ".", "name", ".", "equals", "(", "other", ".", "name", ")", ";", "return", "result", ";", "}"], "token_count": 95, "vocab_size": 32, "cyclomatic_complexity": 6, "ast_node_count": 135, "n_identifiers": 28, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 74, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.565808+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ba4263cda22ad44dcebe0022e5b25c443f549707", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 84, "end_line": 91, "nloc": 8, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.domain.hashCode();\n\t\tresult = prime * result + this.name.hashCode();\n\t\treturn result;\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + this.domain.hashCode();\n\t\tresult = prime * result + this.name.hashCode();\n\t\treturn result;\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "final", "int", "prime", "=", "__NUM__", ";", "int", "result", "=", "__NUM__", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "domain", ".", "hash", "code", "(", ")", ";", "result", "=", "prime", "*", "result", "+", "this", ".", "name", ".", "hash", "code", "(", ")", ";", "return", "result", ";", "}"], "token_count": 54, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.566100+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2b00ecb359d679fc1f5ca32337c16dd6b35cae6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 93, "end_line": 96, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.string;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.string;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "string", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.566346+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0435dc369eaada128758cc12fffe2b91f602313b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "toLegacyString", "signature": null, "start_line": 98, "end_line": 103, "nloc": 6, "method_source_normalized": "publicStringtoLegacyString(){\n\t\tif (DEFAULT_DOMAIN.equals(this.domain)) {\n\t\t\treturn LEGACY_DOMAIN + \"/\" + this.name;\n\t\t}\n\t\treturn this.string;\n\t}", "original_code": "public String toLegacyString() {\n\t\tif (DEFAULT_DOMAIN.equals(this.domain)) {\n\t\t\treturn LEGACY_DOMAIN + \"/\" + this.name;\n\t\t}\n\t\treturn this.string;\n\t}", "code_tokens": ["public", "string", "to", "legacy", "string", "(", ")", "{", "if", "(", "default", "domain", ".", "equals", "(", "this", ".", "domain", ")", ")", "{", "return", "legacy", "domain", "+", "__STR__", "+", "this", ".", "name", ";", "}", "return", "this", ".", "string", ";", "}"], "token_count": 38, "vocab_size": 19, "cyclomatic_complexity": 2, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.566601+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eca176e39062a119c60cd6791ebd06ffb231a44f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "getDomainOrDefault", "signature": null, "start_line": 105, "end_line": 110, "nloc": 6, "method_source_normalized": "privateStringgetDomainOrDefault(@Nullable String domain){\n\t\tif (domain == null || LEGACY_DOMAIN.equals(domain)) {\n\t\t\treturn DEFAULT_DOMAIN;\n\t\t}\n\t\treturn domain;\n\t}", "original_code": "private String getDomainOrDefault(@Nullable String domain) {\n\t\tif (domain == null || LEGACY_DOMAIN.equals(domain)) {\n\t\t\treturn DEFAULT_DOMAIN;\n\t\t}\n\t\treturn domain;\n\t}", "code_tokens": ["private", "string", "get", "domain", "or", "default", "(", "@", "nullable", "string", "domain", ")", "{", "if", "(", "domain", "==", "null", "||", "legacy", "domain", ".", "equals", "(", "domain", ")", ")", "{", "return", "default", "domain", ";", "}", "return", "domain", ";", "}"], "token_count": 37, "vocab_size": 21, "cyclomatic_complexity": 3, "ast_node_count": 48, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.566862+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c2eddb02fa6c302d87c563761e59c5903b5038d9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "getNameWithDefaultPath", "signature": null, "start_line": 112, "end_line": 117, "nloc": 6, "method_source_normalized": "privateStringgetNameWithDefaultPath(String domain, String name){\n\t\tif (DEFAULT_DOMAIN.equals(domain) && !name.contains(\"/\")) {\n\t\t\treturn OFFICIAL_REPOSITORY_NAME + \"/\" + name;\n\t\t}\n\t\treturn name;\n\t}", "original_code": "private String getNameWithDefaultPath(String domain, String name) {\n\t\tif (DEFAULT_DOMAIN.equals(domain) && !name.contains(\"/\")) {\n\t\t\treturn OFFICIAL_REPOSITORY_NAME + \"/\" + name;\n\t\t}\n\t\treturn name;\n\t}", "code_tokens": ["private", "string", "get", "name", "with", "default", "path", "(", "string", "domain", ",", "string", "name", ")", "{", "if", "(", "default", "domain", ".", "equals", "(", "domain", ")", "&&", "!", "name", ".", "contains", "(", "__STR__", ")", ")", "{", "return", "official", "repository", "name", "+", "__STR__", "+", "name", ";", "}", "return", "name", ";", "}"], "token_count": 48, "vocab_size": 25, "cyclomatic_complexity": 3, "ast_node_count": 60, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.567129+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1af91680a1126eb6978895eb844b77115e495f93", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 130, "end_line": 138, "nloc": 9, "method_source_normalized": "public staticImageNameof(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString domain = parseDomain(value);\n\t\tString path = (domain != null) ? value.substring(domain.length() + 1) : value;\n\t\tAssert.isTrue(Regex.PATH.matcher(path).matches(),\n\t\t\t\t() -> \"'value' [\" + value + \"] must be a parsable name in the form '[domainHost:port/][path/]name' (\"\n\t\t\t\t\t\t+ \"with 'path' and 'name' containing only [a-z0-9][.][_][-])\");\n\t\treturn new ImageName(domain, path);\n\t}", "original_code": "public static ImageName of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString domain = parseDomain(value);\n\t\tString path = (domain != null) ? value.substring(domain.length() + 1) : value;\n\t\tAssert.isTrue(Regex.PATH.matcher(path).matches(),\n\t\t\t\t() -> \"'value' [\" + value + \"] must be a parsable name in the form '[domainHost:port/][path/]name' (\"\n\t\t\t\t\t\t+ \"with 'path' and 'name' containing only [a-z0-9][.][_][-])\");\n\t\treturn new ImageName(domain, path);\n\t}", "code_tokens": ["public", "static", "image", "name", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "string", "domain", "=", "parse", "domain", "(", "value", ")", ";", "string", "path", "=", "(", "domain", "!=", "null", ")", "?", "value", ".", "substring", "(", "domain", ".", "length", "(", ")", "+", "__NUM__", ")", ":", "value", ";", "assert", ".", "is", "true", "(", "regex", ".", "path", ".", "matcher", "(", "path", ")", ".", "matches", "(", ")", ",", "(", ")", "->", "__STR__", "+", "value", "+", "__STR__", "+", "__STR__", ")", ";", "return", "new", "image", "name", "(", "domain", ",", "path", ")", ";", "}"], "token_count": 94, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 127, "n_identifiers": 30, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 80, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.567438+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "06c14a6b572bd227774ff39fdf8bd1fc9dde7289", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageName.java", "file_blob_sha": null, "method_name": "parseDomain", "signature": null, "start_line": 140, "end_line": 147, "nloc": 8, "method_source_normalized": "static @NullableStringparseDomain(String value){\n\t\tint firstSlash = value.indexOf('/');\n\t\tString candidate = (firstSlash != -1) ? value.substring(0, firstSlash) : null;\n\t\tif (candidate != null && Regex.DOMAIN.matcher(candidate).matches()) {\n\t\t\treturn candidate;\n\t\t}\n\t\treturn null;\n\t}", "original_code": "static @Nullable String parseDomain(String value) {\n\t\tint firstSlash = value.indexOf('/');\n\t\tString candidate = (firstSlash != -1) ? value.substring(0, firstSlash) : null;\n\t\tif (candidate != null && Regex.DOMAIN.matcher(candidate).matches()) {\n\t\t\treturn candidate;\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["static", "@", "nullable", "string", "parse", "domain", "(", "string", "value", ")", "{", "int", "first", "slash", "=", "value", ".", "index", "of", "(", "__STR__", ")", ";", "string", "candidate", "=", "(", "first", "slash", "!=", "-", "__NUM__", ")", "?", "value", ".", "substring", "(", "__NUM__", ",", "first", "slash", ")", ":", "null", ";", "if", "(", "candidate", "!=", "null", "&&", "regex", ".", "domain", ".", "matcher", "(", "candidate", ")", ".", "matches", "(", ")", ")", "{", "return", "candidate", ";", "}", "return", "null", ";", "}"], "token_count": 74, "vocab_size": 35, "cyclomatic_complexity": 4, "ast_node_count": 100, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.567738+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b655e34a68d540d5801db8dfbd0c9430a2b8b726", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndex.java", "file_blob_sha": null, "method_name": "ImageArchiveIndex", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "protectedImageArchiveIndex(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.manifests = childrenAt(\"/manifests\", BlobReference::new);\n\t}", "original_code": "protected ImageArchiveIndex(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.manifests = childrenAt(\"/manifests\", BlobReference::new);\n\t}", "code_tokens": ["protected", "image", "archive", "index", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "schema", "version", "=", "extract", "schema", "version", "(", ")", ";", "this", ".", "manifests", "=", "children", "at", "(", "__STR__", ",", "blob", "reference", "::", "new", ")", ";", "}"], "token_count": 49, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.568561+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "95359115d5f7fb39d8368db580d5c53ce9bc09ee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndex.java", "file_blob_sha": null, "method_name": "extractSchemaVersion", "signature": null, "start_line": 50, "end_line": 54, "nloc": 5, "method_source_normalized": "privateIntegerextractSchemaVersion(){\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Integer extractSchemaVersion() {\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "integer", "extract", "schema", "version", "(", ")", "{", "integer", "result", "=", "value", "at", "(", "__STR__", ",", "integer", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.568834+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eb2f52977e55fca00d25c79685c4c97c0c5e62c4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndex.java", "file_blob_sha": null, "method_name": "getSchemaVersion", "signature": null, "start_line": 56, "end_line": 58, "nloc": 3, "method_source_normalized": "publicIntegergetSchemaVersion(){\n\t\treturn this.schemaVersion;\n\t}", "original_code": "public Integer getSchemaVersion() {\n\t\treturn this.schemaVersion;\n\t}", "code_tokens": ["public", "integer", "get", "schema", "version", "(", ")", "{", "return", "this", ".", "schema", "version", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.569076+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d652c5234ea3807853add87b1d1d6cced7e6927e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndex.java", "file_blob_sha": null, "method_name": "getManifests", "signature": null, "start_line": 60, "end_line": 62, "nloc": 3, "method_source_normalized": "publicList<BlobReference>getManifests(){\n\t\treturn this.manifests;\n\t}", "original_code": "public List<BlobReference> getManifests() {\n\t\treturn this.manifests;\n\t}", "code_tokens": ["public", "list", "<", "blob", "reference", ">", "get", "manifests", "(", ")", "{", "return", "this", ".", "manifests", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.569320+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a55633da79af39f1e051ea0e2207068676e6b51d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndex.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 70, "end_line": 72, "nloc": 3, "method_source_normalized": "public staticImageArchiveIndexof(InputStream content)throws IOException{\n\t\treturn of(content, ImageArchiveIndex::new);\n\t}", "original_code": "public static ImageArchiveIndex of(InputStream content) throws IOException {\n\t\treturn of(content, ImageArchiveIndex::new);\n\t}", "code_tokens": ["public", "static", "image", "archive", "index", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "image", "archive", "index", "::", "new", ")", ";", "}"], "token_count": 28, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.569571+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c902bc1f673430f6b1794a727f1bbe43dce48d69", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "VolumeName", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "privateVolumeName(String value){\n\t\tthis.value = value;\n\t}", "original_code": "private VolumeName(String value) {\n\t\tthis.value = value;\n\t}", "code_tokens": ["private", "volume", "name", "(", "string", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.570911+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47b06a4405ba450e432b4064ebc7c5a7024230b7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 43, "end_line": 52, "nloc": 10, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((VolumeName) obj).value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.value.equals(((VolumeName) obj).value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "return", "this", ".", "value", ".", "equals", "(", "(", "(", "volume", "name", ")", "obj", ")", ".", "value", ")", ";", "}"], "token_count": 65, "vocab_size": 28, "cyclomatic_complexity": 4, "ast_node_count": 93, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.571209+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "251701b1ce565cccd757353fdc088a55697fb9d4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 54, "end_line": 57, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn this.value.hashCode();\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn this.value.hashCode();\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "this", ".", "value", ".", "hash", "code", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.571466+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "80196de373ebe06d792133d04e7bcd8aed483c8f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 59, "end_line": 62, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.571703+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4fa838578e99009ed1156786cde009046bcc18de", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "random", "signature": null, "start_line": 69, "end_line": 71, "nloc": 3, "method_source_normalized": "public staticVolumeNamerandom(String prefix){\n\t\treturn random(prefix, 10);\n\t}", "original_code": "public static VolumeName random(String prefix) {\n\t\treturn random(prefix, 10);\n\t}", "code_tokens": ["public", "static", "volume", "name", "random", "(", "string", "prefix", ")", "{", "return", "random", "(", "prefix", ",", "__NUM__", ")", ";", "}"], "token_count": 19, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.571948+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "23b97be9d9efa9aa3d94af11fe8553b78048eaa8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "random", "signature": null, "start_line": 79, "end_line": 81, "nloc": 3, "method_source_normalized": "public staticVolumeNamerandom(String prefix, int randomLength){\n\t\treturn of(RandomString.generate(prefix, randomLength));\n\t}", "original_code": "public static VolumeName random(String prefix, int randomLength) {\n\t\treturn of(RandomString.generate(prefix, randomLength));\n\t}", "code_tokens": ["public", "static", "volume", "name", "random", "(", "string", "prefix", ",", "int", "random", "length", ")", "{", "return", "of", "(", "random", "string", ".", "generate", "(", "prefix", ",", "random", "length", ")", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.572204+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e449eea31f02d177d56420c1b824014d436f1349", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "basedOn", "signature": null, "start_line": 94, "end_line": 96, "nloc": 3, "method_source_normalized": "public static<S>VolumeNamebasedOn(S source, String prefix, String suffix, int digestLength){\n\t\treturn basedOn(source, Object::toString, prefix, suffix, digestLength);\n\t}", "original_code": "public static <S> VolumeName basedOn(S source, String prefix, String suffix, int digestLength) {\n\t\treturn basedOn(source, Object::toString, prefix, suffix, digestLength);\n\t}", "code_tokens": ["public", "static", "<", "s", ">", "volume", "name", "based", "on", "(", "s", "source", ",", "string", "prefix", ",", "string", "suffix", ",", "int", "digest", "length", ")", "{", "return", "based", "on", "(", "source", ",", "object", "::", "to", "string", ",", "prefix", ",", "suffix", ",", "digest", "length", ")", ";", "}"], "token_count": 44, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 17, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.572472+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "972530b7c25bb0bc407c17cf5f6089e799cb6f23", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "basedOn", "signature": null, "start_line": 109, "end_line": 116, "nloc": 8, "method_source_normalized": "public static<S>VolumeNamebasedOn(S source, Function<S, String> nameExtractor, String prefix, String suffix,\n\t\t\tint digestLength){\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\tAssert.notNull(nameExtractor, \"'nameExtractor' must not be null\");\n\t\tAssert.notNull(prefix, \"'prefix' must not be null\");\n\t\tAssert.notNull(suffix, \"'suffix' must not be null\");\n\t\treturn of(prefix + getDigest(nameExtractor.apply(source), digestLength) + suffix);\n\t}", "original_code": "public static <S> VolumeName basedOn(S source, Function<S, String> nameExtractor, String prefix, String suffix,\n\t\t\tint digestLength) {\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\tAssert.notNull(nameExtractor, \"'nameExtractor' must not be null\");\n\t\tAssert.notNull(prefix, \"'prefix' must not be null\");\n\t\tAssert.notNull(suffix, \"'suffix' must not be null\");\n\t\treturn of(prefix + getDigest(nameExtractor.apply(source), digestLength) + suffix);\n\t}", "code_tokens": ["public", "static", "<", "s", ">", "volume", "name", "based", "on", "(", "s", "source", ",", "function", "<", "s", ",", "string", ">", "name", "extractor", ",", "string", "prefix", ",", "string", "suffix", ",", "int", "digest", "length", ")", "{", "assert", ".", "not", "null", "(", "source", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "name", "extractor", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "prefix", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "suffix", ",", "__STR__", ")", ";", "return", "of", "(", "prefix", "+", "get", "digest", "(", "name", "extractor", ".", "apply", "(", "source", ")", ",", "digest", "length", ")", "+", "suffix", ")", ";", "}"], "token_count": 98, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 121, "n_identifiers": 34, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 61, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.572782+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dad5ac18f55e3342d67b3e3d1b3ced9252a8b743", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "getDigest", "signature": null, "start_line": 118, "end_line": 126, "nloc": 9, "method_source_normalized": "private staticStringgetDigest(String name, int length){\n\t\ttry {\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"sha-256\");\n\t\t\treturn asHexString(digest.digest(name.getBytes(StandardCharsets.UTF_8)), length);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "private static String getDigest(String name, int length) {\n\t\ttry {\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"sha-256\");\n\t\t\treturn asHexString(digest.digest(name.getBytes(StandardCharsets.UTF_8)), length);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["private", "static", "string", "get", "digest", "(", "string", "name", ",", "int", "length", ")", "{", "try", "{", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "return", "as", "hex", "string", "(", "digest", ".", "digest", "(", "name", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ",", "length", ")", ";", "}", "catch", "(", "no", "such", "algorithm", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 74, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 88, "n_identifiers": 21, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.573081+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9825a8bb985d675bdb2703720a7949f14b9bb294", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "asHexString", "signature": null, "start_line": 128, "end_line": 132, "nloc": 5, "method_source_normalized": "private staticStringasHexString(byte[] digest, int digestLength){\n\t\tAssert.isTrue(digestLength <= digest.length,\n\t\t\t\t() -> \"'digestLength' must be less than or equal to \" + digest.length);\n\t\treturn HexFormat.of().formatHex(digest, 0, digestLength);\n\t}", "original_code": "private static String asHexString(byte[] digest, int digestLength) {\n\t\tAssert.isTrue(digestLength <= digest.length,\n\t\t\t\t() -> \"'digestLength' must be less than or equal to \" + digest.length);\n\t\treturn HexFormat.of().formatHex(digest, 0, digestLength);\n\t}", "code_tokens": ["private", "static", "string", "as", "hex", "string", "(", "byte", "[", "]", "digest", ",", "int", "digest", "length", ")", "{", "assert", ".", "is", "true", "(", "digest", "length", "<=", "digest", ".", "length", ",", "(", ")", "->", "__STR__", "+", "digest", ".", "length", ")", ";", "return", "hex", "format", ".", "of", "(", ")", ".", "format", "hex", "(", "digest", ",", "__NUM__", ",", "digest", "length", ")", ";", "}"], "token_count": 59, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.573365+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f126e7394f4d0716ff43fc685180faa27bf5729c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/VolumeName.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 139, "end_line": 142, "nloc": 4, "method_source_normalized": "public staticVolumeNameof(String value){\n\t\tAssert.notNull(value, \"'value' must not be null\");\n\t\treturn new VolumeName(value);\n\t}", "original_code": "public static VolumeName of(String value) {\n\t\tAssert.notNull(value, \"'value' must not be null\");\n\t\treturn new VolumeName(value);\n\t}", "code_tokens": ["public", "static", "volume", "name", "of", "(", "string", "value", ")", "{", "assert", ".", "not", "null", "(", "value", ",", "__STR__", ")", ";", "return", "new", "volume", "name", "(", "value", ")", ";", "}"], "token_count": 29, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.573623+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "67d0e8866b0138ee242ef8e5810444cc5ac5c020", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "ManifestList", "signature": null, "start_line": 48, "end_line": 53, "nloc": 6, "method_source_normalized": "protectedManifestList(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.mediaType = valueAt(\"/mediaType\", String.class);\n\t\tthis.manifests = childrenAt(\"/manifests\", BlobReference::new);\n\t}", "original_code": "protected ManifestList(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.schemaVersion = extractSchemaVersion();\n\t\tthis.mediaType = valueAt(\"/mediaType\", String.class);\n\t\tthis.manifests = childrenAt(\"/manifests\", BlobReference::new);\n\t}", "code_tokens": ["protected", "manifest", "list", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "schema", "version", "=", "extract", "schema", "version", "(", ")", ";", "this", ".", "media", "type", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "this", ".", "manifests", "=", "children", "at", "(", "__STR__", ",", "blob", "reference", "::", "new", ")", ";", "}"], "token_count": 63, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.574750+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8bde1091f4874cff4b010aff8b0f31d0769947dd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "extractSchemaVersion", "signature": null, "start_line": 55, "end_line": 59, "nloc": 5, "method_source_normalized": "privateIntegerextractSchemaVersion(){\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private Integer extractSchemaVersion() {\n\t\tInteger result = valueAt(\"/schemaVersion\", Integer.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "integer", "extract", "schema", "version", "(", ")", "{", "integer", "result", "=", "value", "at", "(", "__STR__", ",", "integer", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.575017+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "926d3e861ee3885b3762bea3c1ff57fd18838cc9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "getSchemaVersion", "signature": null, "start_line": 61, "end_line": 63, "nloc": 3, "method_source_normalized": "publicIntegergetSchemaVersion(){\n\t\treturn this.schemaVersion;\n\t}", "original_code": "public Integer getSchemaVersion() {\n\t\treturn this.schemaVersion;\n\t}", "code_tokens": ["public", "integer", "get", "schema", "version", "(", ")", "{", "return", "this", ".", "schema", "version", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.575257+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5626d5e6b967165ea741b1d77604c127a6b1a507", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "getMediaType", "signature": null, "start_line": 65, "end_line": 67, "nloc": 3, "method_source_normalized": "public @NullableStringgetMediaType(){\n\t\treturn this.mediaType;\n\t}", "original_code": "public @Nullable String getMediaType() {\n\t\treturn this.mediaType;\n\t}", "code_tokens": ["public", "@", "nullable", "string", "get", "media", "type", "(", ")", "{", "return", "this", ".", "media", "type", ";", "}"], "token_count": 17, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.575492+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1a5924442cf1188c51d88795c6efca5ca5984914", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "streamManifests", "signature": null, "start_line": 69, "end_line": 71, "nloc": 3, "method_source_normalized": "publicStream<BlobReference>streamManifests(){\n\t\treturn getManifests().stream();\n\t}", "original_code": "public Stream<BlobReference> streamManifests() {\n\t\treturn getManifests().stream();\n\t}", "code_tokens": ["public", "stream", "<", "blob", "reference", ">", "stream", "manifests", "(", ")", "{", "return", "get", "manifests", "(", ")", ".", "stream", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.575731+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b1ecc5280049a0e4a3f72c5528c4dcd3f6bdd3bb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "getManifests", "signature": null, "start_line": 73, "end_line": 75, "nloc": 3, "method_source_normalized": "publicList<BlobReference>getManifests(){\n\t\treturn this.manifests;\n\t}", "original_code": "public List<BlobReference> getManifests() {\n\t\treturn this.manifests;\n\t}", "code_tokens": ["public", "list", "<", "blob", "reference", ">", "get", "manifests", "(", ")", "{", "return", "this", ".", "manifests", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.575969+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8991c80b2e23e2fa11b06b946e4aca1c7e68501e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ManifestList.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 83, "end_line": 85, "nloc": 3, "method_source_normalized": "public staticManifestListof(InputStream content)throws IOException{\n\t\treturn of(content, ManifestList::new);\n\t}", "original_code": "public static ManifestList of(InputStream content) throws IOException {\n\t\treturn of(content, ManifestList::new);\n\t}", "code_tokens": ["public", "static", "manifest", "list", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "manifest", "list", "::", "new", ")", ";", "}"], "token_count": 26, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.576212+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d1d61e50b2db8cbc60140d086f63c8b8bc5b10b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "ImageArchive", "signature": null, "start_line": 88, "end_line": 100, "nloc": 13, "method_source_normalized": "ImageArchive(ObjectMapper objectMapper, ImageConfig imageConfig, Instant createDate, @Nullable ImageReference tag,\n\t\t\tString os, @Nullable String architecture, @Nullable String variant, List<LayerId> existingLayers,\n\t\t\tList<Layer> newLayers){\n\t\tthis.objectMapper = objectMapper;\n\t\tthis.imageConfig = imageConfig;\n\t\tthis.createDate = createDate;\n\t\tthis.tag = tag;\n\t\tthis.os = os;\n\t\tthis.architecture = architecture;\n\t\tthis.variant = variant;\n\t\tthis.existingLayers = existingLayers;\n\t\tthis.newLayers = newLayers;\n\t}", "original_code": "ImageArchive(ObjectMapper objectMapper, ImageConfig imageConfig, Instant createDate, @Nullable ImageReference tag,\n\t\t\tString os, @Nullable String architecture, @Nullable String variant, List<LayerId> existingLayers,\n\t\t\tList<Layer> newLayers) {\n\t\tthis.objectMapper = objectMapper;\n\t\tthis.imageConfig = imageConfig;\n\t\tthis.createDate = createDate;\n\t\tthis.tag = tag;\n\t\tthis.os = os;\n\t\tthis.architecture = architecture;\n\t\tthis.variant = variant;\n\t\tthis.existingLayers = existingLayers;\n\t\tthis.newLayers = newLayers;\n\t}", "code_tokens": ["image", "archive", "(", "object", "mapper", "object", "mapper", ",", "image", "config", "image", "config", ",", "instant", "create", "date", ",", "@", "nullable", "image", "reference", "tag", ",", "string", "os", ",", "@", "nullable", "string", "architecture", ",", "@", "nullable", "string", "variant", ",", "list", "<", "layer", "id", ">", "existing", "layers", ",", "list", "<", "layer", ">", "new", "layers", ")", "{", "this", ".", "object", "mapper", "=", "object", "mapper", ";", "this", ".", "image", "config", "=", "image", "config", ";", "this", ".", "create", "date", "=", "create", "date", ";", "this", ".", "tag", "=", "tag", ";", "this", ".", "os", "=", "os", ";", "this", ".", "architecture", "=", "architecture", ";", "this", ".", "variant", "=", "variant", ";", "this", ".", "existing", "layers", "=", "existing", "layers", ";", "this", ".", "new", "layers", "=", "new", "layers", ";", "}"], "token_count": 117, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 146, "n_identifiers": 42, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 74, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.579916+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "29d38881195ad0fd117c79baa9f3e2a7d9e86425", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "getImageConfig", "signature": null, "start_line": 106, "end_line": 108, "nloc": 3, "method_source_normalized": "publicImageConfiggetImageConfig(){\n\t\treturn this.imageConfig;\n\t}", "original_code": "public ImageConfig getImageConfig() {\n\t\treturn this.imageConfig;\n\t}", "code_tokens": ["public", "image", "config", "get", "image", "config", "(", ")", "{", "return", "this", ".", "image", "config", ";", "}"], "token_count": 16, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.580179+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58a122fd2e3fb26d6f57008555ca4193c699fa47", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "getCreateDate", "signature": null, "start_line": 114, "end_line": 116, "nloc": 3, "method_source_normalized": "publicInstantgetCreateDate(){\n\t\treturn this.createDate;\n\t}", "original_code": "public Instant getCreateDate() {\n\t\treturn this.createDate;\n\t}", "code_tokens": ["public", "instant", "get", "create", "date", "(", ")", "{", "return", "this", ".", "create", "date", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.580424+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3e2d14c336fd68aa907c981b6184b8600ed88f08", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "getTag", "signature": null, "start_line": 122, "end_line": 124, "nloc": 3, "method_source_normalized": "public @NullableImageReferencegetTag(){\n\t\treturn this.tag;\n\t}", "original_code": "public @Nullable ImageReference getTag() {\n\t\treturn this.tag;\n\t}", "code_tokens": ["public", "@", "nullable", "image", "reference", "get", "tag", "(", ")", "{", "return", "this", ".", "tag", ";", "}"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.580663+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6d52bbdda9de826a77886085fb1ef723b3ad8b2a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeTo", "signature": null, "start_line": 126, "end_line": 129, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidwriteTo(OutputStream outputStream)throws IOException{\n\t\tTarArchive.of(this::write).writeTo(outputStream);\n\t}", "original_code": "@Override\n\tpublic void writeTo(OutputStream outputStream) throws IOException {\n\t\tTarArchive.of(this::write).writeTo(outputStream);\n\t}", "code_tokens": ["@", "override", "public", "void", "write", "to", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "tar", "archive", ".", "of", "(", "this", "::", "write", ")", ".", "write", "to", "(", "output", "stream", ")", ";", "}"], "token_count": 34, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.580920+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "943c0dfb576ba1a17ea2cc8f6d9ef4d8b905f691", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "write", "signature": null, "start_line": 131, "end_line": 135, "nloc": 5, "method_source_normalized": "privatevoidwrite(Layout writer)throws IOException{\n\t\tList<LayerId> writtenLayers = writeLayers(writer);\n\t\tString config = writeConfig(writer, writtenLayers);\n\t\twriteManifest(writer, config, writtenLayers);\n\t}", "original_code": "private void write(Layout writer) throws IOException {\n\t\tList<LayerId> writtenLayers = writeLayers(writer);\n\t\tString config = writeConfig(writer, writtenLayers);\n\t\twriteManifest(writer, config, writtenLayers);\n\t}", "code_tokens": ["private", "void", "write", "(", "layout", "writer", ")", "throws", "io", "exception", "{", "list", "<", "layer", "id", ">", "written", "layers", "=", "write", "layers", "(", "writer", ")", ";", "string", "config", "=", "write", "config", "(", "writer", ",", "written", "layers", ")", ";", "write", "manifest", "(", "writer", ",", "config", ",", "written", "layers", ")", ";", "}"], "token_count": 49, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 18, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.581188+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2c4ebaa8bf56da6a62ee72582c7a2b17e69589a1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeLayers", "signature": null, "start_line": 137, "end_line": 146, "nloc": 10, "method_source_normalized": "privateList<LayerId>writeLayers(Layout writer)throws IOException{\n\t\tfor (int i = 0; i < this.existingLayers.size(); i++) {\n\t\t\twriteEmptyLayer(writer, EMPTY_LAYER_NAME_PREFIX + i);\n\t\t}\n\t\tList<LayerId> writtenLayers = new ArrayList<>();\n\t\tfor (Layer layer : this.newLayers) {\n\t\t\twrittenLayers.add(writeLayer(writer, layer));\n\t\t}\n\t\treturn Collections.unmodifiableList(writtenLayers);\n\t}", "original_code": "private List<LayerId> writeLayers(Layout writer) throws IOException {\n\t\tfor (int i = 0; i < this.existingLayers.size(); i++) {\n\t\t\twriteEmptyLayer(writer, EMPTY_LAYER_NAME_PREFIX + i);\n\t\t}\n\t\tList<LayerId> writtenLayers = new ArrayList<>();\n\t\tfor (Layer layer : this.newLayers) {\n\t\t\twrittenLayers.add(writeLayer(writer, layer));\n\t\t}\n\t\treturn Collections.unmodifiableList(writtenLayers);\n\t}", "code_tokens": ["private", "list", "<", "layer", "id", ">", "write", "layers", "(", "layout", "writer", ")", "throws", "io", "exception", "{", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "this", ".", "existing", "layers", ".", "size", "(", ")", ";", "i", "++", ")", "{", "write", "empty", "layer", "(", "writer", ",", "empty", "layer", "name", "prefix", "+", "i", ")", ";", "}", "list", "<", "layer", "id", ">", "written", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "for", "(", "layer", "layer", ":", "this", ".", "new", "layers", ")", "{", "written", "layers", ".", "add", "(", "write", "layer", "(", "writer", ",", "layer", ")", ")", ";", "}", "return", "collections", ".", "unmodifiable", "list", "(", "written", "layers", ")", ";", "}"], "token_count": 106, "vocab_size": 41, "cyclomatic_complexity": 3, "ast_node_count": 130, "n_identifiers": 30, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 57, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.581502+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "159303a2e5c37030237930fe53add9e7af81d7f5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeEmptyLayer", "signature": null, "start_line": 148, "end_line": 150, "nloc": 3, "method_source_normalized": "privatevoidwriteEmptyLayer(Layout writer, String name)throws IOException{\n\t\twriter.file(name, Owner.ROOT, Content.of(\"\"));\n\t}", "original_code": "private void writeEmptyLayer(Layout writer, String name) throws IOException {\n\t\twriter.file(name, Owner.ROOT, Content.of(\"\"));\n\t}", "code_tokens": ["private", "void", "write", "empty", "layer", "(", "layout", "writer", ",", "string", "name", ")", "throws", "io", "exception", "{", "writer", ".", "file", "(", "name", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "__STR__", ")", ")", ";", "}"], "token_count": 35, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.581770+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e899df575933b6d48d27f079361ecc709db79959", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeLayer", "signature": null, "start_line": 152, "end_line": 156, "nloc": 5, "method_source_normalized": "privateLayerIdwriteLayer(Layout writer, Layer layer)throws IOException{\n\t\tLayerId id = layer.getId();\n\t\twriter.file(id.getHash() + \".tar\", Owner.ROOT, layer);\n\t\treturn id;\n\t}", "original_code": "private LayerId writeLayer(Layout writer, Layer layer) throws IOException {\n\t\tLayerId id = layer.getId();\n\t\twriter.file(id.getHash() + \".tar\", Owner.ROOT, layer);\n\t\treturn id;\n\t}", "code_tokens": ["private", "layer", "id", "write", "layer", "(", "layout", "writer", ",", "layer", "layer", ")", "throws", "io", "exception", "{", "layer", "id", "id", "=", "layer", ".", "get", "id", "(", ")", ";", "writer", ".", "file", "(", "id", ".", "get", "hash", "(", ")", "+", "__STR__", ",", "owner", ".", "root", ",", "layer", ")", ";", "return", "id", ";", "}"], "token_count": 51, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.582039+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6025b077752c220260e8bf7038ae845af51a5c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeConfig", "signature": null, "start_line": 158, "end_line": 171, "nloc": 14, "method_source_normalized": "privateStringwriteConfig(Layout writer, List<LayerId> writtenLayers)throws IOException{\n\t\ttry {\n\t\t\tObjectNode config = createConfig(writtenLayers);\n\t\t\tString json = this.objectMapper.writeValueAsString(config).replace(\"\\r\\n\", \"\\n\");\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\t\tInspectedContent content = InspectedContent.of(Content.of(json), digest::update);\n\t\t\tString name = LayerId.ofSha256Digest(digest.digest()).getHash() + \".json\";\n\t\t\twriter.file(name, Owner.ROOT, content);\n\t\t\treturn name;\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "private String writeConfig(Layout writer, List<LayerId> writtenLayers) throws IOException {\n\t\ttry {\n\t\t\tObjectNode config = createConfig(writtenLayers);\n\t\t\tString json = this.objectMapper.writeValueAsString(config).replace(\"\\r\\n\", \"\\n\");\n\t\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\t\tInspectedContent content = InspectedContent.of(Content.of(json), digest::update);\n\t\t\tString name = LayerId.ofSha256Digest(digest.digest()).getHash() + \".json\";\n\t\t\twriter.file(name, Owner.ROOT, content);\n\t\t\treturn name;\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["private", "string", "write", "config", "(", "layout", "writer", ",", "list", "<", "layer", "id", ">", "written", "layers", ")", "throws", "io", "exception", "{", "try", "{", "object", "node", "config", "=", "create", "config", "(", "written", "layers", ")", ";", "string", "json", "=", "this", ".", "object", "mapper", ".", "write", "value", "as", "string", "(", "config", ")", ".", "replace", "(", "__STR__", ",", "__STR__", ")", ";", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "inspected", "content", "content", "=", "inspected", "content", ".", "of", "(", "content", ".", "of", "(", "json", ")", ",", "digest", "::", "update", ")", ";", "string", "name", "=", "layer", "id", ".", "of", "sha", "256", "digest", "(", "digest", ".", "digest", "(", ")", ")", ".", "get", "hash", "(", ")", "+", "__STR__", ";", "writer", ".", "file", "(", "name", ",", "owner", ".", "root", ",", "content", ")", ";", "return", "name", ";", "}", "catch", "(", "no", "such", "algorithm", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 152, "vocab_size": 62, "cyclomatic_complexity": 2, "ast_node_count": 180, "n_identifiers": 49, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 82, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.582390+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "280c1e91ae1b0e8077c8f9823182b723fd405c83", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "createConfig", "signature": null, "start_line": 173, "end_line": 183, "nloc": 11, "method_source_normalized": "privateObjectNodecreateConfig(List<LayerId> writtenLayers){\n\t\tObjectNode config = this.objectMapper.createObjectNode();\n\t\tconfig.set(\"Config\", this.imageConfig.getNodeCopy());\n\t\tconfig.set(\"Created\", config.stringNode(getCreatedDate()));\n\t\tconfig.set(\"History\", createHistory(writtenLayers));\n\t\tconfig.set(\"Os\", config.stringNode(this.os));\n\t\tconfig.set(\"Architecture\", config.stringNode(this.architecture));\n\t\tconfig.set(\"Variant\", config.stringNode(this.variant));\n\t\tconfig.set(\"RootFS\", createRootFs(writtenLayers));\n\t\treturn config;\n\t}", "original_code": "private ObjectNode createConfig(List<LayerId> writtenLayers) {\n\t\tObjectNode config = this.objectMapper.createObjectNode();\n\t\tconfig.set(\"Config\", this.imageConfig.getNodeCopy());\n\t\tconfig.set(\"Created\", config.stringNode(getCreatedDate()));\n\t\tconfig.set(\"History\", createHistory(writtenLayers));\n\t\tconfig.set(\"Os\", config.stringNode(this.os));\n\t\tconfig.set(\"Architecture\", config.stringNode(this.architecture));\n\t\tconfig.set(\"Variant\", config.stringNode(this.variant));\n\t\tconfig.set(\"RootFS\", createRootFs(writtenLayers));\n\t\treturn config;\n\t}", "code_tokens": ["private", "object", "node", "create", "config", "(", "list", "<", "layer", "id", ">", "written", "layers", ")", "{", "object", "node", "config", "=", "this", ".", "object", "mapper", ".", "create", "object", "node", "(", ")", ";", "config", ".", "set", "(", "__STR__", ",", "this", ".", "image", "config", ".", "get", "node", "copy", "(", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "config", ".", "string", "node", "(", "get", "created", "date", "(", ")", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "create", "history", "(", "written", "layers", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "config", ".", "string", "node", "(", "this", ".", "os", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "config", ".", "string", "node", "(", "this", ".", "architecture", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "config", ".", "string", "node", "(", "this", ".", "variant", ")", ")", ";", "config", ".", "set", "(", "__STR__", ",", "create", "root", "fs", "(", "written", "layers", ")", ")", ";", "return", "config", ";", "}"], "token_count": 151, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 183, "n_identifiers": 42, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.582746+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fcfbc892e7c7f7c9abe2bd48541608eed92cf777", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "getCreatedDate", "signature": null, "start_line": 185, "end_line": 187, "nloc": 3, "method_source_normalized": "privateStringgetCreatedDate(){\n\t\treturn DATE_FORMATTER.format(this.createDate);\n\t}", "original_code": "private String getCreatedDate() {\n\t\treturn DATE_FORMATTER.format(this.createDate);\n\t}", "code_tokens": ["private", "string", "get", "created", "date", "(", ")", "{", "return", "date", "formatter", ".", "format", "(", "this", ".", "create", "date", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.583006+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0f8cbab24f52f6dc3703325ebd86344d8c41e4b5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "createHistory", "signature": null, "start_line": 189, "end_line": 196, "nloc": 8, "method_source_normalized": "privateJsonNodecreateHistory(List<LayerId> writtenLayers){\n\t\tArrayNode history = this.objectMapper.createArrayNode();\n\t\tint size = this.existingLayers.size() + writtenLayers.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\thistory.addObject();\n\t\t}\n\t\treturn history;\n\t}", "original_code": "private JsonNode createHistory(List<LayerId> writtenLayers) {\n\t\tArrayNode history = this.objectMapper.createArrayNode();\n\t\tint size = this.existingLayers.size() + writtenLayers.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\thistory.addObject();\n\t\t}\n\t\treturn history;\n\t}", "code_tokens": ["private", "json", "node", "create", "history", "(", "list", "<", "layer", "id", ">", "written", "layers", ")", "{", "array", "node", "history", "=", "this", ".", "object", "mapper", ".", "create", "array", "node", "(", ")", ";", "int", "size", "=", "this", ".", "existing", "layers", ".", "size", "(", ")", "+", "written", "layers", ".", "size", "(", ")", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "size", ";", "i", "++", ")", "{", "history", ".", "add", "object", "(", ")", ";", "}", "return", "history", ";", "}"], "token_count": 76, "vocab_size": 33, "cyclomatic_complexity": 2, "ast_node_count": 97, "n_identifiers": 21, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.583379+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "34373202498f92a06782846fcc6dc43a3b521313", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "createRootFs", "signature": null, "start_line": 198, "end_line": 204, "nloc": 7, "method_source_normalized": "privateJsonNodecreateRootFs(List<LayerId> writtenLayers){\n\t\tObjectNode rootFs = this.objectMapper.createObjectNode();\n\t\tArrayNode diffIds = rootFs.putArray(\"diff_ids\");\n\t\tthis.existingLayers.stream().map(Object::toString).forEach(diffIds::add);\n\t\twrittenLayers.stream().map(Object::toString).forEach(diffIds::add);\n\t\treturn rootFs;\n\t}", "original_code": "private JsonNode createRootFs(List<LayerId> writtenLayers) {\n\t\tObjectNode rootFs = this.objectMapper.createObjectNode();\n\t\tArrayNode diffIds = rootFs.putArray(\"diff_ids\");\n\t\tthis.existingLayers.stream().map(Object::toString).forEach(diffIds::add);\n\t\twrittenLayers.stream().map(Object::toString).forEach(diffIds::add);\n\t\treturn rootFs;\n\t}", "code_tokens": ["private", "json", "node", "create", "root", "fs", "(", "list", "<", "layer", "id", ">", "written", "layers", ")", "{", "object", "node", "root", "fs", "=", "this", ".", "object", "mapper", ".", "create", "object", "node", "(", ")", ";", "array", "node", "diff", "ids", "=", "root", "fs", ".", "put", "array", "(", "__STR__", ")", ";", "this", ".", "existing", "layers", ".", "stream", "(", ")", ".", "map", "(", "object", "::", "to", "string", ")", ".", "for", "each", "(", "diff", "ids", "::", "add", ")", ";", "written", "layers", ".", "stream", "(", ")", ".", "map", "(", "object", "::", "to", "string", ")", ".", "for", "each", "(", "diff", "ids", "::", "add", ")", ";", "return", "root", "fs", ";", "}"], "token_count": 101, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 114, "n_identifiers": 30, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.583695+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f894265875be0ed3cabbe9fb1be68e97fe9757fb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "writeManifest", "signature": null, "start_line": 206, "end_line": 210, "nloc": 5, "method_source_normalized": "privatevoidwriteManifest(Layout writer, String config, List<LayerId> writtenLayers)throws IOException{\n\t\tArrayNode manifest = createManifest(config, writtenLayers);\n\t\tString manifestJson = this.objectMapper.writeValueAsString(manifest);\n\t\twriter.file(\"manifest.json\", Owner.ROOT, Content.of(manifestJson));\n\t}", "original_code": "private void writeManifest(Layout writer, String config, List<LayerId> writtenLayers) throws IOException {\n\t\tArrayNode manifest = createManifest(config, writtenLayers);\n\t\tString manifestJson = this.objectMapper.writeValueAsString(manifest);\n\t\twriter.file(\"manifest.json\", Owner.ROOT, Content.of(manifestJson));\n\t}", "code_tokens": ["private", "void", "write", "manifest", "(", "layout", "writer", ",", "string", "config", ",", "list", "<", "layer", "id", ">", "written", "layers", ")", "throws", "io", "exception", "{", "array", "node", "manifest", "=", "create", "manifest", "(", "config", ",", "written", "layers", ")", ";", "string", "manifest", "json", "=", "this", ".", "object", "mapper", ".", "write", "value", "as", "string", "(", "manifest", ")", ";", "writer", ".", "file", "(", "__STR__", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "manifest", "json", ")", ")", ";", "}"], "token_count": 73, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 26, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.583993+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cb62b6784df229b46ade2b46dad9778b0b34ddc3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "createManifest", "signature": null, "start_line": 212, "end_line": 221, "nloc": 10, "method_source_normalized": "privateArrayNodecreateManifest(String config, List<LayerId> writtenLayers){\n\t\tArrayNode manifest = this.objectMapper.createArrayNode();\n\t\tObjectNode entry = manifest.addObject();\n\t\tentry.set(\"Config\", entry.stringNode(config));\n\t\tentry.set(\"Layers\", getManifestLayers(writtenLayers));\n\t\tif (this.tag != null) {\n\t\t\tentry.set(\"RepoTags\", entry.arrayNode().add(this.tag.toString()));\n\t\t}\n\t\treturn manifest;\n\t}", "original_code": "private ArrayNode createManifest(String config, List<LayerId> writtenLayers) {\n\t\tArrayNode manifest = this.objectMapper.createArrayNode();\n\t\tObjectNode entry = manifest.addObject();\n\t\tentry.set(\"Config\", entry.stringNode(config));\n\t\tentry.set(\"Layers\", getManifestLayers(writtenLayers));\n\t\tif (this.tag != null) {\n\t\t\tentry.set(\"RepoTags\", entry.arrayNode().add(this.tag.toString()));\n\t\t}\n\t\treturn manifest;\n\t}", "code_tokens": ["private", "array", "node", "create", "manifest", "(", "string", "config", ",", "list", "<", "layer", "id", ">", "written", "layers", ")", "{", "array", "node", "manifest", "=", "this", ".", "object", "mapper", ".", "create", "array", "node", "(", ")", ";", "object", "node", "entry", "=", "manifest", ".", "add", "object", "(", ")", ";", "entry", ".", "set", "(", "__STR__", ",", "entry", ".", "string", "node", "(", "config", ")", ")", ";", "entry", ".", "set", "(", "__STR__", ",", "get", "manifest", "layers", "(", "written", "layers", ")", ")", ";", "if", "(", "this", ".", "tag", "!=", "null", ")", "{", "entry", ".", "set", "(", "__STR__", ",", "entry", ".", "array", "node", "(", ")", ".", "add", "(", "this", ".", "tag", ".", "to", "string", "(", ")", ")", ")", ";", "}", "return", "manifest", ";", "}"], "token_count": 114, "vocab_size": 36, "cyclomatic_complexity": 2, "ast_node_count": 141, "n_identifiers": 33, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.584316+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d8704006a9508c28c7d9e0a0eafb3c119d3c5845", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "getManifestLayers", "signature": null, "start_line": 223, "end_line": 230, "nloc": 8, "method_source_normalized": "privateArrayNodegetManifestLayers(List<LayerId> writtenLayers){\n\t\tArrayNode layers = this.objectMapper.createArrayNode();\n\t\tfor (int i = 0; i < this.existingLayers.size(); i++) {\n\t\t\tlayers.add(EMPTY_LAYER_NAME_PREFIX + i);\n\t\t}\n\t\twrittenLayers.stream().map((id) -> id.getHash() + \".tar\").forEach(layers::add);\n\t\treturn layers;\n\t}", "original_code": "private ArrayNode getManifestLayers(List<LayerId> writtenLayers) {\n\t\tArrayNode layers = this.objectMapper.createArrayNode();\n\t\tfor (int i = 0; i < this.existingLayers.size(); i++) {\n\t\t\tlayers.add(EMPTY_LAYER_NAME_PREFIX + i);\n\t\t}\n\t\twrittenLayers.stream().map((id) -> id.getHash() + \".tar\").forEach(layers::add);\n\t\treturn layers;\n\t}", "code_tokens": ["private", "array", "node", "get", "manifest", "layers", "(", "list", "<", "layer", "id", ">", "written", "layers", ")", "{", "array", "node", "layers", "=", "this", ".", "object", "mapper", ".", "create", "array", "node", "(", ")", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "this", ".", "existing", "layers", ".", "size", "(", ")", ";", "i", "++", ")", "{", "layers", ".", "add", "(", "empty", "layer", "name", "prefix", "+", "i", ")", ";", "}", "written", "layers", ".", "stream", "(", ")", ".", "map", "(", "(", "id", ")", "->", "id", ".", "get", "hash", "(", ")", "+", "__STR__", ")", ".", "for", "each", "(", "layers", "::", "add", ")", ";", "return", "layers", ";", "}"], "token_count": 101, "vocab_size": 43, "cyclomatic_complexity": 2, "ast_node_count": 125, "n_identifiers": 28, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.584635+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6ff5024bbfd059180f9b902fbb7dd5b3a41bbe3c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 238, "end_line": 240, "nloc": 3, "method_source_normalized": "public staticImageArchivefrom(Image image)throws IOException{\n\t\treturn from(image, NO_UPDATES);\n\t}", "original_code": "public static ImageArchive from(Image image) throws IOException {\n\t\treturn from(image, NO_UPDATES);\n\t}", "code_tokens": ["public", "static", "image", "archive", "from", "(", "image", "image", ")", "throws", "io", "exception", "{", "return", "from", "(", "image", ",", "no", "updates", ")", ";", "}"], "token_count": 23, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.584893+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ddf02516e5288dab4e425d061dee06544c59cc66", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 249, "end_line": 251, "nloc": 3, "method_source_normalized": "public staticImageArchivefrom(Image image, IOConsumer<Update> update)throws IOException{\n\t\treturn new Update(image).applyTo(update);\n\t}", "original_code": "public static ImageArchive from(Image image, IOConsumer<Update> update) throws IOException {\n\t\treturn new Update(image).applyTo(update);\n\t}", "code_tokens": ["public", "static", "image", "archive", "from", "(", "image", "image", ",", "io", "consumer", "<", "update", ">", "update", ")", "throws", "io", "exception", "{", "return", "new", "update", "(", "image", ")", ".", "apply", "to", "(", "update", ")", ";", "}"], "token_count": 34, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.585148+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cdb203c32fb93afd791d7065b8fe73f56f5b5853", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "Update", "signature": null, "start_line": 268, "end_line": 271, "nloc": 4, "method_source_normalized": "privateUpdate(Image image){\n\t\t\tthis.image = image;\n\t\t\tthis.config = image.getConfig();\n\t\t}", "original_code": "private Update(Image image) {\n\t\t\tthis.image = image;\n\t\t\tthis.config = image.getConfig();\n\t\t}", "code_tokens": ["private", "update", "(", "image", "image", ")", "{", "this", ".", "image", "=", "image", ";", "this", ".", "config", "=", "image", ".", "get", "config", "(", ")", ";", "}"], "token_count": 25, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.585412+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a710c561076fc4a246b20a1abc7b3d5a07d1dfa9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "applyTo", "signature": null, "start_line": 273, "end_line": 279, "nloc": 7, "method_source_normalized": "privateImageArchiveapplyTo(IOConsumer<Update> update)throws IOException{\n\t\t\tupdate.accept(this);\n\t\t\tInstant createDate = (this.createDate != null) ? this.createDate : WINDOWS_EPOCH_PLUS_SECOND;\n\t\t\treturn new ImageArchive(SharedObjectMapper.get(), this.config, createDate, this.tag, this.image.getOs(),\n\t\t\t\t\tthis.image.getArchitecture(), this.image.getVariant(), this.image.getLayers(),\n\t\t\t\t\tCollections.unmodifiableList(this.newLayers));\n\t\t}", "original_code": "private ImageArchive applyTo(IOConsumer<Update> update) throws IOException {\n\t\t\tupdate.accept(this);\n\t\t\tInstant createDate = (this.createDate != null) ? this.createDate : WINDOWS_EPOCH_PLUS_SECOND;\n\t\t\treturn new ImageArchive(SharedObjectMapper.get(), this.config, createDate, this.tag, this.image.getOs(),\n\t\t\t\t\tthis.image.getArchitecture(), this.image.getVariant(), this.image.getLayers(),\n\t\t\t\t\tCollections.unmodifiableList(this.newLayers));\n\t\t}", "code_tokens": ["private", "image", "archive", "apply", "to", "(", "io", "consumer", "<", "update", ">", "update", ")", "throws", "io", "exception", "{", "update", ".", "accept", "(", "this", ")", ";", "instant", "create", "date", "=", "(", "this", ".", "create", "date", "!=", "null", ")", "?", "this", ".", "create", "date", ":", "windows", "epoch", "plus", "second", ";", "return", "new", "image", "archive", "(", "shared", "object", "mapper", ".", "get", "(", ")", ",", "this", ".", "config", ",", "create", "date", ",", "this", ".", "tag", ",", "this", ".", "image", ".", "get", "os", "(", ")", ",", "this", ".", "image", ".", "get", "architecture", "(", ")", ",", "this", ".", "image", ".", "get", "variant", "(", ")", ",", "this", ".", "image", ".", "get", "layers", "(", ")", ",", "collections", ".", "unmodifiable", "list", "(", "this", ".", "new", "layers", ")", ")", ";", "}"], "token_count": 120, "vocab_size": 48, "cyclomatic_complexity": 2, "ast_node_count": 140, "n_identifiers": 30, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.585725+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "849234588dcb5344018214bf34a4323467a6701e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "withUpdatedConfig", "signature": null, "start_line": 285, "end_line": 287, "nloc": 3, "method_source_normalized": "publicvoidwithUpdatedConfig(Consumer<ImageConfig.Update> update){\n\t\t\tthis.config = this.config.copy(update);\n\t\t}", "original_code": "public void withUpdatedConfig(Consumer<ImageConfig.Update> update) {\n\t\t\tthis.config = this.config.copy(update);\n\t\t}", "code_tokens": ["public", "void", "with", "updated", "config", "(", "consumer", "<", "image", "config", ".", "update", ">", "update", ")", "{", "this", ".", "config", "=", "this", ".", "config", ".", "copy", "(", "update", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.585991+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0becd2cd1bdbcab0e7c94713b6053976009ff73f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "withNewLayer", "signature": null, "start_line": 293, "end_line": 296, "nloc": 4, "method_source_normalized": "publicvoidwithNewLayer(Layer layer){\n\t\t\tAssert.notNull(layer, \"'layer' must not be null\");\n\t\t\tthis.newLayers.add(layer);\n\t\t}", "original_code": "public void withNewLayer(Layer layer) {\n\t\t\tAssert.notNull(layer, \"'layer' must not be null\");\n\t\t\tthis.newLayers.add(layer);\n\t\t}", "code_tokens": ["public", "void", "with", "new", "layer", "(", "layer", "layer", ")", "{", "assert", ".", "not", "null", "(", "layer", ",", "__STR__", ")", ";", "this", ".", "new", "layers", ".", "add", "(", "layer", ")", ";", "}"], "token_count": 31, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.586242+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "734d3bc570aeb391a666b81c0fddcb25e079f06a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "withCreateDate", "signature": null, "start_line": 302, "end_line": 305, "nloc": 4, "method_source_normalized": "publicvoidwithCreateDate(Instant createDate){\n\t\t\tAssert.notNull(createDate, \"'createDate' must not be null\");\n\t\t\tthis.createDate = createDate;\n\t\t}", "original_code": "public void withCreateDate(Instant createDate) {\n\t\t\tAssert.notNull(createDate, \"'createDate' must not be null\");\n\t\t\tthis.createDate = createDate;\n\t\t}", "code_tokens": ["public", "void", "with", "create", "date", "(", "instant", "create", "date", ")", "{", "assert", ".", "not", "null", "(", "create", "date", ",", "__STR__", ")", ";", "this", ".", "create", "date", "=", "create", "date", ";", "}"], "token_count": 31, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.586493+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc017567f7d13069eac1a5c7b5b28918da57279f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchive.java", "file_blob_sha": null, "method_name": "withTag", "signature": null, "start_line": 311, "end_line": 314, "nloc": 4, "method_source_normalized": "publicvoidwithTag(ImageReference tag){\n\t\t\tAssert.notNull(tag, \"'tag' must not be null\");\n\t\t\tthis.tag = tag.inTaggedForm();\n\t\t}", "original_code": "public void withTag(ImageReference tag) {\n\t\t\tAssert.notNull(tag, \"'tag' must not be null\");\n\t\t\tthis.tag = tag.inTaggedForm();\n\t\t}", "code_tokens": ["public", "void", "with", "tag", "(", "image", "reference", "tag", ")", "{", "assert", ".", "not", "null", "(", "tag", ",", "__STR__", ")", ";", "this", ".", "tag", "=", "tag", ".", "in", "tagged", "form", "(", ")", ";", "}"], "token_count": 33, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.586744+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "029604bb437dd78c18fa708442fc89f399fb1ada", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "ImagePlatform", "signature": null, "start_line": 39, "end_line": 44, "nloc": 6, "method_source_normalized": "ImagePlatform(String os, @Nullable String architecture, @Nullable String variant){\n\t\tAssert.hasText(os, \"'os' must not be empty\");\n\t\tthis.os = os;\n\t\tthis.architecture = architecture;\n\t\tthis.variant = variant;\n\t}", "original_code": "ImagePlatform(String os, @Nullable String architecture, @Nullable String variant) {\n\t\tAssert.hasText(os, \"'os' must not be empty\");\n\t\tthis.os = os;\n\t\tthis.architecture = architecture;\n\t\tthis.variant = variant;\n\t}", "code_tokens": ["image", "platform", "(", "string", "os", ",", "@", "nullable", "string", "architecture", ",", "@", "nullable", "string", "variant", ")", "{", "assert", ".", "has", "text", "(", "os", ",", "__STR__", ")", ";", "this", ".", "os", "=", "os", ";", "this", ".", "architecture", "=", "architecture", ";", "this", ".", "variant", "=", "variant", ";", "}"], "token_count": 46, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 66, "n_identifiers": 18, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.588045+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce02ceb8ea9d803af4c9946964adc828c55a5cbc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 46, "end_line": 57, "nloc": 12, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImagePlatform other = (ImagePlatform) obj;\n\t\treturn Objects.equals(this.architecture, other.architecture) && Objects.equals(this.os, other.os)\n\t\t\t\t&& Objects.equals(this.variant, other.variant);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tImagePlatform other = (ImagePlatform) obj;\n\t\treturn Objects.equals(this.architecture, other.architecture) && Objects.equals(this.os, other.os)\n\t\t\t\t&& Objects.equals(this.variant, other.variant);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "image", "platform", "other", "=", "(", "image", "platform", ")", "obj", ";", "return", "objects", ".", "equals", "(", "this", ".", "architecture", ",", "other", ".", "architecture", ")", "&&", "objects", ".", "equals", "(", "this", ".", "os", ",", "other", ".", "os", ")", "&&", "objects", ".", "equals", "(", "this", ".", "variant", ",", "other", ".", "variant", ")", ";", "}"], "token_count": 97, "vocab_size": 35, "cyclomatic_complexity": 6, "ast_node_count": 135, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 65, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.588380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eaa08633eb03cd038f8944c70cc81177b0c03308", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 59, "end_line": 62, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn Objects.hash(this.architecture, this.os, this.variant);\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn Objects.hash(this.architecture, this.os, this.variant);\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "objects", ".", "hash", "(", "this", ".", "architecture", ",", "this", ".", "os", ",", "this", ".", "variant", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.588651+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99838402f8c43f76c182abb7c49a9ecbc7d4da40", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 64, "end_line": 74, "nloc": 11, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\tStringBuilder builder = new StringBuilder(this.os);\n\t\tif (this.architecture != null) {\n\t\t\tbuilder.append(\"/\").append(this.architecture);\n\t\t}\n\t\tif (this.variant != null) {\n\t\t\tbuilder.append(\"/\").append(this.variant);\n\t\t}\n\t\treturn builder.toString();\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\tStringBuilder builder = new StringBuilder(this.os);\n\t\tif (this.architecture != null) {\n\t\t\tbuilder.append(\"/\").append(this.architecture);\n\t\t}\n\t\tif (this.variant != null) {\n\t\t\tbuilder.append(\"/\").append(this.variant);\n\t\t}\n\t\treturn builder.toString();\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "string", "builder", "builder", "=", "new", "string", "builder", "(", "this", ".", "os", ")", ";", "if", "(", "this", ".", "architecture", "!=", "null", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ".", "append", "(", "this", ".", "architecture", ")", ";", "}", "if", "(", "this", ".", "variant", "!=", "null", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ".", "append", "(", "this", ".", "variant", ")", ";", "}", "return", "builder", ".", "to", "string", "(", ")", ";", "}"], "token_count": 79, "vocab_size": 24, "cyclomatic_complexity": 3, "ast_node_count": 110, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.588957+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eb361eb175c9bcf846c2b3bd098e20ad450970fa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 82, "end_line": 92, "nloc": 11, "method_source_normalized": "public staticImagePlatformof(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString[] split = value.split(\"/+\");\n\t\treturn switch (split.length) {\n\t\t\tcase 1 -> new ImagePlatform(split[0], null, null);\n\t\t\tcase 2 -> new ImagePlatform(split[0], split[1], null);\n\t\t\tcase 3 -> new ImagePlatform(split[0], split[1], split[2]);\n\t\t\tdefault -> throw new IllegalArgumentException(\n\t\t\t\t\t\"'value' [\" + value + \"] must be in the form 'os[/architecture[/variant]]'\");\n\t\t};\n\t}", "original_code": "public static ImagePlatform of(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tString[] split = value.split(\"/+\");\n\t\treturn switch (split.length) {\n\t\t\tcase 1 -> new ImagePlatform(split[0], null, null);\n\t\t\tcase 2 -> new ImagePlatform(split[0], split[1], null);\n\t\t\tcase 3 -> new ImagePlatform(split[0], split[1], split[2]);\n\t\t\tdefault -> throw new IllegalArgumentException(\n\t\t\t\t\t\"'value' [\" + value + \"] must be in the form 'os[/architecture[/variant]]'\");\n\t\t};\n\t}", "code_tokens": ["public", "static", "image", "platform", "of", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "string", "[", "]", "split", "=", "value", ".", "split", "(", "__STR__", ")", ";", "return", "switch", "(", "split", ".", "length", ")", "{", "case", "__NUM__", "->", "new", "image", "platform", "(", "split", "[", "__NUM__", "]", ",", "null", ",", "null", ")", ";", "case", "__NUM__", "->", "new", "image", "platform", "(", "split", "[", "__NUM__", "]", ",", "split", "[", "__NUM__", "]", ",", "null", ")", ";", "case", "__NUM__", "->", "new", "image", "platform", "(", "split", "[", "__NUM__", "]", ",", "split", "[", "__NUM__", "]", ",", "split", "[", "__NUM__", "]", ")", ";", "default", "->", "throw", "new", "illegal", "argument", "exception", "(", "__STR__", "+", "value", "+", "__STR__", ")", ";", "}", ";", "}"], "token_count": 118, "vocab_size": 36, "cyclomatic_complexity": 4, "ast_node_count": 158, "n_identifiers": 24, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 85, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.589289+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5f3a155fa35437f5dbcbda49faccd9cd5b24a565", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatform.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 100, "end_line": 102, "nloc": 3, "method_source_normalized": "public staticImagePlatformfrom(Image image){\n\t\treturn new ImagePlatform(image.getOs(), image.getArchitecture(), image.getVariant());\n\t}", "original_code": "public static ImagePlatform from(Image image) {\n\t\treturn new ImagePlatform(image.getOs(), image.getArchitecture(), image.getVariant());\n\t}", "code_tokens": ["public", "static", "image", "platform", "from", "(", "image", "image", ")", "{", "return", "new", "image", "platform", "(", "image", ".", "get", "os", "(", ")", ",", "image", ".", "get", "architecture", "(", ")", ",", "image", ".", "get", "variant", "(", ")", ")", ";", "}"], "token_count": 38, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.589562+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "66c50cd7253dbf53b92b069dd3fdb649aca6b84b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "ContainerConfig", "signature": null, "start_line": 52, "end_line": 81, "nloc": 30, "method_source_normalized": "ContainerConfig(@Nullable String user, ImageReference image, String command, List<String> args,\n\t\t\tMap<String, String> labels, List<Binding> bindings, Map<String, String> env, @Nullable String networkMode,\n\t\t\tList<String> securityOptions){\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\tAssert.hasText(command, \"'command' must not be empty\");\n\t\tObjectMapper objectMapper = SharedObjectMapper.get();\n\t\tObjectNode node = objectMapper.createObjectNode();\n\t\tif (StringUtils.hasText(user)) {\n\t\t\tnode.put(\"User\", user);\n\t\t}\n\t\tnode.put(\"Image\", image.toString());\n\t\tArrayNode commandNode = node.putArray(\"Cmd\");\n\t\tcommandNode.add(command);\n\t\targs.forEach(commandNode::add);\n\t\tArrayNode envNode = node.putArray(\"Env\");\n\t\tenv.forEach((name, value) -> envNode.add(name + \"=\" + value));\n\t\tObjectNode labelsNode = node.putObject(\"Labels\");\n\t\tlabels.forEach(labelsNode::put);\n\t\tObjectNode hostConfigNode = node.putObject(\"HostConfig\");\n\t\tif (networkMode != null) {\n\t\t\thostConfigNode.put(\"NetworkMode\", networkMode);\n\t\t}\n\t\tArrayNode bindsNode = hostConfigNode.putArray(\"Binds\");\n\t\tbindings.forEach((binding) -> bindsNode.add(binding.toString()));\n\t\tif (!CollectionUtils.isEmpty(securityOptions)) {\n\t\t\tArrayNode securityOptsNode = hostConfigNode.putArray(\"SecurityOpt\");\n\t\t\tsecurityOptions.forEach(securityOptsNode::add);\n\t\t}\n\t\tthis.json = objectMapper.writeValueAsString(node);\n\t}", "original_code": "ContainerConfig(@Nullable String user, ImageReference image, String command, List<String> args,\n\t\t\tMap<String, String> labels, List<Binding> bindings, Map<String, String> env, @Nullable String networkMode,\n\t\t\tList<String> securityOptions) {\n\t\tAssert.notNull(image, \"'image' must not be null\");\n\t\tAssert.hasText(command, \"'command' must not be empty\");\n\t\tObjectMapper objectMapper = SharedObjectMapper.get();\n\t\tObjectNode node = objectMapper.createObjectNode();\n\t\tif (StringUtils.hasText(user)) {\n\t\t\tnode.put(\"User\", user);\n\t\t}\n\t\tnode.put(\"Image\", image.toString());\n\t\tArrayNode commandNode = node.putArray(\"Cmd\");\n\t\tcommandNode.add(command);\n\t\targs.forEach(commandNode::add);\n\t\tArrayNode envNode = node.putArray(\"Env\");\n\t\tenv.forEach((name, value) -> envNode.add(name + \"=\" + value));\n\t\tObjectNode labelsNode = node.putObject(\"Labels\");\n\t\tlabels.forEach(labelsNode::put);\n\t\tObjectNode hostConfigNode = node.putObject(\"HostConfig\");\n\t\tif (networkMode != null) {\n\t\t\thostConfigNode.put(\"NetworkMode\", networkMode);\n\t\t}\n\t\tArrayNode bindsNode = hostConfigNode.putArray(\"Binds\");\n\t\tbindings.forEach((binding) -> bindsNode.add(binding.toString()));\n\t\tif (!CollectionUtils.isEmpty(securityOptions)) {\n\t\t\tArrayNode securityOptsNode = hostConfigNode.putArray(\"SecurityOpt\");\n\t\t\tsecurityOptions.forEach(securityOptsNode::add);\n\t\t}\n\t\tthis.json = objectMapper.writeValueAsString(node);\n\t}", "code_tokens": ["container", "config", "(", "@", "nullable", "string", "user", ",", "image", "reference", "image", ",", "string", "command", ",", "list", "<", "string", ">", "args", ",", "map", "<", "string", ",", "string", ">", "labels", ",", "list", "<", "binding", ">", "bindings", ",", "map", "<", "string", ",", "string", ">", "env", ",", "@", "nullable", "string", "network", "mode", ",", "list", "<", "string", ">", "security", "options", ")", "{", "assert", ".", "not", "null", "(", "image", ",", "__STR__", ")", ";", "assert", ".", "has", "text", "(", "command", ",", "__STR__", ")", ";", "object", "mapper", "object", "mapper", "=", "shared", "object", "mapper", ".", "get", "(", ")", ";", "object", "node", "node", "=", "object", "mapper", ".", "create", "object", "node", "(", ")", ";", "if", "(", "string", "utils", ".", "has", "text", "(", "user", ")", ")", "{", "node", ".", "put", "(", "__STR__", ",", "user", ")", ";", "}", "node", ".", "put", "(", "__STR__", ",", "image", ".", "to", "string", "(", ")", ")", ";", "array", "node", "command", "node", "=", "node", ".", "put", "array", "(", "__STR__", ")", ";", "command", "node", ".", "add", "(", "command", ")", ";", "args", ".", "for", "each", "(", "command", "node", "::", "add", ")", ";", "array", "node", "env", "node", "=", "node", ".", "put", "array", "(", "__STR__", ")", ";", "env", ".", "for", "each", "(", "(", "name", ",", "value", ")", "->", "env", "node", ".", "add", "(", "name", "+", "__STR__", "+", "value", ")", ")", ";", "object", "node", "labels", "node", "=", "node", ".", "put", "object", "(", "__STR__", ")", ";", "labels", ".", "for", "each", "(", "labels", "node", "::", "put", ")", ";", "object", "node", "host", "config", "node", "=", "node", ".", "put", "object", "(", "__STR__", ")", ";", "if", "(", "network", "mode", "!=", "null", ")", "{", "host", "config", "node", ".", "put", "(", "__STR__", ",", "network", "mode", ")", ";", "}", "array", "node", "binds", "node", "=", "host", "config", "node", ".", "put", "array", "(", "__STR__", ")", ";", "bindings", ".", "for", "each", "(", "(", "binding", ")", "->", "binds", "node", ".", "add", "(", "binding", ".", "to", "string", "(", ")", ")", ")", ";", "if", "(", "!", "collection", "utils", ".", "is", "empty", "(", "security", "options", ")", ")", "{", "array", "node", "security", "opts", "node", "=", "host", "config", "node", ".", "put", "array", "(", "__STR__", ")", ";", "security", "options", ".", "for", "each", "(", "security", "opts", "node", "::", "add", ")", ";", "}", "this", ".", "json", "=", "object", "mapper", ".", "write", "value", "as", "string", "(", "node", ")", ";", "}"], "token_count": 365, "vocab_size": 67, "cyclomatic_complexity": 4, "ast_node_count": 427, "n_identifiers": 117, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 168, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.591991+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e503226f74e44cec32dfb8127aa01727e1a0808b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "writeTo", "signature": null, "start_line": 88, "end_line": 90, "nloc": 3, "method_source_normalized": "publicvoidwriteTo(OutputStream outputStream)throws IOException{\n\t\tStreamUtils.copy(this.json, StandardCharsets.UTF_8, outputStream);\n\t}", "original_code": "public void writeTo(OutputStream outputStream) throws IOException {\n\t\tStreamUtils.copy(this.json, StandardCharsets.UTF_8, outputStream);\n\t}", "code_tokens": ["public", "void", "write", "to", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "stream", "utils", ".", "copy", "(", "this", ".", "json", ",", "standard", "charsets", ".", "utf", "8", ",", "output", "stream", ")", ";", "}"], "token_count": 34, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.592307+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1b647bcfc319caa8b7969e9c9ed5f0055c7d23f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 92, "end_line": 95, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.json;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.json;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "json", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.592551+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "24313c9c56e2a57439d00e050121273df25fca81", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 103, "end_line": 107, "nloc": 5, "method_source_normalized": "public staticContainerConfigof(ImageReference imageReference, Consumer<Update> update){\n\t\tAssert.notNull(imageReference, \"'imageReference' must not be null\");\n\t\tAssert.notNull(update, \"'update' must not be null\");\n\t\treturn new Update(imageReference).run(update);\n\t}", "original_code": "public static ContainerConfig of(ImageReference imageReference, Consumer<Update> update) {\n\t\tAssert.notNull(imageReference, \"'imageReference' must not be null\");\n\t\tAssert.notNull(update, \"'update' must not be null\");\n\t\treturn new Update(imageReference).run(update);\n\t}", "code_tokens": ["public", "static", "container", "config", "of", "(", "image", "reference", "image", "reference", ",", "consumer", "<", "update", ">", "update", ")", "{", "assert", ".", "not", "null", "(", "image", "reference", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "update", ",", "__STR__", ")", ";", "return", "new", "update", "(", "image", "reference", ")", ".", "run", "(", "update", ")", ";", "}"], "token_count": 53, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 17, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.592817+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b9193f3c9c2db3417fd087387ba8f5f8cbe851fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "Update", "signature": null, "start_line": 132, "end_line": 134, "nloc": 3, "method_source_normalized": "Update(ImageReference image){\n\t\t\tthis.image = image;\n\t\t}", "original_code": "Update(ImageReference image) {\n\t\t\tthis.image = image;\n\t\t}", "code_tokens": ["update", "(", "image", "reference", "image", ")", "{", "this", ".", "image", "=", "image", ";", "}"], "token_count": 14, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.593089+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a501cb9949fb51a709046073f014a3e35a19903d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "run", "signature": null, "start_line": 136, "end_line": 141, "nloc": 6, "method_source_normalized": "privateContainerConfigrun(Consumer<Update> update){\n\t\t\tupdate.accept(this);\n\t\t\tAssert.state(this.command != null, \"'command' must not be null\");\n\t\t\treturn new ContainerConfig(this.user, this.image, this.command, this.args, this.labels, this.bindings,\n\t\t\t\t\tthis.env, this.networkMode, this.securityOptions);\n\t\t}", "original_code": "private ContainerConfig run(Consumer<Update> update) {\n\t\t\tupdate.accept(this);\n\t\t\tAssert.state(this.command != null, \"'command' must not be null\");\n\t\t\treturn new ContainerConfig(this.user, this.image, this.command, this.args, this.labels, this.bindings,\n\t\t\t\t\tthis.env, this.networkMode, this.securityOptions);\n\t\t}", "code_tokens": ["private", "container", "config", "run", "(", "consumer", "<", "update", ">", "update", ")", "{", "update", ".", "accept", "(", "this", ")", ";", "assert", ".", "state", "(", "this", ".", "command", "!=", "null", ",", "__STR__", ")", ";", "return", "new", "container", "config", "(", "this", ".", "user", ",", "this", ".", "image", ",", "this", ".", "command", ",", "this", ".", "args", ",", "this", ".", "labels", ",", "this", ".", "bindings", ",", "this", ".", "env", ",", "this", ".", "network", "mode", ",", "this", ".", "security", "options", ")", ";", "}"], "token_count": 77, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 20, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.593372+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3b5702c96c236f3b0db06918690a2de4a4126aa8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withUser", "signature": null, "start_line": 147, "end_line": 149, "nloc": 3, "method_source_normalized": "publicvoidwithUser(String user){\n\t\t\tthis.user = user;\n\t\t}", "original_code": "public void withUser(String user) {\n\t\t\tthis.user = user;\n\t\t}", "code_tokens": ["public", "void", "with", "user", "(", "string", "user", ")", "{", "this", ".", "user", "=", "user", ";", "}"], "token_count": 16, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.593627+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dacf5cedc5386d739d92cf7e67f3119cc7d0490f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withCommand", "signature": null, "start_line": 157, "end_line": 160, "nloc": 4, "method_source_normalized": "publicvoidwithCommand(String command, String... args){\n\t\t\tthis.command = command;\n\t\t\twithArgs(args);\n\t\t}", "original_code": "public void withCommand(String command, String... args) {\n\t\t\tthis.command = command;\n\t\t\twithArgs(args);\n\t\t}", "code_tokens": ["public", "void", "with", "command", "(", "string", "command", ",", "string", "...", "args", ")", "{", "this", ".", "command", "=", "command", ";", "with", "args", "(", "args", ")", ";", "}"], "token_count": 26, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.593877+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fc795e9e42327e55b06e774e1249fe0332ec2c9d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withArgs", "signature": null, "start_line": 166, "end_line": 168, "nloc": 3, "method_source_normalized": "publicvoidwithArgs(String... args){\n\t\t\tthis.args.addAll(Arrays.asList(args));\n\t\t}", "original_code": "public void withArgs(String... args) {\n\t\t\tthis.args.addAll(Arrays.asList(args));\n\t\t}", "code_tokens": ["public", "void", "with", "args", "(", "string", "...", "args", ")", "{", "this", ".", "args", ".", "add", "all", "(", "arrays", ".", "as", "list", "(", "args", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.594121+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "be9ff027b54e3374443683688d23f0565514a975", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withLabel", "signature": null, "start_line": 175, "end_line": 177, "nloc": 3, "method_source_normalized": "publicvoidwithLabel(String name, String value){\n\t\t\tthis.labels.put(name, value);\n\t\t}", "original_code": "public void withLabel(String name, String value) {\n\t\t\tthis.labels.put(name, value);\n\t\t}", "code_tokens": ["public", "void", "with", "label", "(", "string", "name", ",", "string", "value", ")", "{", "this", ".", "labels", ".", "put", "(", "name", ",", "value", ")", ";", "}"], "token_count": 24, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.594367+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f0aabc906944efb53bd3d0c420ed8f6ea921a6e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withBinding", "signature": null, "start_line": 183, "end_line": 185, "nloc": 3, "method_source_normalized": "publicvoidwithBinding(Binding binding){\n\t\t\tthis.bindings.add(binding);\n\t\t}", "original_code": "public void withBinding(Binding binding) {\n\t\t\tthis.bindings.add(binding);\n\t\t}", "code_tokens": ["public", "void", "with", "binding", "(", "binding", "binding", ")", "{", "this", ".", "bindings", ".", "add", "(", "binding", ")", ";", "}"], "token_count": 19, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.594606+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e6179d3197693d97c7a084ba1a901f7ea9b6a47", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withEnv", "signature": null, "start_line": 192, "end_line": 194, "nloc": 3, "method_source_normalized": "publicvoidwithEnv(String name, String value){\n\t\t\tthis.env.put(name, value);\n\t\t}", "original_code": "public void withEnv(String name, String value) {\n\t\t\tthis.env.put(name, value);\n\t\t}", "code_tokens": ["public", "void", "with", "env", "(", "string", "name", ",", "string", "value", ")", "{", "this", ".", "env", ".", "put", "(", "name", ",", "value", ")", ";", "}"], "token_count": 24, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.594851+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2645117b92dfbabd49a9ed995d333378e06585ba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withNetworkMode", "signature": null, "start_line": 201, "end_line": 203, "nloc": 3, "method_source_normalized": "publicvoidwithNetworkMode(@Nullable String networkMode){\n\t\t\tthis.networkMode = networkMode;\n\t\t}", "original_code": "public void withNetworkMode(@Nullable String networkMode) {\n\t\t\tthis.networkMode = networkMode;\n\t\t}", "code_tokens": ["public", "void", "with", "network", "mode", "(", "@", "nullable", "string", "network", "mode", ")", "{", "this", ".", "network", "mode", "=", "network", "mode", ";", "}"], "token_count": 22, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.595098+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b63958c3bd9c451cb6bf6178e951c3988d725551", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfig.java", "file_blob_sha": null, "method_name": "withSecurityOption", "signature": null, "start_line": 209, "end_line": 211, "nloc": 3, "method_source_normalized": "publicvoidwithSecurityOption(String option){\n\t\t\tthis.securityOptions.add(option);\n\t\t}", "original_code": "public void withSecurityOption(String option) {\n\t\t\tthis.securityOptions.add(option);\n\t\t}", "code_tokens": ["public", "void", "with", "security", "option", "(", "string", "option", ")", "{", "this", ".", "security", "options", ".", "add", "(", "option", ")", ";", "}"], "token_count": 21, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.595341+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "12c5191d723a7da5a22bed7cf7282dbd5d3d10fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReference.java", "file_blob_sha": null, "method_name": "ContainerReference", "signature": null, "start_line": 33, "end_line": 36, "nloc": 4, "method_source_normalized": "privateContainerReference(String value){\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tthis.value = value;\n\t}", "original_code": "private ContainerReference(String value) {\n\t\tAssert.hasText(value, \"'value' must not be empty\");\n\t\tthis.value = value;\n\t}", "code_tokens": ["private", "container", "reference", "(", "string", "value", ")", "{", "assert", ".", "has", "text", "(", "value", ",", "__STR__", ")", ";", "this", ".", "value", "=", "value", ";", "}"], "token_count": 25, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.596081+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "174eca40bc1d4b643d39d0e31f39231f2b98e5d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReference.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 38, "end_line": 48, "nloc": 11, "method_source_normalized": "@Override\n\tpublicbooleanequals(@Nullable Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tContainerReference other = (ContainerReference) obj;\n\t\treturn this.value.equals(other.value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(@Nullable Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (obj == null || getClass() != obj.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tContainerReference other = (ContainerReference) obj;\n\t\treturn this.value.equals(other.value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "@", "nullable", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "obj", "==", "null", "||", "get", "class", "(", ")", "!=", "obj", ".", "get", "class", "(", ")", ")", "{", "return", "false", ";", "}", "container", "reference", "other", "=", "(", "container", "reference", ")", "obj", ";", "return", "this", ".", "value", ".", "equals", "(", "other", ".", "value", ")", ";", "}"], "token_count": 69, "vocab_size": 30, "cyclomatic_complexity": 4, "ast_node_count": 97, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.596381+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1dc25f199b7b03a0a36c29ad774b1a85595dda35", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReference.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 50, "end_line": 53, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn this.value.hashCode();\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn this.value.hashCode();\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "this", ".", "value", ".", "hash", "code", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.596642+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2ee79c872cb11ab0adbd39e98ddec6585d6d09c1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReference.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 55, "end_line": 58, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.596881+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "66fb0d5359fdccff1c5c4fd2e6ae3f5490a0da1e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReference.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 65, "end_line": 67, "nloc": 3, "method_source_normalized": "public staticContainerReferenceof(String value){\n\t\treturn new ContainerReference(value);\n\t}", "original_code": "public static ContainerReference of(String value) {\n\t\treturn new ContainerReference(value);\n\t}", "code_tokens": ["public", "static", "container", "reference", "of", "(", "string", "value", ")", "{", "return", "new", "container", "reference", "(", "value", ")", ";", "}"], "token_count": 19, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.597123+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "889bff37b7e8d825867eda5ce66923113c9059a6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/BlobReference.java", "file_blob_sha": null, "method_name": "BlobReference", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "BlobReference(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.digest = extractDigest();\n\t\tthis.mediaType = extractMediaType();\n\t}", "original_code": "BlobReference(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.digest = extractDigest();\n\t\tthis.mediaType = extractMediaType();\n\t}", "code_tokens": ["blob", "reference", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "digest", "=", "extract", "digest", "(", ")", ";", "this", ".", "media", "type", "=", "extract", "media", "type", "(", ")", ";", "}"], "token_count": 41, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.597877+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "efdb280401f68105505015b3720751d8c3f06075", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/BlobReference.java", "file_blob_sha": null, "method_name": "extractMediaType", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "privateStringextractMediaType(){\n\t\tString result = valueAt(\"/mediaType\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private String extractMediaType() {\n\t\tString result = valueAt(\"/mediaType\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "string", "extract", "media", "type", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 36, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.598142+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "248ee8582f8dad25a80d81a895dab19a38a89fbd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/BlobReference.java", "file_blob_sha": null, "method_name": "extractDigest", "signature": null, "start_line": 50, "end_line": 54, "nloc": 5, "method_source_normalized": "privateStringextractDigest(){\n\t\tString result = valueAt(\"/digest\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "original_code": "private String extractDigest() {\n\t\tString result = valueAt(\"/digest\", String.class);\n\t\tAssert.state(result != null, \"'result' must not be null\");\n\t\treturn result;\n\t}", "code_tokens": ["private", "string", "extract", "digest", "(", ")", "{", "string", "result", "=", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ";", "assert", ".", "state", "(", "result", "!=", "null", ",", "__STR__", ")", ";", "return", "result", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.598402+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8409467a9aedb96c80021e4843f3d2d3b86a358e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/BlobReference.java", "file_blob_sha": null, "method_name": "getDigest", "signature": null, "start_line": 60, "end_line": 62, "nloc": 3, "method_source_normalized": "publicStringgetDigest(){\n\t\treturn this.digest;\n\t}", "original_code": "public String getDigest() {\n\t\treturn this.digest;\n\t}", "code_tokens": ["public", "string", "get", "digest", "(", ")", "{", "return", "this", ".", "digest", ";", "}"], "token_count": 13, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.598641+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8780155e3476e134118778f08be76f73497c1a91", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/BlobReference.java", "file_blob_sha": null, "method_name": "getMediaType", "signature": null, "start_line": 68, "end_line": 70, "nloc": 3, "method_source_normalized": "publicStringgetMediaType(){\n\t\treturn this.mediaType;\n\t}", "original_code": "public String getMediaType() {\n\t\treturn this.mediaType;\n\t}", "code_tokens": ["public", "string", "get", "media", "type", "(", ")", "{", "return", "this", ".", "media", "type", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.598876+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3a3a79165ede0bd2f3021a263b4e36aba5bbe1e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/RandomString.java", "file_blob_sha": null, "method_name": "RandomString", "signature": null, "start_line": 33, "end_line": 34, "nloc": 2, "method_source_normalized": "privateRandomString(){\n\t}", "original_code": "private RandomString() {\n\t}", "code_tokens": ["private", "random", "string", "(", ")", "{", "}"], "token_count": 7, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.599463+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "224699a41337a03d8938a99d5347d34903c34104", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/RandomString.java", "file_blob_sha": null, "method_name": "generate", "signature": null, "start_line": 36, "end_line": 39, "nloc": 4, "method_source_normalized": "staticStringgenerate(String prefix, int randomLength){\n\t\tAssert.notNull(prefix, \"'prefix' must not be null\");\n\t\treturn prefix + generateRandom(randomLength);\n\t}", "original_code": "static String generate(String prefix, int randomLength) {\n\t\tAssert.notNull(prefix, \"'prefix' must not be null\");\n\t\treturn prefix + generateRandom(randomLength);\n\t}", "code_tokens": ["static", "string", "generate", "(", "string", "prefix", ",", "int", "random", "length", ")", "{", "assert", ".", "not", "null", "(", "prefix", ",", "__STR__", ")", ";", "return", "prefix", "+", "generate", "random", "(", "random", "length", ")", ";", "}"], "token_count": 33, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 11, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.599717+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e237ba578695b2dafef8e94a20350da76225e89", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/RandomString.java", "file_blob_sha": null, "method_name": "generateRandom", "signature": null, "start_line": 41, "end_line": 44, "nloc": 4, "method_source_normalized": "staticCharSequencegenerateRandom(int length){\n\t\tIntStream chars = random.ints('a', 'z' + 1).limit(length);\n\t\treturn chars.collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append);\n\t}", "original_code": "static CharSequence generateRandom(int length) {\n\t\tIntStream chars = random.ints('a', 'z' + 1).limit(length);\n\t\treturn chars.collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append);\n\t}", "code_tokens": ["static", "char", "sequence", "generate", "random", "(", "int", "length", ")", "{", "int", "stream", "chars", "=", "random", ".", "ints", "(", "__STR__", ",", "__STR__", "+", "__NUM__", ")", ".", "limit", "(", "length", ")", ";", "return", "chars", ".", "collect", "(", "string", "builder", "::", "new", ",", "string", "builder", "::", "append", "code", "point", ",", "string", "builder", "::", "append", ")", ";", "}"], "token_count": 54, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.599987+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5ea4423202daff468a619470e339391025d29efa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "Binding", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "privateBinding(String value){\n\t\tthis.value = value;\n\t}", "original_code": "private Binding(String value) {\n\t\tthis.value = value;\n\t}", "code_tokens": ["private", "binding", "(", "string", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.601372+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4df2efea37cdedf870257e7aae0023ec68ec8de5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "equals", "signature": null, "start_line": 47, "end_line": 56, "nloc": 10, "method_source_normalized": "@Override\n\tpublicbooleanequals(Object obj){\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!(obj instanceof Binding binding)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Objects.equals(this.value, binding.value);\n\t}", "original_code": "@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!(obj instanceof Binding binding)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Objects.equals(this.value, binding.value);\n\t}", "code_tokens": ["@", "override", "public", "boolean", "equals", "(", "object", "obj", ")", "{", "if", "(", "this", "==", "obj", ")", "{", "return", "true", ";", "}", "if", "(", "!", "(", "obj", "instanceof", "binding", "binding", ")", ")", "{", "return", "false", ";", "}", "return", "objects", ".", "equals", "(", "this", ".", "value", ",", "binding", ".", "value", ")", ";", "}"], "token_count": 51, "vocab_size": 25, "cyclomatic_complexity": 3, "ast_node_count": 75, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 1, "ast_error_nodes": ["binding"], "n_whitespaces": 44, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.601653+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "356172113d6672672efe2317237ee46152d276ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "hashCode", "signature": null, "start_line": 58, "end_line": 61, "nloc": 4, "method_source_normalized": "@Override\n\tpublicinthashCode(){\n\t\treturn Objects.hash(this.value);\n\t}", "original_code": "@Override\n\tpublic int hashCode() {\n\t\treturn Objects.hash(this.value);\n\t}", "code_tokens": ["@", "override", "public", "int", "hash", "code", "(", ")", "{", "return", "objects", ".", "hash", "(", "this", ".", "value", ")", ";", "}"], "token_count": 20, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.601904+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7d77f4db5ed42d7950a33205e2e3421fca008ee2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 63, "end_line": 66, "nloc": 4, "method_source_normalized": "@Override\n\tpublicStringtoString(){\n\t\treturn this.value;\n\t}", "original_code": "@Override\n\tpublic String toString() {\n\t\treturn this.value;\n\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "token_count": 15, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.602144+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "66bd771d6dd0665f167a256a97a5932a23374f3e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "usesSensitiveContainerPath", "signature": null, "start_line": 73, "end_line": 75, "nloc": 3, "method_source_normalized": "publicbooleanusesSensitiveContainerPath(){\n\t\treturn SENSITIVE_CONTAINER_PATHS.contains(getContainerDestinationPath());\n\t}", "original_code": "public boolean usesSensitiveContainerPath() {\n\t\treturn SENSITIVE_CONTAINER_PATHS.contains(getContainerDestinationPath());\n\t}", "code_tokens": ["public", "boolean", "uses", "sensitive", "container", "path", "(", ")", "{", "return", "sensitive", "container", "paths", ".", "contains", "(", "get", "container", "destination", "path", "(", ")", ")", ";", "}"], "token_count": 25, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 4, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.602387+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8ab4a58e73f646fc8b2801e078799f0bd9fa2b99", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "getContainerDestinationPath", "signature": null, "start_line": 81, "end_line": 85, "nloc": 5, "method_source_normalized": "StringgetContainerDestinationPath(){\n\t\tList<String> parts = getParts();\n\t\tAssert.state(parts.size() >= 2, () -> \"Expected 2 or more parts, but found %d\".formatted(parts.size()));\n\t\treturn parts.get(1);\n\t}", "original_code": "String getContainerDestinationPath() {\n\t\tList<String> parts = getParts();\n\t\tAssert.state(parts.size() >= 2, () -> \"Expected 2 or more parts, but found %d\".formatted(parts.size()));\n\t\treturn parts.get(1);\n\t}", "code_tokens": ["string", "get", "container", "destination", "path", "(", ")", "{", "list", "<", "string", ">", "parts", "=", "get", "parts", "(", ")", ";", "assert", ".", "state", "(", "parts", ".", "size", "(", ")", ">=", "__NUM__", ",", "(", ")", "->", "__STR__", ".", "formatted", "(", "parts", ".", "size", "(", ")", ")", ")", ";", "return", "parts", ".", "get", "(", "__NUM__", ")", ";", "}"], "token_count": 55, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 15, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.602654+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20a3518ca476bc74e71251d4cb3c0b5d3d96278f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "getParts", "signature": null, "start_line": 87, "end_line": 104, "nloc": 18, "method_source_normalized": "privateList<String>getParts(){\n\t\t// Format is <host>:<container>:[<options>]\n\t\tList<String> parts = new ArrayList<>();\n\t\tStringBuilder buffer = new StringBuilder();\n\t\tfor (int i = 0; i < this.value.length(); i++) {\n\t\t\tchar ch = this.value.charAt(i);\n\t\t\tchar nextChar = (i + 1 < this.value.length()) ? this.value.charAt(i + 1) : '\\0';\n\t\t\tif (ch == ':' && nextChar != '\\\\') {\n\t\t\t\tparts.add(buffer.toString());\n\t\t\t\tbuffer.setLength(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbuffer.append(ch);\n\t\t\t}\n\t\t}\n\t\tparts.add(buffer.toString());\n\t\treturn parts;\n\t}", "original_code": "private List<String> getParts() {\n\t\t// Format is <host>:<container>:[<options>]\n\t\tList<String> parts = new ArrayList<>();\n\t\tStringBuilder buffer = new StringBuilder();\n\t\tfor (int i = 0; i < this.value.length(); i++) {\n\t\t\tchar ch = this.value.charAt(i);\n\t\t\tchar nextChar = (i + 1 < this.value.length()) ? this.value.charAt(i + 1) : '\\0';\n\t\t\tif (ch == ':' && nextChar != '\\\\') {\n\t\t\t\tparts.add(buffer.toString());\n\t\t\t\tbuffer.setLength(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbuffer.append(ch);\n\t\t\t}\n\t\t}\n\t\tparts.add(buffer.toString());\n\t\treturn parts;\n\t}", "code_tokens": ["private", "list", "<", "string", ">", "get", "parts", "(", ")", "{", "// Format is <host>:<container>:[<options>]", "list", "<", "string", ">", "parts", "=", "new", "array", "list", "<", ">", "(", ")", ";", "string", "builder", "buffer", "=", "new", "string", "builder", "(", ")", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "this", ".", "value", ".", "length", "(", ")", ";", "i", "++", ")", "{", "char", "ch", "=", "this", ".", "value", ".", "char", "at", "(", "i", ")", ";", "char", "next", "char", "=", "(", "i", "+", "__NUM__", "<", "this", ".", "value", ".", "length", "(", ")", ")", "?", "this", ".", "value", ".", "char", "at", "(", "i", "+", "__NUM__", ")", ":", "__STR__", ";", "if", "(", "ch", "==", "__STR__", "&&", "next", "char", "!=", "__STR__", ")", "{", "parts", ".", "add", "(", "buffer", ".", "to", "string", "(", ")", ")", ";", "buffer", ".", "set", "length", "(", "__NUM__", ")", ";", "}", "else", "{", "buffer", ".", "append", "(", "ch", ")", ";", "}", "}", "parts", ".", "add", "(", "buffer", ".", "to", "string", "(", ")", ")", ";", "return", "parts", ";", "}"], "token_count": 161, "vocab_size": 45, "cyclomatic_complexity": 5, "ast_node_count": 222, "n_identifiers": 42, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 111, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.603016+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "afe5c751dd027ed331fd081e766287b3d6188371", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 112, "end_line": 115, "nloc": 4, "method_source_normalized": "public staticBindingof(String value){\n\t\tAssert.notNull(value, \"'value' must not be null\");\n\t\treturn new Binding(value);\n\t}", "original_code": "public static Binding of(String value) {\n\t\tAssert.notNull(value, \"'value' must not be null\");\n\t\treturn new Binding(value);\n\t}", "code_tokens": ["public", "static", "binding", "of", "(", "string", "value", ")", "{", "assert", ".", "not", "null", "(", "value", ",", "__STR__", ")", ";", "return", "new", "binding", "(", "value", ")", ";", "}"], "token_count": 27, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.603292+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f58443bbefe56828d06a465f34ad873af86d45f2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 123, "end_line": 126, "nloc": 4, "method_source_normalized": "public staticBindingfrom(VolumeName sourceVolume, String destination){\n\t\tAssert.notNull(sourceVolume, \"'sourceVolume' must not be null\");\n\t\treturn from(sourceVolume.toString(), destination);\n\t}", "original_code": "public static Binding from(VolumeName sourceVolume, String destination) {\n\t\tAssert.notNull(sourceVolume, \"'sourceVolume' must not be null\");\n\t\treturn from(sourceVolume.toString(), destination);\n\t}", "code_tokens": ["public", "static", "binding", "from", "(", "volume", "name", "source", "volume", ",", "string", "destination", ")", "{", "assert", ".", "not", "null", "(", "source", "volume", ",", "__STR__", ")", ";", "return", "from", "(", "source", "volume", ".", "to", "string", "(", ")", ",", "destination", ")", ";", "}"], "token_count": 40, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.603547+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "51011e226934f1ba3c6ddeb7f4968e80d882dbc1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Binding.java", "file_blob_sha": null, "method_name": "from", "signature": null, "start_line": 134, "end_line": 138, "nloc": 5, "method_source_normalized": "public staticBindingfrom(String source, String destination){\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\tAssert.notNull(destination, \"'destination' must not be null\");\n\t\treturn new Binding(source + \":\" + destination);\n\t}", "original_code": "public static Binding from(String source, String destination) {\n\t\tAssert.notNull(source, \"'source' must not be null\");\n\t\tAssert.notNull(destination, \"'destination' must not be null\");\n\t\treturn new Binding(source + \":\" + destination);\n\t}", "code_tokens": ["public", "static", "binding", "from", "(", "string", "source", ",", "string", "destination", ")", "{", "assert", ".", "not", "null", "(", "source", ",", "__STR__", ")", ";", "assert", ".", "not", "null", "(", "destination", ",", "__STR__", ")", ";", "return", "new", "binding", "(", "source", "+", "__STR__", "+", "destination", ")", ";", "}"], "token_count": 44, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.603809+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a3335d335ed138a3b38082dd6d401e6be94fd9c1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "ImageArchiveManifest", "signature": null, "start_line": 39, "end_line": 42, "nloc": 4, "method_source_normalized": "protectedImageArchiveManifest(JsonNode node){\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.entries = childrenAt(null, ManifestEntry::new);\n\t}", "original_code": "protected ImageArchiveManifest(JsonNode node) {\n\t\tsuper(node, MethodHandles.lookup());\n\t\tthis.entries = childrenAt(null, ManifestEntry::new);\n\t}", "code_tokens": ["protected", "image", "archive", "manifest", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "entries", "=", "children", "at", "(", "null", ",", "manifest", "entry", "::", "new", ")", ";", "}"], "token_count": 38, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 9, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.604721+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cbb8b2d475282095e1f2289416dc358a6395725f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "getEntries", "signature": null, "start_line": 48, "end_line": 50, "nloc": 3, "method_source_normalized": "publicList<ManifestEntry>getEntries(){\n\t\treturn this.entries;\n\t}", "original_code": "public List<ManifestEntry> getEntries() {\n\t\treturn this.entries;\n\t}", "code_tokens": ["public", "list", "<", "manifest", "entry", ">", "get", "entries", "(", ")", "{", "return", "this", ".", "entries", ";", "}"], "token_count": 17, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.604964+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "92c7fb6a8de74908cc963c2e7f97e6d0f52dd767", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 58, "end_line": 60, "nloc": 3, "method_source_normalized": "public staticImageArchiveManifestof(InputStream content)throws IOException{\n\t\treturn of(content, ImageArchiveManifest::new);\n\t}", "original_code": "public static ImageArchiveManifest of(InputStream content) throws IOException {\n\t\treturn of(content, ImageArchiveManifest::new);\n\t}", "code_tokens": ["public", "static", "image", "archive", "manifest", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "image", "archive", "manifest", "::", "new", ")", ";", "}"], "token_count": 28, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.605209+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47c59adb065811e4550d526e04afe62973bbd9bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "ManifestEntry", "signature": null, "start_line": 66, "end_line": 69, "nloc": 4, "method_source_normalized": "protectedManifestEntry(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.layers = extractLayers();\n\t\t}", "original_code": "protected ManifestEntry(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t\tthis.layers = extractLayers();\n\t\t}", "code_tokens": ["protected", "manifest", "entry", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "this", ".", "layers", "=", "extract", "layers", "(", ")", ";", "}"], "token_count": 31, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.605464+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9409232116acfc3b9de2b018bce3c795ae4322f4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "getLayers", "signature": null, "start_line": 75, "end_line": 77, "nloc": 3, "method_source_normalized": "publicList<String>getLayers(){\n\t\t\treturn this.layers;\n\t\t}", "original_code": "public List<String> getLayers() {\n\t\t\treturn this.layers;\n\t\t}", "code_tokens": ["public", "list", "<", "string", ">", "get", "layers", "(", ")", "{", "return", "this", ".", "layers", ";", "}"], "token_count": 16, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.605701+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "64c2dfb57c2dbccbfd497b512547340caa47bbe4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifest.java", "file_blob_sha": null, "method_name": "extractLayers", "signature": null, "start_line": 79, "end_line": 86, "nloc": 8, "method_source_normalized": "@SuppressWarnings(\"unchecked\")\n\t\tprivateList<String>extractLayers(){\n\t\t\tList<String> layers = valueAt(\"/Layers\", List.class);\n\t\t\tif (layers == null) {\n\t\t\t\treturn Collections.emptyList();\n\t\t\t}\n\t\t\treturn layers;\n\t\t}", "original_code": "@SuppressWarnings(\"unchecked\")\n\t\tprivate List<String> extractLayers() {\n\t\t\tList<String> layers = valueAt(\"/Layers\", List.class);\n\t\t\tif (layers == null) {\n\t\t\t\treturn Collections.emptyList();\n\t\t\t}\n\t\t\treturn layers;\n\t\t}", "code_tokens": ["@", "suppress", "warnings", "(", "__STR__", ")", "private", "list", "<", "string", ">", "extract", "layers", "(", ")", "{", "list", "<", "string", ">", "layers", "=", "value", "at", "(", "__STR__", ",", "list", ".", "class", ")", ";", "if", "(", "layers", "==", "null", ")", "{", "return", "collections", ".", "empty", "list", "(", ")", ";", "}", "return", "layers", ";", "}"], "token_count": 52, "vocab_size": 28, "cyclomatic_complexity": 2, "ast_node_count": 71, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.605976+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ad838da7bffa5c6db472ea5264dfd07e8abfc28c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "Layer", "signature": null, "start_line": 43, "end_line": 47, "nloc": 5, "method_source_normalized": "Layer(TarArchive tarArchive)throws NoSuchAlgorithmException, IOException{\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tthis.content = InspectedContent.of(tarArchive::writeTo, digest::update);\n\t\tthis.id = LayerId.ofSha256Digest(digest.digest());\n\t}", "original_code": "Layer(TarArchive tarArchive) throws NoSuchAlgorithmException, IOException {\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tthis.content = InspectedContent.of(tarArchive::writeTo, digest::update);\n\t\tthis.id = LayerId.ofSha256Digest(digest.digest());\n\t}", "code_tokens": ["layer", "(", "tar", "archive", "tar", "archive", ")", "throws", "no", "such", "algorithm", "exception", ",", "io", "exception", "{", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "this", ".", "content", "=", "inspected", "content", ".", "of", "(", "tar", "archive", "::", "write", "to", ",", "digest", "::", "update", ")", ";", "this", ".", "id", "=", "layer", "id", ".", "of", "sha", "256", "digest", "(", "digest", ".", "digest", "(", ")", ")", ";", "}"], "token_count": 69, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 76, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.607103+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eb37fdc1283706aa4d41ba96d89deff2f6405837", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "getId", "signature": null, "start_line": 53, "end_line": 55, "nloc": 3, "method_source_normalized": "publicLayerIdgetId(){\n\t\treturn this.id;\n\t}", "original_code": "public LayerId getId() {\n\t\treturn this.id;\n\t}", "code_tokens": ["public", "layer", "id", "get", "id", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "token_count": 14, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.607349+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "af57cd7d21a7d150b940332c78702d02afae1735", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "size", "signature": null, "start_line": 57, "end_line": 60, "nloc": 4, "method_source_normalized": "@Override\n\tpublicintsize(){\n\t\treturn this.content.size();\n\t}", "original_code": "@Override\n\tpublic int size() {\n\t\treturn this.content.size();\n\t}", "code_tokens": ["@", "override", "public", "int", "size", "(", ")", "{", "return", "this", ".", "content", ".", "size", "(", ")", ";", "}"], "token_count": 18, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.607594+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "181f54cacf8944ffbafbfba8046402bff7ea4f71", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "writeTo", "signature": null, "start_line": 62, "end_line": 65, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidwriteTo(OutputStream outputStream)throws IOException{\n\t\tthis.content.writeTo(outputStream);\n\t}", "original_code": "@Override\n\tpublic void writeTo(OutputStream outputStream) throws IOException {\n\t\tthis.content.writeTo(outputStream);\n\t}", "code_tokens": ["@", "override", "public", "void", "write", "to", "(", "output", "stream", "output", "stream", ")", "throws", "io", "exception", "{", "this", ".", "content", ".", "write", "to", "(", "output", "stream", ")", ";", "}"], "token_count": 28, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.607848+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98eb08ab4d9c3bb4530855cbe7b5bd91f113c464", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 73, "end_line": 76, "nloc": 4, "method_source_normalized": "public staticLayerof(IOConsumer<Layout> layout)throws IOException{\n\t\tAssert.notNull(layout, \"'layout' must not be null\");\n\t\treturn fromTarArchive(TarArchive.of(layout));\n\t}", "original_code": "public static Layer of(IOConsumer<Layout> layout) throws IOException {\n\t\tAssert.notNull(layout, \"'layout' must not be null\");\n\t\treturn fromTarArchive(TarArchive.of(layout));\n\t}", "code_tokens": ["public", "static", "layer", "of", "(", "io", "consumer", "<", "layout", ">", "layout", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "layout", ",", "__STR__", ")", ";", "return", "from", "tar", "archive", "(", "tar", "archive", ".", "of", "(", "layout", ")", ")", ";", "}"], "token_count": 41, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.608109+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d1e9bac337cce8c531afaa02829876e0547a6237", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/Layer.java", "file_blob_sha": null, "method_name": "fromTarArchive", "signature": null, "start_line": 84, "end_line": 92, "nloc": 9, "method_source_normalized": "public staticLayerfromTarArchive(TarArchive tarArchive)throws IOException{\n\t\tAssert.notNull(tarArchive, \"'tarArchive' must not be null\");\n\t\ttry {\n\t\t\treturn new Layer(tarArchive);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "public static Layer fromTarArchive(TarArchive tarArchive) throws IOException {\n\t\tAssert.notNull(tarArchive, \"'tarArchive' must not be null\");\n\t\ttry {\n\t\t\treturn new Layer(tarArchive);\n\t\t}\n\t\tcatch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["public", "static", "layer", "from", "tar", "archive", "(", "tar", "archive", "tar", "archive", ")", "throws", "io", "exception", "{", "assert", ".", "not", "null", "(", "tar", "archive", ",", "__STR__", ")", ";", "try", "{", "return", "new", "layer", "(", "tar", "archive", ")", ";", "}", "catch", "(", "no", "such", "algorithm", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 58, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 66, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": false, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.608574+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3d86f5edaf1de3111e167c295dbe00c9d3ff628a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/dockerTest/java/org/springframework/boot/buildpack/platform/docker/DockerApiIntegrationTests.java", "file_blob_sha": null, "method_name": "pullImage", "signature": null, "start_line": 36, "end_line": 41, "nloc": 6, "method_source_normalized": "@TestvoidpullImage()throws IOException{\n\t\tthis.docker.image()\n\t\t\t.pull(ImageReference.of(\"docker.io/paketobuildpacks/builder:base\"), null,\n\t\t\t\t\tnew TotalProgressPullListener(new TotalProgressBar(\"Pulling: \")));\n\t}", "original_code": "@Test\n\tvoid pullImage() throws IOException {\n\t\tthis.docker.image()\n\t\t\t.pull(ImageReference.of(\"docker.io/paketobuildpacks/builder:base\"), null,\n\t\t\t\t\tnew TotalProgressPullListener(new TotalProgressBar(\"Pulling: \")));\n\t}", "code_tokens": ["@", "test", "void", "pull", "image", "(", ")", "throws", "io", "exception", "{", "this", ".", "docker", ".", "image", "(", ")", ".", "pull", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "null", ",", "new", "total", "progress", "pull", "listener", "(", "new", "total", "progress", "bar", "(", "__STR__", ")", ")", ")", ";", "}"], "token_count": 48, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.609178+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d9a32a6d1e376ae52c49b8796bd417fc273f457a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "getStatusReturnsStatus", "signature": null, "start_line": 35, "end_line": 39, "nloc": 5, "method_source_normalized": "@TestvoidgetStatusReturnsStatus(){\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getStatus()).isEqualTo(\"status\");\n\t}", "original_code": "@Test\n\tvoid getStatusReturnsStatus() {\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getStatus()).isEqualTo(\"status\");\n\t}", "code_tokens": ["@", "test", "void", "get", "status", "returns", "status", "(", ")", "{", "progress", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "status", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.609989+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8164cb33c5045d207c85d0ef6d50d23773f1d21d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "getProgressDetailReturnsProgressDetails", "signature": null, "start_line": 41, "end_line": 45, "nloc": 5, "method_source_normalized": "@TestvoidgetProgressDetailReturnsProgressDetails(){\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t}", "original_code": "@Test\n\tvoid getProgressDetailReturnsProgressDetails() {\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t}", "code_tokens": ["@", "test", "void", "get", "progress", "detail", "returns", "progress", "details", "(", ")", "{", "progress", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "detail", "(", ")", ".", "as", "percentage", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 47, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.610262+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "49767cd79d9946be0b275321fd79c4c8c58421ea", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "getProgressDetailReturnsProgressDetailsForLongNumbers", "signature": null, "start_line": 47, "end_line": 51, "nloc": 5, "method_source_normalized": "@TestvoidgetProgressDetailReturnsProgressDetailsForLongNumbers(){\n\t\tProgressUpdateEvent event = createEvent(\"status\", new ProgressDetail(4000000000L, 8000000000L), \"progress\");\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t}", "original_code": "@Test\n\tvoid getProgressDetailReturnsProgressDetailsForLongNumbers() {\n\t\tProgressUpdateEvent event = createEvent(\"status\", new ProgressDetail(4000000000L, 8000000000L), \"progress\");\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t}", "code_tokens": ["@", "test", "void", "get", "progress", "detail", "returns", "progress", "details", "for", "long", "numbers", "(", ")", "{", "progress", "update", "event", "event", "=", "create", "event", "(", "__STR__", ",", "new", "progress", "detail", "(", "__NUM__", ",", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "detail", "(", ")", ".", "as", "percentage", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 62, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 11, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.610540+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6bce827110f513a41c995f0e26ad69e062de5e56", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "getProgressReturnsProgress", "signature": null, "start_line": 53, "end_line": 57, "nloc": 5, "method_source_normalized": "@TestvoidgetProgressReturnsProgress(){\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getProgress()).isEqualTo(\"progress\");\n\t}", "original_code": "@Test\n\tvoid getProgressReturnsProgress() {\n\t\tProgressUpdateEvent event = createEvent();\n\t\tassertThat(event.getProgress()).isEqualTo(\"progress\");\n\t}", "code_tokens": ["@", "test", "void", "get", "progress", "returns", "progress", "(", ")", "{", "progress", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.610800+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fd1269f61e33f367856eb50b1ab3d0ef9d0c48ec", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "createEvent", "signature": null, "start_line": 59, "end_line": 61, "nloc": 3, "method_source_normalized": "protectedEcreateEvent(){\n\t\treturn createEvent(\"status\", new ProgressDetail(1L, 2L), \"progress\");\n\t}", "original_code": "protected E createEvent() {\n\t\treturn createEvent(\"status\", new ProgressDetail(1L, 2L), \"progress\");\n\t}", "code_tokens": ["protected", "e", "create", "event", "(", ")", "{", "return", "create", "event", "(", "__STR__", ",", "new", "progress", "detail", "(", "__NUM__", ",", "__NUM__", ")", ",", "__STR__", ")", ";", "}"], "token_count": 26, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 4, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.611043+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8d37777a99d242404a944d350fda82829acc95e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ProgressUpdateEventTests.java", "file_blob_sha": null, "method_name": "createEvent", "signature": null, "start_line": 63, "end_line": 63, "nloc": 1, "method_source_normalized": "protected abstractEcreateEvent(String status, ProgressDetail progressDetail, String progress);", "original_code": "protected abstract E createEvent(String status, ProgressDetail progressDetail, String progress);", "code_tokens": ["protected", "abstract", "e", "create", "event", "(", "string", "status", ",", "progress", "detail", "progress", "detail", ",", "string", "progress", ")", ";"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 8, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 8, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.611284+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "71600d37ed79aea9f0146f824e4dc31268b2f0b9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ExportedImageTarTests.java", "file_blob_sha": null, "method_name": "test", "signature": null, "start_line": 38, "end_line": 57, "nloc": 20, "method_source_normalized": "@ParameterizedTest\n\t@ValueSource(strings = { \"export-docker-desktop.tar\", \"export-docker-desktop-containerd.tar\",\n\t\t\t\"export-docker-desktop-containerd-manifest-list.tar\", \"export-docker-engine.tar\", \"export-podman.tar\",\n\t\t\t\"export-docker-desktop-nested-index.tar\", \"export-docker-desktop-containerd-alt-mediatype.tar\" })voidtest(String tarFile)throws Exception{\n\t\tImageReference reference = ImageReference.of(\"test:latest\");\n\t\ttry (ExportedImageTar exportedImageTar = new ExportedImageTar(reference,\n\t\t\t\tgetClass().getResourceAsStream(tarFile))) {\n\t\t\tCompression expectedCompression = (!tarFile.contains(\"containerd\")) ? Compression.NONE : Compression.GZIP;\n\t\t\tString expectedName = (expectedCompression != Compression.GZIP)\n\t\t\t\t\t? \"5caae51697b248b905dca1a4160864b0e1a15c300981736555cdce6567e8d477\"\n\t\t\t\t\t: \"f0f1fd1bdc71ac6a4dc99cea5f5e45c86c5ec26fe4d1daceeb78207303606429\";\n\t\t\tList<String> names = new ArrayList<>();\n\t\t\texportedImageTar.exportLayers((name, tarArchive) -> {\n\t\t\t\tnames.add(name);\n\t\t\t\tassertThat(tarArchive.getCompression()).isEqualTo(expectedCompression);\n\t\t\t});\n\t\t\tassertThat(names).filteredOn((name) -> name.contains(expectedName)).isNotEmpty();\n\t\t}\n\t}", "original_code": "@ParameterizedTest\n\t@ValueSource(strings = { \"export-docker-desktop.tar\", \"export-docker-desktop-containerd.tar\",\n\t\t\t\"export-docker-desktop-containerd-manifest-list.tar\", \"export-docker-engine.tar\", \"export-podman.tar\",\n\t\t\t\"export-docker-desktop-nested-index.tar\", \"export-docker-desktop-containerd-alt-mediatype.tar\" })\n\tvoid test(String tarFile) throws Exception {\n\t\tImageReference reference = ImageReference.of(\"test:latest\");\n\t\ttry (ExportedImageTar exportedImageTar = new ExportedImageTar(reference,\n\t\t\t\tgetClass().getResourceAsStream(tarFile))) {\n\t\t\tCompression expectedCompression = (!tarFile.contains(\"containerd\")) ? Compression.NONE : Compression.GZIP;\n\t\t\tString expectedName = (expectedCompression != Compression.GZIP)\n\t\t\t\t\t? \"5caae51697b248b905dca1a4160864b0e1a15c300981736555cdce6567e8d477\"\n\t\t\t\t\t: \"f0f1fd1bdc71ac6a4dc99cea5f5e45c86c5ec26fe4d1daceeb78207303606429\";\n\t\t\tList<String> names = new ArrayList<>();\n\t\t\texportedImageTar.exportLayers((name, tarArchive) -> {\n\t\t\t\tnames.add(name);\n\t\t\t\tassertThat(tarArchive.getCompression()).isEqualTo(expectedCompression);\n\t\t\t});\n\t\t\tassertThat(names).filteredOn((name) -> name.contains(expectedName)).isNotEmpty();\n\t\t}\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "value", "source", "(", "strings", "=", "{", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", "}", ")", "void", "test", "(", "string", "tar", "file", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "try", "(", "exported", "image", "tar", "exported", "image", "tar", "=", "new", "exported", "image", "tar", "(", "reference", ",", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "tar", "file", ")", ")", ")", "{", "compression", "expected", "compression", "=", "(", "!", "tar", "file", ".", "contains", "(", "__STR__", ")", ")", "?", "compression", ".", "none", ":", "compression", ".", "gzip", ";", "string", "expected", "name", "=", "(", "expected", "compression", "!=", "compression", ".", "gzip", ")", "?", "__STR__", ":", "__STR__", ";", "list", "<", "string", ">", "names", "=", "new", "array", "list", "<", ">", "(", ")", ";", "exported", "image", "tar", ".", "export", "layers", "(", "(", "name", ",", "tar", "archive", ")", "->", "{", "names", ".", "add", "(", "name", ")", ";", "assert", "that", "(", "tar", "archive", ".", "get", "compression", "(", ")", ")", ".", "is", "equal", "to", "(", "expected", "compression", ")", ";", "}", ")", ";", "assert", "that", "(", "names", ")", ".", "filtered", "on", "(", "(", "name", ")", "->", "name", ".", "contains", "(", "expected", "name", ")", ")", ".", "is", "not", "empty", "(", ")", ";", "}", "}"], "token_count": 208, "vocab_size": 61, "cyclomatic_complexity": 1, "ast_node_count": 247, "n_identifiers": 55, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 119, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.612294+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9be82ff6471c149f10160cb22be56242d423a5b3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PushImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "getIdReturnsId", "signature": null, "start_line": 32, "end_line": 36, "nloc": 5, "method_source_normalized": "@TestvoidgetIdReturnsId(){\n\t\tPushImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getId()).isEqualTo(\"id\");\n\t}", "original_code": "@Test\n\tvoid getIdReturnsId() {\n\t\tPushImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getId()).isEqualTo(\"id\");\n\t}", "code_tokens": ["@", "test", "void", "get", "id", "returns", "id", "(", ")", "{", "push", "image", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 40, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.613018+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2cdd40e9c828652dbad9964201be8eb123672977", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PushImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "getErrorReturnsErrorDetail", "signature": null, "start_line": 38, "end_line": 43, "nloc": 6, "method_source_normalized": "@TestvoidgetErrorReturnsErrorDetail(){\n\t\tPushImageUpdateEvent event = new PushImageUpdateEvent(null, null, null, null,\n\t\t\t\tnew PushImageUpdateEvent.ErrorDetail(\"test message\"));\n\t\tassertThat(event.getErrorDetail().getMessage()).isEqualTo(\"test message\");\n\t}", "original_code": "@Test\n\tvoid getErrorReturnsErrorDetail() {\n\t\tPushImageUpdateEvent event = new PushImageUpdateEvent(null, null, null, null,\n\t\t\t\tnew PushImageUpdateEvent.ErrorDetail(\"test message\"));\n\t\tassertThat(event.getErrorDetail().getMessage()).isEqualTo(\"test message\");\n\t}", "code_tokens": ["@", "test", "void", "get", "error", "returns", "error", "detail", "(", ")", "{", "push", "image", "update", "event", "event", "=", "new", "push", "image", "update", "event", "(", "null", ",", "null", ",", "null", ",", "null", ",", "new", "push", "image", "update", "event", ".", "error", "detail", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "event", ".", "get", "error", "detail", "(", ")", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 69, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.613302+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62ffc8b9f4d3b70087a3c4f77fb4f15f9c243c57", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PushImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "createEvent", "signature": null, "start_line": 45, "end_line": 48, "nloc": 4, "method_source_normalized": "@Override\n\tprotectedPushImageUpdateEventcreateEvent(String status, ProgressDetail progressDetail, String progress){\n\t\treturn new PushImageUpdateEvent(\"id\", status, progressDetail, progress, null);\n\t}", "original_code": "@Override\n\tprotected PushImageUpdateEvent createEvent(String status, ProgressDetail progressDetail, String progress) {\n\t\treturn new PushImageUpdateEvent(\"id\", status, progressDetail, progress, null);\n\t}", "code_tokens": ["@", "override", "protected", "push", "image", "update", "event", "create", "event", "(", "string", "status", ",", "progress", "detail", "progress", "detail", ",", "string", "progress", ")", "{", "return", "new", "push", "image", "update", "event", "(", "__STR__", ",", "status", ",", "progress", "detail", ",", "progress", ",", "null", ")", ";", "}"], "token_count": 42, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.613573+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f7afe97f681bcc4bcf1561914ba558c270f62f57", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerLogTests.java", "file_blob_sha": null, "method_name": "toSystemOutPrintsToSystemOut", "signature": null, "start_line": 35, "end_line": 41, "nloc": 7, "method_source_normalized": "@TestvoidtoSystemOutPrintsToSystemOut(CapturedOutput output){\n\t\tDockerLog logger = DockerLog.toSystemOut();\n\t\tlogger.log(\"Hello world\");\n\t\tassertThat(output.getErr()).isEmpty();\n\t\tassertThat(output.getOut()).contains(\"Hello world\");\n\t}", "original_code": "@Test\n\tvoid toSystemOutPrintsToSystemOut(CapturedOutput output) {\n\t\tDockerLog logger = DockerLog.toSystemOut();\n\t\tlogger.log(\"Hello world\");\n\t\tassertThat(output.getErr()).isEmpty();\n\t\tassertThat(output.getOut()).contains(\"Hello world\");\n\t}", "code_tokens": ["@", "test", "void", "to", "system", "out", "prints", "to", "system", "out", "(", "captured", "output", "output", ")", "{", "docker", "log", "logger", "=", "docker", "log", ".", "to", "system", "out", "(", ")", ";", "logger", ".", "log", "(", "__STR__", ")", ";", "assert", "that", "(", "output", ".", "get", "err", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "output", ".", "get", "out", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 69, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 80, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.614306+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ae3521b7b12e28d10193555215ab0544339f2550", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerLogTests.java", "file_blob_sha": null, "method_name": "toPrintsToOutput", "signature": null, "start_line": 43, "end_line": 49, "nloc": 7, "method_source_normalized": "@TestvoidtoPrintsToOutput(CapturedOutput output){\n\t\tDockerLog logger = DockerLog.to(System.err);\n\t\tlogger.log(\"Hello world\");\n\t\tassertThat(output.getOut()).isEmpty();\n\t\tassertThat(output.getErr()).contains(\"Hello world\");\n\t}", "original_code": "@Test\n\tvoid toPrintsToOutput(CapturedOutput output) {\n\t\tDockerLog logger = DockerLog.to(System.err);\n\t\tlogger.log(\"Hello world\");\n\t\tassertThat(output.getOut()).isEmpty();\n\t\tassertThat(output.getErr()).contains(\"Hello world\");\n\t}", "code_tokens": ["@", "test", "void", "to", "prints", "to", "output", "(", "captured", "output", "output", ")", "{", "docker", "log", "logger", "=", "docker", "log", ".", "to", "(", "system", ".", "err", ")", ";", "logger", ".", "log", "(", "__STR__", ")", ";", "assert", "that", "(", "output", ".", "get", "out", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "output", ".", "get", "err", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 67, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.614603+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "43d5853f4b58448b539e477e366291acf3f904f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PullImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "getIdReturnsId", "signature": null, "start_line": 33, "end_line": 37, "nloc": 5, "method_source_normalized": "@TestvoidgetIdReturnsId(){\n\t\tPullImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getId()).isEqualTo(\"id\");\n\t}", "original_code": "@Test\n\tvoid getIdReturnsId() {\n\t\tPullImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getId()).isEqualTo(\"id\");\n\t}", "code_tokens": ["@", "test", "void", "get", "id", "returns", "id", "(", ")", "{", "pull", "image", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 40, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.615184+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "885f0a5c8b1e16fb719f4052d5c5c9aba2737e3b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PullImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "createEvent", "signature": null, "start_line": 39, "end_line": 42, "nloc": 4, "method_source_normalized": "@Override\n\tprotectedPullImageUpdateEventcreateEvent(String status, ProgressDetail progressDetail, String progress){\n\t\treturn new PullImageUpdateEvent(\"id\", status, progressDetail, progress);\n\t}", "original_code": "@Override\n\tprotected PullImageUpdateEvent createEvent(String status, ProgressDetail progressDetail, String progress) {\n\t\treturn new PullImageUpdateEvent(\"id\", status, progressDetail, progress);\n\t}", "code_tokens": ["@", "override", "protected", "pull", "image", "update", "event", "create", "event", "(", "string", "status", ",", "progress", "detail", "progress", "detail", ",", "string", "progress", ")", "{", "return", "new", "pull", "image", "update", "event", "(", "__STR__", ",", "status", ",", "progress", "detail", ",", "progress", ")", ";", "}"], "token_count": 40, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 13, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.615446+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "701c0528cca7bf6391cde95370e42425105b1e0d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "totalProgress", "signature": null, "start_line": 41, "end_line": 52, "nloc": 12, "method_source_normalized": "@TestvoidtotalProgress()throws Exception{\n\t\tList<Integer> progress = new ArrayList<>();\n\t\tTestTotalProgressListener listener = new TestTotalProgressListener((event) -> progress.add(event.getPercent()));\n\t\trun(listener);\n\t\tint last = 0;\n\t\tfor (Integer update : progress) {\n\t\t\tassertThat(update).isGreaterThanOrEqualTo(last);\n\t\t\tlast = update;\n\t\t}\n\t\tassertThat(last).isEqualTo(100);\n\t}", "original_code": "@Test\n\tvoid totalProgress() throws Exception {\n\t\tList<Integer> progress = new ArrayList<>();\n\t\tTestTotalProgressListener listener = new TestTotalProgressListener((event) -> progress.add(event.getPercent()));\n\t\trun(listener);\n\t\tint last = 0;\n\t\tfor (Integer update : progress) {\n\t\t\tassertThat(update).isGreaterThanOrEqualTo(last);\n\t\t\tlast = update;\n\t\t}\n\t\tassertThat(last).isEqualTo(100);\n\t}", "code_tokens": ["@", "test", "void", "total", "progress", "(", ")", "throws", "exception", "{", "list", "<", "integer", ">", "progress", "=", "new", "array", "list", "<", ">", "(", ")", ";", "test", "total", "progress", "listener", "listener", "=", "new", "test", "total", "progress", "listener", "(", "(", "event", ")", "->", "progress", ".", "add", "(", "event", ".", "get", "percent", "(", ")", ")", ")", ";", "run", "(", "listener", ")", ";", "int", "last", "=", "__NUM__", ";", "for", "(", "integer", "update", ":", "progress", ")", "{", "assert", "that", "(", "update", ")", ".", "is", "greater", "than", "or", "equal", "to", "(", "last", ")", ";", "last", "=", "update", ";", "}", "assert", "that", "(", "last", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 106, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 132, "n_identifiers": 30, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 57, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.616648+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d120767a0db90b7e676128ce5eeb1d1972316ebf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "totalProgressUpdatesSmoothly", "signature": null, "start_line": 54, "end_line": 59, "nloc": 6, "method_source_normalized": "@Test\n\t@Disabled(\"For visual inspection\")voidtotalProgressUpdatesSmoothly()throws Exception{\n\t\tTestTotalProgressListener listener = new TestTotalProgressListener(new TotalProgressBar(\"Pulling layers:\"));\n\t\trun(listener);\n\t}", "original_code": "@Test\n\t@Disabled(\"For visual inspection\")\n\tvoid totalProgressUpdatesSmoothly() throws Exception {\n\t\tTestTotalProgressListener listener = new TestTotalProgressListener(new TotalProgressBar(\"Pulling layers:\"));\n\t\trun(listener);\n\t}", "code_tokens": ["@", "test", "@", "disabled", "(", "__STR__", ")", "void", "total", "progress", "updates", "smoothly", "(", ")", "throws", "exception", "{", "test", "total", "progress", "listener", "listener", "=", "new", "test", "total", "progress", "listener", "(", "new", "total", "progress", "bar", "(", "__STR__", ")", ")", ";", "run", "(", "listener", ")", ";", "}"], "token_count": 44, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.616929+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cdf8d467fba639837feab1ba34ce7e8d99e4a28f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "run", "signature": null, "start_line": 61, "end_line": 66, "nloc": 6, "method_source_normalized": "privatevoidrun(TestTotalProgressListener listener)throws IOException{\n\t\tJsonStream jsonStream = new JsonStream(getObjectMapper());\n\t\tlistener.onStart();\n\t\tjsonStream.get(getContent(\"pull-stream.json\"), TestImageUpdateEvent.class, listener::onUpdate);\n\t\tlistener.onFinish();\n\t}", "original_code": "private void run(TestTotalProgressListener listener) throws IOException {\n\t\tJsonStream jsonStream = new JsonStream(getObjectMapper());\n\t\tlistener.onStart();\n\t\tjsonStream.get(getContent(\"pull-stream.json\"), TestImageUpdateEvent.class, listener::onUpdate);\n\t\tlistener.onFinish();\n\t}", "code_tokens": ["private", "void", "run", "(", "test", "total", "progress", "listener", "listener", ")", "throws", "io", "exception", "{", "json", "stream", "json", "stream", "=", "new", "json", "stream", "(", "get", "object", "mapper", "(", ")", ")", ";", "listener", ".", "on", "start", "(", ")", ";", "json", "stream", ".", "get", "(", "get", "content", "(", "__STR__", ")", ",", "test", "image", "update", "event", ".", "class", ",", "listener", "::", "on", "update", ")", ";", "listener", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 69, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.617208+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "63efbd918c9522579040727e904c16f1be786dd1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "TestTotalProgressListener", "signature": null, "start_line": 70, "end_line": 72, "nloc": 3, "method_source_normalized": "TestTotalProgressListener(Consumer<TotalProgressEvent> consumer){\n\t\t\tsuper(consumer, new String[] { \"Pulling\", \"Downloading\", \"Extracting\" });\n\t\t}", "original_code": "TestTotalProgressListener(Consumer<TotalProgressEvent> consumer) {\n\t\t\tsuper(consumer, new String[] { \"Pulling\", \"Downloading\", \"Extracting\" });\n\t\t}", "code_tokens": ["test", "total", "progress", "listener", "(", "consumer", "<", "total", "progress", "event", ">", "consumer", ")", "{", "super", "(", "consumer", ",", "new", "string", "[", "]", "{", "__STR__", ",", "__STR__", ",", "__STR__", "}", ")", ";", "}"], "token_count": 32, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.617466+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3aed53b11337471b6cc12e8b7090a86b677d6826", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "onUpdate", "signature": null, "start_line": 74, "end_line": 83, "nloc": 10, "method_source_normalized": "@Override\n\t\tpublicvoidonUpdate(TestImageUpdateEvent event){\n\t\t\tsuper.onUpdate(event);\n\t\t\ttry {\n\t\t\t\tThread.sleep(10);\n\t\t\t}\n\t\t\tcatch (InterruptedException ex) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}", "original_code": "@Override\n\t\tpublic void onUpdate(TestImageUpdateEvent event) {\n\t\t\tsuper.onUpdate(event);\n\t\t\ttry {\n\t\t\t\tThread.sleep(10);\n\t\t\t}\n\t\t\tcatch (InterruptedException ex) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}", "code_tokens": ["@", "override", "public", "void", "on", "update", "(", "test", "image", "update", "event", "event", ")", "{", "super", ".", "on", "update", "(", "event", ")", ";", "try", "{", "thread", ".", "sleep", "(", "__NUM__", ")", ";", "}", "catch", "(", "interrupted", "exception", "ex", ")", "{", "// Ignore", "}", "}"], "token_count": 42, "vocab_size": 25, "cyclomatic_complexity": 2, "ast_node_count": 54, "n_identifiers": 10, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.617730+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d5d5a42dbb33b57db9dc0fb62fa97b1a405d33c3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressListenerTests.java", "file_blob_sha": null, "method_name": "TestImageUpdateEvent", "signature": null, "start_line": 89, "end_line": 92, "nloc": 4, "method_source_normalized": "@JsonCreatorTestImageUpdateEvent(String id, String status, ProgressDetail progressDetail, String progress){\n\t\t\tsuper(id, status, progressDetail, progress);\n\t\t}", "original_code": "@JsonCreator\n\t\tTestImageUpdateEvent(String id, String status, ProgressDetail progressDetail, String progress) {\n\t\t\tsuper(id, status, progressDetail, progress);\n\t\t}", "code_tokens": ["@", "json", "creator", "test", "image", "update", "event", "(", "string", "id", ",", "string", "status", ",", "progress", "detail", "progress", "detail", ",", "string", "progress", ")", "{", "super", "(", "id", ",", "status", ",", "progress", "detail", ",", "progress", ")", ";", "}"], "token_count": 36, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 14, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.617993+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0e5140108e48f5a488a011926f1a4d29faa40b9f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 111, "end_line": 114, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\tthis.dockerApi = new DockerApi(this.http, DockerLog.toSystemOut());\n\t}", "original_code": "@BeforeEach\n\tvoid setup() {\n\t\tthis.dockerApi = new DockerApi(this.http, DockerLog.toSystemOut());\n\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "docker", "api", "=", "new", "docker", "api", "(", "this", ".", "http", ",", "docker", "log", ".", "to", "system", "out", "(", ")", ")", ";", "}"], "token_count": 32, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 7, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.628992+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17f61ca4c16218c8bba0cf16da253164c6c6230c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "http", "signature": null, "start_line": 116, "end_line": 118, "nloc": 3, "method_source_normalized": "privateHttpTransporthttp(){\n\t\treturn this.http;\n\t}", "original_code": "private HttpTransport http() {\n\t\treturn this.http;\n\t}", "code_tokens": ["private", "http", "transport", "http", "(", ")", "{", "return", "this", ".", "http", ";", "}"], "token_count": 13, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.629243+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "019b2f485b81e13124e90fbfd2e74a5d89f6309d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "emptyResponse", "signature": null, "start_line": 120, "end_line": 122, "nloc": 3, "method_source_normalized": "privateResponseemptyResponse(){\n\t\treturn responseOf(null);\n\t}", "original_code": "private Response emptyResponse() {\n\t\treturn responseOf(null);\n\t}", "code_tokens": ["private", "response", "empty", "response", "(", ")", "{", "return", "response", "of", "(", "null", ")", ";", "}"], "token_count": 15, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 3, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.629482+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5d4211d73d79e0730c8305da82405c4a3a2e2807", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "responseOf", "signature": null, "start_line": 124, "end_line": 140, "nloc": 17, "method_source_normalized": "privateResponseresponseOf(String name){\n\t\treturn new Response() {\n\n\t\t\t@Override\n\t\t\tpublic void close() {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\tif (name == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn getClass().getResourceAsStream(name);\n\t\t\t}\n\n\t\t};\n\t}", "original_code": "private Response responseOf(String name) {\n\t\treturn new Response() {\n\n\t\t\t@Override\n\t\t\tpublic void close() {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\tif (name == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn getClass().getResourceAsStream(name);\n\t\t\t}\n\n\t\t};\n\t}", "code_tokens": ["private", "response", "response", "of", "(", "string", "name", ")", "{", "return", "new", "response", "(", ")", "{", "@", "override", "public", "void", "close", "(", ")", "{", "}", "@", "override", "public", "input", "stream", "get", "content", "(", ")", "{", "if", "(", "name", "==", "null", ")", "{", "return", "null", ";", "}", "return", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ";", "}", "}", ";", "}"], "token_count": 63, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 14, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 75, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.629763+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d9c4fe41796f28deccd65b5c9b351c8547e41314", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 127, "end_line": 129, "nloc": 3, "method_source_normalized": "@Override\n\t\t\tpublicvoidclose(){\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic void close() {\n\t\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "{", "}"], "token_count": 9, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.629999+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e8a9a5654c93522dd45e24d582e5115b9e5b8475", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 131, "end_line": 137, "nloc": 7, "method_source_normalized": "@Override\n\t\t\tpublicInputStreamgetContent(){\n\t\t\t\tif (name == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn getClass().getResourceAsStream(name);\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\tif (name == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn getClass().getResourceAsStream(name);\n\t\t\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "content", "(", ")", "{", "if", "(", "name", "==", "null", ")", "{", "return", "null", ";", "}", "return", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ";", "}"], "token_count": 36, "vocab_size": 21, "cyclomatic_complexity": 2, "ast_node_count": 45, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.630256+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "130d9f9cfbb8017f3e00a821ead8fba2c1662fb3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "responseWithHeaders", "signature": null, "start_line": 142, "end_line": 163, "nloc": 22, "method_source_normalized": "privateResponseresponseWithHeaders(Header... headers){\n\t\treturn new Response() {\n\n\t\t\t@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Header getHeader(String name) {\n\t\t\t\treturn Arrays.stream(headers)\n\t\t\t\t\t.filter((header) -> header.getName().equals(name))\n\t\t\t\t\t.findFirst()\n\t\t\t\t\t.orElse(null);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void close() {\n\t\t\t}\n\n\t\t};\n\t}", "original_code": "private Response responseWithHeaders(Header... headers) {\n\t\treturn new Response() {\n\n\t\t\t@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Header getHeader(String name) {\n\t\t\t\treturn Arrays.stream(headers)\n\t\t\t\t\t.filter((header) -> header.getName().equals(name))\n\t\t\t\t\t.findFirst()\n\t\t\t\t\t.orElse(null);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void close() {\n\t\t\t}\n\n\t\t};\n\t}", "code_tokens": ["private", "response", "response", "with", "headers", "(", "header", "...", "headers", ")", "{", "return", "new", "response", "(", ")", "{", "@", "override", "public", "input", "stream", "get", "content", "(", ")", "{", "return", "null", ";", "}", "@", "override", "public", "header", "get", "header", "(", "string", "name", ")", "{", "return", "arrays", ".", "stream", "(", "headers", ")", ".", "filter", "(", "(", "header", ")", "->", "header", ".", "get", "name", "(", ")", ".", "equals", "(", "name", ")", ")", ".", "find", "first", "(", ")", ".", "or", "else", "(", "null", ")", ";", "}", "@", "override", "public", "void", "close", "(", ")", "{", "}", "}", ";", "}"], "token_count": 93, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 26, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 97, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.630564+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c596f0e36d69ad143a8e00f879ed4e9e517a0e42", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 145, "end_line": 148, "nloc": 4, "method_source_normalized": "@Override\n\t\t\tpublicInputStreamgetContent(){\n\t\t\t\treturn null;\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic InputStream getContent() {\n\t\t\t\treturn null;\n\t\t\t}", "code_tokens": ["@", "override", "public", "input", "stream", "get", "content", "(", ")", "{", "return", "null", ";", "}"], "token_count": 14, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.630802+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98f07de09f1c905eae5cfbfe7657dff172812c99", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getHeader", "signature": null, "start_line": 150, "end_line": 156, "nloc": 7, "method_source_normalized": "@Override\n\t\t\tpublicHeadergetHeader(String name){\n\t\t\t\treturn Arrays.stream(headers)\n\t\t\t\t\t.filter((header) -> header.getName().equals(name))\n\t\t\t\t\t.findFirst()\n\t\t\t\t\t.orElse(null);\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic Header getHeader(String name) {\n\t\t\t\treturn Arrays.stream(headers)\n\t\t\t\t\t.filter((header) -> header.getName().equals(name))\n\t\t\t\t\t.findFirst()\n\t\t\t\t\t.orElse(null);\n\t\t\t}", "code_tokens": ["@", "override", "public", "header", "get", "header", "(", "string", "name", ")", "{", "return", "arrays", ".", "stream", "(", "headers", ")", ".", "filter", "(", "(", "header", ")", "->", "header", ".", "get", "name", "(", ")", ".", "equals", "(", "name", ")", ")", ".", "find", "first", "(", ")", ".", "or", "else", "(", "null", ")", ";", "}"], "token_count": 50, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 67, "n_identifiers": 16, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.631069+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4bf8bb4f4d534fe936ee2f7cfcabda7e81e14882", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 158, "end_line": 160, "nloc": 3, "method_source_normalized": "@Override\n\t\t\tpublicvoidclose(){\n\t\t\t}", "original_code": "@Override\n\t\t\tpublic void close() {\n\t\t\t}", "code_tokens": ["@", "override", "public", "void", "close", "(", ")", "{", "}"], "token_count": 9, "vocab_size": 9, "cyclomatic_complexity": 1, "ast_node_count": 14, "n_identifiers": 2, "ast_max_depth": 3, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.631310+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2136314c962e4fc30ddc5525ca81f83a85d56b6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createDockerApi", "signature": null, "start_line": 165, "end_line": 169, "nloc": 5, "method_source_normalized": "@TestvoidcreateDockerApi(){\n\t\tDockerApi api = new DockerApi();\n\t\tassertThat(api).isNotNull();\n\t}", "original_code": "@Test\n\tvoid createDockerApi() {\n\t\tDockerApi api = new DockerApi();\n\t\tassertThat(api).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "docker", "api", "(", ")", "{", "docker", "api", "api", "=", "new", "docker", "api", "(", ")", ";", "assert", "that", "(", "api", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 32, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.631559+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "87f1894c24afe54a6f9948b595c4680211558993", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 188, "end_line": 191, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\t\tthis.api = DockerApiTests.this.dockerApi.image();\n\t\t}", "original_code": "@BeforeEach\n\t\tvoid setup() {\n\t\t\tthis.api = DockerApiTests.this.dockerApi.image();\n\t\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "api", "=", "docker", "api", "tests", ".", "this", ".", "docker", "api", ".", "image", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.631823+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bd641c4376b58825552c6f925940be6a2e1ee0dc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullWhenReferenceIsNullThrowsException", "signature": null, "start_line": 193, "end_line": 197, "nloc": 5, "method_source_normalized": "@TestvoidpullWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.pull(null, null, this.pullListener))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid pullWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.pull(null, null, this.pullListener))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "pull", "(", "null", ",", "null", ",", "this", ".", "pull", "listener", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.632087+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "957d8396b1cfdda07ccc956d3a30050f7c835b1d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullWhenListenerIsNullThrowsException", "signature": null, "start_line": 199, "end_line": 204, "nloc": 6, "method_source_normalized": "@TestvoidpullWhenListenerIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.pull(ImageReference.of(\"ubuntu\"), null, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid pullWhenListenerIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.pull(ImageReference.of(\"ubuntu\"), null, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "when", "listener", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "pull", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "null", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 9, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.632355+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8ba5686fba9b09271762f61dd00bc4fcb765d23e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullPullsImageAndProducesEvents", "signature": null, "start_line": 206, "end_line": 219, "nloc": 14, "method_source_normalized": "@TestvoidpullPullsImageAndProducesEvents()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI createUri = new URI(IMAGES_URL + \"/create?fromImage=docker.io%2Fpaketobuildpacks%2Fbuilder%3Abase\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().post(eq(createUri), isNull())).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, null, this.pullListener);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "original_code": "@Test\n\t\tvoid pullPullsImageAndProducesEvents() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI createUri = new URI(IMAGES_URL + \"/create?fromImage=docker.io%2Fpaketobuildpacks%2Fbuilder%3Abase\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().post(eq(createUri), isNull())).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, null, this.pullListener);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "pulls", "image", "and", "produces", "events", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "create", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "uri", "image", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "given", "(", "http", "(", ")", ".", "get", "(", "image", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "image", "image", "=", "this", ".", "api", ".", "pull", "(", "reference", ",", "null", ",", "this", ".", "pull", "listener", ")", ";", "assert", "that", "(", "image", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "pull", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ",", "times", "(", "__NUM__", ")", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 209, "vocab_size": 57, "cyclomatic_complexity": 1, "ast_node_count": 264, "n_identifiers": 57, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 79, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.632845+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b55c98aa1ec700ae3200a48f0e9a2d1e3feca1a4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullWithRegistryAuthPullsImageAndProducesEvents", "signature": null, "start_line": 221, "end_line": 234, "nloc": 14, "method_source_normalized": "@TestvoidpullWithRegistryAuthPullsImageAndProducesEvents()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI createUri = new URI(IMAGES_URL + \"/create?fromImage=docker.io%2Fpaketobuildpacks%2Fbuilder%3Abase\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"auth token\"))).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, null, this.pullListener, \"auth token\");\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "original_code": "@Test\n\t\tvoid pullWithRegistryAuthPullsImageAndProducesEvents() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI createUri = new URI(IMAGES_URL + \"/create?fromImage=docker.io%2Fpaketobuildpacks%2Fbuilder%3Abase\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"auth token\"))).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, null, this.pullListener, \"auth token\");\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "with", "registry", "auth", "pulls", "image", "and", "produces", "events", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "create", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "uri", "image", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "eq", "(", "__STR__", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "given", "(", "http", "(", ")", ".", "get", "(", "image", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "image", "image", "=", "this", ".", "api", ".", "pull", "(", "reference", ",", "null", ",", "this", ".", "pull", "listener", ",", "__STR__", ")", ";", "assert", "that", "(", "image", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "pull", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ",", "times", "(", "__NUM__", ")", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 214, "vocab_size": 59, "cyclomatic_complexity": 1, "ast_node_count": 267, "n_identifiers": 57, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 82, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.633290+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3c7a3297f0b41d52922f62bdb43f9217bc9ff327", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullWithPlatformPullsImageAndProducesEvents", "signature": null, "start_line": 236, "end_line": 253, "nloc": 18, "method_source_normalized": "@TestvoidpullWithPlatformPullsImageAndProducesEvents()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"gcr.io/paketo-buildpacks/builder:base\");\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tURI createUri = new URI(PLATFORM_IMAGES_URL\n\t\t\t\t\t+ \"/create?fromImage=gcr.io%2Fpaketo-buildpacks%2Fbuilder%3Abase&platform=linux%2Farm64%2Fv1\");\n\t\t\tURI imageUri = new URI(PLATFORM_IMAGES_URL + \"/gcr.io/paketo-buildpacks/builder:base/json\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.41\")));\n\t\t\tgiven(http().post(eq(createUri), isNull())).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, platform, this.pullListener);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "original_code": "@Test\n\t\tvoid pullWithPlatformPullsImageAndProducesEvents() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"gcr.io/paketo-buildpacks/builder:base\");\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tURI createUri = new URI(PLATFORM_IMAGES_URL\n\t\t\t\t\t+ \"/create?fromImage=gcr.io%2Fpaketo-buildpacks%2Fbuilder%3Abase&platform=linux%2Farm64%2Fv1\");\n\t\t\tURI imageUri = new URI(PLATFORM_IMAGES_URL + \"/gcr.io/paketo-buildpacks/builder:base/json\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.41\")));\n\t\t\tgiven(http().post(eq(createUri), isNull())).willReturn(responseOf(\"pull-stream.json\"));\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.pull(reference, platform, this.pullListener);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t\tInOrder ordered = inOrder(this.pullListener);\n\t\t\tordered.verify(this.pullListener).onStart();\n\t\t\tordered.verify(this.pullListener, times(595)).onUpdate(any());\n\t\t\tordered.verify(this.pullListener).onFinish();\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "with", "platform", "pulls", "image", "and", "produces", "events", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "uri", "create", "uri", "=", "new", "uri", "(", "platform", "images", "url", "+", "__STR__", ")", ";", "uri", "image", "uri", "=", "new", "uri", "(", "platform", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "__STR__", ")", ")", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "given", "(", "http", "(", ")", ".", "get", "(", "image", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "image", "image", "=", "this", ".", "api", ".", "pull", "(", "reference", ",", "platform", ",", "this", ".", "pull", "listener", ")", ";", "assert", "that", "(", "image", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "pull", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ",", "times", "(", "__NUM__", ")", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "pull", "listener", ")", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 269, "vocab_size": 67, "cyclomatic_complexity": 1, "ast_node_count": 331, "n_identifiers": 73, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 103, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.633774+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eaaf1d5bd3311cd32140da4a31fb8c5a43259df9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pullWithPlatformAndInsufficientApiVersionThrowsException", "signature": null, "start_line": 255, "end_line": 264, "nloc": 10, "method_source_normalized": "@TestvoidpullWithPlatformAndInsufficientApiVersionThrowsException()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"gcr.io/paketo-buildpacks/builder:base\");\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willReturn(\n\t\t\t\t\tresponseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, DockerApi.API_VERSION)));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.pull(reference, platform, this.pullListener))\n\t\t\t\t.withMessageContaining(\"must be at least 1.41\")\n\t\t\t\t.withMessageContaining(\"current API version is 1.24\");\n\t\t}", "original_code": "@Test\n\t\tvoid pullWithPlatformAndInsufficientApiVersionThrowsException() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"gcr.io/paketo-buildpacks/builder:base\");\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willReturn(\n\t\t\t\t\tresponseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, DockerApi.API_VERSION)));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.pull(reference, platform, this.pullListener))\n\t\t\t\t.withMessageContaining(\"must be at least 1.41\")\n\t\t\t\t.withMessageContaining(\"current API version is 1.24\");\n\t\t}", "code_tokens": ["@", "test", "void", "pull", "with", "platform", "and", "insufficient", "api", "version", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "docker", "api", ".", "api", "version", ")", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "pull", "(", "reference", ",", "platform", ",", "this", ".", "pull", "listener", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 136, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 150, "n_identifiers": 33, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 63, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.634147+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7fb7006cabc2eb40384a625e6ff80849972f7694", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pushWhenReferenceIsNullThrowsException", "signature": null, "start_line": 266, "end_line": 270, "nloc": 5, "method_source_normalized": "@TestvoidpushWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.push(null, this.pushListener, null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid pushWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.push(null, this.pushListener, null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "push", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "push", "(", "null", ",", "this", ".", "push", "listener", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.634430+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ad4a6bab49155238ca2707c8b92d55e113d628f8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pushWhenListenerIsNullThrowsException", "signature": null, "start_line": 272, "end_line": 277, "nloc": 6, "method_source_normalized": "@TestvoidpushWhenListenerIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.push(ImageReference.of(\"ubuntu\"), null, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid pushWhenListenerIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.push(ImageReference.of(\"ubuntu\"), null, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "push", "when", "listener", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "push", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "null", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 9, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.634701+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fca06f0801b5e5fb2b4d1475e543eac4794ea728", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pushPushesImageAndProducesEvents", "signature": null, "start_line": 279, "end_line": 289, "nloc": 11, "method_source_normalized": "@TestvoidpushPushesImageAndProducesEvents()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tURI pushUri = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/push\");\n\t\t\tgiven(http().post(pushUri, \"auth token\")).willReturn(responseOf(\"push-stream.json\"));\n\t\t\tthis.api.push(reference, this.pushListener, \"auth token\");\n\t\t\tInOrder ordered = inOrder(this.pushListener);\n\t\t\tordered.verify(this.pushListener).onStart();\n\t\t\tordered.verify(this.pushListener, times(44)).onUpdate(any());\n\t\t\tordered.verify(this.pushListener).onFinish();\n\t\t}", "original_code": "@Test\n\t\tvoid pushPushesImageAndProducesEvents() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tURI pushUri = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/push\");\n\t\t\tgiven(http().post(pushUri, \"auth token\")).willReturn(responseOf(\"push-stream.json\"));\n\t\t\tthis.api.push(reference, this.pushListener, \"auth token\");\n\t\t\tInOrder ordered = inOrder(this.pushListener);\n\t\t\tordered.verify(this.pushListener).onStart();\n\t\t\tordered.verify(this.pushListener, times(44)).onUpdate(any());\n\t\t\tordered.verify(this.pushListener).onFinish();\n\t\t}", "code_tokens": ["@", "test", "void", "push", "pushes", "image", "and", "produces", "events", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "push", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "push", "uri", ",", "__STR__", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "this", ".", "api", ".", "push", "(", "reference", ",", "this", ".", "push", "listener", ",", "__STR__", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "push", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "push", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "push", "listener", ",", "times", "(", "__NUM__", ")", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "push", "listener", ")", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 147, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 183, "n_identifiers": 39, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.635061+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a6b2d09d6c68ae23431e60b3720cda2cb69103c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "pushWithErrorInStreamThrowsException", "signature": null, "start_line": 291, "end_line": 299, "nloc": 9, "method_source_normalized": "@TestvoidpushWithErrorInStreamThrowsException()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tURI pushUri = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/push\");\n\t\t\tgiven(http().post(pushUri, \"auth token\")).willReturn(responseOf(\"push-stream-with-error.json\"));\n\t\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> this.api.push(reference, this.pushListener, \"auth token\"))\n\t\t\t\t.withMessageContaining(\"test message\");\n\t\t}", "original_code": "@Test\n\t\tvoid pushWithErrorInStreamThrowsException() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tURI pushUri = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/push\");\n\t\t\tgiven(http().post(pushUri, \"auth token\")).willReturn(responseOf(\"push-stream-with-error.json\"));\n\t\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> this.api.push(reference, this.pushListener, \"auth token\"))\n\t\t\t\t.withMessageContaining(\"test message\");\n\t\t}", "code_tokens": ["@", "test", "void", "push", "with", "error", "in", "stream", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "push", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "push", "uri", ",", "__STR__", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "push", "(", "reference", ",", "this", ".", "push", "listener", ",", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 105, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 122, "n_identifiers": 24, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.635403+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "89304eb6631c214386af48b1266615d3386b10a0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "loadWhenArchiveIsNullThrowsException", "signature": null, "start_line": 301, "end_line": 305, "nloc": 5, "method_source_normalized": "@TestvoidloadWhenArchiveIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.load(null, UpdateListener.none()))\n\t\t\t\t.withMessage(\"'archive' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid loadWhenArchiveIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.load(null, UpdateListener.none()))\n\t\t\t\t.withMessage(\"'archive' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "load", "when", "archive", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "load", "(", "null", ",", "update", "listener", ".", "none", "(", ")", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 9, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.635683+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a467dd4138f7fd4299596bcb8a1fab3497ef504d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "loadWhenListenerIsNullThrowsException", "signature": null, "start_line": 307, "end_line": 312, "nloc": 6, "method_source_normalized": "@TestvoidloadWhenListenerIsNullThrowsException(){\n\t\t\tImageArchive archive = mock(ImageArchive.class);\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.load(archive, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid loadWhenListenerIsNullThrowsException() {\n\t\t\tImageArchive archive = mock(ImageArchive.class);\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.load(archive, null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "load", "when", "listener", "is", "null", "throws", "exception", "(", ")", "{", "image", "archive", "archive", "=", "mock", "(", "image", "archive", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "load", "(", "archive", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 59, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 66, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.635958+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cd4a26baed0965a71a0b1608ee9ce2494cc66a25", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "loadWithEmptyResponseThrowsException", "signature": null, "start_line": 314, "end_line": 322, "nloc": 9, "method_source_normalized": "@Test// gh-23130voidloadWithEmptyResponseThrowsException()throws Exception{\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(emptyResponse());\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.load(archive, this.loadListener))\n\t\t\t\t.withMessageContaining(\"Invalid response received\");\n\t\t}", "original_code": "@Test // gh-23130\n\t\tvoid loadWithEmptyResponseThrowsException() throws Exception {\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(emptyResponse());\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.load(archive, this.loadListener))\n\t\t\t\t.withMessageContaining(\"Invalid response received\");\n\t\t}", "code_tokens": ["@", "test", "// gh-23130", "void", "load", "with", "empty", "response", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "image", "archive", "archive", "=", "image", "archive", ".", "from", "(", "image", ")", ";", "uri", "load", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "load", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "load", "(", "archive", ",", "this", ".", "load", "listener", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 133, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 161, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.636304+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "054da5d891963625224aa5420be0c06ad1677517", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "loadWithErrorResponseThrowsException", "signature": null, "start_line": 324, "end_line": 332, "nloc": 9, "method_source_normalized": "@Test// gh-31243voidloadWithErrorResponseThrowsException()throws Exception{\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(responseOf(\"load-error.json\"));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.load(archive, this.loadListener))\n\t\t\t\t.withMessageContaining(\"Error response received\");\n\t\t}", "original_code": "@Test // gh-31243\n\t\tvoid loadWithErrorResponseThrowsException() throws Exception {\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(responseOf(\"load-error.json\"));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.load(archive, this.loadListener))\n\t\t\t\t.withMessageContaining(\"Error response received\");\n\t\t}", "code_tokens": ["@", "test", "// gh-31243", "void", "load", "with", "error", "response", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "image", "archive", "archive", "=", "image", "archive", ".", "from", "(", "image", ")", ";", "uri", "load", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "load", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "load", "(", "archive", ",", "this", ".", "load", "listener", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 134, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 162, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.636660+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39ad30ffe1e9d67f5fa4d1c81ec7e11e70bff29b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "loadLoadsImage", "signature": null, "start_line": 334, "end_line": 349, "nloc": 16, "method_source_normalized": "@TestvoidloadLoadsImage()throws Exception{\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(responseOf(\"load-stream.json\"));\n\t\t\tthis.api.load(archive, this.loadListener);\n\t\t\tInOrder ordered = inOrder(this.loadListener);\n\t\t\tordered.verify(this.loadListener).onStart();\n\t\t\tordered.verify(this.loadListener).onUpdate(any());\n\t\t\tordered.verify(this.loadListener).onFinish();\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSizeGreaterThan(21000);\n\t\t}", "original_code": "@Test\n\t\tvoid loadLoadsImage() throws Exception {\n\t\t\tImage image = Image.of(getClass().getResourceAsStream(\"type/image.json\"));\n\t\t\tImageArchive archive = ImageArchive.from(image);\n\t\t\tURI loadUri = new URI(IMAGES_URL + \"/load\");\n\t\t\tgiven(http().post(eq(loadUri), eq(\"application/x-tar\"), any())).willReturn(responseOf(\"load-stream.json\"));\n\t\t\tthis.api.load(archive, this.loadListener);\n\t\t\tInOrder ordered = inOrder(this.loadListener);\n\t\t\tordered.verify(this.loadListener).onStart();\n\t\t\tordered.verify(this.loadListener).onUpdate(any());\n\t\t\tordered.verify(this.loadListener).onFinish();\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSizeGreaterThan(21000);\n\t\t}", "code_tokens": ["@", "test", "void", "load", "loads", "image", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "image", "archive", "archive", "=", "image", "archive", ".", "from", "(", "image", ")", ";", "uri", "load", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "load", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "this", ".", "api", ".", "load", "(", "archive", ",", "this", ".", "load", "listener", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "load", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "load", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "load", "listener", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "load", "listener", ")", ".", "on", "finish", "(", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "any", "(", ")", ",", "any", "(", ")", ",", "this", ".", "writer", ".", "capture", "(", ")", ")", ";", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "this", ".", "writer", ".", "get", "value", "(", ")", ".", "accept", "(", "out", ")", ";", "assert", "that", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ".", "has", "size", "greater", "than", "(", "__NUM__", ")", ";", "}"], "token_count": 246, "vocab_size": 67, "cyclomatic_complexity": 1, "ast_node_count": 313, "n_identifiers": 67, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 86, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.637169+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a8d230469d78ac0368f38117e5a18fe1aed1127d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeWhenReferenceIsNullThrowsException", "signature": null, "start_line": 351, "end_line": 355, "nloc": 5, "method_source_normalized": "@TestvoidremoveWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.remove(null, true))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid removeWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.remove(null, true))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "remove", "(", "null", ",", "true", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.637476+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c20e7fbbfaf814ae9afd8568992f99322f3aa23c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeRemovesContainer", "signature": null, "start_line": 357, "end_line": 366, "nloc": 10, "method_source_normalized": "@TestvoidremoveRemovesContainer()throws Exception{\n\t\t\tImageReference reference = ImageReference\n\t\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tURI removeUri = new URI(IMAGES_URL\n\t\t\t\t\t+ \"/docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid removeRemovesContainer() throws Exception {\n\t\t\tImageReference reference = ImageReference\n\t\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tURI removeUri = new URI(IMAGES_URL\n\t\t\t\t\t+ \"/docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "removes", "container", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "remove", "(", "reference", ",", "false", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 87, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.637791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "740b83312cd05d1460952bb84fc2c5af6623f100", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeWhenForceIsTrueRemovesContainer", "signature": null, "start_line": 368, "end_line": 377, "nloc": 10, "method_source_normalized": "@TestvoidremoveWhenForceIsTrueRemovesContainer()throws Exception{\n\t\t\tImageReference reference = ImageReference\n\t\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tURI removeUri = new URI(IMAGES_URL\n\t\t\t\t\t+ \"/docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid removeWhenForceIsTrueRemovesContainer() throws Exception {\n\t\t\tImageReference reference = ImageReference\n\t\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\t\tURI removeUri = new URI(IMAGES_URL\n\t\t\t\t\t+ \"/docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "when", "force", "is", "true", "removes", "container", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "remove", "(", "reference", ",", "true", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 91, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.638121+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f8e60a0527697c26bc3ec92ba1617397804eb53e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "inspectWhenReferenceIsNullThrowsException", "signature": null, "start_line": 379, "end_line": 383, "nloc": 5, "method_source_normalized": "@TestvoidinspectWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.inspect(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid inspectWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.inspect(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "inspect", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "inspect", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.638397+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "49c08159f63a99be8bb1dc884f1f34a843061d49", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "inspectInspectImage", "signature": null, "start_line": 385, "end_line": 392, "nloc": 8, "method_source_normalized": "@TestvoidinspectInspectImage()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.inspect(reference);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t}", "original_code": "@Test\n\t\tvoid inspectInspectImage() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI imageUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/json\");\n\t\t\tgiven(http().get(imageUri)).willReturn(responseOf(\"type/image.json\"));\n\t\t\tImage image = this.api.inspect(reference);\n\t\t\tassertThat(image.getLayers()).hasSize(46);\n\t\t}", "code_tokens": ["@", "test", "void", "inspect", "inspect", "image", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "image", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "get", "(", "image", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "image", "image", "=", "this", ".", "api", ".", "inspect", "(", "reference", ")", ";", "assert", "that", "(", "image", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "}"], "token_count": 89, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 115, "n_identifiers": 26, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.638709+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "79a496c8ff74a87d2fde737c34b90bbd8c565a58", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "exportLayersExportsLayerTars", "signature": null, "start_line": 394, "end_line": 420, "nloc": 27, "method_source_normalized": "@TestvoidexportLayersExportsLayerTars()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI exportUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/get\");\n\t\t\tgiven(DockerApiTests.this.http.get(exportUri)).willReturn(responseOf(\"export.tar\"));\n\t\t\tMultiValueMap<String, String> contents = new LinkedMultiValueMap<>();\n\t\t\tthis.api.exportLayers(reference, (name, archive) -> {\n\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\t\tarchive.writeTo(out);\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(\n\t\t\t\t\t\tnew ByteArrayInputStream(out.toByteArray()))) {\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tcontents.add(name, entry.getName());\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tassertThat(contents).hasSize(3)\n\t\t\t\t.containsKeys(\"70bb7a3115f3d5c01099852112c7e05bf593789e510468edb06b6a9a11fa3b73/layer.tar\",\n\t\t\t\t\t\t\"74a9a50ece13c025cf10e9110d9ddc86c995079c34e2a22a28d1a3d523222c6e/layer.tar\",\n\t\t\t\t\t\t\"a69532b5b92bb891fbd9fa1a6b3af9087ea7050255f59ba61a796f8555ecd783/layer.tar\");\n\t\t\tassertThat(contents.get(\"70bb7a3115f3d5c01099852112c7e05bf593789e510468edb06b6a9a11fa3b73/layer.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/order.toml\");\n\t\t\tassertThat(contents.get(\"74a9a50ece13c025cf10e9110d9ddc86c995079c34e2a22a28d1a3d523222c6e/layer.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/stack.toml\");\n\t\t}", "original_code": "@Test\n\t\tvoid exportLayersExportsLayerTars() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI exportUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/get\");\n\t\t\tgiven(DockerApiTests.this.http.get(exportUri)).willReturn(responseOf(\"export.tar\"));\n\t\t\tMultiValueMap<String, String> contents = new LinkedMultiValueMap<>();\n\t\t\tthis.api.exportLayers(reference, (name, archive) -> {\n\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\t\tarchive.writeTo(out);\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(\n\t\t\t\t\t\tnew ByteArrayInputStream(out.toByteArray()))) {\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tcontents.add(name, entry.getName());\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tassertThat(contents).hasSize(3)\n\t\t\t\t.containsKeys(\"70bb7a3115f3d5c01099852112c7e05bf593789e510468edb06b6a9a11fa3b73/layer.tar\",\n\t\t\t\t\t\t\"74a9a50ece13c025cf10e9110d9ddc86c995079c34e2a22a28d1a3d523222c6e/layer.tar\",\n\t\t\t\t\t\t\"a69532b5b92bb891fbd9fa1a6b3af9087ea7050255f59ba61a796f8555ecd783/layer.tar\");\n\t\t\tassertThat(contents.get(\"70bb7a3115f3d5c01099852112c7e05bf593789e510468edb06b6a9a11fa3b73/layer.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/order.toml\");\n\t\t\tassertThat(contents.get(\"74a9a50ece13c025cf10e9110d9ddc86c995079c34e2a22a28d1a3d523222c6e/layer.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/stack.toml\");\n\t\t}", "code_tokens": ["@", "test", "void", "export", "layers", "exports", "layer", "tars", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "export", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "docker", "api", "tests", ".", "this", ".", "http", ".", "get", "(", "export", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "multi", "value", "map", "<", "string", ",", "string", ">", "contents", "=", "new", "linked", "multi", "value", "map", "<", ">", "(", ")", ";", "this", ".", "api", ".", "export", "layers", "(", "reference", ",", "(", "name", ",", "archive", ")", "->", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "archive", ".", "write", "to", "(", "out", ")", ";", "try", "(", "tar", "archive", "input", "stream", "in", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "tar", "archive", "entry", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "contents", ".", "add", "(", "name", ",", "entry", ".", "get", "name", "(", ")", ")", ";", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "}", "}", "}", ")", ";", "assert", "that", "(", "contents", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "keys", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "contents", ".", "get", "(", "__STR__", ")", ")", ".", "contains", "exactly", "(", "__STR__", ")", ";", "assert", "that", "(", "contents", ".", "get", "(", "__STR__", ")", ")", ".", "contains", "exactly", "(", "__STR__", ")", ";", "}"], "token_count": 260, "vocab_size": 73, "cyclomatic_complexity": 2, "ast_node_count": 305, "n_identifiers": 65, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 173, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.639166+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "162ddac32a8b2a9a4862fa5802245db325cd0437", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "exportLayersWithSymlinksExportsLayerTars", "signature": null, "start_line": 422, "end_line": 448, "nloc": 27, "method_source_normalized": "@TestvoidexportLayersWithSymlinksExportsLayerTars()throws Exception{\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI exportUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/get\");\n\t\t\tgiven(DockerApiTests.this.http.get(exportUri)).willReturn(responseOf(\"export-symlinks.tar\"));\n\t\t\tMultiValueMap<String, String> contents = new LinkedMultiValueMap<>();\n\t\t\tthis.api.exportLayers(reference, (name, archive) -> {\n\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\t\tarchive.writeTo(out);\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(\n\t\t\t\t\t\tnew ByteArrayInputStream(out.toByteArray()))) {\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tcontents.add(name, entry.getName());\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tassertThat(contents).hasSize(3)\n\t\t\t\t.containsKeys(\"6aa3691a73805f608e5fce69fb6bc89aec8362f58a6b4be2682515e9cfa3cc1a.tar\",\n\t\t\t\t\t\t\"762e198f655bc2580ef3e56b538810fd2b9981bd707f8a44c70344b58f9aee68.tar\",\n\t\t\t\t\t\t\"d3cc975ad97fdfbb73d9daf157e7f658d6117249fd9c237e3856ad173c87e1d2.tar\");\n\t\t\tassertThat(contents.get(\"d3cc975ad97fdfbb73d9daf157e7f658d6117249fd9c237e3856ad173c87e1d2.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/order.toml\");\n\t\t\tassertThat(contents.get(\"762e198f655bc2580ef3e56b538810fd2b9981bd707f8a44c70344b58f9aee68.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/stack.toml\");\n\t\t}", "original_code": "@Test\n\t\tvoid exportLayersWithSymlinksExportsLayerTars() throws Exception {\n\t\t\tImageReference reference = ImageReference.of(\"docker.io/paketobuildpacks/builder:base\");\n\t\t\tURI exportUri = new URI(IMAGES_URL + \"/docker.io/paketobuildpacks/builder:base/get\");\n\t\t\tgiven(DockerApiTests.this.http.get(exportUri)).willReturn(responseOf(\"export-symlinks.tar\"));\n\t\t\tMultiValueMap<String, String> contents = new LinkedMultiValueMap<>();\n\t\t\tthis.api.exportLayers(reference, (name, archive) -> {\n\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\t\tarchive.writeTo(out);\n\t\t\t\ttry (TarArchiveInputStream in = new TarArchiveInputStream(\n\t\t\t\t\t\tnew ByteArrayInputStream(out.toByteArray()))) {\n\t\t\t\t\tTarArchiveEntry entry = in.getNextEntry();\n\t\t\t\t\twhile (entry != null) {\n\t\t\t\t\t\tcontents.add(name, entry.getName());\n\t\t\t\t\t\tentry = in.getNextEntry();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tassertThat(contents).hasSize(3)\n\t\t\t\t.containsKeys(\"6aa3691a73805f608e5fce69fb6bc89aec8362f58a6b4be2682515e9cfa3cc1a.tar\",\n\t\t\t\t\t\t\"762e198f655bc2580ef3e56b538810fd2b9981bd707f8a44c70344b58f9aee68.tar\",\n\t\t\t\t\t\t\"d3cc975ad97fdfbb73d9daf157e7f658d6117249fd9c237e3856ad173c87e1d2.tar\");\n\t\t\tassertThat(contents.get(\"d3cc975ad97fdfbb73d9daf157e7f658d6117249fd9c237e3856ad173c87e1d2.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/order.toml\");\n\t\t\tassertThat(contents.get(\"762e198f655bc2580ef3e56b538810fd2b9981bd707f8a44c70344b58f9aee68.tar\"))\n\t\t\t\t.containsExactly(\"/cnb/stack.toml\");\n\t\t}", "code_tokens": ["@", "test", "void", "export", "layers", "with", "symlinks", "exports", "layer", "tars", "(", ")", "throws", "exception", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "export", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "docker", "api", "tests", ".", "this", ".", "http", ".", "get", "(", "export", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "multi", "value", "map", "<", "string", ",", "string", ">", "contents", "=", "new", "linked", "multi", "value", "map", "<", ">", "(", ")", ";", "this", ".", "api", ".", "export", "layers", "(", "reference", ",", "(", "name", ",", "archive", ")", "->", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "archive", ".", "write", "to", "(", "out", ")", ";", "try", "(", "tar", "archive", "input", "stream", "in", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "tar", "archive", "entry", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "contents", ".", "add", "(", "name", ",", "entry", ".", "get", "name", "(", ")", ")", ";", "entry", "=", "in", ".", "get", "next", "entry", "(", ")", ";", "}", "}", "}", ")", ";", "assert", "that", "(", "contents", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "keys", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "contents", ".", "get", "(", "__STR__", ")", ")", ".", "contains", "exactly", "(", "__STR__", ")", ";", "assert", "that", "(", "contents", ".", "get", "(", "__STR__", ")", ")", ".", "contains", "exactly", "(", "__STR__", ")", ";", "}"], "token_count": 262, "vocab_size": 75, "cyclomatic_complexity": 2, "ast_node_count": 305, "n_identifiers": 65, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 173, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.639647+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f2e4f300be59192be827f03cbed86266fd6c8595", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "tagWhenReferenceIsNullThrowsException", "signature": null, "start_line": 450, "end_line": 455, "nloc": 6, "method_source_normalized": "@TestvoidtagWhenReferenceIsNullThrowsException(){\n\t\t\tImageReference tag = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.tag(null, tag))\n\t\t\t\t.withMessage(\"'sourceReference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid tagWhenReferenceIsNullThrowsException() {\n\t\t\tImageReference tag = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.tag(null, tag))\n\t\t\t\t.withMessage(\"'sourceReference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "tag", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "image", "reference", "tag", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "tag", "(", "null", ",", "tag", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 59, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.639957+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65a1a9bb16cbdde0ab0c7dd49cfb8186d0f5f063", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "tagWhenTargetIsNullThrowsException", "signature": null, "start_line": 457, "end_line": 462, "nloc": 6, "method_source_normalized": "@TestvoidtagWhenTargetIsNullThrowsException(){\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.tag(reference, null))\n\t\t\t\t.withMessage(\"'targetReference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid tagWhenTargetIsNullThrowsException() {\n\t\t\tImageReference reference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.tag(reference, null))\n\t\t\t\t.withMessage(\"'targetReference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "tag", "when", "target", "is", "null", "throws", "exception", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "tag", "(", "reference", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 59, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.640233+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1144b1842749394c17f6ff2441fbf16040d5abdd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "tagTagsImage", "signature": null, "start_line": 464, "end_line": 472, "nloc": 9, "method_source_normalized": "@TestvoidtagTagsImage()throws Exception{\n\t\t\tImageReference sourceReference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tImageReference targetReference = ImageReference.of(\"localhost:5000/ubuntu:tagged\");\n\t\t\tURI tagURI = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/tag?repo=localhost%3A5000%2Fubuntu&tag=tagged\");\n\t\t\tgiven(http().post(tagURI)).willReturn(emptyResponse());\n\t\t\tthis.api.tag(sourceReference, targetReference);\n\t\t\tthen(http()).should().post(tagURI);\n\t\t}", "original_code": "@Test\n\t\tvoid tagTagsImage() throws Exception {\n\t\t\tImageReference sourceReference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tImageReference targetReference = ImageReference.of(\"localhost:5000/ubuntu:tagged\");\n\t\t\tURI tagURI = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/tag?repo=localhost%3A5000%2Fubuntu&tag=tagged\");\n\t\t\tgiven(http().post(tagURI)).willReturn(emptyResponse());\n\t\t\tthis.api.tag(sourceReference, targetReference);\n\t\t\tthen(http()).should().post(tagURI);\n\t\t}", "code_tokens": ["@", "test", "void", "tag", "tags", "image", "(", ")", "throws", "exception", "{", "image", "reference", "source", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "target", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "tag", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "tag", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "tag", "(", "source", "reference", ",", "target", "reference", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "tag", "uri", ")", ";", "}"], "token_count": 103, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 130, "n_identifiers": 30, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.640559+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d9288e9010e733cca970a81217032efae06a963c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "tagRenamesImage", "signature": null, "start_line": 474, "end_line": 482, "nloc": 9, "method_source_normalized": "@TestvoidtagRenamesImage()throws Exception{\n\t\t\tImageReference sourceReference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tImageReference targetReference = ImageReference.of(\"localhost:5000/ubuntu-2\");\n\t\t\tURI tagURI = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/tag?repo=localhost%3A5000%2Fubuntu-2\");\n\t\t\tgiven(http().post(tagURI)).willReturn(emptyResponse());\n\t\t\tthis.api.tag(sourceReference, targetReference);\n\t\t\tthen(http()).should().post(tagURI);\n\t\t}", "original_code": "@Test\n\t\tvoid tagRenamesImage() throws Exception {\n\t\t\tImageReference sourceReference = ImageReference.of(\"localhost:5000/ubuntu\");\n\t\t\tImageReference targetReference = ImageReference.of(\"localhost:5000/ubuntu-2\");\n\t\t\tURI tagURI = new URI(IMAGES_URL + \"/localhost:5000/ubuntu/tag?repo=localhost%3A5000%2Fubuntu-2\");\n\t\t\tgiven(http().post(tagURI)).willReturn(emptyResponse());\n\t\t\tthis.api.tag(sourceReference, targetReference);\n\t\t\tthen(http()).should().post(tagURI);\n\t\t}", "code_tokens": ["@", "test", "void", "tag", "renames", "image", "(", ")", "throws", "exception", "{", "image", "reference", "source", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "target", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "tag", "uri", "=", "new", "uri", "(", "images", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "tag", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "tag", "(", "source", "reference", ",", "target", "reference", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "tag", "uri", ")", ";", "}"], "token_count": 103, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 130, "n_identifiers": 30, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.640889+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9cba48d71bc75b30cc78ec9fb57086c333045c07", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 497, "end_line": 500, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\t\tthis.api = DockerApiTests.this.dockerApi.container();\n\t\t}", "original_code": "@BeforeEach\n\t\tvoid setup() {\n\t\t\tthis.api = DockerApiTests.this.dockerApi.container();\n\t\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "api", "=", "docker", "api", "tests", ".", "this", ".", "docker", "api", ".", "container", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.641160+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "49d9b23efedbdd6f0edda26b43d77a2360f53d50", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWhenConfigIsNullThrowsException", "signature": null, "start_line": 502, "end_line": 506, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenConfigIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.create(null, null))\n\t\t\t\t.withMessage(\"'config' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid createWhenConfigIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.create(null, null))\n\t\t\t\t.withMessage(\"'config' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "create", "when", "config", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "create", "(", "null", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.641419+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39d2d065959dd38e9648bc40aee9c934002a82fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createCreatesContainer", "signature": null, "start_line": 508, "end_line": 521, "nloc": 14, "method_source_normalized": "@TestvoidcreateCreatesContainer()throws Exception{\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tURI createUri = new URI(CONTAINERS_URL + \"/create\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tContainerReference containerReference = this.api.create(config, null);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t}", "original_code": "@Test\n\t\tvoid createCreatesContainer() throws Exception {\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tURI createUri = new URI(CONTAINERS_URL + \"/create\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tContainerReference containerReference = this.api.create(config, null);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t}", "code_tokens": ["@", "test", "void", "create", "creates", "container", "(", ")", "throws", "exception", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "config", "config", "=", "container", "config", ".", "of", "(", "image", "reference", ",", "(", "update", ")", "->", "update", ".", "with", "command", "(", "__STR__", ")", ")", ";", "uri", "create", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "container", "reference", "container", "reference", "=", "this", ".", "api", ".", "create", "(", "config", ",", "null", ")", ";", "assert", "that", "(", "container", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "any", "(", ")", ",", "any", "(", ")", ",", "this", ".", "writer", ".", "capture", "(", ")", ")", ";", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "this", ".", "writer", ".", "get", "value", "(", ")", ".", "accept", "(", "out", ")", ";", "assert", "that", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ".", "has", "size", "(", "config", ".", "to", "string", "(", ")", ".", "length", "(", ")", ")", ";", "}"], "token_count": 213, "vocab_size": 60, "cyclomatic_complexity": 1, "ast_node_count": 268, "n_identifiers": 58, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 82, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.641882+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "64a2ae839e8e0b518db7129d3642a9ee889c8db0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWhenHasContentContainerWithContent", "signature": null, "start_line": 523, "end_line": 546, "nloc": 24, "method_source_normalized": "@TestvoidcreateWhenHasContentContainerWithContent()throws Exception{\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tTarArchive archive = TarArchive.of((layout) -> {\n\t\t\t\tlayout.directory(\"/test\", Owner.ROOT);\n\t\t\t\tlayout.file(\"/test/file\", Owner.ROOT, Content.of(\"test\"));\n\t\t\t});\n\t\t\tContainerContent content = ContainerContent.of(archive);\n\t\t\tURI createUri = new URI(CONTAINERS_URL + \"/create\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tURI uploadUri = new URI(CONTAINERS_URL + \"/e90e34656806/archive?path=%2F\");\n\t\t\tgiven(http().put(eq(uploadUri), eq(\"application/x-tar\"), any())).willReturn(emptyResponse());\n\t\t\tContainerReference containerReference = this.api.create(config, null, content);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t\tthen(http()).should().put(any(), any(), this.writer.capture());\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSizeGreaterThan(2000);\n\t\t}", "original_code": "@Test\n\t\tvoid createWhenHasContentContainerWithContent() throws Exception {\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tTarArchive archive = TarArchive.of((layout) -> {\n\t\t\t\tlayout.directory(\"/test\", Owner.ROOT);\n\t\t\t\tlayout.file(\"/test/file\", Owner.ROOT, Content.of(\"test\"));\n\t\t\t});\n\t\t\tContainerContent content = ContainerContent.of(archive);\n\t\t\tURI createUri = new URI(CONTAINERS_URL + \"/create\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tURI uploadUri = new URI(CONTAINERS_URL + \"/e90e34656806/archive?path=%2F\");\n\t\t\tgiven(http().put(eq(uploadUri), eq(\"application/x-tar\"), any())).willReturn(emptyResponse());\n\t\t\tContainerReference containerReference = this.api.create(config, null, content);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t\tthen(http()).should().put(any(), any(), this.writer.capture());\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSizeGreaterThan(2000);\n\t\t}", "code_tokens": ["@", "test", "void", "create", "when", "has", "content", "container", "with", "content", "(", ")", "throws", "exception", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "config", "config", "=", "container", "config", ".", "of", "(", "image", "reference", ",", "(", "update", ")", "->", "update", ".", "with", "command", "(", "__STR__", ")", ")", ";", "tar", "archive", "archive", "=", "tar", "archive", ".", "of", "(", "(", "layout", ")", "->", "{", "layout", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "layout", ".", "file", "(", "__STR__", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "__STR__", ")", ")", ";", "}", ")", ";", "container", "content", "content", "=", "container", "content", ".", "of", "(", "archive", ")", ";", "uri", "create", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "uri", "upload", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "put", "(", "eq", "(", "upload", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "container", "reference", "container", "reference", "=", "this", ".", "api", ".", "create", "(", "config", ",", "null", ",", "content", ")", ";", "assert", "that", "(", "container", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "any", "(", ")", ",", "any", "(", ")", ",", "this", ".", "writer", ".", "capture", "(", ")", ")", ";", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "this", ".", "writer", ".", "get", "value", "(", ")", ".", "accept", "(", "out", ")", ";", "assert", "that", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ".", "has", "size", "(", "config", ".", "to", "string", "(", ")", ".", "length", "(", ")", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "put", "(", "any", "(", ")", ",", "any", "(", ")", ",", "this", ".", "writer", ".", "capture", "(", ")", ")", ";", "this", ".", "writer", ".", "get", "value", "(", ")", ".", "accept", "(", "out", ")", ";", "assert", "that", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ".", "has", "size", "greater", "than", "(", "__NUM__", ")", ";", "}"], "token_count": 388, "vocab_size": 74, "cyclomatic_complexity": 1, "ast_node_count": 495, "n_identifiers": 108, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 146, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.642475+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "81d046064e4dbe0580f2ca7f73f62bf883e629ee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWithPlatformCreatesContainer", "signature": null, "start_line": 548, "end_line": 551, "nloc": 4, "method_source_normalized": "@TestvoidcreateWithPlatformCreatesContainer()throws Exception{\n\t\t\tcreateWithPlatform(\"1.41\");\n\t\t}", "original_code": "@Test\n\t\tvoid createWithPlatformCreatesContainer() throws Exception {\n\t\t\tcreateWithPlatform(\"1.41\");\n\t\t}", "code_tokens": ["@", "test", "void", "create", "with", "platform", "creates", "container", "(", ")", "throws", "exception", "{", "create", "with", "platform", "(", "__STR__", ")", ";", "}"], "token_count": 21, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.642778+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2cf1c86e1811cb501bf0cde19bb44331b1381cd7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWithPlatformAndUnknownApiVersionAttemptsCreate", "signature": null, "start_line": 553, "end_line": 556, "nloc": 4, "method_source_normalized": "@TestvoidcreateWithPlatformAndUnknownApiVersionAttemptsCreate()throws Exception{\n\t\t\tcreateWithPlatform(null);\n\t\t}", "original_code": "@Test\n\t\tvoid createWithPlatformAndUnknownApiVersionAttemptsCreate() throws Exception {\n\t\t\tcreateWithPlatform(null);\n\t\t}", "code_tokens": ["@", "test", "void", "create", "with", "platform", "and", "unknown", "api", "version", "attempts", "create", "(", ")", "throws", "exception", "{", "create", "with", "platform", "(", "null", ")", ";", "}"], "token_count": 25, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.643022+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5dc2e8e66947081d509c2235c405aa3e35c308c0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWithPlatform", "signature": null, "start_line": 558, "end_line": 575, "nloc": 18, "method_source_normalized": "privatevoidcreateWithPlatform(String apiVersion)throws IOException, URISyntaxException{\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tif (apiVersion != null) {\n\t\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, apiVersion)));\n\t\t\t}\n\t\t\tURI createUri = new URI(PLATFORM_CONTAINERS_URL + \"/create?platform=linux%2Farm64%2Fv1\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tContainerReference containerReference = this.api.create(config, platform);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t}", "original_code": "private void createWithPlatform(String apiVersion) throws IOException, URISyntaxException {\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tif (apiVersion != null) {\n\t\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, apiVersion)));\n\t\t\t}\n\t\t\tURI createUri = new URI(PLATFORM_CONTAINERS_URL + \"/create?platform=linux%2Farm64%2Fv1\");\n\t\t\tgiven(http().post(eq(createUri), eq(\"application/json\"), any()))\n\t\t\t\t.willReturn(responseOf(\"create-container-response.json\"));\n\t\t\tContainerReference containerReference = this.api.create(config, platform);\n\t\t\tassertThat(containerReference).hasToString(\"e90e34656806\");\n\t\t\tthen(http()).should().post(any(), any(), this.writer.capture());\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tthis.writer.getValue().accept(out);\n\t\t\tassertThat(out.toByteArray()).hasSize(config.toString().length());\n\t\t}", "code_tokens": ["private", "void", "create", "with", "platform", "(", "string", "api", "version", ")", "throws", "io", "exception", ",", "uri", "syntax", "exception", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "config", "config", "=", "container", "config", ".", "of", "(", "image", "reference", ",", "(", "update", ")", "->", "update", ".", "with", "command", "(", "__STR__", ")", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "if", "(", "api", "version", "!=", "null", ")", "{", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "api", "version", ")", ")", ")", ";", "}", "uri", "create", "uri", "=", "new", "uri", "(", "platform", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "eq", "(", "create", "uri", ")", ",", "eq", "(", "__STR__", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "container", "reference", "container", "reference", "=", "this", ".", "api", ".", "create", "(", "config", ",", "platform", ")", ";", "assert", "that", "(", "container", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "any", "(", ")", ",", "any", "(", ")", ",", "this", ".", "writer", ".", "capture", "(", ")", ")", ";", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "this", ".", "writer", ".", "get", "value", "(", ")", ".", "accept", "(", "out", ")", ";", "assert", "that", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ".", "has", "size", "(", "config", ".", "to", "string", "(", ")", ".", "length", "(", ")", ")", ";", "}"], "token_count": 287, "vocab_size": 71, "cyclomatic_complexity": 2, "ast_node_count": 350, "n_identifiers": 78, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 115, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.643490+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9015036653e367f31d86f2ea42fa0740de527a75", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "createWithPlatformAndKnownInsufficientApiVersionThrowsException", "signature": null, "start_line": 577, "end_line": 587, "nloc": 11, "method_source_normalized": "@TestvoidcreateWithPlatformAndKnownInsufficientApiVersionThrowsException()throws Exception{\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.24\")));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.create(config, platform))\n\t\t\t\t.withMessageContaining(\"must be at least 1.41\")\n\t\t\t\t.withMessageContaining(\"current API version is 1.24\");\n\t\t}", "original_code": "@Test\n\t\tvoid createWithPlatformAndKnownInsufficientApiVersionThrowsException() throws Exception {\n\t\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\t\tContainerConfig config = ContainerConfig.of(imageReference, (update) -> update.withCommand(\"/bin/bash\"));\n\t\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.24\")));\n\t\t\tassertThatIllegalStateException().isThrownBy(() -> this.api.create(config, platform))\n\t\t\t\t.withMessageContaining(\"must be at least 1.41\")\n\t\t\t\t.withMessageContaining(\"current API version is 1.24\");\n\t\t}", "code_tokens": ["@", "test", "void", "create", "with", "platform", "and", "known", "insufficient", "api", "version", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "config", "config", "=", "container", "config", ".", "of", "(", "image", "reference", ",", "(", "update", ")", "->", "update", ".", "with", "command", "(", "__STR__", ")", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "__STR__", ")", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "create", "(", "config", ",", "platform", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 154, "vocab_size": 56, "cyclomatic_complexity": 1, "ast_node_count": 171, "n_identifiers": 38, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 71, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.643896+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8a45e3529668110871fd4cb3dc9f9ceab0d15b14", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "startWhenReferenceIsNullThrowsException", "signature": null, "start_line": 589, "end_line": 593, "nloc": 5, "method_source_normalized": "@TestvoidstartWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.start(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid startWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.start(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "start", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "start", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.644174+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bd0ad90900ab9d27b7df3162d19d6a742a688a03", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "startStartsContainer", "signature": null, "start_line": 595, "end_line": 602, "nloc": 8, "method_source_normalized": "@TestvoidstartStartsContainer()throws Exception{\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI startContainerUri = new URI(CONTAINERS_URL + \"/e90e34656806/start\");\n\t\t\tgiven(http().post(startContainerUri)).willReturn(emptyResponse());\n\t\t\tthis.api.start(reference);\n\t\t\tthen(http()).should().post(startContainerUri);\n\t\t}", "original_code": "@Test\n\t\tvoid startStartsContainer() throws Exception {\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI startContainerUri = new URI(CONTAINERS_URL + \"/e90e34656806/start\");\n\t\t\tgiven(http().post(startContainerUri)).willReturn(emptyResponse());\n\t\t\tthis.api.start(reference);\n\t\t\tthen(http()).should().post(startContainerUri);\n\t\t}", "code_tokens": ["@", "test", "void", "start", "starts", "container", "(", ")", "throws", "exception", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "start", "container", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "start", "container", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "start", "(", "reference", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "post", "(", "start", "container", "uri", ")", ";", "}"], "token_count": 88, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 114, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.644477+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f86c46c8b79f0b25bfa05d5ff049509d53d1dd30", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "logsWhenReferenceIsNullThrowsException", "signature": null, "start_line": 604, "end_line": 608, "nloc": 5, "method_source_normalized": "@TestvoidlogsWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.logs(null, UpdateListener.none()))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid logsWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.logs(null, UpdateListener.none()))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "logs", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "logs", "(", "null", ",", "update", "listener", ".", "none", "(", ")", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 9, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.644761+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0782d7c1e55d4560bdcadbc474ad0551ba6cfa8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "logsWhenListenerIsNullThrowsException", "signature": null, "start_line": 610, "end_line": 615, "nloc": 6, "method_source_normalized": "@TestvoidlogsWhenListenerIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.logs(ContainerReference.of(\"e90e34656806\"), null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid logsWhenListenerIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> this.api.logs(ContainerReference.of(\"e90e34656806\"), null))\n\t\t\t\t.withMessage(\"'listener' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "logs", "when", "listener", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "logs", "(", "container", "reference", ".", "of", "(", "__STR__", ")", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 9, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.645025+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb74d20a2d25a85298aafd3e5d3f514c39d1fe60", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "logsProducesEvents", "signature": null, "start_line": 617, "end_line": 627, "nloc": 11, "method_source_normalized": "@TestvoidlogsProducesEvents()throws Exception{\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI logsUri = new URI(CONTAINERS_URL + \"/e90e34656806/logs?stdout=1&stderr=1&follow=1\");\n\t\t\tgiven(http().get(logsUri)).willReturn(responseOf(\"log-update-event.stream\"));\n\t\t\tthis.api.logs(reference, this.logListener);\n\t\t\tInOrder ordered = inOrder(this.logListener);\n\t\t\tordered.verify(this.logListener).onStart();\n\t\t\tordered.verify(this.logListener, times(7)).onUpdate(any());\n\t\t\tordered.verify(this.logListener).onFinish();\n\t\t}", "original_code": "@Test\n\t\tvoid logsProducesEvents() throws Exception {\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI logsUri = new URI(CONTAINERS_URL + \"/e90e34656806/logs?stdout=1&stderr=1&follow=1\");\n\t\t\tgiven(http().get(logsUri)).willReturn(responseOf(\"log-update-event.stream\"));\n\t\t\tthis.api.logs(reference, this.logListener);\n\t\t\tInOrder ordered = inOrder(this.logListener);\n\t\t\tordered.verify(this.logListener).onStart();\n\t\t\tordered.verify(this.logListener, times(7)).onUpdate(any());\n\t\t\tordered.verify(this.logListener).onFinish();\n\t\t}", "code_tokens": ["@", "test", "void", "logs", "produces", "events", "(", ")", "throws", "exception", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "logs", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "get", "(", "logs", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "this", ".", "api", ".", "logs", "(", "reference", ",", "this", ".", "log", "listener", ")", ";", "in", "order", "ordered", "=", "in", "order", "(", "this", ".", "log", "listener", ")", ";", "ordered", ".", "verify", "(", "this", ".", "log", "listener", ")", ".", "on", "start", "(", ")", ";", "ordered", ".", "verify", "(", "this", ".", "log", "listener", ",", "times", "(", "__NUM__", ")", ")", ".", "on", "update", "(", "any", "(", ")", ")", ";", "ordered", ".", "verify", "(", "this", ".", "log", "listener", ")", ".", "on", "finish", "(", ")", ";", "}"], "token_count": 140, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 179, "n_identifiers": 39, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.645372+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "977d3e372ee58e11c853287769ebf853b892adbd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "waitWhenReferenceIsNullThrowsException", "signature": null, "start_line": 629, "end_line": 633, "nloc": 5, "method_source_normalized": "@TestvoidwaitWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.wait(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid waitWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.wait(null))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "wait", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "wait", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.645652+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "51afbb515cd82b21f4f8a98da97ae5ea06dc8fa1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "waitReturnsStatus", "signature": null, "start_line": 635, "end_line": 642, "nloc": 8, "method_source_normalized": "@TestvoidwaitReturnsStatus()throws Exception{\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI waitUri = new URI(CONTAINERS_URL + \"/e90e34656806/wait\");\n\t\t\tgiven(http().post(waitUri)).willReturn(responseOf(\"container-wait-response.json\"));\n\t\t\tContainerStatus status = this.api.wait(reference);\n\t\t\tassertThat(status.getStatusCode()).isOne();\n\t\t}", "original_code": "@Test\n\t\tvoid waitReturnsStatus() throws Exception {\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI waitUri = new URI(CONTAINERS_URL + \"/e90e34656806/wait\");\n\t\t\tgiven(http().post(waitUri)).willReturn(responseOf(\"container-wait-response.json\"));\n\t\t\tContainerStatus status = this.api.wait(reference);\n\t\t\tassertThat(status.getStatusCode()).isOne();\n\t\t}", "code_tokens": ["@", "test", "void", "wait", "returns", "status", "(", ")", "throws", "exception", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "wait", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "post", "(", "wait", "uri", ")", ")", ".", "will", "return", "(", "response", "of", "(", "__STR__", ")", ")", ";", "container", "status", "status", "=", "this", ".", "api", ".", "wait", "(", "reference", ")", ";", "assert", "that", "(", "status", ".", "get", "status", "code", "(", ")", ")", ".", "is", "one", "(", ")", ";", "}"], "token_count": 90, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 114, "n_identifiers": 26, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.646012+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8051d1b247ff90b6cd26c57fd50a1c8358540f94", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeWhenReferenceIsNullThrowsException", "signature": null, "start_line": 644, "end_line": 648, "nloc": 5, "method_source_normalized": "@TestvoidremoveWhenReferenceIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.remove(null, true))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid removeWhenReferenceIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.remove(null, true))\n\t\t\t\t.withMessage(\"'reference' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "when", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "remove", "(", "null", ",", "true", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.646284+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "036654ed16e79530d8fa7976c05616ba8d4baa12", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeRemovesContainer", "signature": null, "start_line": 650, "end_line": 657, "nloc": 8, "method_source_normalized": "@TestvoidremoveRemovesContainer()throws Exception{\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI removeUri = new URI(CONTAINERS_URL + \"/e90e34656806\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid removeRemovesContainer() throws Exception {\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI removeUri = new URI(CONTAINERS_URL + \"/e90e34656806\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "removes", "container", "(", ")", "throws", "exception", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "remove", "(", "reference", ",", "false", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 87, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.646590+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "123589ceea1741d450e19e25b0d5a974102fd62e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "removeWhenForceIsTrueRemovesContainer", "signature": null, "start_line": 659, "end_line": 666, "nloc": 8, "method_source_normalized": "@TestvoidremoveWhenForceIsTrueRemovesContainer()throws Exception{\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI removeUri = new URI(CONTAINERS_URL + \"/e90e34656806?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid removeWhenForceIsTrueRemovesContainer() throws Exception {\n\t\t\tContainerReference reference = ContainerReference.of(\"e90e34656806\");\n\t\t\tURI removeUri = new URI(CONTAINERS_URL + \"/e90e34656806?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.remove(reference, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "remove", "when", "force", "is", "true", "removes", "container", "(", ")", "throws", "exception", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "containers", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "remove", "(", "reference", ",", "true", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 91, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.646906+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "064653a10df862981444bb1d441ab8a4e770a29a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 675, "end_line": 678, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\t\tthis.api = DockerApiTests.this.dockerApi.volume();\n\t\t}", "original_code": "@BeforeEach\n\t\tvoid setup() {\n\t\t\tthis.api = DockerApiTests.this.dockerApi.volume();\n\t\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "api", "=", "docker", "api", "tests", ".", "this", ".", "docker", "api", ".", "volume", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.647175+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cbc4dd5c4b842d65274e40f4b54f3475ada59f61", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "deleteWhenNameIsNullThrowsException", "signature": null, "start_line": 680, "end_line": 684, "nloc": 5, "method_source_normalized": "@TestvoiddeleteWhenNameIsNullThrowsException(){\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.delete(null, false))\n\t\t\t\t.withMessage(\"'name' must not be null\");\n\t\t}", "original_code": "@Test\n\t\tvoid deleteWhenNameIsNullThrowsException() {\n\t\t\tassertThatIllegalArgumentException().isThrownBy(() -> this.api.delete(null, false))\n\t\t\t\t.withMessage(\"'name' must not be null\");\n\t\t}", "code_tokens": ["@", "test", "void", "delete", "when", "name", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "api", ".", "delete", "(", "null", ",", "false", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.647435+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b3385659e41c190a3ceaa0b4df3135e17afd148", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "deleteDeletesContainer", "signature": null, "start_line": 686, "end_line": 693, "nloc": 8, "method_source_normalized": "@TestvoiddeleteDeletesContainer()throws Exception{\n\t\t\tVolumeName name = VolumeName.of(\"test\");\n\t\t\tURI removeUri = new URI(VOLUMES_URL + \"/test\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.delete(name, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid deleteDeletesContainer() throws Exception {\n\t\t\tVolumeName name = VolumeName.of(\"test\");\n\t\t\tURI removeUri = new URI(VOLUMES_URL + \"/test\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.delete(name, false);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "delete", "deletes", "container", "(", ")", "throws", "exception", "{", "volume", "name", "name", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "volumes", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "delete", "(", "name", ",", "false", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 87, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.647737+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3056c3ae1b707fe944d01790db3d129c476e3d8c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "deleteWhenForceIsTrueDeletesContainer", "signature": null, "start_line": 695, "end_line": 702, "nloc": 8, "method_source_normalized": "@TestvoiddeleteWhenForceIsTrueDeletesContainer()throws Exception{\n\t\t\tVolumeName name = VolumeName.of(\"test\");\n\t\t\tURI removeUri = new URI(VOLUMES_URL + \"/test?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.delete(name, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "original_code": "@Test\n\t\tvoid deleteWhenForceIsTrueDeletesContainer() throws Exception {\n\t\t\tVolumeName name = VolumeName.of(\"test\");\n\t\t\tURI removeUri = new URI(VOLUMES_URL + \"/test?force=1\");\n\t\t\tgiven(http().delete(removeUri)).willReturn(emptyResponse());\n\t\t\tthis.api.delete(name, true);\n\t\t\tthen(http()).should().delete(removeUri);\n\t\t}", "code_tokens": ["@", "test", "void", "delete", "when", "force", "is", "true", "deletes", "container", "(", ")", "throws", "exception", "{", "volume", "name", "name", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "uri", "remove", "uri", "=", "new", "uri", "(", "volumes", "url", "+", "__STR__", ")", ";", "given", "(", "http", "(", ")", ".", "delete", "(", "remove", "uri", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "this", ".", "api", ".", "delete", "(", "name", ",", "true", ")", ";", "then", "(", "http", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "remove", "uri", ")", ";", "}"], "token_count": 91, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 116, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.648052+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "129fc774ae99339fc630e2574739b80375690ce0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 711, "end_line": 714, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\t\tthis.api = DockerApiTests.this.dockerApi.system();\n\t\t}", "original_code": "@BeforeEach\n\t\tvoid setup() {\n\t\t\tthis.api = DockerApiTests.this.dockerApi.system();\n\t\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "api", "=", "docker", "api", "tests", ".", "this", ".", "docker", "api", ".", "system", "(", ")", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 34, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.648316+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a4dda01e1618a8e89defddd7eb20892a9b5549e8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getApiVersionWithVersionHeaderReturnsVersion", "signature": null, "start_line": 716, "end_line": 721, "nloc": 6, "method_source_normalized": "@TestvoidgetApiVersionWithVersionHeaderReturnsVersion()throws Exception{\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.44\")));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(ApiVersion.of(1, 44));\n\t\t}", "original_code": "@Test\n\t\tvoid getApiVersionWithVersionHeaderReturnsVersion() throws Exception {\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"1.44\")));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(ApiVersion.of(1, 44));\n\t\t}", "code_tokens": ["@", "test", "void", "get", "api", "version", "with", "version", "header", "returns", "version", "(", ")", "throws", "exception", "{", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "__STR__", ")", ")", ")", ";", "assert", "that", "(", "this", ".", "api", ".", "get", "api", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ")", ";", "}"], "token_count": 90, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 20, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.648610+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "750c2eea5cf3e91a4d078006223c91dfe68d8612", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getApiVersionWithEmptyVersionHeaderReturnsUnknownVersion", "signature": null, "start_line": 723, "end_line": 728, "nloc": 6, "method_source_normalized": "@TestvoidgetApiVersionWithEmptyVersionHeaderReturnsUnknownVersion()throws Exception{\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"\")));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t}", "original_code": "@Test\n\t\tvoid getApiVersionWithEmptyVersionHeaderReturnsUnknownVersion() throws Exception {\n\t\t\tgiven(http().head(eq(new URI(PING_URL))))\n\t\t\t\t.willReturn(responseWithHeaders(new BasicHeader(DockerApi.API_VERSION_HEADER_NAME, \"\")));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t}", "code_tokens": ["@", "test", "void", "get", "api", "version", "with", "empty", "version", "header", "returns", "unknown", "version", "(", ")", "throws", "exception", "{", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "response", "with", "headers", "(", "new", "basic", "header", "(", "docker", "api", ".", "api", "version", "header", "name", ",", "__STR__", ")", ")", ")", ";", "assert", "that", "(", "this", ".", "api", ".", "get", "api", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "docker", "api", ".", "unknown", "api", "version", ")", ";", "}"], "token_count": 89, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 96, "n_identifiers": 20, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.648910+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "649b5e5199986fb76b14cd8956eff00ff4c9d747", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getApiVersionWithNoVersionHeaderReturnsUnknownVersion", "signature": null, "start_line": 730, "end_line": 734, "nloc": 5, "method_source_normalized": "@TestvoidgetApiVersionWithNoVersionHeaderReturnsUnknownVersion()throws Exception{\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willReturn(emptyResponse());\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t}", "original_code": "@Test\n\t\tvoid getApiVersionWithNoVersionHeaderReturnsUnknownVersion() throws Exception {\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willReturn(emptyResponse());\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t}", "code_tokens": ["@", "test", "void", "get", "api", "version", "with", "no", "version", "header", "returns", "unknown", "version", "(", ")", "throws", "exception", "{", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "return", "(", "empty", "response", "(", ")", ")", ";", "assert", "that", "(", "this", ".", "api", ".", "get", "api", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "docker", "api", ".", "unknown", "api", "version", ")", ";", "}"], "token_count": 74, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.649200+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "05e0692effcb622965febfc2e2f67026c93a63d3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java", "file_blob_sha": null, "method_name": "getApiVersionWithExceptionReturnsUnknownVersion", "signature": null, "start_line": 736, "end_line": 741, "nloc": 6, "method_source_normalized": "@TestvoidgetApiVersionWithExceptionReturnsUnknownVersion(CapturedOutput output)throws Exception{\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willThrow(new IOException(\"simulated error\"));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t\tassertThat(output).contains(\"Warning: Failed to determine Docker API version: simulated error\");\n\t\t}", "original_code": "@Test\n\t\tvoid getApiVersionWithExceptionReturnsUnknownVersion(CapturedOutput output) throws Exception {\n\t\t\tgiven(http().head(eq(new URI(PING_URL)))).willThrow(new IOException(\"simulated error\"));\n\t\t\tassertThat(this.api.getApiVersion()).isEqualTo(DockerApi.UNKNOWN_API_VERSION);\n\t\t\tassertThat(output).contains(\"Warning: Failed to determine Docker API version: simulated error\");\n\t\t}", "code_tokens": ["@", "test", "void", "get", "api", "version", "with", "exception", "returns", "unknown", "version", "(", "captured", "output", "output", ")", "throws", "exception", "{", "given", "(", "http", "(", ")", ".", "head", "(", "eq", "(", "new", "uri", "(", "ping", "url", ")", ")", ")", ")", ".", "will", "throw", "(", "new", "io", "exception", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "this", ".", "api", ".", "get", "api", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "docker", "api", ".", "unknown", "api", "version", ")", ";", "assert", "that", "(", "output", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 88, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 22, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.649506+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b59c1e978fe68fb7a73af1892575be8d09a0a9a3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LoadImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "getStreamReturnsStream", "signature": null, "start_line": 34, "end_line": 38, "nloc": 5, "method_source_normalized": "@TestvoidgetStreamReturnsStream(){\n\t\tLoadImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getStream()).isEqualTo(\"stream\");\n\t}", "original_code": "@Test\n\tvoid getStreamReturnsStream() {\n\t\tLoadImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getStream()).isEqualTo(\"stream\");\n\t}", "code_tokens": ["@", "test", "void", "get", "stream", "returns", "stream", "(", ")", "{", "load", "image", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "stream", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 40, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.650424+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4be57d72b5aaae4a8a331470aa4b8797d9ce0513", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LoadImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "getErrorDetailReturnsErrorDetail", "signature": null, "start_line": 40, "end_line": 44, "nloc": 5, "method_source_normalized": "@TestvoidgetErrorDetailReturnsErrorDetail(){\n\t\tLoadImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getErrorDetail()).extracting(ErrorDetail::getMessage).isEqualTo(\"max depth exceeded\");\n\t}", "original_code": "@Test\n\tvoid getErrorDetailReturnsErrorDetail() {\n\t\tLoadImageUpdateEvent event = createEvent();\n\t\tassertThat(event.getErrorDetail()).extracting(ErrorDetail::getMessage).isEqualTo(\"max depth exceeded\");\n\t}", "code_tokens": ["@", "test", "void", "get", "error", "detail", "returns", "error", "detail", "(", ")", "{", "load", "image", "update", "event", "event", "=", "create", "event", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "error", "detail", "(", ")", ")", ".", "extracting", "(", "error", "detail", "::", "get", "message", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.650707+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e7164472b2a3b1588b85d5ce8086850ccfbfac45", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LoadImageUpdateEventTests.java", "file_blob_sha": null, "method_name": "createEvent", "signature": null, "start_line": 46, "end_line": 50, "nloc": 5, "method_source_normalized": "@Override\n\tprotectedLoadImageUpdateEventcreateEvent(String status, ProgressDetail progressDetail, String progress){\n\t\treturn new LoadImageUpdateEvent(\"stream\", status, progressDetail, progress,\n\t\t\t\tnew ErrorDetail(\"max depth exceeded\"));\n\t}", "original_code": "@Override\n\tprotected LoadImageUpdateEvent createEvent(String status, ProgressDetail progressDetail, String progress) {\n\t\treturn new LoadImageUpdateEvent(\"stream\", status, progressDetail, progress,\n\t\t\t\tnew ErrorDetail(\"max depth exceeded\"));\n\t}", "code_tokens": ["@", "override", "protected", "load", "image", "update", "event", "create", "event", "(", "string", "status", ",", "progress", "detail", "progress", "detail", ",", "string", "progress", ")", "{", "return", "new", "load", "image", "update", "event", "(", "__STR__", ",", "status", ",", "progress", "detail", ",", "progress", ",", "new", "error", "detail", "(", "__STR__", ")", ")", ";", "}"], "token_count": 47, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.650980+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a259e972817d7db99afca72ab921713ce04c4ef7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PullUpdateEventTests.java", "file_blob_sha": null, "method_name": "readValueWhenFullDeserializesJson", "signature": null, "start_line": 32, "end_line": 41, "nloc": 10, "method_source_normalized": "@Test\n\t@SuppressWarnings(\"removal\")voidreadValueWhenFullDeserializesJson()throws Exception{\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-update-full.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isEqualTo(\"4f4fb700ef54\");\n\t\tassertThat(event.getStatus()).isEqualTo(\"Extracting\");\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t\tassertThat(event.getProgress()).isEqualTo(\"[==================================================>]      32B/32B\");\n\t}", "original_code": "@Test\n\t@SuppressWarnings(\"removal\")\n\tvoid readValueWhenFullDeserializesJson() throws Exception {\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-update-full.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isEqualTo(\"4f4fb700ef54\");\n\t\tassertThat(event.getStatus()).isEqualTo(\"Extracting\");\n\t\tassertThat(event.getProgressDetail().asPercentage()).isEqualTo(50);\n\t\tassertThat(event.getProgress()).isEqualTo(\"[==================================================>]      32B/32B\");\n\t}", "code_tokens": ["@", "test", "@", "suppress", "warnings", "(", "__STR__", ")", "void", "read", "value", "when", "full", "deserializes", "json", "(", ")", "throws", "exception", "{", "pull", "image", "update", "event", "event", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "pull", "image", "update", "event", ".", "class", ")", ";", "assert", "that", "(", "event", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "status", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "detail", "(", ")", ".", "as", "percentage", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 128, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 28, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.651965+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a52ea249dc498a384166fccc5bb64772a0d2b862", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PullUpdateEventTests.java", "file_blob_sha": null, "method_name": "readValueWhenMinimalDeserializesJson", "signature": null, "start_line": 43, "end_line": 51, "nloc": 9, "method_source_normalized": "@TestvoidreadValueWhenMinimalDeserializesJson()throws Exception{\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-update-minimal.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isNull();\n\t\tassertThat(event.getStatus()).isEqualTo(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t\tassertThat(event.getProgressDetail()).isNull();\n\t\tassertThat(event.getProgress()).isNull();\n\t}", "original_code": "@Test\n\tvoid readValueWhenMinimalDeserializesJson() throws Exception {\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-update-minimal.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isNull();\n\t\tassertThat(event.getStatus()).isEqualTo(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t\tassertThat(event.getProgressDetail()).isNull();\n\t\tassertThat(event.getProgress()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "read", "value", "when", "minimal", "deserializes", "json", "(", ")", "throws", "exception", "{", "pull", "image", "update", "event", "event", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "pull", "image", "update", "event", ".", "class", ")", ";", "assert", "that", "(", "event", ".", "get", "id", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "status", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "detail", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 111, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.652336+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "794a5a013b210af801fc33a647331bb0a4c14265", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/PullUpdateEventTests.java", "file_blob_sha": null, "method_name": "readValueWhenEmptyDetailsDeserializesJson", "signature": null, "start_line": 53, "end_line": 61, "nloc": 9, "method_source_normalized": "@TestvoidreadValueWhenEmptyDetailsDeserializesJson()throws Exception{\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-with-empty-details.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isEqualTo(\"d837a2a1365e\");\n\t\tassertThat(event.getStatus()).isEqualTo(\"Pulling fs layer\");\n\t\tassertThat(event.getProgressDetail()).isNull();\n\t\tassertThat(event.getProgress()).isNull();\n\t}", "original_code": "@Test\n\tvoid readValueWhenEmptyDetailsDeserializesJson() throws Exception {\n\t\tPullImageUpdateEvent event = getObjectMapper().readValue(getContent(\"pull-with-empty-details.json\"),\n\t\t\t\tPullImageUpdateEvent.class);\n\t\tassertThat(event.getId()).isEqualTo(\"d837a2a1365e\");\n\t\tassertThat(event.getStatus()).isEqualTo(\"Pulling fs layer\");\n\t\tassertThat(event.getProgressDetail()).isNull();\n\t\tassertThat(event.getProgress()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "read", "value", "when", "empty", "details", "deserializes", "json", "(", ")", "throws", "exception", "{", "pull", "image", "update", "event", "event", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "pull", "image", "update", "event", ".", "class", ")", ";", "assert", "that", "(", "event", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "status", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "detail", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "event", ".", "get", "progress", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 114, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 126, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.652663+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "647241074d43587728c8ca2ca94df1ae215a527a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LogUpdateEventTests.java", "file_blob_sha": null, "method_name": "readAllWhenSimpleStreamReturnsEvents", "signature": null, "start_line": 35, "end_line": 45, "nloc": 11, "method_source_normalized": "@TestvoidreadAllWhenSimpleStreamReturnsEvents()throws Exception{\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event.stream\");\n\t\tassertThat(events).hasSize(7);\n\t\tassertThat(events.get(0))\n\t\t\t.hasToString(\"Analyzing image '307c032c4ceaa6330b6c02af945a1fe56a8c3c27c28268574b217c1d38b093cf'\");\n\t\tassertThat(events.get(1))\n\t\t\t.hasToString(\"Writing metadata for uncached layer 'org.cloudfoundry.openjdk:openjdk-jre'\");\n\t\tassertThat(events.get(2))\n\t\t\t.hasToString(\"Using cached launch layer 'org.cloudfoundry.jvmapplication:executable-jar'\");\n\t}", "original_code": "@Test\n\tvoid readAllWhenSimpleStreamReturnsEvents() throws Exception {\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event.stream\");\n\t\tassertThat(events).hasSize(7);\n\t\tassertThat(events.get(0))\n\t\t\t.hasToString(\"Analyzing image '307c032c4ceaa6330b6c02af945a1fe56a8c3c27c28268574b217c1d38b093cf'\");\n\t\tassertThat(events.get(1))\n\t\t\t.hasToString(\"Writing metadata for uncached layer 'org.cloudfoundry.openjdk:openjdk-jre'\");\n\t\tassertThat(events.get(2))\n\t\t\t.hasToString(\"Using cached launch layer 'org.cloudfoundry.jvmapplication:executable-jar'\");\n\t}", "code_tokens": ["@", "test", "void", "read", "all", "when", "simple", "stream", "returns", "events", "(", ")", "throws", "exception", "{", "list", "<", "log", "update", "event", ">", "events", "=", "read", "all", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 96, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 114, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.653646+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ff1be22fe3d3e4d948bed164dc5672bb6a5a5d0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LogUpdateEventTests.java", "file_blob_sha": null, "method_name": "readAllWhenAnsiStreamReturnsEvents", "signature": null, "start_line": 47, "end_line": 54, "nloc": 8, "method_source_normalized": "@TestvoidreadAllWhenAnsiStreamReturnsEvents()throws Exception{\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event-ansi.stream\");\n\t\tassertThat(events).hasSize(20);\n\t\tassertThat(events.get(0).toString()).isEmpty();\n\t\tassertThat(events.get(1)).hasToString(\"Cloud Foundry OpenJDK Buildpack v1.0.64\");\n\t\tassertThat(events.get(2)).hasToString(\"  OpenJDK JRE 11.0.5: Reusing cached layer\");\n\t}", "original_code": "@Test\n\tvoid readAllWhenAnsiStreamReturnsEvents() throws Exception {\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event-ansi.stream\");\n\t\tassertThat(events).hasSize(20);\n\t\tassertThat(events.get(0).toString()).isEmpty();\n\t\tassertThat(events.get(1)).hasToString(\"Cloud Foundry OpenJDK Buildpack v1.0.64\");\n\t\tassertThat(events.get(2)).hasToString(\"  OpenJDK JRE 11.0.5: Reusing cached layer\");\n\t}", "code_tokens": ["@", "test", "void", "read", "all", "when", "ansi", "stream", "returns", "events", "(", ")", "throws", "exception", "{", "list", "<", "log", "update", "event", ">", "events", "=", "read", "all", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ".", "to", "string", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 99, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 119, "n_identifiers": 23, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.653954+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "458ee3d0572a81822d46ae5f3a462a8c287adfcc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LogUpdateEventTests.java", "file_blob_sha": null, "method_name": "readSucceedsWhenStreamTypeIsInvalid", "signature": null, "start_line": 56, "end_line": 61, "nloc": 6, "method_source_normalized": "@TestvoidreadSucceedsWhenStreamTypeIsInvalid()throws IOException{\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event-invalid-stream-type.stream\");\n\t\tassertThat(events).hasSize(1);\n\t\tassertThat(events.get(0)).hasToString(\"Stream type is out of bounds. Must be >= 0 and < 3, but was 3\");\n\t}", "original_code": "@Test\n\tvoid readSucceedsWhenStreamTypeIsInvalid() throws IOException {\n\t\tList<LogUpdateEvent> events = readAll(\"log-update-event-invalid-stream-type.stream\");\n\t\tassertThat(events).hasSize(1);\n\t\tassertThat(events.get(0)).hasToString(\"Stream type is out of bounds. Must be >= 0 and < 3, but was 3\");\n\t}", "code_tokens": ["@", "test", "void", "read", "succeeds", "when", "stream", "type", "is", "invalid", "(", ")", "throws", "io", "exception", "{", "list", "<", "log", "update", "event", ">", "events", "=", "read", "all", "(", "__STR__", ")", ";", "assert", "that", "(", "events", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "events", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 61, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.654218+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3a381d84bc2046ba8a21c0404cefea0247c4b099", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/LogUpdateEventTests.java", "file_blob_sha": null, "method_name": "readAll", "signature": null, "start_line": 63, "end_line": 69, "nloc": 7, "method_source_normalized": "privateList<LogUpdateEvent>readAll(String name)throws IOException{\n\t\tList<LogUpdateEvent> events = new ArrayList<>();\n\t\ttry (InputStream inputStream = getClass().getResourceAsStream(name)) {\n\t\t\tLogUpdateEvent.readAll(inputStream, events::add);\n\t\t}\n\t\treturn events;\n\t}", "original_code": "private List<LogUpdateEvent> readAll(String name) throws IOException {\n\t\tList<LogUpdateEvent> events = new ArrayList<>();\n\t\ttry (InputStream inputStream = getClass().getResourceAsStream(name)) {\n\t\t\tLogUpdateEvent.readAll(inputStream, events::add);\n\t\t}\n\t\treturn events;\n\t}", "code_tokens": ["private", "list", "<", "log", "update", "event", ">", "read", "all", "(", "string", "name", ")", "throws", "io", "exception", "{", "list", "<", "log", "update", "event", ">", "events", "=", "new", "array", "list", "<", ">", "(", ")", ";", "try", "(", "input", "stream", "input", "stream", "=", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ")", "{", "log", "update", "event", ".", "read", "all", "(", "input", "stream", ",", "events", "::", "add", ")", ";", "}", "return", "events", ";", "}"], "token_count": 74, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 86, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.654501+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a273c84cdcd869712044a241bf49b8815c4156c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressBarTests.java", "file_blob_sha": null, "method_name": "withPrefixAndBookends", "signature": null, "start_line": 33, "end_line": 44, "nloc": 12, "method_source_normalized": "@TestvoidwithPrefixAndBookends(){\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(\"prefix:\", '#', true, out);\n\t\tassertThat(out).hasToString(\"prefix: [ \");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\"prefix: [ #####\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\"prefix: [ #########################\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"prefix: [ ################################################## ]%n\"));\n\t}", "original_code": "@Test\n\tvoid withPrefixAndBookends() {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(\"prefix:\", '#', true, out);\n\t\tassertThat(out).hasToString(\"prefix: [ \");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\"prefix: [ #####\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\"prefix: [ #########################\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"prefix: [ ################################################## ]%n\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "prefix", "and", "bookends", "(", ")", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "total", "progress", "bar", "bar", "=", "new", "total", "progress", "bar", "(", "__STR__", ",", "__STR__", ",", "true", ",", "out", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "string", ".", "format", "(", "__STR__", ")", ")", ";", "}"], "token_count": 138, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 159, "n_identifiers": 32, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.655701+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ad588f47ba34c3e35a9d3cfde5a49b2694cf61d6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressBarTests.java", "file_blob_sha": null, "method_name": "withoutPrefix", "signature": null, "start_line": 46, "end_line": 57, "nloc": 12, "method_source_normalized": "@TestvoidwithoutPrefix(){\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(null, '#', true, out);\n\t\tassertThat(out).hasToString(\"[ \");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\"[ #####\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\"[ #########################\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"[ ################################################## ]%n\"));\n\t}", "original_code": "@Test\n\tvoid withoutPrefix() {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(null, '#', true, out);\n\t\tassertThat(out).hasToString(\"[ \");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\"[ #####\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\"[ #########################\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"[ ################################################## ]%n\"));\n\t}", "code_tokens": ["@", "test", "void", "without", "prefix", "(", ")", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "total", "progress", "bar", "bar", "=", "new", "total", "progress", "bar", "(", "null", ",", "__STR__", ",", "true", ",", "out", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "string", ".", "format", "(", "__STR__", ")", ")", ";", "}"], "token_count": 136, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 159, "n_identifiers": 32, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.656033+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1070de69cc6852f7edeccfae2924a25ddb6861b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressBarTests.java", "file_blob_sha": null, "method_name": "withoutBookends", "signature": null, "start_line": 59, "end_line": 70, "nloc": 12, "method_source_normalized": "@TestvoidwithoutBookends(){\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(\"\", '.', false, out);\n\t\tassertThat(out).hasToString(\"\");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\".....\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\".........................\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"..................................................%n\"));\n\t}", "original_code": "@Test\n\tvoid withoutBookends() {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tTotalProgressBar bar = new TotalProgressBar(\"\", '.', false, out);\n\t\tassertThat(out).hasToString(\"\");\n\t\tbar.accept(new TotalProgressEvent(10));\n\t\tassertThat(out).hasToString(\".....\");\n\t\tbar.accept(new TotalProgressEvent(50));\n\t\tassertThat(out).hasToString(\".........................\");\n\t\tbar.accept(new TotalProgressEvent(100));\n\t\tassertThat(out).hasToString(String.format(\"..................................................%n\"));\n\t}", "code_tokens": ["@", "test", "void", "without", "bookends", "(", ")", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "total", "progress", "bar", "bar", "=", "new", "total", "progress", "bar", "(", "__STR__", ",", "__STR__", ",", "false", ",", "out", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "bar", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "assert", "that", "(", "out", ")", ".", "has", "to", "string", "(", "string", ".", "format", "(", "__STR__", ")", ")", ";", "}"], "token_count": 136, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 159, "n_identifiers": 32, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.656381+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "595c18066652d7cfdccffdbf422a185f05ca1681", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressBarTests.java", "file_blob_sha": null, "method_name": "TestPrintStream", "signature": null, "start_line": 74, "end_line": 76, "nloc": 3, "method_source_normalized": "TestPrintStream(){\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "original_code": "TestPrintStream() {\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "code_tokens": ["test", "print", "stream", "(", ")", "{", "super", "(", "new", "byte", "array", "output", "stream", "(", ")", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 2, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.656626+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f6dc880d749bb0f39c367f91d92564546b518b4c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressBarTests.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 78, "end_line": 81, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.out.toString();\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.out.toString();\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "out", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.656864+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5060f7483181654bddc55b355d3c8dc651549535", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressEventTests.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 31, "end_line": 36, "nloc": 6, "method_source_normalized": "@Testvoidcreate(){\n\t\tassertThat(new TotalProgressEvent(0).getPercent()).isZero();\n\t\tassertThat(new TotalProgressEvent(10).getPercent()).isEqualTo(10);\n\t\tassertThat(new TotalProgressEvent(100).getPercent()).isEqualTo(100);\n\t}", "original_code": "@Test\n\tvoid create() {\n\t\tassertThat(new TotalProgressEvent(0).getPercent()).isZero();\n\t\tassertThat(new TotalProgressEvent(10).getPercent()).isEqualTo(10);\n\t\tassertThat(new TotalProgressEvent(100).getPercent()).isEqualTo(100);\n\t}", "code_tokens": ["@", "test", "void", "create", "(", ")", "{", "assert", "that", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ".", "get", "percent", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ".", "get", "percent", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ".", "get", "percent", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 78, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 93, "n_identifiers": 14, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.657541+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db23769114a609252f0a2eec342783da99b8a8c9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressEventTests.java", "file_blob_sha": null, "method_name": "createWhenPercentLessThanZeroThrowsException", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenPercentLessThanZeroThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new TotalProgressEvent(-1))\n\t\t\t.withMessage(\"'percent' must be in the range 0 to 100\");\n\t}", "original_code": "@Test\n\tvoid createWhenPercentLessThanZeroThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new TotalProgressEvent(-1))\n\t\t\t.withMessage(\"'percent' must be in the range 0 to 100\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "percent", "less", "than", "zero", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "total", "progress", "event", "(", "-", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 6, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.657812+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a100e44b96213f53a85dd88980ddbdfdd25c9a1a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/TotalProgressEventTests.java", "file_blob_sha": null, "method_name": "createWhenEventMoreThanOneHundredThrowsException", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenEventMoreThanOneHundredThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new TotalProgressEvent(101))\n\t\t\t.withMessage(\"'percent' must be in the range 0 to 100\");\n\t}", "original_code": "@Test\n\tvoid createWhenEventMoreThanOneHundredThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new TotalProgressEvent(101))\n\t\t\t.withMessage(\"'percent' must be in the range 0 to 100\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "event", "more", "than", "one", "hundred", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 6, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.658062+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7c077155466c2315a800bc2089c2b086f9125efe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofWhenInputStreamThrowsException", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "@TestvoidofWhenInputStreamThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((InputStream) null))\n\t\t\t.withMessage(\"'inputStream' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenInputStreamThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((InputStream) null))\n\t\t\t.withMessage(\"'inputStream' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "input", "stream", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "inspected", "content", ".", "of", "(", "(", "input", "stream", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.659500+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "93b470c30990118c92838b8533bcdda80bdc2936", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofWhenContentIsNullThrowsException", "signature": null, "start_line": 45, "end_line": 49, "nloc": 5, "method_source_normalized": "@TestvoidofWhenContentIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((Content) null))\n\t\t\t.withMessage(\"'content' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenContentIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((Content) null))\n\t\t\t.withMessage(\"'content' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "content", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "inspected", "content", ".", "of", "(", "(", "content", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.659763+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6af4ab021e2a2910423d11107dc14bfd6db7ac47", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofWhenConsumerIsNullThrowsException", "signature": null, "start_line": 51, "end_line": 55, "nloc": 5, "method_source_normalized": "@TestvoidofWhenConsumerIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((IOConsumer<OutputStream>) null))\n\t\t\t.withMessage(\"'writer' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenConsumerIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> InspectedContent.of((IOConsumer<OutputStream>) null))\n\t\t\t.withMessage(\"'writer' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "consumer", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "inspected", "content", ".", "of", "(", "(", "io", "consumer", "<", "output", "stream", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 9, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.660024+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "af56288bcdfb13da3a074cd2b083705b0e18b1be", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofFromContent", "signature": null, "start_line": 57, "end_line": 63, "nloc": 7, "method_source_normalized": "@TestvoidofFromContent()throws Exception{\n\t\tInspectedContent content = InspectedContent.of(Content.of(\"test\"));\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontent.writeTo(outputStream);\n\t\tassertThat(outputStream.toByteArray()).containsExactly(\"test\".getBytes(StandardCharsets.UTF_8));\n\t}", "original_code": "@Test\n\tvoid ofFromContent() throws Exception {\n\t\tInspectedContent content = InspectedContent.of(Content.of(\"test\"));\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontent.writeTo(outputStream);\n\t\tassertThat(outputStream.toByteArray()).containsExactly(\"test\".getBytes(StandardCharsets.UTF_8));\n\t}", "code_tokens": ["@", "test", "void", "of", "from", "content", "(", ")", "throws", "exception", "{", "inspected", "content", "content", "=", "inspected", "content", ".", "of", "(", "content", ".", "of", "(", "__STR__", ")", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "content", ".", "write", "to", "(", "output", "stream", ")", ";", "assert", "that", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ".", "contains", "exactly", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}"], "token_count": 82, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.660312+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2abcecb2964c3f6cf5fb2ffd03d7b8ed8f683eed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofSmallContent", "signature": null, "start_line": 65, "end_line": 71, "nloc": 7, "method_source_normalized": "@TestvoidofSmallContent()throws Exception{\n\t\tInputStream inputStream = new ByteArrayInputStream(new byte[] { 0, 1, 2 });\n\t\tInspectedContent content = InspectedContent.of(inputStream);\n\t\tassertThat(content.size()).isEqualTo(3);\n\t\tassertThat(readBytes(content)).containsExactly(0, 1, 2);\n\t}", "original_code": "@Test\n\tvoid ofSmallContent() throws Exception {\n\t\tInputStream inputStream = new ByteArrayInputStream(new byte[] { 0, 1, 2 });\n\t\tInspectedContent content = InspectedContent.of(inputStream);\n\t\tassertThat(content.size()).isEqualTo(3);\n\t\tassertThat(readBytes(content)).containsExactly(0, 1, 2);\n\t}", "code_tokens": ["@", "test", "void", "of", "small", "content", "(", ")", "throws", "exception", "{", "input", "stream", "input", "stream", "=", "new", "byte", "array", "input", "stream", "(", "new", "byte", "[", "]", "{", "__NUM__", ",", "__NUM__", ",", "__NUM__", "}", ")", ";", "inspected", "content", "content", "=", "inspected", "content", ".", "of", "(", "input", "stream", ")", ";", "assert", "that", "(", "content", ".", "size", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "read", "bytes", "(", "content", ")", ")", ".", "contains", "exactly", "(", "__NUM__", ",", "__NUM__", ",", "__NUM__", ")", ";", "}"], "token_count": 86, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 19, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.660611+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7c82510b526e3292f04530ffe9b0d196a675da6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofLargeContent", "signature": null, "start_line": 73, "end_line": 81, "nloc": 9, "method_source_normalized": "@TestvoidofLargeContent()throws Exception{\n\t\tbyte[] bytes = new byte[InspectedContent.MEMORY_LIMIT + 3];\n\t\tSystem.arraycopy(new byte[] { 0, 1, 2 }, 0, bytes, 0, 3);\n\t\tInputStream inputStream = new ByteArrayInputStream(bytes);\n\t\tInspectedContent content = InspectedContent.of(inputStream);\n\t\tassertThat(content.size()).isEqualTo(bytes.length);\n\t\tassertThat(readBytes(content)).isEqualTo(bytes);\n\t}", "original_code": "@Test\n\tvoid ofLargeContent() throws Exception {\n\t\tbyte[] bytes = new byte[InspectedContent.MEMORY_LIMIT + 3];\n\t\tSystem.arraycopy(new byte[] { 0, 1, 2 }, 0, bytes, 0, 3);\n\t\tInputStream inputStream = new ByteArrayInputStream(bytes);\n\t\tInspectedContent content = InspectedContent.of(inputStream);\n\t\tassertThat(content.size()).isEqualTo(bytes.length);\n\t\tassertThat(readBytes(content)).isEqualTo(bytes);\n\t}", "code_tokens": ["@", "test", "void", "of", "large", "content", "(", ")", "throws", "exception", "{", "byte", "[", "]", "bytes", "=", "new", "byte", "[", "inspected", "content", ".", "memory", "limit", "+", "__NUM__", "]", ";", "system", ".", "arraycopy", "(", "new", "byte", "[", "]", "{", "__NUM__", ",", "__NUM__", ",", "__NUM__", "}", ",", "__NUM__", ",", "bytes", ",", "__NUM__", ",", "__NUM__", ")", ";", "input", "stream", "input", "stream", "=", "new", "byte", "array", "input", "stream", "(", "bytes", ")", ";", "inspected", "content", "content", "=", "inspected", "content", ".", "of", "(", "input", "stream", ")", ";", "assert", "that", "(", "content", ".", "size", "(", ")", ")", ".", "is", "equal", "to", "(", "bytes", ".", "length", ")", ";", "assert", "that", "(", "read", "bytes", "(", "content", ")", ")", ".", "is", "equal", "to", "(", "bytes", ")", ";", "}"], "token_count": 117, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 144, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.660932+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2a7a1b0a6de6ca20fecea5bffdfade8394e6eadc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "ofWithInspector", "signature": null, "start_line": 83, "end_line": 91, "nloc": 9, "method_source_normalized": "@TestvoidofWithInspector()throws Exception{\n\t\tInputStream inputStream = new ByteArrayInputStream(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tInspectedContent.of(inputStream, digest::update);\n\t\tassertThat(digest.digest()).inHexadecimal()\n\t\t\t.contains(0x9f, 0x86, 0xd0, 0x81, 0x88, 0x4c, 0x7d, 0x65, 0x9a, 0x2f, 0xea, 0xa0, 0xc5, 0x5a, 0xd0, 0x15,\n\t\t\t\t\t0xa3, 0xbf, 0x4f, 0x1b, 0x2b, 0x0b, 0x82, 0x2c, 0xd1, 0x5d, 0x6c, 0x15, 0xb0, 0xf0, 0x0a, 0x08);\n\t}", "original_code": "@Test\n\tvoid ofWithInspector() throws Exception {\n\t\tInputStream inputStream = new ByteArrayInputStream(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tInspectedContent.of(inputStream, digest::update);\n\t\tassertThat(digest.digest()).inHexadecimal()\n\t\t\t.contains(0x9f, 0x86, 0xd0, 0x81, 0x88, 0x4c, 0x7d, 0x65, 0x9a, 0x2f, 0xea, 0xa0, 0xc5, 0x5a, 0xd0, 0x15,\n\t\t\t\t\t0xa3, 0xbf, 0x4f, 0x1b, 0x2b, 0x0b, 0x82, 0x2c, 0xd1, 0x5d, 0x6c, 0x15, 0xb0, 0xf0, 0x0a, 0x08);\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "inspector", "(", ")", "throws", "exception", "{", "input", "stream", "input", "stream", "=", "new", "byte", "array", "input", "stream", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "inspected", "content", ".", "of", "(", "input", "stream", ",", "digest", "::", "update", ")", ";", "assert", "that", "(", "digest", ".", "digest", "(", ")", ")", ".", "in", "hexadecimal", "(", ")", ".", "contains", "(", "0x9f", ",", "0x86", ",", "0xd0", ",", "0x81", ",", "0x88", ",", "0x4c", ",", "0x7d", ",", "0x65", ",", "0x9a", ",", "0x2f", ",", "0xea", ",", "0xa0", ",", "0xc5", ",", "0x5a", ",", "0xd0", ",", "0x15", ",", "0xa3", ",", "0xbf", ",", "0x4f", ",", "0x1b", ",", "0x2b", ",", "0x0b", ",", "0x82", ",", "0x2c", ",", "0xd1", ",", "0x5d", ",", "0x6c", ",", "0x15", ",", "0xb0", ",", "0xf0", ",", "0x0a", ",", "0x08", ")", ";", "}"], "token_count": 144, "vocab_size": 70, "cyclomatic_complexity": 1, "ast_node_count": 157, "n_identifiers": 23, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 68, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.661267+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "48d360b2b0c02aae6b78ae90cbdcb318aa0ec634", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/InspectedContentTests.java", "file_blob_sha": null, "method_name": "readBytes", "signature": null, "start_line": 93, "end_line": 97, "nloc": 5, "method_source_normalized": "privatebyte[]readBytes(InspectedContent content)throws IOException{\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontent.writeTo(outputStream);\n\t\treturn outputStream.toByteArray();\n\t}", "original_code": "private byte[] readBytes(InspectedContent content) throws IOException {\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontent.writeTo(outputStream);\n\t\treturn outputStream.toByteArray();\n\t}", "code_tokens": ["private", "byte", "[", "]", "read", "bytes", "(", "inspected", "content", "content", ")", "throws", "io", "exception", "{", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "content", ".", "write", "to", "(", "output", "stream", ")", ";", "return", "output", "stream", ".", "to", "byte", "array", "(", ")", ";", "}"], "token_count": 50, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.661537+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2920c2a02c42390d6d6aa3c46d54fe5e24d80ca0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenSupplierIsNullThrowsException", "signature": null, "start_line": 37, "end_line": 41, "nloc": 5, "method_source_normalized": "@TestvoidofWhenSupplierIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of(1, (IOSupplier<InputStream>) null))\n\t\t\t.withMessage(\"'supplier' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenSupplierIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of(1, (IOSupplier<InputStream>) null))\n\t\t\t.withMessage(\"'supplier' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "supplier", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "content", ".", "of", "(", "__NUM__", ",", "(", "io", "supplier", "<", "input", "stream", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 9, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.662611+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cbe3427db73ff26386c6bb0cfcf9279ae7df8f4e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenStreamReturnsWritable", "signature": null, "start_line": 43, "end_line": 49, "nloc": 7, "method_source_normalized": "@TestvoidofWhenStreamReturnsWritable()throws Exception{\n\t\tbyte[] bytes = { 1, 2, 3, 4 };\n\t\tByteArrayInputStream inputStream = new ByteArrayInputStream(bytes);\n\t\tContent writable = Content.of(4, () -> inputStream);\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(bytes);\n\t}", "original_code": "@Test\n\tvoid ofWhenStreamReturnsWritable() throws Exception {\n\t\tbyte[] bytes = { 1, 2, 3, 4 };\n\t\tByteArrayInputStream inputStream = new ByteArrayInputStream(bytes);\n\t\tContent writable = Content.of(4, () -> inputStream);\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(bytes);\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "stream", "returns", "writable", "(", ")", "throws", "exception", "{", "byte", "[", "]", "bytes", "=", "{", "__NUM__", ",", "__NUM__", ",", "__NUM__", ",", "__NUM__", "}", ";", "byte", "array", "input", "stream", "input", "stream", "=", "new", "byte", "array", "input", "stream", "(", "bytes", ")", ";", "content", "writable", "=", "content", ".", "of", "(", "__NUM__", ",", "(", ")", "->", "input", "stream", ")", ";", "assert", "that", "(", "write", "to", "and", "get", "bytes", "(", "writable", ")", ")", ".", "is", "equal", "to", "(", "bytes", ")", ";", "}"], "token_count": 81, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.662905+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d394a6cf2ff63730b92931f0a9ea44df924b6a93", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenStringIsNullThrowsException", "signature": null, "start_line": 51, "end_line": 55, "nloc": 5, "method_source_normalized": "@TestvoidofWhenStringIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of((String) null))\n\t\t\t.withMessage(\"'string' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenStringIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of((String) null))\n\t\t\t.withMessage(\"'string' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "string", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "content", ".", "of", "(", "(", "string", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.663170+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "235d8f1cec6c4df8e19f4f29f66d1d95dec7e6a2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenStringReturnsWritable", "signature": null, "start_line": 57, "end_line": 61, "nloc": 5, "method_source_normalized": "@TestvoidofWhenStringReturnsWritable()throws Exception{\n\t\tContent writable = Content.of(\"spring\");\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(\"spring\".getBytes(StandardCharsets.UTF_8));\n\t}", "original_code": "@Test\n\tvoid ofWhenStringReturnsWritable() throws Exception {\n\t\tContent writable = Content.of(\"spring\");\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(\"spring\".getBytes(StandardCharsets.UTF_8));\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "string", "returns", "writable", "(", ")", "throws", "exception", "{", "content", "writable", "=", "content", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "write", "to", "and", "get", "bytes", "(", "writable", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}"], "token_count": 54, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.663446+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "51e9c90e7e52373281863c95be7b206b480369f5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenBytesIsNullThrowsException", "signature": null, "start_line": 63, "end_line": 67, "nloc": 5, "method_source_normalized": "@TestvoidofWhenBytesIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of((byte[]) null))\n\t\t\t.withMessage(\"'bytes' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenBytesIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Content.of((byte[]) null))\n\t\t\t.withMessage(\"'bytes' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "bytes", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "content", ".", "of", "(", "(", "byte", "[", "]", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 7, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.663708+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3dc0a30d23eb8e50c61066c53a9d16e6da486b89", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "ofWhenBytesReturnsWritable", "signature": null, "start_line": 69, "end_line": 74, "nloc": 6, "method_source_normalized": "@TestvoidofWhenBytesReturnsWritable()throws Exception{\n\t\tbyte[] bytes = { 1, 2, 3, 4 };\n\t\tContent writable = Content.of(bytes);\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(bytes);\n\t}", "original_code": "@Test\n\tvoid ofWhenBytesReturnsWritable() throws Exception {\n\t\tbyte[] bytes = { 1, 2, 3, 4 };\n\t\tContent writable = Content.of(bytes);\n\t\tassertThat(writeToAndGetBytes(writable)).isEqualTo(bytes);\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "bytes", "returns", "writable", "(", ")", "throws", "exception", "{", "byte", "[", "]", "bytes", "=", "{", "__NUM__", ",", "__NUM__", ",", "__NUM__", ",", "__NUM__", "}", ";", "content", "writable", "=", "content", ".", "of", "(", "bytes", ")", ";", "assert", "that", "(", "write", "to", "and", "get", "bytes", "(", "writable", ")", ")", ".", "is", "equal", "to", "(", "bytes", ")", ";", "}"], "token_count": 59, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 71, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.664021+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3ece7ec33cc3a15ef0f0667bb6971e69dfb7b534", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ContentTests.java", "file_blob_sha": null, "method_name": "writeToAndGetBytes", "signature": null, "start_line": 76, "end_line": 80, "nloc": 5, "method_source_normalized": "privatebyte[]writeToAndGetBytes(Content writable)throws IOException{\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\twritable.writeTo(outputStream);\n\t\treturn outputStream.toByteArray();\n\t}", "original_code": "private byte[] writeToAndGetBytes(Content writable) throws IOException {\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\twritable.writeTo(outputStream);\n\t\treturn outputStream.toByteArray();\n\t}", "code_tokens": ["private", "byte", "[", "]", "write", "to", "and", "get", "bytes", "(", "content", "writable", ")", "throws", "io", "exception", "{", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "writable", ".", "write", "to", "(", "output", "stream", ")", ";", "return", "output", "stream", ".", "to", "byte", "array", "(", ")", ";", "}"], "token_count": 52, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 12, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.664285+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a30ae22731829f48def9048d401188186dad9b6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ZipFileTarArchiveTests.java", "file_blob_sha": null, "method_name": "createWhenZipIsNullThrowsException", "signature": null, "start_line": 46, "end_line": 50, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenZipIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new ZipFileTarArchive(null, Owner.ROOT))\n\t\t\t.withMessage(\"'zip' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenZipIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new ZipFileTarArchive(null, Owner.ROOT))\n\t\t\t.withMessage(\"'zip' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "zip", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "zip", "file", "tar", "archive", "(", "null", ",", "owner", ".", "root", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 49, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.665665+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "68c1e2fdf0cfd007fc7f90fc0f74f3dc6c59fc7d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ZipFileTarArchiveTests.java", "file_blob_sha": null, "method_name": "createWhenOwnerIsNullThrowsException", "signature": null, "start_line": 52, "end_line": 58, "nloc": 7, "method_source_normalized": "@TestvoidcreateWhenOwnerIsNullThrowsException()throws Exception{\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new ZipFileTarArchive(file, null))\n\t\t\t.withMessage(\"'owner' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenOwnerIsNullThrowsException() throws Exception {\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new ZipFileTarArchive(file, null))\n\t\t\t.withMessage(\"'owner' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "owner", "is", "null", "throws", "exception", "(", ")", "throws", "exception", "{", "file", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ";", "write", "test", "zip", "(", "file", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "zip", "file", "tar", "archive", "(", "file", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 70, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 76, "n_identifiers": 14, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.665945+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0ed1ca755ea4aa7a586912c42a357a34ad0e8b1a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ZipFileTarArchiveTests.java", "file_blob_sha": null, "method_name": "writeToAdaptsContent", "signature": null, "start_line": 60, "end_line": 82, "nloc": 23, "method_source_normalized": "@TestvoidwriteToAdaptsContent()throws Exception{\n\t\tOwner owner = Owner.of(123, 456);\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tTarArchive tarArchive = TarArchive.fromZip(file, owner);\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttarArchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tTarArchiveEntry dirEntry = tarStream.getNextEntry();\n\t\t\tassertThat(dirEntry.getName()).isEqualTo(\"spring/\");\n\t\t\tassertThat(dirEntry.getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(dirEntry.getLongGroupId()).isEqualTo(456);\n\t\t\tTarArchiveEntry fileEntry = tarStream.getNextEntry();\n\t\t\tassertThat(fileEntry.getName()).isEqualTo(\"spring/boot\");\n\t\t\tassertThat(fileEntry.getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(fileEntry.getLongGroupId()).isEqualTo(456);\n\t\t\tassertThat(fileEntry.getSize()).isEqualTo(4);\n\t\t\tassertThat(fileEntry.getMode()).isEqualTo(0755);\n\t\t\tassertThat(tarStream).hasContent(\"test\");\n\t\t}\n\t}", "original_code": "@Test\n\tvoid writeToAdaptsContent() throws Exception {\n\t\tOwner owner = Owner.of(123, 456);\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tTarArchive tarArchive = TarArchive.fromZip(file, owner);\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttarArchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tTarArchiveEntry dirEntry = tarStream.getNextEntry();\n\t\t\tassertThat(dirEntry.getName()).isEqualTo(\"spring/\");\n\t\t\tassertThat(dirEntry.getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(dirEntry.getLongGroupId()).isEqualTo(456);\n\t\t\tTarArchiveEntry fileEntry = tarStream.getNextEntry();\n\t\t\tassertThat(fileEntry.getName()).isEqualTo(\"spring/boot\");\n\t\t\tassertThat(fileEntry.getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(fileEntry.getLongGroupId()).isEqualTo(456);\n\t\t\tassertThat(fileEntry.getSize()).isEqualTo(4);\n\t\t\tassertThat(fileEntry.getMode()).isEqualTo(0755);\n\t\t\tassertThat(tarStream).hasContent(\"test\");\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "write", "to", "adapts", "content", "(", ")", "throws", "exception", "{", "owner", "owner", "=", "owner", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ";", "file", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ";", "write", "test", "zip", "(", "file", ")", ";", "tar", "archive", "tar", "archive", "=", "tar", "archive", ".", "from", "zip", "(", "file", ",", "owner", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "tar", "archive", ".", "write", "to", "(", "output", "stream", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "stream", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "tar", "archive", "entry", "dir", "entry", "=", "tar", "stream", ".", "get", "next", "entry", "(", ")", ";", "assert", "that", "(", "dir", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "dir", "entry", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "dir", "entry", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "tar", "archive", "entry", "file", "entry", "=", "tar", "stream", ".", "get", "next", "entry", "(", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "size", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "mode", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "tar", "stream", ")", ".", "has", "content", "(", "__STR__", ")", ";", "}", "}"], "token_count": 324, "vocab_size": 51, "cyclomatic_complexity": 1, "ast_node_count": 336, "n_identifiers": 74, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 111, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.666413+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "51e5eac8a4d882a2b6e2a7769ea1610fedd81bd1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/ZipFileTarArchiveTests.java", "file_blob_sha": null, "method_name": "writeTestZip", "signature": null, "start_line": 84, "end_line": 95, "nloc": 12, "method_source_normalized": "privatevoidwriteTestZip(File file)throws IOException{\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t\tZipArchiveEntry fileEntry = new ZipArchiveEntry(\"spring/boot\");\n\t\t\tfileEntry.setUnixMode(0755);\n\t\t\tzip.putArchiveEntry(fileEntry);\n\t\t\tzip.write(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "original_code": "private void writeTestZip(File file) throws IOException {\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t\tZipArchiveEntry fileEntry = new ZipArchiveEntry(\"spring/boot\");\n\t\t\tfileEntry.setUnixMode(0755);\n\t\t\tzip.putArchiveEntry(fileEntry);\n\t\t\tzip.write(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "test", "zip", "(", "file", "file", ")", "throws", "io", "exception", "{", "try", "(", "zip", "archive", "output", "stream", "zip", "=", "new", "zip", "archive", "output", "stream", "(", "file", ")", ")", "{", "zip", "archive", "entry", "dir", "entry", "=", "new", "zip", "archive", "entry", "(", "__STR__", ")", ";", "zip", ".", "put", "archive", "entry", "(", "dir", "entry", ")", ";", "zip", ".", "close", "archive", "entry", "(", ")", ";", "zip", "archive", "entry", "file", "entry", "=", "new", "zip", "archive", "entry", "(", "__STR__", ")", ";", "file", "entry", ".", "set", "unix", "mode", "(", "__NUM__", ")", ";", "zip", ".", "put", "archive", "entry", "(", "file", "entry", ")", ";", "zip", ".", "write", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "zip", ".", "close", "archive", "entry", "(", ")", ";", "}", "}"], "token_count": 124, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 130, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.666917+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "da52164f6e60cbe6b3573230b6893a9feb660e2c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/TarLayoutWriterTests.java", "file_blob_sha": null, "method_name": "writesTarArchive", "signature": null, "start_line": 38, "end_line": 64, "nloc": 27, "method_source_normalized": "@TestvoidwritesTarArchive()throws Exception{\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttry (TarLayoutWriter writer = new TarLayoutWriter(outputStream)) {\n\t\t\twriter.directory(\"/foo\", Owner.ROOT);\n\t\t\twriter.file(\"/foo/bar.txt\", Owner.of(1, 1), 0777, Content.of(\"test\"));\n\t\t}\n\t\ttry (TarArchiveInputStream tarInputStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tTarArchiveEntry directoryEntry = tarInputStream.getNextEntry();\n\t\t\tTarArchiveEntry fileEntry = tarInputStream.getNextEntry();\n\t\t\tbyte[] fileContent = new byte[(int) fileEntry.getSize()];\n\t\t\ttarInputStream.read(fileContent);\n\t\t\tassertThat(tarInputStream.getNextEntry()).isNull();\n\t\t\tassertThat(directoryEntry.getName()).isEqualTo(\"/foo/\");\n\t\t\tassertThat(directoryEntry.getMode()).isEqualTo(0755);\n\t\t\tassertThat(directoryEntry.getLongUserId()).isZero();\n\t\t\tassertThat(directoryEntry.getLongGroupId()).isZero();\n\t\t\tassertThat(directoryEntry.getModTime()).isEqualTo(new Date(TarLayoutWriter.NORMALIZED_MOD_TIME));\n\t\t\tassertThat(fileEntry.getName()).isEqualTo(\"/foo/bar.txt\");\n\t\t\tassertThat(fileEntry.getMode()).isEqualTo(0777);\n\t\t\tassertThat(fileEntry.getLongUserId()).isOne();\n\t\t\tassertThat(fileEntry.getLongGroupId()).isOne();\n\t\t\tassertThat(fileEntry.getModTime()).isEqualTo(new Date(TarLayoutWriter.NORMALIZED_MOD_TIME));\n\t\t\tassertThat(fileContent).isEqualTo(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t}\n\t}", "original_code": "@Test\n\tvoid writesTarArchive() throws Exception {\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttry (TarLayoutWriter writer = new TarLayoutWriter(outputStream)) {\n\t\t\twriter.directory(\"/foo\", Owner.ROOT);\n\t\t\twriter.file(\"/foo/bar.txt\", Owner.of(1, 1), 0777, Content.of(\"test\"));\n\t\t}\n\t\ttry (TarArchiveInputStream tarInputStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tTarArchiveEntry directoryEntry = tarInputStream.getNextEntry();\n\t\t\tTarArchiveEntry fileEntry = tarInputStream.getNextEntry();\n\t\t\tbyte[] fileContent = new byte[(int) fileEntry.getSize()];\n\t\t\ttarInputStream.read(fileContent);\n\t\t\tassertThat(tarInputStream.getNextEntry()).isNull();\n\t\t\tassertThat(directoryEntry.getName()).isEqualTo(\"/foo/\");\n\t\t\tassertThat(directoryEntry.getMode()).isEqualTo(0755);\n\t\t\tassertThat(directoryEntry.getLongUserId()).isZero();\n\t\t\tassertThat(directoryEntry.getLongGroupId()).isZero();\n\t\t\tassertThat(directoryEntry.getModTime()).isEqualTo(new Date(TarLayoutWriter.NORMALIZED_MOD_TIME));\n\t\t\tassertThat(fileEntry.getName()).isEqualTo(\"/foo/bar.txt\");\n\t\t\tassertThat(fileEntry.getMode()).isEqualTo(0777);\n\t\t\tassertThat(fileEntry.getLongUserId()).isOne();\n\t\t\tassertThat(fileEntry.getLongGroupId()).isOne();\n\t\t\tassertThat(fileEntry.getModTime()).isEqualTo(new Date(TarLayoutWriter.NORMALIZED_MOD_TIME));\n\t\t\tassertThat(fileContent).isEqualTo(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "writes", "tar", "archive", "(", ")", "throws", "exception", "{", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "try", "(", "tar", "layout", "writer", "writer", "=", "new", "tar", "layout", "writer", "(", "output", "stream", ")", ")", "{", "writer", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "writer", ".", "file", "(", "__STR__", ",", "owner", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ",", "__NUM__", ",", "content", ".", "of", "(", "__STR__", ")", ")", ";", "}", "try", "(", "tar", "archive", "input", "stream", "tar", "input", "stream", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "tar", "archive", "entry", "directory", "entry", "=", "tar", "input", "stream", ".", "get", "next", "entry", "(", ")", ";", "tar", "archive", "entry", "file", "entry", "=", "tar", "input", "stream", ".", "get", "next", "entry", "(", ")", ";", "byte", "[", "]", "file", "content", "=", "new", "byte", "[", "(", "int", ")", "file", "entry", ".", "get", "size", "(", ")", "]", ";", "tar", "input", "stream", ".", "read", "(", "file", "content", ")", ";", "assert", "that", "(", "tar", "input", "stream", ".", "get", "next", "entry", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "directory", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "directory", "entry", ".", "get", "mode", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "directory", "entry", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "directory", "entry", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "directory", "entry", ".", "get", "mod", "time", "(", ")", ")", ".", "is", "equal", "to", "(", "new", "date", "(", "tar", "layout", "writer", ".", "normalized", "mod", "time", ")", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "mode", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "file", "entry", ".", "get", "mod", "time", "(", ")", ")", ".", "is", "equal", "to", "(", "new", "date", "(", "tar", "layout", "writer", ".", "normalized", "mod", "time", ")", ")", ";", "assert", "that", "(", "file", "content", ")", ".", "is", "equal", "to", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}", "}"], "token_count": 434, "vocab_size": 64, "cyclomatic_complexity": 1, "ast_node_count": 460, "n_identifiers": 96, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 135, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.668290+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6d30b7a75acca0b4bb92acac50feca68e71ca2cd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/DefaultOwnerTests.java", "file_blob_sha": null, "method_name": "getUidReturnsUid", "signature": null, "start_line": 30, "end_line": 34, "nloc": 5, "method_source_normalized": "@TestvoidgetUidReturnsUid(){\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t}", "original_code": "@Test\n\tvoid getUidReturnsUid() {\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t}", "code_tokens": ["@", "test", "void", "get", "uid", "returns", "uid", "(", ")", "{", "default", "owner", "owner", "=", "new", "default", "owner", "(", "__NUM__", ",", "__NUM__", ")", ";", "assert", "that", "(", "owner", ".", "get", "uid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 42, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.668957+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4618a3d984bcf55350568b5de2386822938089e2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/DefaultOwnerTests.java", "file_blob_sha": null, "method_name": "getGidReturnsGid", "signature": null, "start_line": 36, "end_line": 40, "nloc": 5, "method_source_normalized": "@TestvoidgetGidReturnsGid(){\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t}", "original_code": "@Test\n\tvoid getGidReturnsGid() {\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t}", "code_tokens": ["@", "test", "void", "get", "gid", "returns", "gid", "(", ")", "{", "default", "owner", "owner", "=", "new", "default", "owner", "(", "__NUM__", ",", "__NUM__", ")", ";", "assert", "that", "(", "owner", ".", "get", "gid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 42, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.669227+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "042288ef6ae18213ee9cf6d2b054b5f95c3cb0bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/DefaultOwnerTests.java", "file_blob_sha": null, "method_name": "toStringReturnsString", "signature": null, "start_line": 42, "end_line": 46, "nloc": 5, "method_source_normalized": "@TestvoidtoStringReturnsString(){\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner).hasToString(\"123/456\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsString() {\n\t\tDefaultOwner owner = new DefaultOwner(123, 456);\n\t\tassertThat(owner).hasToString(\"123/456\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "string", "(", ")", "{", "default", "owner", "owner", "=", "new", "default", "owner", "(", "__NUM__", ",", "__NUM__", ")", ";", "assert", "that", "(", "owner", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 37, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.669487+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a8b19c4fbc8b82625cc4879da44f3cc545312216", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/OwnerTests.java", "file_blob_sha": null, "method_name": "ofReturnsNewOwner", "signature": null, "start_line": 30, "end_line": 35, "nloc": 6, "method_source_normalized": "@TestvoidofReturnsNewOwner(){\n\t\tOwner owner = Owner.of(123, 456);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t}", "original_code": "@Test\n\tvoid ofReturnsNewOwner() {\n\t\tOwner owner = Owner.of(123, 456);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t}", "code_tokens": ["@", "test", "void", "of", "returns", "new", "owner", "(", ")", "{", "owner", "owner", "=", "owner", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ";", "assert", "that", "(", "owner", ".", "get", "uid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "owner", ".", "get", "gid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 59, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 71, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.670003+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3c0cc37d82a550164c755656a495a9dd4d14e3fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "umaskForPath", "signature": null, "start_line": 50, "end_line": 57, "nloc": 8, "method_source_normalized": "@Test\n\t@DisabledOnOs(OS.WINDOWS)voidumaskForPath()throws IOException{\n\t\tFileAttribute<Set<PosixFilePermission>> fileAttribute = PosixFilePermissions\n\t\t\t.asFileAttribute(PosixFilePermissions.fromString(\"rw-r-----\"));\n\t\tPath tempFile = Files.createTempFile(this.tempDir, \"umask\", null, fileAttribute);\n\t\tassertThat(FilePermissions.umaskForPath(tempFile)).isEqualTo(0640);\n\t}", "original_code": "@Test\n\t@DisabledOnOs(OS.WINDOWS)\n\tvoid umaskForPath() throws IOException {\n\t\tFileAttribute<Set<PosixFilePermission>> fileAttribute = PosixFilePermissions\n\t\t\t.asFileAttribute(PosixFilePermissions.fromString(\"rw-r-----\"));\n\t\tPath tempFile = Files.createTempFile(this.tempDir, \"umask\", null, fileAttribute);\n\t\tassertThat(FilePermissions.umaskForPath(tempFile)).isEqualTo(0640);\n\t}", "code_tokens": ["@", "test", "@", "disabled", "on", "os", "(", "os", ".", "windows", ")", "void", "umask", "for", "path", "(", ")", "throws", "io", "exception", "{", "file", "attribute", "<", "set", "<", "posix", "file", "permission", ">", ">", "file", "attribute", "=", "posix", "file", "permissions", ".", "as", "file", "attribute", "(", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ")", ";", "path", "temp", "file", "=", "files", ".", "create", "temp", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ",", "null", ",", "file", "attribute", ")", ";", "assert", "that", "(", "file", "permissions", ".", "umask", "for", "path", "(", "temp", "file", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 99, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.671319+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "afd98b0fb3e0d0433c5dc43e13160a7bce543d8f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "umaskForPathWithNonExistentFile", "signature": null, "start_line": 59, "end_line": 64, "nloc": 6, "method_source_normalized": "@Test\n\t@DisabledOnOs(OS.WINDOWS)voidumaskForPathWithNonExistentFile(){\n\t\tassertThatIOException()\n\t\t\t.isThrownBy(() -> FilePermissions.umaskForPath(Paths.get(this.tempDir.toString(), \"does-not-exist\")));\n\t}", "original_code": "@Test\n\t@DisabledOnOs(OS.WINDOWS)\n\tvoid umaskForPathWithNonExistentFile() {\n\t\tassertThatIOException()\n\t\t\t.isThrownBy(() -> FilePermissions.umaskForPath(Paths.get(this.tempDir.toString(), \"does-not-exist\")));\n\t}", "code_tokens": ["@", "test", "@", "disabled", "on", "os", "(", "os", ".", "windows", ")", "void", "umask", "for", "path", "with", "non", "existent", "file", "(", ")", "{", "assert", "that", "io", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "file", "permissions", ".", "umask", "for", "path", "(", "paths", ".", "get", "(", "this", ".", "temp", "dir", ".", "to", "string", "(", ")", ",", "__STR__", ")", ")", ")", ";", "}"], "token_count": 63, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 67, "n_identifiers": 13, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.671607+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e994629a1cd8c3676f6a7d3e2a862e0f52196c2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "umaskForPathOnWindowsFails", "signature": null, "start_line": 66, "end_line": 72, "nloc": 7, "method_source_normalized": "@Test\n\t@EnabledOnOs(OS.WINDOWS)voidumaskForPathOnWindowsFails()throws IOException{\n\t\tPath tempFile = Files.createTempFile(\"umask\", null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> FilePermissions.umaskForPath(tempFile))\n\t\t\t.withMessageContaining(\"Unsupported file type for retrieving Posix attributes\");\n\t}", "original_code": "@Test\n\t@EnabledOnOs(OS.WINDOWS)\n\tvoid umaskForPathOnWindowsFails() throws IOException {\n\t\tPath tempFile = Files.createTempFile(\"umask\", null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> FilePermissions.umaskForPath(tempFile))\n\t\t\t.withMessageContaining(\"Unsupported file type for retrieving Posix attributes\");\n\t}", "code_tokens": ["@", "test", "@", "enabled", "on", "os", "(", "os", ".", "windows", ")", "void", "umask", "for", "path", "on", "windows", "fails", "(", ")", "throws", "io", "exception", "{", "path", "temp", "file", "=", "files", ".", "create", "temp", "file", "(", "__STR__", ",", "null", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "file", "permissions", ".", "umask", "for", "path", "(", "temp", "file", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 16, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.671892+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1ccf3d30005d178ed57c5091eac307b3fcb4bdae", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "umaskForPathWithNullPath", "signature": null, "start_line": 74, "end_line": 77, "nloc": 4, "method_source_normalized": "@TestvoidumaskForPathWithNullPath(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> FilePermissions.umaskForPath(null));\n\t}", "original_code": "@Test\n\tvoid umaskForPathWithNullPath() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> FilePermissions.umaskForPath(null));\n\t}", "code_tokens": ["@", "test", "void", "umask", "for", "path", "with", "null", "path", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "file", "permissions", ".", "umask", "for", "path", "(", "null", ")", ")", ";", "}"], "token_count": 39, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.672152+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ab6c82205997cc5d580cd22c7121a293273cf38e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "posixPermissionsToUmask", "signature": null, "start_line": 79, "end_line": 83, "nloc": 5, "method_source_normalized": "@TestvoidposixPermissionsToUmask(){\n\t\tSet<PosixFilePermission> permissions = PosixFilePermissions.fromString(\"rwxrw-r--\");\n\t\tassertThat(FilePermissions.posixPermissionsToUmask(permissions)).isEqualTo(0764);\n\t}", "original_code": "@Test\n\tvoid posixPermissionsToUmask() {\n\t\tSet<PosixFilePermission> permissions = PosixFilePermissions.fromString(\"rwxrw-r--\");\n\t\tassertThat(FilePermissions.posixPermissionsToUmask(permissions)).isEqualTo(0764);\n\t}", "code_tokens": ["@", "test", "void", "posix", "permissions", "to", "umask", "(", ")", "{", "set", "<", "posix", "file", "permission", ">", "permissions", "=", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "file", "permissions", ".", "posix", "permissions", "to", "umask", "(", "permissions", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 51, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.672416+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0a5c0b68d2d3024a091eb7910ee82a27b78fc52d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "posixPermissionsToUmaskWithEmptyPermissions", "signature": null, "start_line": 85, "end_line": 89, "nloc": 5, "method_source_normalized": "@TestvoidposixPermissionsToUmaskWithEmptyPermissions(){\n\t\tSet<PosixFilePermission> permissions = Collections.emptySet();\n\t\tassertThat(FilePermissions.posixPermissionsToUmask(permissions)).isZero();\n\t}", "original_code": "@Test\n\tvoid posixPermissionsToUmaskWithEmptyPermissions() {\n\t\tSet<PosixFilePermission> permissions = Collections.emptySet();\n\t\tassertThat(FilePermissions.posixPermissionsToUmask(permissions)).isZero();\n\t}", "code_tokens": ["@", "test", "void", "posix", "permissions", "to", "umask", "with", "empty", "permissions", "(", ")", "{", "set", "<", "posix", "file", "permission", ">", "permissions", "=", "collections", ".", "empty", "set", "(", ")", ";", "assert", "that", "(", "file", "permissions", ".", "posix", "permissions", "to", "umask", "(", "permissions", ")", ")", ".", "is", "zero", "(", ")", ";", "}"], "token_count": 49, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.672682+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1c4ea10325ba1f8ed2fa9aef316b344df904cb8e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/FilePermissionsTests.java", "file_blob_sha": null, "method_name": "posixPermissionsToUmaskWithNullPermissions", "signature": null, "start_line": 91, "end_line": 94, "nloc": 4, "method_source_normalized": "@TestvoidposixPermissionsToUmaskWithNullPermissions(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> FilePermissions.posixPermissionsToUmask(null));\n\t}", "original_code": "@Test\n\tvoid posixPermissionsToUmaskWithNullPermissions() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> FilePermissions.posixPermissionsToUmask(null));\n\t}", "code_tokens": ["@", "test", "void", "posix", "permissions", "to", "umask", "with", "null", "permissions", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "file", "permissions", ".", "posix", "permissions", "to", "umask", "(", "null", ")", ")", ";", "}"], "token_count": 41, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.672932+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "09808635f66b2ba34604c3b7c0209029b49a7a91", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/TarArchiveTests.java", "file_blob_sha": null, "method_name": "ofWritesTarContent", "signature": null, "start_line": 45, "end_line": 74, "nloc": 30, "method_source_normalized": "@TestvoidofWritesTarContent()throws Exception{\n\t\tOwner owner = Owner.of(123, 456);\n\t\tTarArchive tarArchive = TarArchive.of((content) -> {\n\t\t\tcontent.directory(\"/workspace\", owner);\n\t\t\tcontent.directory(\"/layers\", owner);\n\t\t\tcontent.directory(\"/cnb\", Owner.ROOT);\n\t\t\tcontent.directory(\"/cnb/buildpacks\", Owner.ROOT);\n\t\t\tcontent.directory(\"/platform\", Owner.ROOT);\n\t\t\tcontent.directory(\"/platform/env\", Owner.ROOT);\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttarArchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\t\tTarArchiveEntry entry = tarStream.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tarStream.getNextEntry();\n\t\t\t}\n\t\t\tassertThat(entries).hasSize(6);\n\t\t\tassertThat(entries.get(0).getName()).isEqualTo(\"/workspace/\");\n\t\t\tassertThat(entries.get(0).getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(entries.get(0).getLongGroupId()).isEqualTo(456);\n\t\t\tassertThat(entries.get(2).getName()).isEqualTo(\"/cnb/\");\n\t\t\tassertThat(entries.get(2).getLongUserId()).isZero();\n\t\t\tassertThat(entries.get(2).getLongGroupId()).isZero();\n\t\t}\n\t}", "original_code": "@Test\n\tvoid ofWritesTarContent() throws Exception {\n\t\tOwner owner = Owner.of(123, 456);\n\t\tTarArchive tarArchive = TarArchive.of((content) -> {\n\t\t\tcontent.directory(\"/workspace\", owner);\n\t\t\tcontent.directory(\"/layers\", owner);\n\t\t\tcontent.directory(\"/cnb\", Owner.ROOT);\n\t\t\tcontent.directory(\"/cnb/buildpacks\", Owner.ROOT);\n\t\t\tcontent.directory(\"/platform\", Owner.ROOT);\n\t\t\tcontent.directory(\"/platform/env\", Owner.ROOT);\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\ttarArchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\t\tTarArchiveEntry entry = tarStream.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tarStream.getNextEntry();\n\t\t\t}\n\t\t\tassertThat(entries).hasSize(6);\n\t\t\tassertThat(entries.get(0).getName()).isEqualTo(\"/workspace/\");\n\t\t\tassertThat(entries.get(0).getLongUserId()).isEqualTo(123);\n\t\t\tassertThat(entries.get(0).getLongGroupId()).isEqualTo(456);\n\t\t\tassertThat(entries.get(2).getName()).isEqualTo(\"/cnb/\");\n\t\t\tassertThat(entries.get(2).getLongUserId()).isZero();\n\t\t\tassertThat(entries.get(2).getLongGroupId()).isZero();\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "of", "writes", "tar", "content", "(", ")", "throws", "exception", "{", "owner", "owner", "=", "owner", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ";", "tar", "archive", "tar", "archive", "=", "tar", "archive", ".", "of", "(", "(", "content", ")", "->", "{", "content", ".", "directory", "(", "__STR__", ",", "owner", ")", ";", "content", ".", "directory", "(", "__STR__", ",", "owner", ")", ";", "content", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "content", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "content", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "content", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "}", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "tar", "archive", ".", "write", "to", "(", "output", "stream", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "stream", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "list", "<", "tar", "archive", "entry", ">", "entries", "=", "new", "array", "list", "<", ">", "(", ")", ";", "tar", "archive", "entry", "entry", "=", "tar", "stream", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "entries", ".", "add", "(", "entry", ")", ";", "entry", "=", "tar", "stream", ".", "get", "next", "entry", "(", ")", ";", "}", "assert", "that", "(", "entries", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "long", "user", "id", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "entries", ".", "get", "(", "__NUM__", ")", ".", "get", "long", "group", "id", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "}", "}"], "token_count": 374, "vocab_size": 56, "cyclomatic_complexity": 2, "ast_node_count": 440, "n_identifiers": 94, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 151, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.674569+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "89f65e5dcc9c4b7cd5464961de5c902dc671f17e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/TarArchiveTests.java", "file_blob_sha": null, "method_name": "fromZipFileReturnsZipFileAdapter", "signature": null, "start_line": 76, "end_line": 83, "nloc": 8, "method_source_normalized": "@TestvoidfromZipFileReturnsZipFileAdapter()throws Exception{\n\t\tOwner owner = Owner.of(123, 456);\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tTarArchive tarArchive = TarArchive.fromZip(file, owner);\n\t\tassertThat(tarArchive).isInstanceOf(ZipFileTarArchive.class);\n\t}", "original_code": "@Test\n\tvoid fromZipFileReturnsZipFileAdapter() throws Exception {\n\t\tOwner owner = Owner.of(123, 456);\n\t\tFile file = new File(this.tempDir, \"test.zip\");\n\t\twriteTestZip(file);\n\t\tTarArchive tarArchive = TarArchive.fromZip(file, owner);\n\t\tassertThat(tarArchive).isInstanceOf(ZipFileTarArchive.class);\n\t}", "code_tokens": ["@", "test", "void", "from", "zip", "file", "returns", "zip", "file", "adapter", "(", ")", "throws", "exception", "{", "owner", "owner", "=", "owner", ".", "of", "(", "__NUM__", ",", "__NUM__", ")", ";", "file", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ";", "write", "test", "zip", "(", "file", ")", ";", "tar", "archive", "tar", "archive", "=", "tar", "archive", ".", "from", "zip", "(", "file", ",", "owner", ")", ";", "assert", "that", "(", "tar", "archive", ")", ".", "is", "instance", "of", "(", "zip", "file", "tar", "archive", ".", "class", ")", ";", "}"], "token_count": 84, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 92, "n_identifiers": 24, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.674923+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "22548ca467c0e8b36d6eff23fd9aceb93bda6ff9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/io/TarArchiveTests.java", "file_blob_sha": null, "method_name": "writeTestZip", "signature": null, "start_line": 85, "end_line": 91, "nloc": 7, "method_source_normalized": "privatevoidwriteTestZip(File file)throws IOException{\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "original_code": "private void writeTestZip(File file) throws IOException {\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "test", "zip", "(", "file", "file", ")", "throws", "io", "exception", "{", "try", "(", "zip", "archive", "output", "stream", "zip", "=", "new", "zip", "archive", "output", "stream", "(", "file", ")", ")", "{", "zip", "archive", "entry", "dir", "entry", "=", "new", "zip", "archive", "entry", "(", "__STR__", ")", ";", "zip", ".", "put", "archive", "entry", "(", "dir", "entry", ")", ";", "zip", ".", "close", "archive", "entry", "(", ")", ";", "}", "}"], "token_count": 65, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.675206+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f00ed5b3d80e6a9ae3a07771b4944349357520d8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "MappedObjectTests", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "MappedObjectTests()throws IOException{\n\t\tthis.mapped = TestMappedObject.of(getContent(\"test-mapped-object.json\"));\n\t}", "original_code": "MappedObjectTests() throws IOException {\n\t\tthis.mapped = TestMappedObject.of(getContent(\"test-mapped-object.json\"));\n\t}", "code_tokens": ["mapped", "object", "tests", "(", ")", "throws", "io", "exception", "{", "this", ".", "mapped", "=", "test", "mapped", "object", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.676569+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b38acb0f6d057a34c9942056b0f6b936c71d13dc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "ofReadsJson", "signature": null, "start_line": 43, "end_line": 46, "nloc": 4, "method_source_normalized": "@TestvoidofReadsJson(){\n\t\tassertThat(this.mapped.getNode()).isNotNull();\n\t}", "original_code": "@Test\n\tvoid ofReadsJson() {\n\t\tassertThat(this.mapped.getNode()).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "of", "reads", "json", "(", ")", "{", "assert", "that", "(", "this", ".", "mapped", ".", "get", "node", "(", ")", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 29, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.676826+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f7e69f3b9170d1e7e9cfbeacbd7d22546ee13738", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenStringReturnsValue", "signature": null, "start_line": 48, "end_line": 51, "nloc": 4, "method_source_normalized": "@TestvoidvalueAtWhenStringReturnsValue(){\n\t\tassertThat(this.mapped.valueAt(\"/string\", String.class)).isEqualTo(\"stringvalue\");\n\t}", "original_code": "@Test\n\tvoid valueAtWhenStringReturnsValue() {\n\t\tassertThat(this.mapped.valueAt(\"/string\", String.class)).isEqualTo(\"stringvalue\");\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "string", "returns", "value", "(", ")", "{", "assert", "that", "(", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 38, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.677082+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3e5876c0019b1b3658b510a08d346bb1d018ce61", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenStringArrayReturnsValue", "signature": null, "start_line": 53, "end_line": 56, "nloc": 4, "method_source_normalized": "@TestvoidvalueAtWhenStringArrayReturnsValue(){\n\t\tassertThat(this.mapped.valueAt(\"/stringarray\", String[].class)).containsExactly(\"a\", \"b\");\n\t}", "original_code": "@Test\n\tvoid valueAtWhenStringArrayReturnsValue() {\n\t\tassertThat(this.mapped.valueAt(\"/stringarray\", String[].class)).containsExactly(\"a\", \"b\");\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "string", "array", "returns", "value", "(", ")", "{", "assert", "that", "(", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "string", "[", "]", ".", "class", ")", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.677337+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1bfbb488a2c12dad66163c5c9863365ec40e91c1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenMissingReturnsNull", "signature": null, "start_line": 58, "end_line": 61, "nloc": 4, "method_source_normalized": "@TestvoidvalueAtWhenMissingReturnsNull(){\n\t\tassertThat(this.mapped.valueAt(\"/missing\", String.class)).isNull();\n\t}", "original_code": "@Test\n\tvoid valueAtWhenMissingReturnsNull() {\n\t\tassertThat(this.mapped.valueAt(\"/missing\", String.class)).isNull();\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "missing", "returns", "null", "(", ")", "{", "assert", "that", "(", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 36, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.677586+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e26b860a54f0ee5b5808f8036f4a3b611de2a81a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenInterfaceReturnsProxy", "signature": null, "start_line": 63, "end_line": 68, "nloc": 6, "method_source_normalized": "@TestvoidvalueAtWhenInterfaceReturnsProxy(){\n\t\tPerson person = this.mapped.valueAt(\"/person\", Person.class);\n\t\tassertThat(person.getName().getFirst()).isEqualTo(\"spring\");\n\t\tassertThat(person.getName().getLast()).isEqualTo(\"boot\");\n\t}", "original_code": "@Test\n\tvoid valueAtWhenInterfaceReturnsProxy() {\n\t\tPerson person = this.mapped.valueAt(\"/person\", Person.class);\n\t\tassertThat(person.getName().getFirst()).isEqualTo(\"spring\");\n\t\tassertThat(person.getName().getLast()).isEqualTo(\"boot\");\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "interface", "returns", "proxy", "(", ")", "{", "person", "person", "=", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "person", ".", "class", ")", ";", "assert", "that", "(", "person", ".", "get", "name", "(", ")", ".", "get", "first", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "person", ".", "get", "name", "(", ")", ".", "get", "last", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 76, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 89, "n_identifiers": 18, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.677865+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8150f48ccbd3d70f733d0495dda15dbdd8b740fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenInterfaceAndMissingReturnsProxy", "signature": null, "start_line": 70, "end_line": 75, "nloc": 6, "method_source_normalized": "@TestvoidvalueAtWhenInterfaceAndMissingReturnsProxy(){\n\t\tPerson person = this.mapped.valueAt(\"/missing\", Person.class);\n\t\tassertThat(person.getName().getFirst()).isNull();\n\t\tassertThat(person.getName().getLast()).isNull();\n\t}", "original_code": "@Test\n\tvoid valueAtWhenInterfaceAndMissingReturnsProxy() {\n\t\tPerson person = this.mapped.valueAt(\"/missing\", Person.class);\n\t\tassertThat(person.getName().getFirst()).isNull();\n\t\tassertThat(person.getName().getLast()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "interface", "and", "missing", "returns", "proxy", "(", ")", "{", "person", "person", "=", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "person", ".", "class", ")", ";", "assert", "that", "(", "person", ".", "get", "name", "(", ")", ".", "get", "first", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "person", ".", "get", "name", "(", ")", ".", "get", "last", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 74, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 18, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.678150+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "57dad351b81294446f3cee01a446a27e1b2161ad", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenActualPropertyStartsWithUppercaseReturnsValue", "signature": null, "start_line": 77, "end_line": 80, "nloc": 4, "method_source_normalized": "@TestvoidvalueAtWhenActualPropertyStartsWithUppercaseReturnsValue(){\n\t\tassertThat(this.mapped.valueAt(\"/startsWithUppercase\", String.class)).isEqualTo(\"value\");\n\t}", "original_code": "@Test\n\tvoid valueAtWhenActualPropertyStartsWithUppercaseReturnsValue() {\n\t\tassertThat(this.mapped.valueAt(\"/startsWithUppercase\", String.class)).isEqualTo(\"value\");\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "actual", "property", "starts", "with", "uppercase", "returns", "value", "(", ")", "{", "assert", "that", "(", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "string", ".", "class", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.678409+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b514b0af3c5f383f246ce58e222649967117013e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "valueAtWhenDefaultMethodReturnsValue", "signature": null, "start_line": 82, "end_line": 86, "nloc": 5, "method_source_normalized": "@TestvoidvalueAtWhenDefaultMethodReturnsValue(){\n\t\tPerson person = this.mapped.valueAt(\"/person\", Person.class);\n\t\tassertThat(person.getName().getFullName()).isEqualTo(\"dr spring boot\");\n\t}", "original_code": "@Test\n\tvoid valueAtWhenDefaultMethodReturnsValue() {\n\t\tPerson person = this.mapped.valueAt(\"/person\", Person.class);\n\t\tassertThat(person.getName().getFullName()).isEqualTo(\"dr spring boot\");\n\t}", "code_tokens": ["@", "test", "void", "value", "at", "when", "default", "method", "returns", "value", "(", ")", "{", "person", "person", "=", "this", ".", "mapped", ".", "value", "at", "(", "__STR__", ",", "person", ".", "class", ")", ";", "assert", "that", "(", "person", ".", "get", "name", "(", ")", ".", "get", "full", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 62, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.678674+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d5834da8cc0962712cb1fc6513df14c6cc84901d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "TestMappedObject", "signature": null, "start_line": 93, "end_line": 95, "nloc": 3, "method_source_normalized": "TestMappedObject(JsonNode node){\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t}", "original_code": "TestMappedObject(JsonNode node) {\n\t\t\tsuper(node, MethodHandles.lookup());\n\t\t}", "code_tokens": ["test", "mapped", "object", "(", "json", "node", "node", ")", "{", "super", "(", "node", ",", "method", "handles", ".", "lookup", "(", ")", ")", ";", "}"], "token_count": 22, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 26, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.678914+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58f1587246259efe4140dcaddc3d824664f9b512", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "of", "signature": null, "start_line": 97, "end_line": 99, "nloc": 3, "method_source_normalized": "staticTestMappedObjectof(InputStream content)throws IOException{\n\t\t\treturn of(content, TestMappedObject::new);\n\t\t}", "original_code": "static TestMappedObject of(InputStream content) throws IOException {\n\t\t\treturn of(content, TestMappedObject::new);\n\t\t}", "code_tokens": ["static", "test", "mapped", "object", "of", "(", "input", "stream", "content", ")", "throws", "io", "exception", "{", "return", "of", "(", "content", ",", "test", "mapped", "object", "::", "new", ")", ";", "}"], "token_count": 27, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.679151+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a5861e7afb7206176faf31401311e68d8747f0e2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "getName", "signature": null, "start_line": 103, "end_line": 103, "nloc": 1, "method_source_normalized": "NamegetName();", "original_code": "Name getName();", "code_tokens": ["name", "get", "name", "(", ")", ";"], "token_count": 6, "vocab_size": 5, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.679374+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5fb26151d8c1f8aaf21ba43fbba7e48284a17ed3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "getFirst", "signature": null, "start_line": 107, "end_line": 107, "nloc": 1, "method_source_normalized": "StringgetFirst();", "original_code": "String getFirst();", "code_tokens": ["string", "get", "first", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.679592+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0112a2488ae779f443c9ba415a1a8e9bfe566b11", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "getLast", "signature": null, "start_line": 109, "end_line": 109, "nloc": 1, "method_source_normalized": "StringgetLast();", "original_code": "String getLast();", "code_tokens": ["string", "get", "last", "(", ")", ";"], "token_count": 6, "vocab_size": 6, "cyclomatic_complexity": 1, "ast_node_count": 7, "n_identifiers": 2, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 1, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.679811+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b8378454f2f182d969d6fae9b23fe0bcbbeff630", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/MappedObjectTests.java", "file_blob_sha": null, "method_name": "getFullName", "signature": null, "start_line": 111, "end_line": 114, "nloc": 4, "method_source_normalized": "defaultStringgetFullName(){\n\t\t\t\t\tString title = valueAt(this, \"/title\", String.class);\n\t\t\t\t\treturn title + \" \" + getFirst() + \" \" + getLast();\n\t\t\t\t}", "original_code": "default String getFullName() {\n\t\t\t\t\tString title = valueAt(this, \"/title\", String.class);\n\t\t\t\t\treturn title + \" \" + getFirst() + \" \" + getLast();\n\t\t\t\t}", "code_tokens": ["default", "string", "get", "full", "name", "(", ")", "{", "string", "title", "=", "value", "at", "(", "this", ",", "__STR__", ",", "string", ".", "class", ")", ";", "return", "title", "+", "__STR__", "+", "get", "first", "(", ")", "+", "__STR__", "+", "get", "last", "(", ")", ";", "}"], "token_count": 41, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.680059+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "470fb0d5e5f35a4dbba032ebb723ece6a41b7682", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/SharedObjectMapperTests.java", "file_blob_sha": null, "method_name": "getReturnsConfiguredObjectMapper", "signature": null, "start_line": 34, "end_line": 47, "nloc": 14, "method_source_normalized": "@TestvoidgetReturnsConfiguredObjectMapper(){\n\t\tObjectMapper mapper = SharedObjectMapper.get();\n\t\tassertThat(mapper).isNotNull();\n\t\tassertThat(\n\t\t\t\tSerializationFeature.INDENT_OUTPUT.enabledIn(mapper.serializationConfig().getSerializationFeatures()))\n\t\t\t.isTrue();\n\t\tassertThat(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES\n\t\t\t.enabledIn(mapper.deserializationConfig().getDeserializationFeatures())).isFalse();\n\t\tassertThat(mapper.serializationConfig().getPropertyNamingStrategy())\n\t\t\t.isEqualTo(PropertyNamingStrategies.LOWER_CAMEL_CASE);\n\t\tassertThat(mapper.deserializationConfig().getPropertyNamingStrategy())\n\t\t\t.isEqualTo(PropertyNamingStrategies.LOWER_CAMEL_CASE);\n\t}", "original_code": "@Test\n\tvoid getReturnsConfiguredObjectMapper() {\n\t\tObjectMapper mapper = SharedObjectMapper.get();\n\t\tassertThat(mapper).isNotNull();\n\t\tassertThat(\n\t\t\t\tSerializationFeature.INDENT_OUTPUT.enabledIn(mapper.serializationConfig().getSerializationFeatures()))\n\t\t\t.isTrue();\n\t\tassertThat(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES\n\t\t\t.enabledIn(mapper.deserializationConfig().getDeserializationFeatures())).isFalse();\n\t\tassertThat(mapper.serializationConfig().getPropertyNamingStrategy())\n\t\t\t.isEqualTo(PropertyNamingStrategies.LOWER_CAMEL_CASE);\n\t\tassertThat(mapper.deserializationConfig().getPropertyNamingStrategy())\n\t\t\t.isEqualTo(PropertyNamingStrategies.LOWER_CAMEL_CASE);\n\t}", "code_tokens": ["@", "test", "void", "get", "returns", "configured", "object", "mapper", "(", ")", "{", "object", "mapper", "mapper", "=", "shared", "object", "mapper", ".", "get", "(", ")", ";", "assert", "that", "(", "mapper", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "serialization", "feature", ".", "indent", "output", ".", "enabled", "in", "(", "mapper", ".", "serialization", "config", "(", ")", ".", "get", "serialization", "features", "(", ")", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "deserialization", "feature", ".", "fail", "on", "unknown", "properties", ".", "enabled", "in", "(", "mapper", ".", "deserialization", "config", "(", ")", ".", "get", "deserialization", "features", "(", ")", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "mapper", ".", "serialization", "config", "(", ")", ".", "get", "property", "naming", "strategy", "(", ")", ")", ".", "is", "equal", "to", "(", "property", "naming", "strategies", ".", "lower", "camel", "case", ")", ";", "assert", "that", "(", "mapper", ".", "deserialization", "config", "(", ")", ".", "get", "property", "naming", "strategy", "(", ")", ")", ".", "is", "equal", "to", "(", "property", "naming", "strategies", ".", "lower", "camel", "case", ")", ";", "}"], "token_count": 164, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 172, "n_identifiers": 39, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.680850+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "149016fee69768febbd71458a740858d1a9c59f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "JsonStreamTests", "signature": null, "start_line": 38, "end_line": 40, "nloc": 3, "method_source_normalized": "JsonStreamTests(){\n\t\tthis.jsonStream = new JsonStream(getObjectMapper());\n\t}", "original_code": "JsonStreamTests() {\n\t\tthis.jsonStream = new JsonStream(getObjectMapper());\n\t}", "code_tokens": ["json", "stream", "tests", "(", ")", "{", "this", ".", "json", "stream", "=", "new", "json", "stream", "(", "get", "object", "mapper", "(", ")", ")", ";", "}"], "token_count": 23, "vocab_size": 15, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 4, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.681838+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c50f61f8a2459d5706c862564db5587581e73a04", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "getWhenReadingObjectNodeReturnsNodes", "signature": null, "start_line": 42, "end_line": 49, "nloc": 8, "method_source_normalized": "@TestvoidgetWhenReadingObjectNodeReturnsNodes()throws Exception{\n\t\tList<ObjectNode> result = new ArrayList<>();\n\t\tthis.jsonStream.get(getContent(\"stream.json\"), result::add);\n\t\tassertThat(result).hasSize(595);\n\t\tassertThat(result.get(594).get(\"status\").asString())\n\t\t\t.contains(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t}", "original_code": "@Test\n\tvoid getWhenReadingObjectNodeReturnsNodes() throws Exception {\n\t\tList<ObjectNode> result = new ArrayList<>();\n\t\tthis.jsonStream.get(getContent(\"stream.json\"), result::add);\n\t\tassertThat(result).hasSize(595);\n\t\tassertThat(result.get(594).get(\"status\").asString())\n\t\t\t.contains(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "reading", "object", "node", "returns", "nodes", "(", ")", "throws", "exception", "{", "list", "<", "object", "node", ">", "result", "=", "new", "array", "list", "<", ">", "(", ")", ";", "this", ".", "json", "stream", ".", "get", "(", "get", "content", "(", "__STR__", ")", ",", "result", "::", "add", ")", ";", "assert", "that", "(", "result", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "result", ".", "get", "(", "__NUM__", ")", ".", "get", "(", "__STR__", ")", ".", "as", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 87, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 110, "n_identifiers": 21, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.682146+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3dd20b9f51186a87bac88ea80c42872a60c6fe54", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "getWhenReadTypesReturnsTypes", "signature": null, "start_line": 51, "end_line": 59, "nloc": 9, "method_source_normalized": "@TestvoidgetWhenReadTypesReturnsTypes()throws Exception{\n\t\tList<TestEvent> result = new ArrayList<>();\n\t\tthis.jsonStream.get(getContent(\"stream.json\"), TestEvent.class, result::add);\n\t\tassertThat(result).hasSize(595);\n\t\tassertThat(result.get(1).getId()).isEqualTo(\"5667fdb72017\");\n\t\tassertThat(result.get(594).getStatus())\n\t\t\t.isEqualTo(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t}", "original_code": "@Test\n\tvoid getWhenReadTypesReturnsTypes() throws Exception {\n\t\tList<TestEvent> result = new ArrayList<>();\n\t\tthis.jsonStream.get(getContent(\"stream.json\"), TestEvent.class, result::add);\n\t\tassertThat(result).hasSize(595);\n\t\tassertThat(result.get(1).getId()).isEqualTo(\"5667fdb72017\");\n\t\tassertThat(result.get(594).getStatus())\n\t\t\t.isEqualTo(\"Status: Downloaded newer image for paketo-buildpacks/cnb:base\");\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "read", "types", "returns", "types", "(", ")", "throws", "exception", "{", "list", "<", "test", "event", ">", "result", "=", "new", "array", "list", "<", ">", "(", ")", ";", "this", ".", "json", "stream", ".", "get", "(", "get", "content", "(", "__STR__", ")", ",", "test", "event", ".", "class", ",", "result", "::", "add", ")", ";", "assert", "that", "(", "result", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "result", ".", "get", "(", "__NUM__", ")", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "result", ".", "get", "(", "__NUM__", ")", ".", "get", "status", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 111, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 136, "n_identifiers": 27, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.682477+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ff6c463673007bbd925fbff6b6ffc7a54312bcbb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "TestEvent", "signature": null, "start_line": 70, "end_line": 74, "nloc": 5, "method_source_normalized": "@JsonCreatorTestEvent(String id, String status){\n\t\t\tthis.id = id;\n\t\t\tthis.status = status;\n\t\t}", "original_code": "@JsonCreator\n\t\tTestEvent(String id, String status) {\n\t\t\tthis.id = id;\n\t\t\tthis.status = status;\n\t\t}", "code_tokens": ["@", "json", "creator", "test", "event", "(", "string", "id", ",", "string", "status", ")", "{", "this", ".", "id", "=", "id", ";", "this", ".", "status", "=", "status", ";", "}"], "token_count": 26, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 10, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.682743+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e2661e32f77fc171f4530378aa04a6fb6edf28a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "getId", "signature": null, "start_line": 76, "end_line": 78, "nloc": 3, "method_source_normalized": "StringgetId(){\n\t\t\treturn this.id;\n\t\t}", "original_code": "String getId() {\n\t\t\treturn this.id;\n\t\t}", "code_tokens": ["string", "get", "id", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.682974+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40667fbee88145f82e048d6b0cf5cf8b2343021d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/JsonStreamTests.java", "file_blob_sha": null, "method_name": "getStatus", "signature": null, "start_line": 80, "end_line": 82, "nloc": 3, "method_source_normalized": "StringgetStatus(){\n\t\t\treturn this.status;\n\t\t}", "original_code": "String getStatus() {\n\t\t\treturn this.status;\n\t\t}", "code_tokens": ["string", "get", "status", "(", ")", "{", "return", "this", ".", "status", ";", "}"], "token_count": 12, "vocab_size": 11, "cyclomatic_complexity": 1, "ast_node_count": 16, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.683199+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cea69ceaecf5234dd2cc046bfb1cb2f252f9d5a8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/AbstractJsonTests.java", "file_blob_sha": null, "method_name": "getObjectMapper", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "protected finalObjectMappergetObjectMapper(){\n\t\treturn SharedObjectMapper.get();\n\t}", "original_code": "protected final ObjectMapper getObjectMapper() {\n\t\treturn SharedObjectMapper.get();\n\t}", "code_tokens": ["protected", "final", "object", "mapper", "get", "object", "mapper", "(", ")", "{", "return", "shared", "object", "mapper", ".", "get", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 22, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.683932+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eef828bce5816cf21139e8ed0a309cb0b52885e6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/AbstractJsonTests.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 43, "end_line": 47, "nloc": 5, "method_source_normalized": "protected finalInputStreamgetContent(String name){\n\t\tInputStream result = getClass().getResourceAsStream(name);\n\t\tassertThat(result).as(\"JSON source \" + name).isNotNull();\n\t\treturn result;\n\t}", "original_code": "protected final InputStream getContent(String name) {\n\t\tInputStream result = getClass().getResourceAsStream(name);\n\t\tassertThat(result).as(\"JSON source \" + name).isNotNull();\n\t\treturn result;\n\t}", "code_tokens": ["protected", "final", "input", "stream", "get", "content", "(", "string", "name", ")", "{", "input", "stream", "result", "=", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ";", "assert", "that", "(", "result", ")", ".", "as", "(", "__STR__", "+", "name", ")", ".", "is", "not", "null", "(", ")", ";", "return", "result", ";", "}"], "token_count": 51, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 61, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.684192+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3ba926ca3fb0d1c439c10db2e6941b136cd67039", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/json/AbstractJsonTests.java", "file_blob_sha": null, "method_name": "getContentAsString", "signature": null, "start_line": 49, "end_line": 57, "nloc": 9, "method_source_normalized": "protected finalStringgetContentAsString(String name){\n\t\ttry (InputStream in = getContent(name)) {\n\t\t\treturn new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8)).lines()\n\t\t\t\t.collect(Collectors.joining(\"\\n\"));\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new UncheckedIOException(ex);\n\t\t}\n\t}", "original_code": "protected final String getContentAsString(String name) {\n\t\ttry (InputStream in = getContent(name)) {\n\t\t\treturn new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8)).lines()\n\t\t\t\t.collect(Collectors.joining(\"\\n\"));\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new UncheckedIOException(ex);\n\t\t}\n\t}", "code_tokens": ["protected", "final", "string", "get", "content", "as", "string", "(", "string", "name", ")", "{", "try", "(", "input", "stream", "in", "=", "get", "content", "(", "name", ")", ")", "{", "return", "new", "buffered", "reader", "(", "new", "input", "stream", "reader", "(", "in", ",", "standard", "charsets", ".", "utf", "8", ")", ")", ".", "lines", "(", ")", ".", "collect", "(", "collectors", ".", "joining", "(", "__STR__", ")", ")", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "unchecked", "io", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 78, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 95, "n_identifiers": 21, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.684476+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d4de112f225f7212992fd0e3c0a191b299096069", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageLoadsMetadata", "signature": null, "start_line": 41, "end_line": 47, "nloc": 7, "method_source_normalized": "@TestvoidfromImageLoadsMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromImage(image);\n\t\tassertThat(metadata.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(metadata.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "original_code": "@Test\n\tvoid fromImageLoadsMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromImage(image);\n\t\tassertThat(metadata.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(metadata.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "buildpack", "metadata", "metadata", "=", "buildpack", "metadata", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "metadata", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 77, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.685632+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bac1ba35826c6a1e2c6375bd8c09b96b691ccd0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageIsNullThrowsException", "signature": null, "start_line": 49, "end_line": 53, "nloc": 5, "method_source_normalized": "@TestvoidfromImageWhenImageIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "metadata", ".", "from", "image", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.685897+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6603a03fe0f62f560e24b6d481a972eac4aadd42", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageConfigIsNullThrowsException", "signature": null, "start_line": 55, "end_line": 60, "nloc": 6, "method_source_normalized": "@TestvoidfromImageWhenImageConfigIsNullThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageConfigIsNullThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "config", "is", "null", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 57, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 61, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.686163+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "67324d91a7625693154915d446dc3b1942769fd3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageConfigWhenLabelIsMissingThrowsException", "signature": null, "start_line": 62, "end_line": 70, "nloc": 9, "method_source_normalized": "@TestvoidfromImageConfigWhenLabelIsMissingThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildpackMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.buildpackage.metadata' label found in image config labels 'alpha'\");\n\t}", "original_code": "@Test\n\tvoid fromImageConfigWhenLabelIsMissingThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildpackMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.buildpackage.metadata' label found in image config labels 'alpha'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "config", "when", "label", "is", "missing", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "image", "config", "image", "config", "=", "mock", "(", "image", "config", ".", "class", ")", ";", "given", "(", "image", ".", "get", "config", "(", ")", ")", ".", "will", "return", "(", "image", "config", ")", ";", "given", "(", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "map", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 112, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 29, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.686482+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6936d4a52ace20dd9c65d1a36b5203243e277670", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackMetadataTests.java", "file_blob_sha": null, "method_name": "fromJsonLoadsMetadata", "signature": null, "start_line": 72, "end_line": 78, "nloc": 7, "method_source_normalized": "@TestvoidfromJsonLoadsMetadata()throws IOException{\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromJson(getContentAsString(\"buildpack-metadata.json\"));\n\t\tassertThat(metadata.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(metadata.getVersion()).isEqualTo(\"0.0.1\");\n\t\tassertThat(metadata.getHomepage()).isEqualTo(\"https://github.com/example/tree/main/buildpacks/hello-universe\");\n\t}", "original_code": "@Test\n\tvoid fromJsonLoadsMetadata() throws IOException {\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromJson(getContentAsString(\"buildpack-metadata.json\"));\n\t\tassertThat(metadata.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(metadata.getVersion()).isEqualTo(\"0.0.1\");\n\t\tassertThat(metadata.getHomepage()).isEqualTo(\"https://github.com/example/tree/main/buildpacks/hello-universe\");\n\t}", "code_tokens": ["@", "test", "void", "from", "json", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "buildpack", "metadata", "metadata", "=", "buildpack", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "metadata", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "homepage", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 87, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 98, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.686780+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14f9ac7be569204f9000ac21676986e800c6f582", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildLogTests.java", "file_blob_sha": null, "method_name": "toSystemOutPrintsToSystemOut", "signature": null, "start_line": 30, "end_line": 35, "nloc": 6, "method_source_normalized": "@TestvoidtoSystemOutPrintsToSystemOut(){\n\t\tBuildLog log = BuildLog.toSystemOut();\n\t\tassertThat(log).isInstanceOf(PrintStreamBuildLog.class);\n\t\tassertThat(log).extracting(\"out\").isSameAs(System.out);\n\t}", "original_code": "@Test\n\tvoid toSystemOutPrintsToSystemOut() {\n\t\tBuildLog log = BuildLog.toSystemOut();\n\t\tassertThat(log).isInstanceOf(PrintStreamBuildLog.class);\n\t\tassertThat(log).extracting(\"out\").isSameAs(System.out);\n\t}", "code_tokens": ["@", "test", "void", "to", "system", "out", "prints", "to", "system", "out", "(", ")", "{", "build", "log", "log", "=", "build", "log", ".", "to", "system", "out", "(", ")", ";", "assert", "that", "(", "log", ")", ".", "is", "instance", "of", "(", "print", "stream", "build", "log", ".", "class", ")", ";", "assert", "that", "(", "log", ")", ".", "extracting", "(", "__STR__", ")", ".", "is", "same", "as", "(", "system", ".", "out", ")", ";", "}"], "token_count": 65, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 69, "n_identifiers": 17, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.687394+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0f6d5d69a46c37bb436c5a6ae2b4a8c4b9a2d6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildLogTests.java", "file_blob_sha": null, "method_name": "toPrintsToOutput", "signature": null, "start_line": 37, "end_line": 42, "nloc": 6, "method_source_normalized": "@TestvoidtoPrintsToOutput(){\n\t\tBuildLog log = BuildLog.to(System.err);\n\t\tassertThat(log).isInstanceOf(PrintStreamBuildLog.class);\n\t\tassertThat(log).extracting(\"out\").isSameAs(System.err);\n\t}", "original_code": "@Test\n\tvoid toPrintsToOutput() {\n\t\tBuildLog log = BuildLog.to(System.err);\n\t\tassertThat(log).isInstanceOf(PrintStreamBuildLog.class);\n\t\tassertThat(log).extracting(\"out\").isSameAs(System.err);\n\t}", "code_tokens": ["@", "test", "void", "to", "prints", "to", "output", "(", ")", "{", "build", "log", "log", "=", "build", "log", ".", "to", "(", "system", ".", "err", ")", ";", "assert", "that", "(", "log", ")", ".", "is", "instance", "of", "(", "print", "stream", "build", "log", ".", "class", ")", ";", "assert", "that", "(", "log", ")", ".", "extracting", "(", "__STR__", ")", ".", "is", "same", "as", "(", "system", ".", "err", ")", ";", "}"], "token_count": 63, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 19, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.687680+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5c1931b6de69d89273ca48355df986dcad3a6a2f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 43, "end_line": 49, "nloc": 7, "method_source_normalized": "@BeforeEachvoidsetUp(@TempDir File temp){\n\t\tthis.buildpackDir = new File(temp, \"buildpack\");\n\t\tthis.buildpackDir.mkdirs();\n\t\tthis.testTarGzip = new TestTarGzip(this.buildpackDir);\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t}", "original_code": "@BeforeEach\n\tvoid setUp(@TempDir File temp) {\n\t\tthis.buildpackDir = new File(temp, \"buildpack\");\n\t\tthis.buildpackDir.mkdirs();\n\t\tthis.testTarGzip = new TestTarGzip(this.buildpackDir);\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", "@", "temp", "dir", "file", "temp", ")", "{", "this", ".", "buildpack", "dir", "=", "new", "file", "(", "temp", ",", "__STR__", ")", ";", "this", ".", "buildpack", "dir", ".", "mkdirs", "(", ")", ";", "this", ".", "test", "tar", "gzip", "=", "new", "test", "tar", "gzip", "(", "this", ".", "buildpack", "dir", ")", ";", "this", ".", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "}"], "token_count": 68, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.688968+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d6d5b87e3419f4d24a0daeb13456a06931bf5b7d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFilePathReturnsBuildpack", "signature": null, "start_line": 51, "end_line": 59, "nloc": 9, "method_source_normalized": "@TestvoidresolveWhenFilePathReturnsBuildpack()throws Exception{\n\t\tPath compressedArchive = this.testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toString());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tthis.testTarGzip.assertHasExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFilePathReturnsBuildpack() throws Exception {\n\t\tPath compressedArchive = this.testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toString());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tthis.testTarGzip.assertHasExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "file", "path", "returns", "buildpack", "(", ")", "throws", "exception", "{", "path", "compressed", "archive", "=", "this", ".", "test", "tar", "gzip", ".", "create", "archive", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "compressed", "archive", ".", "to", "string", "(", ")", ")", ";", "buildpack", "buildpack", "=", "tar", "gzip", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "this", ".", "test", "tar", "gzip", ".", "assert", "has", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 109, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 119, "n_identifiers": 29, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.689291+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7faac748c743246aea8831febe3e1f5fbe4f53ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFileUrlReturnsBuildpack", "signature": null, "start_line": 61, "end_line": 69, "nloc": 9, "method_source_normalized": "@TestvoidresolveWhenFileUrlReturnsBuildpack()throws Exception{\n\t\tPath compressedArchive = this.testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toUri().toString());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).as(\"Buildpack %s resolved from reference %s\", buildpack, reference).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tthis.testTarGzip.assertHasExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFileUrlReturnsBuildpack() throws Exception {\n\t\tPath compressedArchive = this.testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toUri().toString());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).as(\"Buildpack %s resolved from reference %s\", buildpack, reference).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tthis.testTarGzip.assertHasExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "file", "url", "returns", "buildpack", "(", ")", "throws", "exception", "{", "path", "compressed", "archive", "=", "this", ".", "test", "tar", "gzip", ".", "create", "archive", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "compressed", "archive", ".", "to", "uri", "(", ")", ".", "to", "string", "(", ")", ")", ";", "buildpack", "buildpack", "=", "tar", "gzip", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "as", "(", "__STR__", ",", "buildpack", ",", "reference", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "this", ".", "test", "tar", "gzip", ".", "assert", "has", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 123, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 136, "n_identifiers": 33, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.689621+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "37146c0c8da9ec9b156a03ec69201d657c72f2a7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenArchiveWithoutDescriptorThrowsException", "signature": null, "start_line": 71, "end_line": 78, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenArchiveWithoutDescriptorThrowsException()throws Exception{\n\t\tPath compressedArchive = this.testTarGzip.createEmptyArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toString());\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> TarGzipBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(compressedArchive.toString());\n\t}", "original_code": "@Test\n\tvoid resolveWhenArchiveWithoutDescriptorThrowsException() throws Exception {\n\t\tPath compressedArchive = this.testTarGzip.createEmptyArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(compressedArchive.toString());\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> TarGzipBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(compressedArchive.toString());\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "archive", "without", "descriptor", "throws", "exception", "(", ")", "throws", "exception", "{", "path", "compressed", "archive", "=", "this", ".", "test", "tar", "gzip", ".", "create", "empty", "archive", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "compressed", "archive", ".", "to", "string", "(", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "tar", "gzip", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "compressed", "archive", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 100, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 103, "n_identifiers": 23, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.690094+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "37ca85fd572216c2ad768375d8a3428e510b6179", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenArchiveWithDirectoryReturnsNull", "signature": null, "start_line": 80, "end_line": 85, "nloc": 6, "method_source_normalized": "@TestvoidresolveWhenArchiveWithDirectoryReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.getAbsolutePath());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenArchiveWithDirectoryReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.getAbsolutePath());\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "archive", "with", "directory", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ")", ";", "buildpack", "buildpack", "=", "tar", "gzip", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 63, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 69, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.690380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e0047e3a3d716a61c3ed5ce0a98381a6d6e51cab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TarGzipBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenArchiveThatDoesNotExistReturnsNull", "signature": null, "start_line": 87, "end_line": 92, "nloc": 6, "method_source_normalized": "@TestvoidresolveWhenArchiveThatDoesNotExistReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test/i/am/missing/buildpack.tar\");\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenArchiveThatDoesNotExistReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test/i/am/missing/buildpack.tar\");\n\t\tBuildpack buildpack = TarGzipBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "archive", "that", "does", "not", "exist", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "tar", "gzip", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 56, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.690658+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e36cbb03d0f2b2e251513a56f629defa891aa00a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestBuildpack.java", "file_blob_sha": null, "method_name": "TestBuildpack", "signature": null, "start_line": 37, "end_line": 39, "nloc": 3, "method_source_normalized": "TestBuildpack(String id, String version){\n\t\tthis.coordinates = BuildpackCoordinates.of(id, version);\n\t}", "original_code": "TestBuildpack(String id, String version) {\n\t\tthis.coordinates = BuildpackCoordinates.of(id, version);\n\t}", "code_tokens": ["test", "buildpack", "(", "string", "id", ",", "string", "version", ")", "{", "this", ".", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "id", ",", "version", ")", ";", "}"], "token_count": 25, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.691449+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7ee67db2b88e9589f2dd9e000473edaf697565e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestBuildpack.java", "file_blob_sha": null, "method_name": "getCoordinates", "signature": null, "start_line": 41, "end_line": 44, "nloc": 4, "method_source_normalized": "@Override\n\tpublicBuildpackCoordinatesgetCoordinates(){\n\t\treturn this.coordinates;\n\t}", "original_code": "@Override\n\tpublic BuildpackCoordinates getCoordinates() {\n\t\treturn this.coordinates;\n\t}", "code_tokens": ["@", "override", "public", "buildpack", "coordinates", "get", "coordinates", "(", ")", "{", "return", "this", ".", "coordinates", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.691691+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d1f7bbfb3970695a32dace8ec865d2baa9e79744", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestBuildpack.java", "file_blob_sha": null, "method_name": "apply", "signature": null, "start_line": 46, "end_line": 49, "nloc": 4, "method_source_normalized": "@Override\n\tpublicvoidapply(IOConsumer<Layer> layers)throws IOException{\n\t\tlayers.accept(Layer.of(this::getContent));\n\t}", "original_code": "@Override\n\tpublic void apply(IOConsumer<Layer> layers) throws IOException {\n\t\tlayers.accept(Layer.of(this::getContent));\n\t}", "code_tokens": ["@", "override", "public", "void", "apply", "(", "io", "consumer", "<", "layer", ">", "layers", ")", "throws", "io", "exception", "{", "layers", ".", "accept", "(", "layer", ".", "of", "(", "this", "::", "get", "content", ")", ")", ";", "}"], "token_count": 33, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 45, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.691945+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17c8ec4120542b816058d8da5a46c9e16ec4906f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestBuildpack.java", "file_blob_sha": null, "method_name": "getContent", "signature": null, "start_line": 51, "end_line": 55, "nloc": 5, "method_source_normalized": "privatevoidgetContent(Layout layout)throws IOException{\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tString dir = \"/cnb/buildpacks/\" + id + \"/\" + this.coordinates.getVersion();\n\t\tlayout.file(dir + \"/buildpack.toml\", Owner.ROOT, Content.of(\"[test]\"));\n\t}", "original_code": "private void getContent(Layout layout) throws IOException {\n\t\tString id = this.coordinates.getSanitizedId();\n\t\tString dir = \"/cnb/buildpacks/\" + id + \"/\" + this.coordinates.getVersion();\n\t\tlayout.file(dir + \"/buildpack.toml\", Owner.ROOT, Content.of(\"[test]\"));\n\t}", "code_tokens": ["private", "void", "get", "content", "(", "layout", "layout", ")", "throws", "io", "exception", "{", "string", "id", "=", "this", ".", "coordinates", ".", "get", "sanitized", "id", "(", ")", ";", "string", "dir", "=", "__STR__", "+", "id", "+", "__STR__", "+", "this", ".", "coordinates", ".", "get", "version", "(", ")", ";", "layout", ".", "file", "(", "dir", "+", "__STR__", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "__STR__", ")", ")", ";", "}"], "token_count": 64, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 20, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.692220+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14af643a13eeee87860ed415dd4269e7cf6e5788", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "getNameReturnsName", "signature": null, "start_line": 40, "end_line": 44, "nloc": 5, "method_source_normalized": "@TestvoidgetNameReturnsName(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tassertThat(phase.getName()).isEqualTo(\"test\");\n\t}", "original_code": "@Test\n\tvoid getNameReturnsName() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tassertThat(phase.getName()).isEqualTo(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "get", "name", "returns", "name", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "assert", "that", "(", "phase", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 40, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.694349+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d1d6f93e917324c78f49fcdbc9c4fec02583d09", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "toStringReturnsName", "signature": null, "start_line": 46, "end_line": 50, "nloc": 5, "method_source_normalized": "@TestvoidtoStringReturnsName(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tassertThat(phase).hasToString(\"test\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsName() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tassertThat(phase).hasToString(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "name", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "assert", "that", "(", "phase", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 35, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.694615+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8849b684a488b6e00d0ca28ff4797437e5f369e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyUpdatesConfiguration", "signature": null, "start_line": 52, "end_line": 60, "nloc": 9, "method_source_normalized": "@TestvoidapplyUpdatesConfiguration(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", NO_ARGS);\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyUpdatesConfiguration() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", NO_ARGS);\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "updates", "configuration", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ",", "no", "args", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 86, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 113, "n_identifiers": 25, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.694920+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb00444a1d22c0e605daa09395f2df67b086d468", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithDaemonAccessUpdatesConfigurationWithRootUser", "signature": null, "start_line": 62, "end_line": 72, "nloc": 11, "method_source_normalized": "@TestvoidapplyWhenWithDaemonAccessUpdatesConfigurationWithRootUser(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withDaemonAccess();\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withUser(\"root\");\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"-daemon\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithDaemonAccessUpdatesConfigurationWithRootUser() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withDaemonAccess();\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withUser(\"root\");\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"-daemon\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "daemon", "access", "updates", "configuration", "with", "root", "user", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "phase", ".", "with", "daemon", "access", "(", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "user", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 115, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 143, "n_identifiers": 30, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.695249+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bd2ad0de74333d6f4fd4fb095710c1a3ae8b571a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithLogLevelArgAndVerboseLoggingUpdatesConfigurationWithLogLevel", "signature": null, "start_line": 74, "end_line": 82, "nloc": 9, "method_source_normalized": "@TestvoidapplyWhenWithLogLevelArgAndVerboseLoggingUpdatesConfigurationWithLogLevel(){\n\t\tPhase phase = new Phase(\"test\", true);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"-log-level\", \"debug\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithLogLevelArgAndVerboseLoggingUpdatesConfigurationWithLogLevel() {\n\t\tPhase phase = new Phase(\"test\", true);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"-log-level\", \"debug\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "log", "level", "arg", "and", "verbose", "logging", "updates", "configuration", "with", "log", "level", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "true", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 98, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 115, "n_identifiers": 24, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.695563+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "90daa4b2e23043327415a820ff684542f2747750", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithLogLevelArgAndNonVerboseLoggingDoesNotUpdateLogLevel", "signature": null, "start_line": 84, "end_line": 92, "nloc": 9, "method_source_normalized": "@TestvoidapplyWhenWithLogLevelArgAndNonVerboseLoggingDoesNotUpdateLogLevel(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithLogLevelArgAndNonVerboseLoggingDoesNotUpdateLogLevel() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "log", "level", "arg", "and", "non", "verbose", "logging", "does", "not", "update", "log", "level", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 95, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 111, "n_identifiers": 24, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.695876+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6f8f4bc7b2aacec430f0473201916436bdd65b9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithArgsUpdatesConfigurationWithArguments", "signature": null, "start_line": 94, "end_line": 103, "nloc": 10, "method_source_normalized": "@TestvoidapplyWhenWithArgsUpdatesConfigurationWithArguments(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withArgs(\"a\", \"b\", \"c\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"a\", \"b\", \"c\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithArgsUpdatesConfigurationWithArguments() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withArgs(\"a\", \"b\", \"c\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\", \"a\", \"b\", \"c\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "args", "updates", "configuration", "with", "arguments", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "phase", ".", "with", "args", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 106, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 131, "n_identifiers": 26, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.696199+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20a220b1406ff4dc1e0de9b236aec335dcede459", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithBindsUpdatesConfigurationWithBinds", "signature": null, "start_line": 105, "end_line": 116, "nloc": 12, "method_source_normalized": "@TestvoidapplyWhenWithBindsUpdatesConfigurationWithBinds(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tVolumeName volumeName = VolumeName.of(\"test\");\n\t\tphase.withBinding(Binding.from(volumeName, \"/test\"));\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withBinding(Binding.from(volumeName, \"/test\"));\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithBindsUpdatesConfigurationWithBinds() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tVolumeName volumeName = VolumeName.of(\"test\");\n\t\tphase.withBinding(Binding.from(volumeName, \"/test\"));\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withBinding(Binding.from(volumeName, \"/test\"));\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "binds", "updates", "configuration", "with", "binds", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "volume", "name", "volume", "name", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "phase", ".", "with", "binding", "(", "binding", ".", "from", "(", "volume", "name", ",", "__STR__", ")", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "binding", "(", "binding", ".", "from", "(", "volume", "name", ",", "__STR__", ")", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 140, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 174, "n_identifiers": 40, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.696555+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1ef268bc39fc67ecf9b5a385d6200e883f925292", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithEnvUpdatesConfigurationWithEnv", "signature": null, "start_line": 118, "end_line": 130, "nloc": 13, "method_source_normalized": "@TestvoidapplyWhenWithEnvUpdatesConfigurationWithEnv(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withEnv(\"name1\", \"value1\");\n\t\tphase.withEnv(\"name2\", \"value2\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withEnv(\"name1\", \"value1\");\n\t\tthen(update).should().withEnv(\"name2\", \"value2\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithEnvUpdatesConfigurationWithEnv() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withEnv(\"name1\", \"value1\");\n\t\tphase.withEnv(\"name2\", \"value2\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withEnv(\"name1\", \"value1\");\n\t\tthen(update).should().withEnv(\"name2\", \"value2\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "env", "updates", "configuration", "with", "env", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "phase", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "phase", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 142, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 181, "n_identifiers": 36, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.696915+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6dac3c058d240cc0fe85a8ec0a48f0bfb389138", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithNetworkModeUpdatesConfigurationWithNetworkMode", "signature": null, "start_line": 132, "end_line": 142, "nloc": 11, "method_source_normalized": "@TestvoidapplyWhenWithNetworkModeUpdatesConfigurationWithNetworkMode(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withNetworkMode(\"test\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withNetworkMode(\"test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithNetworkModeUpdatesConfigurationWithNetworkMode() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withNetworkMode(\"test\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withNetworkMode(\"test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "network", "mode", "updates", "configuration", "with", "network", "mode", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "phase", ".", "with", "network", "mode", "(", "__STR__", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "network", "mode", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 115, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 142, "n_identifiers": 30, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.697284+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "03af7cfb3917aee2aa782a4e1615af7610fe1084", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PhaseTests.java", "file_blob_sha": null, "method_name": "applyWhenWithSecurityOptionsUpdatesConfigurationWithSecurityOptions", "signature": null, "start_line": 144, "end_line": 156, "nloc": 13, "method_source_normalized": "@TestvoidapplyWhenWithSecurityOptionsUpdatesConfigurationWithSecurityOptions(){\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withSecurityOption(\"option1=value1\");\n\t\tphase.withSecurityOption(\"option2=value2\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withSecurityOption(\"option1=value1\");\n\t\tthen(update).should().withSecurityOption(\"option2=value2\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid applyWhenWithSecurityOptionsUpdatesConfigurationWithSecurityOptions() {\n\t\tPhase phase = new Phase(\"test\", false);\n\t\tphase.withSecurityOption(\"option1=value1\");\n\t\tphase.withSecurityOption(\"option2=value2\");\n\t\tUpdate update = mock(Update.class);\n\t\tphase.apply(update);\n\t\tthen(update).should().withCommand(\"/cnb/lifecycle/test\");\n\t\tthen(update).should().withLabel(\"author\", \"spring-boot\");\n\t\tthen(update).should().withSecurityOption(\"option1=value1\");\n\t\tthen(update).should().withSecurityOption(\"option2=value2\");\n\t\tthen(update).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "apply", "when", "with", "security", "options", "updates", "configuration", "with", "security", "options", "(", ")", "{", "phase", "phase", "=", "new", "phase", "(", "__STR__", ",", "false", ")", ";", "phase", ".", "with", "security", "option", "(", "__STR__", ")", ";", "phase", ".", "with", "security", "option", "(", "__STR__", ")", ";", "update", "update", "=", "mock", "(", "update", ".", "class", ")", ";", "phase", ".", "apply", "(", "update", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "command", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "security", "option", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "(", ")", ".", "with", "security", "option", "(", "__STR__", ")", ";", "then", "(", "update", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 140, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 173, "n_identifiers": 36, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.697641+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "72f99419fb778d151e1133ec6f160eb13c72c4ba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 48, "end_line": 53, "nloc": 6, "method_source_normalized": "@BeforeEachvoidsetup()throws Exception{\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(this.resolverContext.getBuildpackMetadata()).willReturn(metadata.getBuildpacks());\n\t}", "original_code": "@BeforeEach\n\tvoid setup() throws Exception {\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(this.resolverContext.getBuildpackMetadata()).willReturn(metadata.getBuildpacks());\n\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "throws", "exception", "{", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "this", ".", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "this", ".", "resolver", "context", ".", "get", "buildpack", "metadata", "(", ")", ")", ".", "will", "return", "(", "metadata", ".", "get", "buildpacks", "(", ")", ")", ";", "}"], "token_count": 69, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.699332+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aa7198fcb3bd3cb6a217b63cad64376a64396f37", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "resolveAllWithBuilderBuildpackReferenceReturnsExpectedBuildpack", "signature": null, "start_line": 55, "end_line": 61, "nloc": 7, "method_source_normalized": "@TestvoidresolveAllWithBuilderBuildpackReferenceReturnsExpectedBuildpack(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(BuilderBuildpack.class);\n\t}", "original_code": "@Test\n\tvoid resolveAllWithBuilderBuildpackReferenceReturnsExpectedBuildpack() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(BuilderBuildpack.class);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "all", "with", "builder", "buildpack", "reference", "returns", "expected", "buildpack", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpacks", "buildpacks", "=", "buildpack", "resolvers", ".", "resolve", "all", "(", "this", ".", "resolver", "context", ",", "collections", ".", "singleton", "(", "reference", ")", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ".", "get", "(", "__NUM__", ")", ")", ".", "is", "instance", "of", "(", "builder", "buildpack", ".", "class", ")", ";", "}"], "token_count": 93, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 105, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.699642+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c95819adb67f02b30bd296470ca8d68cfde051e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "resolveAllWithDirectoryBuildpackReferenceReturnsExpectedBuildpack", "signature": null, "start_line": 63, "end_line": 71, "nloc": 9, "method_source_normalized": "@TestvoidresolveAllWithDirectoryBuildpackReferenceReturnsExpectedBuildpack(@TempDir Path temp)throws IOException{\n\t\tFileCopyUtils.copy(getClass().getResourceAsStream(\"buildpack.toml\"),\n\t\t\t\tFiles.newOutputStream(temp.resolve(\"buildpack.toml\")));\n\t\tBuildpackReference reference = BuildpackReference.of(temp.toAbsolutePath().toString());\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(DirectoryBuildpack.class);\n\t}", "original_code": "@Test\n\tvoid resolveAllWithDirectoryBuildpackReferenceReturnsExpectedBuildpack(@TempDir Path temp) throws IOException {\n\t\tFileCopyUtils.copy(getClass().getResourceAsStream(\"buildpack.toml\"),\n\t\t\t\tFiles.newOutputStream(temp.resolve(\"buildpack.toml\")));\n\t\tBuildpackReference reference = BuildpackReference.of(temp.toAbsolutePath().toString());\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(DirectoryBuildpack.class);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "all", "with", "directory", "buildpack", "reference", "returns", "expected", "buildpack", "(", "@", "temp", "dir", "path", "temp", ")", "throws", "io", "exception", "{", "file", "copy", "utils", ".", "copy", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ",", "files", ".", "new", "output", "stream", "(", "temp", ".", "resolve", "(", "__STR__", ")", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "temp", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ")", ";", "buildpacks", "buildpacks", "=", "buildpack", "resolvers", ".", "resolve", "all", "(", "this", ".", "resolver", "context", ",", "collections", ".", "singleton", "(", "reference", ")", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ".", "get", "(", "__NUM__", ")", ")", ".", "is", "instance", "of", "(", "directory", "buildpack", ".", "class", ")", ";", "}"], "token_count": 146, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 164, "n_identifiers": 40, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.699991+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3a228a8ea73639397ed46482af2976f5652c34ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "resolveAllWithTarGzipBuildpackReferenceReturnsExpectedBuildpack", "signature": null, "start_line": 73, "end_line": 81, "nloc": 9, "method_source_normalized": "@TestvoidresolveAllWithTarGzipBuildpackReferenceReturnsExpectedBuildpack(@TempDir File temp)throws Exception{\n\t\tTestTarGzip testTarGzip = new TestTarGzip(temp);\n\t\tPath archive = testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(archive.toString());\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(TarGzipBuildpack.class);\n\t}", "original_code": "@Test\n\tvoid resolveAllWithTarGzipBuildpackReferenceReturnsExpectedBuildpack(@TempDir File temp) throws Exception {\n\t\tTestTarGzip testTarGzip = new TestTarGzip(temp);\n\t\tPath archive = testTarGzip.createArchive();\n\t\tBuildpackReference reference = BuildpackReference.of(archive.toString());\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(TarGzipBuildpack.class);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "all", "with", "tar", "gzip", "buildpack", "reference", "returns", "expected", "buildpack", "(", "@", "temp", "dir", "file", "temp", ")", "throws", "exception", "{", "test", "tar", "gzip", "test", "tar", "gzip", "=", "new", "test", "tar", "gzip", "(", "temp", ")", ";", "path", "archive", "=", "test", "tar", "gzip", ".", "create", "archive", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "archive", ".", "to", "string", "(", ")", ")", ";", "buildpacks", "buildpacks", "=", "buildpack", "resolvers", ".", "resolve", "all", "(", "this", ".", "resolver", "context", ",", "collections", ".", "singleton", "(", "reference", ")", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ".", "get", "(", "__NUM__", ")", ")", ".", "is", "instance", "of", "(", "tar", "gzip", "buildpack", ".", "class", ")", ";", "}"], "token_count": 134, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 147, "n_identifiers": 39, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.700340+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bceaf6807e8bdbb81682caaa2c4906757cb6a836", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "resolveAllWithImageBuildpackReferenceReturnsExpectedBuildpack", "signature": null, "start_line": 83, "end_line": 93, "nloc": 11, "method_source_normalized": "@TestvoidresolveAllWithImageBuildpackReferenceReturnsExpectedBuildpack()throws IOException{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(any(), any())).willReturn(image);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:latest\");\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(ImageBuildpack.class);\n\t}", "original_code": "@Test\n\tvoid resolveAllWithImageBuildpackReferenceReturnsExpectedBuildpack() throws IOException {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(any(), any())).willReturn(image);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:latest\");\n\t\tBuildpacks buildpacks = BuildpackResolvers.resolveAll(resolverContext, Collections.singleton(reference));\n\t\tassertThat(buildpacks.getBuildpacks()).hasSize(1);\n\t\tassertThat(buildpacks.getBuildpacks().get(0)).isInstanceOf(ImageBuildpack.class);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "all", "with", "image", "buildpack", "reference", "returns", "expected", "buildpack", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "__STR__", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "any", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpacks", "buildpacks", "=", "buildpack", "resolvers", ".", "resolve", "all", "(", "resolver", "context", ",", "collections", ".", "singleton", "(", "reference", ")", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ".", "get", "(", "__NUM__", ")", ")", ".", "is", "instance", "of", "(", "image", "buildpack", ".", "class", ")", ";", "}"], "token_count": 174, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 199, "n_identifiers": 49, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.700721+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aceaefb77a96d55f377e8bfbb902a761d4b1bfe6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackResolversTests.java", "file_blob_sha": null, "method_name": "resolveAllWithInvalidLocatorThrowsException", "signature": null, "start_line": 95, "end_line": 102, "nloc": 8, "method_source_normalized": "@TestvoidresolveAllWithInvalidLocatorThrowsException(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"unknown-buildpack@0.0.1\");\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference)))\n\t\t\t.withMessageContaining(\"Invalid buildpack reference\")\n\t\t\t.withMessageContaining(\"'unknown-buildpack@0.0.1'\");\n\t}", "original_code": "@Test\n\tvoid resolveAllWithInvalidLocatorThrowsException() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"unknown-buildpack@0.0.1\");\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> BuildpackResolvers.resolveAll(this.resolverContext, Collections.singleton(reference)))\n\t\t\t.withMessageContaining(\"Invalid buildpack reference\")\n\t\t\t.withMessageContaining(\"'unknown-buildpack@0.0.1'\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "all", "with", "invalid", "locator", "throws", "exception", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "resolvers", ".", "resolve", "all", "(", "this", ".", "resolver", "context", ",", "collections", ".", "singleton", "(", "reference", ")", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 75, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 16, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.701022+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20ff6e3cba37ebebecd00f6b754adc98b9742708", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvReturnsOwner", "signature": null, "start_line": 36, "end_line": 45, "nloc": 10, "method_source_normalized": "@TestvoidfromEnvReturnsOwner(){\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tBuildOwner owner = BuildOwner.fromEnv(env);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t\tassertThat(owner).hasToString(\"123/456\");\n\t}", "original_code": "@Test\n\tvoid fromEnvReturnsOwner() {\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tBuildOwner owner = BuildOwner.fromEnv(env);\n\t\tassertThat(owner.getUid()).isEqualTo(123);\n\t\tassertThat(owner.getGid()).isEqualTo(456);\n\t\tassertThat(owner).hasToString(\"123/456\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "returns", "owner", "(", ")", "{", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "build", "owner", "owner", "=", "build", "owner", ".", "from", "env", "(", "env", ")", ";", "assert", "that", "(", "owner", ".", "get", "uid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "owner", ".", "get", "gid", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "owner", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 108, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 131, "n_identifiers": 27, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.702262+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2c2a0cf01786838bde8d47b948d2666dbd340099", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvWhenEnvIsNullThrowsException", "signature": null, "start_line": 47, "end_line": 51, "nloc": 5, "method_source_normalized": "@TestvoidfromEnvWhenEnvIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildOwner.fromEnv(null))\n\t\t\t.withMessage(\"'env' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromEnvWhenEnvIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildOwner.fromEnv(null))\n\t\t\t.withMessage(\"'env' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "when", "env", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "owner", ".", "from", "env", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.702536+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8cbbf66cfae91110acf86e73cd9c95692dcc7433", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvWhenUserPropertyIsMissingThrowsException", "signature": null, "start_line": 53, "end_line": 59, "nloc": 7, "method_source_normalized": "@TestvoidfromEnvWhenUserPropertyIsMissingThrowsException(){\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Missing 'CNB_USER_ID' value from the builder environment '\" + env + \"'\");\n\t}", "original_code": "@Test\n\tvoid fromEnvWhenUserPropertyIsMissingThrowsException() {\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Missing 'CNB_USER_ID' value from the builder environment '\" + env + \"'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "when", "user", "property", "is", "missing", "throws", "exception", "(", ")", "{", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "owner", ".", "from", "env", "(", "env", ")", ")", ".", "with", "message", "(", "__STR__", "+", "env", "+", "__STR__", ")", ";", "}"], "token_count": 77, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 16, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.702828+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6a18795eaa4e33284e5f4b18ebcd21cf67791329", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvWhenGroupPropertyIsMissingThrowsException", "signature": null, "start_line": 61, "end_line": 67, "nloc": 7, "method_source_normalized": "@TestvoidfromEnvWhenGroupPropertyIsMissingThrowsException(){\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Missing 'CNB_GROUP_ID' value from the builder environment '\" + env + \"'\");\n\t}", "original_code": "@Test\n\tvoid fromEnvWhenGroupPropertyIsMissingThrowsException() {\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Missing 'CNB_GROUP_ID' value from the builder environment '\" + env + \"'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "when", "group", "property", "is", "missing", "throws", "exception", "(", ")", "{", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "owner", ".", "from", "env", "(", "env", ")", ")", ".", "with", "message", "(", "__STR__", "+", "env", "+", "__STR__", ")", ";", "}"], "token_count": 77, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 16, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.703122+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e43861c32348b86e7e4e505602c309b4270b5db", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvWhenUserPropertyIsMalformedThrowsException", "signature": null, "start_line": 69, "end_line": 76, "nloc": 8, "method_source_normalized": "@TestvoidfromEnvWhenUserPropertyIsMalformedThrowsException(){\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"nope\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Malformed 'CNB_USER_ID' value 'nope' in the builder environment '\" + env + \"'\");\n\t}", "original_code": "@Test\n\tvoid fromEnvWhenUserPropertyIsMalformedThrowsException() {\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"nope\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"456\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Malformed 'CNB_USER_ID' value 'nope' in the builder environment '\" + env + \"'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "when", "user", "property", "is", "malformed", "throws", "exception", "(", ")", "{", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "owner", ".", "from", "env", "(", "env", ")", ")", ".", "with", "message", "(", "__STR__", "+", "env", "+", "__STR__", ")", ";", "}"], "token_count": 86, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 18, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.703425+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d0627954fe08c9bb016e9b4f705d363b7ddfc158", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildOwnerTests.java", "file_blob_sha": null, "method_name": "fromEnvWhenGroupPropertyIsMalformedThrowsException", "signature": null, "start_line": 78, "end_line": 85, "nloc": 8, "method_source_normalized": "@TestvoidfromEnvWhenGroupPropertyIsMalformedThrowsException(){\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"nope\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Malformed 'CNB_GROUP_ID' value 'nope' in the builder environment '\" + env + \"'\");\n\t}", "original_code": "@Test\n\tvoid fromEnvWhenGroupPropertyIsMalformedThrowsException() {\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"CNB_USER_ID\", \"123\");\n\t\tenv.put(\"CNB_GROUP_ID\", \"nope\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildOwner.fromEnv(env))\n\t\t\t.withMessage(\"Malformed 'CNB_GROUP_ID' value 'nope' in the builder environment '\" + env + \"'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "env", "when", "group", "property", "is", "malformed", "throws", "exception", "(", ")", "{", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "owner", ".", "from", "env", "(", "env", ")", ")", ".", "with", "message", "(", "__STR__", "+", "env", "+", "__STR__", ")", ";", "}"], "token_count": 86, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 18, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.703730+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d4745d9d807a5b26c41fa79eeaa343c0df344e34", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageIsNullThrowsException", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "@TestvoidfromImageWhenImageIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> StackId.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> StackId.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "stack", "id", ".", "from", "image", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.704843+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5040cdf5c8138441da5c0d5610d4eaac912ba321", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "fromImageWhenLabelIsMissingHasNoId", "signature": null, "start_line": 44, "end_line": 51, "nloc": 8, "method_source_normalized": "@TestvoidfromImageWhenLabelIsMissingHasNoId(){\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tStackId stackId = StackId.fromImage(image);\n\t\tassertThat(stackId.hasId()).isFalse();\n\t}", "original_code": "@Test\n\tvoid fromImageWhenLabelIsMissingHasNoId() {\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tStackId stackId = StackId.fromImage(image);\n\t\tassertThat(stackId.hasId()).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "label", "is", "missing", "has", "no", "id", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "image", "config", "image", "config", "=", "mock", "(", "image", "config", ".", "class", ")", ";", "given", "(", "image", ".", "get", "config", "(", ")", ")", ".", "will", "return", "(", "image", "config", ")", ";", "stack", "id", "stack", "id", "=", "stack", "id", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "stack", "id", ".", "has", "id", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 87, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 98, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.705142+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d2878f378486a6f72c7e99463003c8798895519e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "fromImageCreatesStackId", "signature": null, "start_line": 53, "end_line": 62, "nloc": 10, "method_source_normalized": "@TestvoidfromImageCreatesStackId(){\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"io.buildpacks.stack.id\", \"test\"));\n\t\tStackId stackId = StackId.fromImage(image);\n\t\tassertThat(stackId).hasToString(\"test\");\n\t\tassertThat(stackId.hasId()).isTrue();\n\t}", "original_code": "@Test\n\tvoid fromImageCreatesStackId() {\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"io.buildpacks.stack.id\", \"test\"));\n\t\tStackId stackId = StackId.fromImage(image);\n\t\tassertThat(stackId).hasToString(\"test\");\n\t\tassertThat(stackId.hasId()).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "creates", "stack", "id", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "image", "config", "image", "config", "=", "mock", "(", "image", "config", ".", "class", ")", ";", "given", "(", "image", ".", "get", "config", "(", ")", ")", ".", "will", "return", "(", "image", "config", ")", ";", "given", "(", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "map", "(", "__STR__", ",", "__STR__", ")", ")", ";", "stack", "id", "stack", "id", "=", "stack", "id", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "stack", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "stack", "id", ".", "has", "id", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 122, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 143, "n_identifiers": 35, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.705473+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3ef4a753dc868b4cb303836a41e1a2a4996f5012", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "ofCreatesStackId", "signature": null, "start_line": 64, "end_line": 68, "nloc": 5, "method_source_normalized": "@TestvoidofCreatesStackId(){\n\t\tStackId stackId = StackId.of(\"test\");\n\t\tassertThat(stackId).hasToString(\"test\");\n\t}", "original_code": "@Test\n\tvoid ofCreatesStackId() {\n\t\tStackId stackId = StackId.of(\"test\");\n\t\tassertThat(stackId).hasToString(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "stack", "id", "(", ")", "{", "stack", "id", "stack", "id", "=", "stack", "id", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "stack", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 38, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.705742+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7e19e3c8c90d4cf18a635da59cd77fbbf13cf50a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 70, "end_line": 77, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tStackId s1 = StackId.of(\"a\");\n\t\tStackId s2 = StackId.of(\"a\");\n\t\tStackId s3 = StackId.of(\"b\");\n\t\tassertThat(s1).hasSameHashCodeAs(s2);\n\t\tassertThat(s1).isEqualTo(s1).isEqualTo(s2).isNotEqualTo(s3);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tStackId s1 = StackId.of(\"a\");\n\t\tStackId s2 = StackId.of(\"a\");\n\t\tStackId s3 = StackId.of(\"b\");\n\t\tassertThat(s1).hasSameHashCodeAs(s2);\n\t\tassertThat(s1).isEqualTo(s1).isEqualTo(s2).isNotEqualTo(s3);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "stack", "id", "s", "1", "=", "stack", "id", ".", "of", "(", "__STR__", ")", ";", "stack", "id", "s", "2", "=", "stack", "id", ".", "of", "(", "__STR__", ")", ";", "stack", "id", "s", "3", "=", "stack", "id", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "s", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "s", "2", ")", ";", "assert", "that", "(", "s", "1", ")", ".", "is", "equal", "to", "(", "s", "1", ")", ".", "is", "equal", "to", "(", "s", "2", ")", ".", "is", "not", "equal", "to", "(", "s", "3", ")", ";", "}"], "token_count": 99, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.706036+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5ebcd53d50b406070674363d01661eced00a537a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/StackIdTests.java", "file_blob_sha": null, "method_name": "toStringReturnsValue", "signature": null, "start_line": 79, "end_line": 83, "nloc": 5, "method_source_normalized": "@TestvoidtoStringReturnsValue(){\n\t\tStackId stackId = StackId.of(\"test\");\n\t\tassertThat(stackId).hasToString(\"test\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsValue() {\n\t\tStackId stackId = StackId.of(\"test\");\n\t\tassertThat(stackId).hasToString(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "value", "(", ")", "{", "stack", "id", "stack", "id", "=", "stack", "id", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "stack", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 38, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.706303+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b9ad6378e2e5211f1138b423dec2e6d602e4fb09", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findsLatestWhenOneMatchesMajor", "signature": null, "start_line": 35, "end_line": 39, "nloc": 5, "method_source_normalized": "@TestvoidfindsLatestWhenOneMatchesMajor(){\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"2.2\").findLatestSupported(\"1.0\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.1\"));\n\t}", "original_code": "@Test\n\tvoid findsLatestWhenOneMatchesMajor() {\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"2.2\").findLatestSupported(\"1.0\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.1\"));\n\t}", "code_tokens": ["@", "test", "void", "finds", "latest", "when", "one", "matches", "major", "(", ")", "{", "api", "version", "version", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ")", ";", "assert", "that", "(", "version", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ";", "}"], "token_count": 53, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.707482+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "92bc088aa3bf034b8dc3e4d7b6ccf01001bc6465", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findsLatestWhenOneMatchesWithReleaseVersions", "signature": null, "start_line": 41, "end_line": 45, "nloc": 5, "method_source_normalized": "@TestvoidfindsLatestWhenOneMatchesWithReleaseVersions(){\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.1\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.2\"));\n\t}", "original_code": "@Test\n\tvoid findsLatestWhenOneMatchesWithReleaseVersions() {\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.1\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.2\"));\n\t}", "code_tokens": ["@", "test", "void", "finds", "latest", "when", "one", "matches", "with", "release", "versions", "(", ")", "{", "api", "version", "version", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ")", ";", "assert", "that", "(", "version", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ";", "}"], "token_count": 55, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.707760+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6499524a8c9056cec018dc7a89ee4973b33619b3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findsLatestWhenOneMatchesWithPreReleaseVersions", "signature": null, "start_line": 47, "end_line": 51, "nloc": 5, "method_source_normalized": "@TestvoidfindsLatestWhenOneMatchesWithPreReleaseVersions(){\n\t\tApiVersion version = ApiVersions.parse(\"0.2\", \"0.3\").findLatestSupported(\"0.2\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"0.2\"));\n\t}", "original_code": "@Test\n\tvoid findsLatestWhenOneMatchesWithPreReleaseVersions() {\n\t\tApiVersion version = ApiVersions.parse(\"0.2\", \"0.3\").findLatestSupported(\"0.2\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"0.2\"));\n\t}", "code_tokens": ["@", "test", "void", "finds", "latest", "when", "one", "matches", "with", "pre", "release", "versions", "(", ")", "{", "api", "version", "version", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ")", ";", "assert", "that", "(", "version", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ";", "}"], "token_count": 56, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.708029+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b53d474c6b1fd1e4a0376d6f26d4842de2a0bd96", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findsLatestWhenMultipleMatchesWithReleaseVersions", "signature": null, "start_line": 53, "end_line": 57, "nloc": 5, "method_source_normalized": "@TestvoidfindsLatestWhenMultipleMatchesWithReleaseVersions(){\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.1\", \"1.2\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.2\"));\n\t}", "original_code": "@Test\n\tvoid findsLatestWhenMultipleMatchesWithReleaseVersions() {\n\t\tApiVersion version = ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.1\", \"1.2\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"1.2\"));\n\t}", "code_tokens": ["@", "test", "void", "finds", "latest", "when", "multiple", "matches", "with", "release", "versions", "(", ")", "{", "api", "version", "version", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "version", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ";", "}"], "token_count": 57, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.708294+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3113dbc88b8022b20eea55bc1f5bfb5d5eadbc6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findsLatestWhenMultipleMatchesWithPreReleaseVersions", "signature": null, "start_line": 59, "end_line": 63, "nloc": 5, "method_source_normalized": "@TestvoidfindsLatestWhenMultipleMatchesWithPreReleaseVersions(){\n\t\tApiVersion version = ApiVersions.parse(\"0.2\", \"0.3\").findLatestSupported(\"0.2\", \"0.3\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"0.3\"));\n\t}", "original_code": "@Test\n\tvoid findsLatestWhenMultipleMatchesWithPreReleaseVersions() {\n\t\tApiVersion version = ApiVersions.parse(\"0.2\", \"0.3\").findLatestSupported(\"0.2\", \"0.3\");\n\t\tassertThat(version).isEqualTo(ApiVersion.parse(\"0.3\"));\n\t}", "code_tokens": ["@", "test", "void", "finds", "latest", "when", "multiple", "matches", "with", "pre", "release", "versions", "(", ")", "{", "api", "version", "version", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "version", ")", ".", "is", "equal", "to", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ";", "}"], "token_count": 58, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.708559+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59a684d31d9a96dd7cec2728f709e16239b4b8e2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "findLatestWhenNoneSupportedThrowsException", "signature": null, "start_line": 65, "end_line": 70, "nloc": 6, "method_source_normalized": "@TestvoidfindLatestWhenNoneSupportedThrowsException(){\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.3\", \"1.4\"))\n\t\t\t.withMessage(\"Detected platform API versions '1.3,1.4' are not included in supported versions '1.1,1.2'\");\n\t}", "original_code": "@Test\n\tvoid findLatestWhenNoneSupportedThrowsException() {\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> ApiVersions.parse(\"1.1\", \"1.2\").findLatestSupported(\"1.3\", \"1.4\"))\n\t\t\t.withMessage(\"Detected platform API versions '1.3,1.4' are not included in supported versions '1.1,1.2'\");\n\t}", "code_tokens": ["@", "test", "void", "find", "latest", "when", "none", "supported", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ".", "find", "latest", "supported", "(", "__STR__", ",", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.708826+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "336c2e565f028822b10e6a758b97569b4bec949c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "createFromRange", "signature": null, "start_line": 72, "end_line": 76, "nloc": 5, "method_source_normalized": "@TestvoidcreateFromRange(){\n\t\tApiVersions versions = ApiVersions.of(1, IntStream.rangeClosed(2, 7));\n\t\tassertThat(versions).hasToString(\"1.2,1.3,1.4,1.5,1.6,1.7\");\n\t}", "original_code": "@Test\n\tvoid createFromRange() {\n\t\tApiVersions versions = ApiVersions.of(1, IntStream.rangeClosed(2, 7));\n\t\tassertThat(versions).hasToString(\"1.2,1.3,1.4,1.5,1.6,1.7\");\n\t}", "code_tokens": ["@", "test", "void", "create", "from", "range", "(", ")", "{", "api", "versions", "versions", "=", "api", "versions", ".", "of", "(", "__NUM__", ",", "int", "stream", ".", "range", "closed", "(", "__NUM__", ",", "__NUM__", ")", ")", ";", "assert", "that", "(", "versions", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.709088+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "07dbe33d3b3cecfa93480bf5d9855762dc52fc54", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "toStringReturnsString", "signature": null, "start_line": 78, "end_line": 81, "nloc": 4, "method_source_normalized": "@TestvoidtoStringReturnsString(){\n\t\tassertThat(ApiVersions.parse(\"1.1\", \"2.2\", \"3.3\")).hasToString(\"1.1,2.2,3.3\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsString() {\n\t\tassertThat(ApiVersions.parse(\"1.1\", \"2.2\", \"3.3\")).hasToString(\"1.1,2.2,3.3\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "string", "(", ")", "{", "assert", "that", "(", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 34, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.709344+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3e3fa1f6e10ffaea11654c971fe14fadfb4a9380", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ApiVersionsTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 83, "end_line": 90, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tApiVersions v12a = ApiVersions.parse(\"1.2\", \"2.3\");\n\t\tApiVersions v12b = ApiVersions.parse(\"1.2\", \"2.3\");\n\t\tApiVersions v13 = ApiVersions.parse(\"1.3\", \"2.4\");\n\t\tassertThat(v12a).hasSameHashCodeAs(v12b);\n\t\tassertThat(v12a).isEqualTo(v12a).isEqualTo(v12b).isNotEqualTo(v13);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tApiVersions v12a = ApiVersions.parse(\"1.2\", \"2.3\");\n\t\tApiVersions v12b = ApiVersions.parse(\"1.2\", \"2.3\");\n\t\tApiVersions v13 = ApiVersions.parse(\"1.3\", \"2.4\");\n\t\tassertThat(v12a).hasSameHashCodeAs(v12b);\n\t\tassertThat(v12a).isEqualTo(v12a).isEqualTo(v12b).isNotEqualTo(v13);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "api", "versions", "v", "12", "a", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ";", "api", "versions", "v", "12", "b", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ";", "api", "versions", "v", "13", "=", "api", "versions", ".", "parse", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "v", "12", "a", ")", ".", "has", "same", "hash", "code", "as", "(", "v", "12", "b", ")", ";", "assert", "that", "(", "v", "12", "a", ")", ".", "is", "equal", "to", "(", "v", "12", "a", ")", ".", "is", "equal", "to", "(", "v", "12", "b", ")", ".", "is", "not", "equal", "to", "(", "v", "13", ")", ";", "}"], "token_count": 112, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 105, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.709642+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "479e0784927854d65559820854c2eaef4c19669d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderExceptionTests.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 30, "end_line": 36, "nloc": 7, "method_source_normalized": "@Testvoidcreate(){\n\t\tBuilderException exception = new BuilderException(\"detector\", 1);\n\t\tassertThat(exception.getOperation()).isEqualTo(\"detector\");\n\t\tassertThat(exception.getStatusCode()).isOne();\n\t\tassertThat(exception.getMessage()).isEqualTo(\"Builder lifecycle 'detector' failed with status code 1\");\n\t}", "original_code": "@Test\n\tvoid create() {\n\t\tBuilderException exception = new BuilderException(\"detector\", 1);\n\t\tassertThat(exception.getOperation()).isEqualTo(\"detector\");\n\t\tassertThat(exception.getStatusCode()).isOne();\n\t\tassertThat(exception.getMessage()).isEqualTo(\"Builder lifecycle 'detector' failed with status code 1\");\n\t}", "code_tokens": ["@", "test", "void", "create", "(", ")", "{", "builder", "exception", "exception", "=", "new", "builder", "exception", "(", "__STR__", ",", "__NUM__", ")", ";", "assert", "that", "(", "exception", ".", "get", "operation", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "status", "code", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.710330+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e5ae14f548ce9a223b6c74f714df8beabce9fbba", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenOperationIsNull", "signature": null, "start_line": 38, "end_line": 44, "nloc": 7, "method_source_normalized": "@TestvoidcreateWhenOperationIsNull(){\n\t\tBuilderException exception = new BuilderException(null, 1);\n\t\tassertThat(exception.getOperation()).isNull();\n\t\tassertThat(exception.getStatusCode()).isOne();\n\t\tassertThat(exception.getMessage()).isEqualTo(\"Builder failed with status code 1\");\n\t}", "original_code": "@Test\n\tvoid createWhenOperationIsNull() {\n\t\tBuilderException exception = new BuilderException(null, 1);\n\t\tassertThat(exception.getOperation()).isNull();\n\t\tassertThat(exception.getStatusCode()).isOne();\n\t\tassertThat(exception.getMessage()).isEqualTo(\"Builder failed with status code 1\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "operation", "is", "null", "(", ")", "{", "builder", "exception", "exception", "=", "new", "builder", "exception", "(", "null", ",", "__NUM__", ")", ";", "assert", "that", "(", "exception", ".", "get", "operation", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "exception", ".", "get", "status", "code", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 76, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 89, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.710627+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7dbc19817dcd2704b04f87be3c559ee42a4ef96e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromToml", "signature": null, "start_line": 43, "end_line": 49, "nloc": 7, "method_source_normalized": "@TestvoidfromToml()throws IOException{\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates\n\t\t\t.fromToml(createTomlStream(\"example/buildpack1\", \"0.0.1\", true, false), this.archive);\n\t\tassertThat(coordinates.getId()).isEqualTo(\"example/buildpack1\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "original_code": "@Test\n\tvoid fromToml() throws IOException {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates\n\t\t\t.fromToml(createTomlStream(\"example/buildpack1\", \"0.0.1\", true, false), this.archive);\n\t\tassertThat(coordinates.getId()).isEqualTo(\"example/buildpack1\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "(", ")", "throws", "io", "exception", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "from", "toml", "(", "create", "toml", "stream", "(", "__STR__", ",", "__STR__", ",", "true", ",", "false", ")", ",", "this", ".", "archive", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 76, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 88, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.712855+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "44c22974083ab43ceeb859f14446a2777b58bfc5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromTomlWhenMissingDescriptorThrowsException", "signature": null, "start_line": 51, "end_line": 57, "nloc": 7, "method_source_normalized": "@TestvoidfromTomlWhenMissingDescriptorThrowsException(){\n\t\tByteArrayInputStream coordinates = new ByteArrayInputStream(\"\".getBytes());\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(this.archive.toString());\n\t}", "original_code": "@Test\n\tvoid fromTomlWhenMissingDescriptorThrowsException() {\n\t\tByteArrayInputStream coordinates = new ByteArrayInputStream(\"\".getBytes());\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(this.archive.toString());\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "when", "missing", "descriptor", "throws", "exception", "(", ")", "{", "byte", "array", "input", "stream", "coordinates", "=", "new", "byte", "array", "input", "stream", "(", "__STR__", ".", "get", "bytes", "(", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "toml", "(", "coordinates", ",", "this", ".", "archive", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "archive", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 84, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 86, "n_identifiers": 16, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.713156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "833ba461318d506fb77db1489b5ce343609f6473", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromTomlWhenMissingIDThrowsException", "signature": null, "start_line": 59, "end_line": 67, "nloc": 9, "method_source_normalized": "@TestvoidfromTomlWhenMissingIDThrowsException()throws IOException{\n\t\ttry (InputStream coordinates = createTomlStream(null, null, true, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain ID\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "original_code": "@Test\n\tvoid fromTomlWhenMissingIDThrowsException() throws IOException {\n\t\ttry (InputStream coordinates = createTomlStream(null, null, true, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain ID\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "when", "missing", "id", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "try", "(", "input", "stream", "coordinates", "=", "create", "toml", "stream", "(", "null", ",", "null", ",", "true", ",", "false", ")", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "toml", "(", "coordinates", ",", "this", ".", "archive", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "archive", ".", "to", "string", "(", ")", ")", ";", "}", "}"], "token_count": 88, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 94, "n_identifiers": 16, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.713453+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5522622e24cbc2697a1552b81f67bbf3d3713938", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromTomlWhenMissingVersionThrowsException", "signature": null, "start_line": 69, "end_line": 77, "nloc": 9, "method_source_normalized": "@TestvoidfromTomlWhenMissingVersionThrowsException()throws IOException{\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", null, true, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain version\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "original_code": "@Test\n\tvoid fromTomlWhenMissingVersionThrowsException() throws IOException {\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", null, true, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain version\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "when", "missing", "version", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "try", "(", "input", "stream", "coordinates", "=", "create", "toml", "stream", "(", "__STR__", ",", "null", ",", "true", ",", "false", ")", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "toml", "(", "coordinates", ",", "this", ".", "archive", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "archive", ".", "to", "string", "(", ")", ")", ";", "}", "}"], "token_count": 88, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 94, "n_identifiers": 16, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.713755+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6ccdc5e1a8c07b16c7fcde607a79080471d3587", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromTomlWhenMissingStacksAndOrderThrowsException", "signature": null, "start_line": 79, "end_line": 87, "nloc": 9, "method_source_normalized": "@TestvoidfromTomlWhenMissingStacksAndOrderThrowsException()throws IOException{\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", \"0.0.1\", false, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain either 'stacks' or 'order'\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "original_code": "@Test\n\tvoid fromTomlWhenMissingStacksAndOrderThrowsException() throws IOException {\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", \"0.0.1\", false, false)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must contain either 'stacks' or 'order'\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "when", "missing", "stacks", "and", "order", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "try", "(", "input", "stream", "coordinates", "=", "create", "toml", "stream", "(", "__STR__", ",", "__STR__", ",", "false", ",", "false", ")", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "toml", "(", "coordinates", ",", "this", ".", "archive", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "archive", ".", "to", "string", "(", ")", ")", ";", "}", "}"], "token_count": 90, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 94, "n_identifiers": 16, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.714378+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cea0a0db416c1a9b311ee7577eebca0771ac4116", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromTomlWhenContainsBothStacksAndOrderThrowsException", "signature": null, "start_line": 89, "end_line": 97, "nloc": 9, "method_source_normalized": "@TestvoidfromTomlWhenContainsBothStacksAndOrderThrowsException()throws IOException{\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", \"0.0.1\", true, true)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must not contain both 'stacks' and 'order'\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "original_code": "@Test\n\tvoid fromTomlWhenContainsBothStacksAndOrderThrowsException() throws IOException {\n\t\ttry (InputStream coordinates = createTomlStream(\"example/buildpack1\", \"0.0.1\", true, true)) {\n\t\t\tassertThatIllegalArgumentException()\n\t\t\t\t.isThrownBy(() -> BuildpackCoordinates.fromToml(coordinates, this.archive))\n\t\t\t\t.withMessageContaining(\"Buildpack descriptor must not contain both 'stacks' and 'order'\")\n\t\t\t\t.withMessageContaining(this.archive.toString());\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "from", "toml", "when", "contains", "both", "stacks", "and", "order", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "try", "(", "input", "stream", "coordinates", "=", "create", "toml", "stream", "(", "__STR__", ",", "__STR__", ",", "true", ",", "true", ")", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "toml", "(", "coordinates", ",", "this", ".", "archive", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "archive", ".", "to", "string", "(", ")", ")", ";", "}", "}"], "token_count": 91, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 94, "n_identifiers": 16, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.714686+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d7ebf4420f2769036bfae12ea1b0abb2ae31a59c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromBuildpackMetadataWhenMetadataIsNullThrowsException", "signature": null, "start_line": 99, "end_line": 103, "nloc": 5, "method_source_normalized": "@TestvoidfromBuildpackMetadataWhenMetadataIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.fromBuildpackMetadata(null))\n\t\t\t.withMessage(\"'buildpackMetadata' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromBuildpackMetadataWhenMetadataIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.fromBuildpackMetadata(null))\n\t\t\t.withMessage(\"'buildpackMetadata' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "buildpack", "metadata", "when", "metadata", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "from", "buildpack", "metadata", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.714954+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "290059ad67d4abbe64b0ad0c8060a481bb12ab1b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "fromBuildpackMetadataReturnsCoordinates", "signature": null, "start_line": 105, "end_line": 111, "nloc": 7, "method_source_normalized": "@TestvoidfromBuildpackMetadataReturnsCoordinates()throws Exception{\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromJson(getContentAsString(\"buildpack-metadata.json\"));\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.fromBuildpackMetadata(metadata);\n\t\tassertThat(coordinates.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "original_code": "@Test\n\tvoid fromBuildpackMetadataReturnsCoordinates() throws Exception {\n\t\tBuildpackMetadata metadata = BuildpackMetadata.fromJson(getContentAsString(\"buildpack-metadata.json\"));\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.fromBuildpackMetadata(metadata);\n\t\tassertThat(coordinates.getId()).isEqualTo(\"example/hello-universe\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"0.0.1\");\n\t}", "code_tokens": ["@", "test", "void", "from", "buildpack", "metadata", "returns", "coordinates", "(", ")", "throws", "exception", "{", "buildpack", "metadata", "metadata", "=", "buildpack", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "from", "buildpack", "metadata", "(", "metadata", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 83, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.715248+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "06bffa9c8631c52dbc5c84fa21ee8d409c03b9c6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "ofWhenIdIsNullThrowsException", "signature": null, "start_line": 113, "end_line": 117, "nloc": 5, "method_source_normalized": "@TestvoidofWhenIdIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.of(null, null))\n\t\t\t.withMessage(\"'id' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenIdIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackCoordinates.of(null, null))\n\t\t\t.withMessage(\"'id' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "id", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "coordinates", ".", "of", "(", "null", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.715512+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b13e024e8a3ea48434348f825b53eed8295acc71", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "ofReturnsCoordinates", "signature": null, "start_line": 119, "end_line": 123, "nloc": 5, "method_source_normalized": "@TestvoidofReturnsCoordinates(){\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates).hasToString(\"id@1\");\n\t}", "original_code": "@Test\n\tvoid ofReturnsCoordinates() {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates).hasToString(\"id@1\");\n\t}", "code_tokens": ["@", "test", "void", "of", "returns", "coordinates", "(", ")", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 37, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.715776+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3332c3dbffb870dd788e65c64b2201e42ef3665d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "getIdReturnsId", "signature": null, "start_line": 125, "end_line": 129, "nloc": 5, "method_source_normalized": "@TestvoidgetIdReturnsId(){\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates.getId()).isEqualTo(\"id\");\n\t}", "original_code": "@Test\n\tvoid getIdReturnsId() {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates.getId()).isEqualTo(\"id\");\n\t}", "code_tokens": ["@", "test", "void", "get", "id", "returns", "id", "(", ")", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "id", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.716039+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e1d39a1488cd66e2822cd1852585383208c335bb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "getVersionReturnsVersion", "signature": null, "start_line": 131, "end_line": 135, "nloc": 5, "method_source_normalized": "@TestvoidgetVersionReturnsVersion(){\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"1\");\n\t}", "original_code": "@Test\n\tvoid getVersionReturnsVersion() {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates.getVersion()).isEqualTo(\"1\");\n\t}", "code_tokens": ["@", "test", "void", "get", "version", "returns", "version", "(", ")", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.716310+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "abf255cafae3bd0e5827e2b2d8d2c07e7ea30ab4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "getVersionWhenVersionIsNullReturnsNull", "signature": null, "start_line": 137, "end_line": 141, "nloc": 5, "method_source_normalized": "@TestvoidgetVersionWhenVersionIsNullReturnsNull(){\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", null);\n\t\tassertThat(coordinates.getVersion()).isNull();\n\t}", "original_code": "@Test\n\tvoid getVersionWhenVersionIsNullReturnsNull() {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", null);\n\t\tassertThat(coordinates.getVersion()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "get", "version", "when", "version", "is", "null", "returns", "null", "(", ")", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "null", ")", ";", "assert", "that", "(", "coordinates", ".", "get", "version", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 45, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.716575+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ecfd8c1da3ebaa3d0e36c17b353adbd58c2d50e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "toStringReturnsNiceString", "signature": null, "start_line": 143, "end_line": 147, "nloc": 5, "method_source_normalized": "@TestvoidtoStringReturnsNiceString(){\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates).hasToString(\"id@1\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsNiceString() {\n\t\tBuildpackCoordinates coordinates = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tassertThat(coordinates).hasToString(\"id@1\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "nice", "string", "(", ")", "{", "buildpack", "coordinates", "coordinates", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "coordinates", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.716833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62c16fc5d9ee2c2d71c544b9893e7bf290472ec3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 149, "end_line": 156, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tBuildpackCoordinates c1a = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tBuildpackCoordinates c1b = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tBuildpackCoordinates c2 = BuildpackCoordinates.of(\"id\", \"2\");\n\t\tassertThat(c1a).isEqualTo(c1a).isEqualTo(c1b).isNotEqualTo(c2);\n\t\tassertThat(c1a).hasSameHashCodeAs(c1b);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tBuildpackCoordinates c1a = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tBuildpackCoordinates c1b = BuildpackCoordinates.of(\"id\", \"1\");\n\t\tBuildpackCoordinates c2 = BuildpackCoordinates.of(\"id\", \"2\");\n\t\tassertThat(c1a).isEqualTo(c1a).isEqualTo(c1b).isNotEqualTo(c2);\n\t\tassertThat(c1a).hasSameHashCodeAs(c1b);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "buildpack", "coordinates", "c", "1", "a", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "buildpack", "coordinates", "c", "1", "b", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "buildpack", "coordinates", "c", "2", "=", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "c", "1", "a", ")", ".", "is", "equal", "to", "(", "c", "1", "a", ")", ".", "is", "equal", "to", "(", "c", "1", "b", ")", ".", "is", "not", "equal", "to", "(", "c", "2", ")", ";", "assert", "that", "(", "c", "1", "a", ")", ".", "has", "same", "hash", "code", "as", "(", "c", "1", "b", ")", ";", "}"], "token_count": 112, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 105, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.717138+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b9da6c9b8fa4df704bde4eed596dbd53232baa65", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackCoordinatesTests.java", "file_blob_sha": null, "method_name": "createTomlStream", "signature": null, "start_line": 158, "end_line": 178, "nloc": 21, "method_source_normalized": "privateInputStreamcreateTomlStream(String id, String version, boolean includeStacks, boolean includeOrder){\n\t\tStringBuilder builder = new StringBuilder();\n\t\tbuilder.append(\"[buildpack]\\n\");\n\t\tif (id != null) {\n\t\t\tbuilder.append(\"id = \\\"\").append(id).append(\"\\\"\\n\");\n\t\t}\n\t\tif (version != null) {\n\t\t\tbuilder.append(\"version = \\\"\").append(version).append(\"\\\"\\n\");\n\t\t}\n\t\tbuilder.append(\"name = \\\"Example buildpack\\\"\\n\");\n\t\tbuilder.append(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\\n\");\n\t\tif (includeStacks) {\n\t\t\tbuilder.append(\"[[stacks]]\\n\");\n\t\t\tbuilder.append(\"id = \\\"io.buildpacks.stacks.bionic\\\"\\n\");\n\t\t}\n\t\tif (includeOrder) {\n\t\t\tbuilder.append(\"[[order]]\\n\");\n\t\t\tbuilder.append(\"group = [ { id = \\\"example/buildpack2\\\", version=\\\"0.0.2\\\" } ]\\n\");\n\t\t}\n\t\treturn new ByteArrayInputStream(builder.toString().getBytes(StandardCharsets.UTF_8));\n\t}", "original_code": "private InputStream createTomlStream(String id, String version, boolean includeStacks, boolean includeOrder) {\n\t\tStringBuilder builder = new StringBuilder();\n\t\tbuilder.append(\"[buildpack]\\n\");\n\t\tif (id != null) {\n\t\t\tbuilder.append(\"id = \\\"\").append(id).append(\"\\\"\\n\");\n\t\t}\n\t\tif (version != null) {\n\t\t\tbuilder.append(\"version = \\\"\").append(version).append(\"\\\"\\n\");\n\t\t}\n\t\tbuilder.append(\"name = \\\"Example buildpack\\\"\\n\");\n\t\tbuilder.append(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\\n\");\n\t\tif (includeStacks) {\n\t\t\tbuilder.append(\"[[stacks]]\\n\");\n\t\t\tbuilder.append(\"id = \\\"io.buildpacks.stacks.bionic\\\"\\n\");\n\t\t}\n\t\tif (includeOrder) {\n\t\t\tbuilder.append(\"[[order]]\\n\");\n\t\t\tbuilder.append(\"group = [ { id = \\\"example/buildpack2\\\", version=\\\"0.0.2\\\" } ]\\n\");\n\t\t}\n\t\treturn new ByteArrayInputStream(builder.toString().getBytes(StandardCharsets.UTF_8));\n\t}", "code_tokens": ["private", "input", "stream", "create", "toml", "stream", "(", "string", "id", ",", "string", "version", ",", "boolean", "include", "stacks", ",", "boolean", "include", "order", ")", "{", "string", "builder", "builder", "=", "new", "string", "builder", "(", ")", ";", "builder", ".", "append", "(", "__STR__", ")", ";", "if", "(", "id", "!=", "null", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ".", "append", "(", "id", ")", ".", "append", "(", "__STR__", ")", ";", "}", "if", "(", "version", "!=", "null", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ".", "append", "(", "version", ")", ".", "append", "(", "__STR__", ")", ";", "}", "builder", ".", "append", "(", "__STR__", ")", ";", "builder", ".", "append", "(", "__STR__", ")", ";", "if", "(", "include", "stacks", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ";", "builder", ".", "append", "(", "__STR__", ")", ";", "}", "if", "(", "include", "order", ")", "{", "builder", ".", "append", "(", "__STR__", ")", ";", "builder", ".", "append", "(", "__STR__", ")", ";", "}", "return", "new", "byte", "array", "input", "stream", "(", "builder", ".", "to", "string", "(", ")", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}"], "token_count": 171, "vocab_size": 37, "cyclomatic_complexity": 5, "ast_node_count": 224, "n_identifiers": 45, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 113, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.717518+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "449bc040733b436a6e89d9220f97996eb677d7e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 87, "end_line": 91, "nloc": 5, "method_source_normalized": "@BeforeEachvoidsetup(){\n\t\tthis.out = new TestPrintStream();\n\t\tthis.docker = mockDockerApi();\n\t}", "original_code": "@BeforeEach\n\tvoid setup() {\n\t\tthis.out = new TestPrintStream();\n\t\tthis.docker = mockDockerApi();\n\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "{", "this", ".", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "this", ".", "docker", "=", "mock", "docker", "api", "(", ")", ";", "}"], "token_count": 30, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 40, "n_identifiers": 6, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.726894+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "70e597671cda6446b55859e717060d5b5c21f085", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeExecutesPhases", "signature": null, "start_line": 93, "end_line": 111, "nloc": 19, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "create", "lifecycle", "(", "trust", "builder", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 255, "vocab_size": 54, "cyclomatic_complexity": 2, "ast_node_count": 303, "n_identifiers": 50, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 78, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.727366+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "82dcaed907df372dfd88ad3abdf9385ff1aa965a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithBindingsExecutesPhases", "signature": null, "start_line": 113, "end_line": 123, "nloc": 11, "method_source_normalized": "@TestvoidexecuteWithBindingsExecutesPhases()throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(true).withBindings(Binding.of(\"/host/src/path:/container/dest/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/volume/path:rw\"));\n\t\tcreateLifecycle(request).execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-bindings.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@Test\n\tvoid executeWithBindingsExecutesPhases() throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(true).withBindings(Binding.of(\"/host/src/path:/container/dest/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/volume/path:rw\"));\n\t\tcreateLifecycle(request).execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-bindings.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "test", "void", "execute", "with", "bindings", "executes", "phases", "(", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "true", ")", ".", "with", "bindings", "(", "binding", ".", "of", "(", "__STR__", ")", ",", "binding", ".", "of", "(", "__STR__", ")", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 192, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 244, "n_identifiers": 45, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.727787+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "70313ca916ef278de8f1dbe7ab695888d0ee0eb7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeExecutesPhasesWithPlatformApi03", "signature": null, "start_line": 125, "end_line": 133, "nloc": 9, "method_source_normalized": "@TestvoidexecuteExecutesPhasesWithPlatformApi03()throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(true, \"builder-metadata-platform-api-0.3.json\").execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-platform-api-0.3.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@Test\n\tvoid executeExecutesPhasesWithPlatformApi03() throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(true, \"builder-metadata-platform-api-0.3.json\").execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-platform-api-0.3.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "test", "void", "execute", "executes", "phases", "with", "platform", "api", "03", "(", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "create", "lifecycle", "(", "true", ",", "__STR__", ")", ".", "execute", "(", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 167, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 211, "n_identifiers": 36, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.728174+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b20af77d01d303fd4175bb0ae1cde75bd79052d3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeOnlyUploadsContentOnce", "signature": null, "start_line": 135, "end_line": 143, "nloc": 9, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteOnlyUploadsContentOnce(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder).execute();\n\t\tassertThat(this.content).hasSize(1);\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeOnlyUploadsContentOnce(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder).execute();\n\t\tassertThat(this.content).hasSize(1);\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "only", "uploads", "content", "once", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "create", "lifecycle", "(", "trust", "builder", ")", ".", "execute", "(", ")", ";", "assert", "that", "(", "this", ".", "content", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "}"], "token_count": 153, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 194, "n_identifiers": 36, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.728554+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bb7fa845e6f80e6d74e014120bcc41cd8e2f97a4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenAlreadyRunThrowsException", "signature": null, "start_line": 145, "end_line": 155, "nloc": 11, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWhenAlreadyRunThrowsException(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tLifecycle lifecycle = createLifecycle(trustBuilder);\n\t\tlifecycle.execute();\n\t\tassertThatIllegalStateException().isThrownBy(lifecycle::execute)\n\t\t\t.withMessage(\"Lifecycle has already been executed\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWhenAlreadyRunThrowsException(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tLifecycle lifecycle = createLifecycle(trustBuilder);\n\t\tlifecycle.execute();\n\t\tassertThatIllegalStateException().isThrownBy(lifecycle::execute)\n\t\t\t.withMessage(\"Lifecycle has already been executed\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "when", "already", "run", "throws", "exception", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "lifecycle", "lifecycle", "=", "create", "lifecycle", "(", "trust", "builder", ")", ";", "lifecycle", ".", "execute", "(", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "lifecycle", "::", "execute", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 168, "vocab_size": 51, "cyclomatic_complexity": 1, "ast_node_count": 207, "n_identifiers": 41, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.729129+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "399d481f832d5cbe6e3cd5a497ac60bf73590f4b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenBuilderReturnsErrorThrowsException", "signature": null, "start_line": 157, "end_line": 166, "nloc": 10, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWhenBuilderReturnsErrorThrowsException(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(9, null));\n\t\tassertThatExceptionOfType(BuilderException.class).isThrownBy(() -> createLifecycle(trustBuilder).execute())\n\t\t\t.withMessage(\n\t\t\t\t\t\"Builder lifecycle '\" + ((trustBuilder) ? \"creator\" : \"analyzer\") + \"' failed with status code 9\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWhenBuilderReturnsErrorThrowsException(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(9, null));\n\t\tassertThatExceptionOfType(BuilderException.class).isThrownBy(() -> createLifecycle(trustBuilder).execute())\n\t\t\t.withMessage(\n\t\t\t\t\t\"Builder lifecycle '\" + ((trustBuilder) ? \"creator\" : \"analyzer\") + \"' failed with status code 9\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "when", "builder", "returns", "error", "throws", "exception", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "assert", "that", "exception", "of", "type", "(", "builder", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "create", "lifecycle", "(", "trust", "builder", ")", ".", "execute", "(", ")", ")", ".", "with", "message", "(", "__STR__", "+", "(", "(", "trust", "builder", ")", "?", "__STR__", ":", "__STR__", ")", "+", "__STR__", ")", ";", "}"], "token_count": 180, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 220, "n_identifiers": 39, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.729580+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b3c457e4c568c51f4f9eb87628470a802e3ee079", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenCleanCacheClearsCache", "signature": null, "start_line": 168, "end_line": 188, "nloc": 21, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWhenCleanCacheClearsCache(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withCleanCache(true);\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-clean-cache.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t\tassertThat(this.out.toString()).contains(\"Skipping restorer because 'cleanCache' is enabled\");\n\t\t}\n\t\tVolumeName name = VolumeName.of(\"pack-cache-b35197ac41ea.build\");\n\t\tthen(this.docker.volume()).should().delete(name, true);\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWhenCleanCacheClearsCache(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withCleanCache(true);\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-clean-cache.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t\tassertThat(this.out.toString()).contains(\"Skipping restorer because 'cleanCache' is enabled\");\n\t\t}\n\t\tVolumeName name = VolumeName.of(\"pack-cache-b35197ac41ea.build\");\n\t\tthen(this.docker.volume()).should().delete(name, true);\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "when", "clean", "cache", "clears", "cache", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "clean", "cache", "(", "true", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}", "volume", "name", "name", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "then", "(", "this", ".", "docker", ".", "volume", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "name", ",", "true", ")", ";", "}"], "token_count": 295, "vocab_size": 66, "cyclomatic_complexity": 2, "ast_node_count": 353, "n_identifiers": 63, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.730037+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e24a6c442425b788f515558584c04231a248b046", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenPlatformApiNotSupportedThrowsException", "signature": null, "start_line": 190, "end_line": 198, "nloc": 9, "method_source_normalized": "@TestvoidexecuteWhenPlatformApiNotSupportedThrowsException()throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> createLifecycle(true, \"builder-metadata-unsupported-api.json\").execute())\n\t\t\t.withMessageContaining(\"Detected platform API versions '0.2' are not included in supported versions\");\n\t}", "original_code": "@Test\n\tvoid executeWhenPlatformApiNotSupportedThrowsException() throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> createLifecycle(true, \"builder-metadata-unsupported-api.json\").execute())\n\t\t\t.withMessageContaining(\"Detected platform API versions '0.2' are not included in supported versions\");\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "platform", "api", "not", "supported", "throws", "exception", "(", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "create", "lifecycle", "(", "true", ",", "__STR__", ")", ".", "execute", "(", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 158, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 195, "n_identifiers": 33, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.730436+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "688647bf8a25c989f0471c0e86a077131f58f192", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenMultiplePlatformApisNotSupportedThrowsException", "signature": null, "start_line": 200, "end_line": 208, "nloc": 9, "method_source_normalized": "@TestvoidexecuteWhenMultiplePlatformApisNotSupportedThrowsException()throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> createLifecycle(true, \"builder-metadata-unsupported-apis.json\").execute())\n\t\t\t.withMessageContaining(\"Detected platform API versions '0.1,0.2' are not included in supported versions\");\n\t}", "original_code": "@Test\n\tvoid executeWhenMultiplePlatformApisNotSupportedThrowsException() throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tassertThatIllegalStateException()\n\t\t\t.isThrownBy(() -> createLifecycle(true, \"builder-metadata-unsupported-apis.json\").execute())\n\t\t\t.withMessageContaining(\"Detected platform API versions '0.1,0.2' are not included in supported versions\");\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "multiple", "platform", "apis", "not", "supported", "throws", "exception", "(", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "create", "lifecycle", "(", "true", ",", "__STR__", ")", ".", "execute", "(", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 159, "vocab_size": 49, "cyclomatic_complexity": 1, "ast_node_count": 195, "n_identifiers": 33, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.730796+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3aec40596829b69e67edcc96b98856531a0c74fb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWhenMultiplePlatformApisSupportedExecutesPhase", "signature": null, "start_line": 210, "end_line": 227, "nloc": 18, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWhenMultiplePlatformApisSupportedExecutesPhase(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder, \"builder-metadata-supported-apis.json\").execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWhenMultiplePlatformApisSupportedExecutesPhase(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tcreateLifecycle(trustBuilder, \"builder-metadata-supported-apis.json\").execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "when", "multiple", "platform", "apis", "supported", "executes", "phase", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "create", "lifecycle", "(", "trust", "builder", ",", "__STR__", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "}"], "token_count": 244, "vocab_size": 53, "cyclomatic_complexity": 2, "ast_node_count": 281, "n_identifiers": 46, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 73, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.731225+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "43a51b3e623f0752499b88eb1d15230dec67eb93", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "closeClearsVolumes", "signature": null, "start_line": 229, "end_line": 234, "nloc": 6, "method_source_normalized": "@TestvoidcloseClearsVolumes()throws Exception{\n\t\tcreateLifecycle(true).close();\n\t\tthen(this.docker.volume()).should().delete(VolumeName.of(\"pack-layers-aaaaaaaaaa\"), true);\n\t\tthen(this.docker.volume()).should().delete(VolumeName.of(\"pack-app-aaaaaaaaaa\"), true);\n\t}", "original_code": "@Test\n\tvoid closeClearsVolumes() throws Exception {\n\t\tcreateLifecycle(true).close();\n\t\tthen(this.docker.volume()).should().delete(VolumeName.of(\"pack-layers-aaaaaaaaaa\"), true);\n\t\tthen(this.docker.volume()).should().delete(VolumeName.of(\"pack-app-aaaaaaaaaa\"), true);\n\t}", "code_tokens": ["@", "test", "void", "close", "clears", "volumes", "(", ")", "throws", "exception", "{", "create", "lifecycle", "(", "true", ")", ".", "close", "(", ")", ";", "then", "(", "this", ".", "docker", ".", "volume", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "volume", "name", ".", "of", "(", "__STR__", ")", ",", "true", ")", ";", "then", "(", "this", ".", "docker", ".", "volume", "(", ")", ")", ".", "should", "(", ")", ".", "delete", "(", "volume", "name", ".", "of", "(", "__STR__", ")", ",", "true", ")", ";", "}"], "token_count": 78, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 108, "n_identifiers": 19, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.731540+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5532a3e9adab8055a633257815eb3be21354e682", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithNetworkExecutesPhases", "signature": null, "start_line": 236, "end_line": 245, "nloc": 10, "method_source_normalized": "@TestvoidexecuteWithNetworkExecutesPhases()throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(true).withNetwork(\"test\");\n\t\tcreateLifecycle(request).execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-network.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@Test\n\tvoid executeWithNetworkExecutesPhases() throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(true).withNetwork(\"test\");\n\t\tcreateLifecycle(request).execute();\n\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-network.json\"));\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "test", "void", "execute", "with", "network", "executes", "phases", "(", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "true", ")", ".", "with", "network", "(", "__STR__", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 180, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 228, "n_identifiers": 41, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.731912+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "77b1cc64dd9c8eeddadcf8cef0041c3c40908eed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithCacheVolumeNamesExecutesPhases", "signature": null, "start_line": 247, "end_line": 268, "nloc": 22, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithCacheVolumeNamesExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withBuildWorkspace(Cache.volume(\"work-volume\"))\n\t\t\t.withBuildCache(Cache.volume(\"build-volume\"))\n\t\t\t.withLaunchCache(Cache.volume(\"launch-volume\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-cache-volumes.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-cache-volumes.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithCacheVolumeNamesExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withBuildWorkspace(Cache.volume(\"work-volume\"))\n\t\t\t.withBuildCache(Cache.volume(\"build-volume\"))\n\t\t\t.withLaunchCache(Cache.volume(\"launch-volume\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-cache-volumes.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-cache-volumes.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-cache-volumes.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "cache", "volume", "names", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "build", "workspace", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ".", "with", "build", "cache", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ".", "with", "launch", "cache", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 306, "vocab_size": 63, "cyclomatic_complexity": 2, "ast_node_count": 357, "n_identifiers": 63, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.732454+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5a9a5627c296448684099ccd40937d51ed6c0afe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithCacheBindMountsExecutesPhases", "signature": null, "start_line": 270, "end_line": 291, "nloc": 22, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithCacheBindMountsExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withBuildWorkspace(Cache.bind(\"/tmp/work\"))\n\t\t\t.withBuildCache(Cache.bind(\"/tmp/build-cache\"))\n\t\t\t.withLaunchCache(Cache.bind(\"/tmp/launch-cache\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-cache-bind-mounts.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-cache-bind-mounts.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithCacheBindMountsExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withBuildWorkspace(Cache.bind(\"/tmp/work\"))\n\t\t\t.withBuildCache(Cache.bind(\"/tmp/build-cache\"))\n\t\t\t.withLaunchCache(Cache.bind(\"/tmp/launch-cache\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-cache-bind-mounts.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-cache-bind-mounts.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-cache-bind-mounts.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "cache", "bind", "mounts", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "build", "workspace", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ".", "with", "build", "cache", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ".", "with", "launch", "cache", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 306, "vocab_size": 63, "cyclomatic_complexity": 2, "ast_node_count": 357, "n_identifiers": 63, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.732960+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f203fa4efc2165c26ecd3c4f6c31abb15d7653d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithCreatedDateExecutesPhases", "signature": null, "start_line": 293, "end_line": 312, "nloc": 20, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithCreatedDateExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withCreatedDate(\"2020-07-01T12:34:56Z\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-created-date.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-created-date.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithCreatedDateExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withCreatedDate(\"2020-07-01T12:34:56Z\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-created-date.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-created-date.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "created", "date", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "created", "date", "(", "__STR__", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 276, "vocab_size": 60, "cyclomatic_complexity": 2, "ast_node_count": 322, "n_identifiers": 55, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 84, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.733448+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e77b6b715d5b0c4ebf84b5e11559594b6bfaea7c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithApplicationDirectoryExecutesPhases", "signature": null, "start_line": 314, "end_line": 333, "nloc": 20, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithApplicationDirectoryExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withApplicationDirectory(\"/application\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-app-dir.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-app-dir.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-app-dir.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-app-dir.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithApplicationDirectoryExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withApplicationDirectory(\"/application\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-app-dir.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector-app-dir.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder-app-dir.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-app-dir.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "application", "directory", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "application", "directory", "(", "__STR__", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 276, "vocab_size": 60, "cyclomatic_complexity": 2, "ast_node_count": 322, "n_identifiers": 55, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 84, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.733973+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c3a63820b052ad15571e4062569d5cbab4d2d1fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithSecurityOptionsExecutesPhases", "signature": null, "start_line": 335, "end_line": 355, "nloc": 21, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithSecurityOptionsExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder)\n\t\t\t.withSecurityOptions(List.of(\"label=user:USER\", \"label=role:ROLE\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-security-opts.json\", true));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-security-opts.json\", true));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-security-opts.json\", true));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-security-opts.json\", true));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithSecurityOptionsExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder)\n\t\t\t.withSecurityOptions(List.of(\"label=user:USER\", \"label=role:ROLE\"));\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-security-opts.json\", true));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-security-opts.json\", true));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-security-opts.json\", true));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-security-opts.json\", true));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "security", "options", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "security", "options", "(", "list", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ",", "true", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ",", "true", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ",", "true", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ",", "true", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 291, "vocab_size": 62, "cyclomatic_complexity": 2, "ast_node_count": 339, "n_identifiers": 57, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 93, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.734490+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7dfaa331d3398519d9bf7461b12a9cd318dabacf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithDockerHostAndRemoteAddressExecutesPhases", "signature": null, "start_line": 357, "end_line": 378, "nloc": 22, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithDockerHostAndRemoteAddressExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder);\n\t\tcreateLifecycle(request,\n\t\t\t\tResolvedDockerHost.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\")))\n\t\t\t.execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-inherit-remote.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-inherit-remote.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-inherit-remote.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-inherit-remote.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithDockerHostAndRemoteAddressExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder);\n\t\tcreateLifecycle(request,\n\t\t\t\tResolvedDockerHost.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\")))\n\t\t\t.execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-inherit-remote.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-inherit-remote.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-inherit-remote.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-inherit-remote.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "docker", "host", "and", "remote", "address", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ";", "create", "lifecycle", "(", "request", ",", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 289, "vocab_size": 67, "cyclomatic_complexity": 2, "ast_node_count": 333, "n_identifiers": 58, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 94, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.735009+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "087364c4942f1f118179a9be7c5be1d07de824b2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithDockerHostAndLocalAddressExecutesPhases", "signature": null, "start_line": 380, "end_line": 400, "nloc": 21, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithDockerHostAndLocalAddressExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder);\n\t\tcreateLifecycle(request, ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(\"/var/alt.sock\")))\n\t\t\t.execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-inherit-local.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-inherit-local.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-inherit-local.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-inherit-local.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithDockerHostAndLocalAddressExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), isNull())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), isNull(), any())).willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder);\n\t\tcreateLifecycle(request, ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(\"/var/alt.sock\")))\n\t\t\t.execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator-inherit-local.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer-inherit-local.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer-inherit-local.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter-inherit-local.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "docker", "host", "and", "local", "address", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ";", "create", "lifecycle", "(", "request", ",", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 289, "vocab_size": 67, "cyclomatic_complexity": 2, "ast_node_count": 333, "n_identifiers": 58, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 90, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.735548+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "103620c8fce4d62349c704dee95cfc34bc81ba0a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "executeWithImagePlatformExecutesPhases", "signature": null, "start_line": 402, "end_line": 423, "nloc": 22, "method_source_normalized": "@ParameterizedTest\n\t@BooleanValueSourcevoidexecuteWithImagePlatformExecutesPhases(boolean trustBuilder)throws Exception{\n\t\tgiven(this.docker.container().create(any(), eq(ImagePlatform.of(\"linux/arm64\"))))\n\t\t\t.willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), eq(ImagePlatform.of(\"linux/arm64\")), any()))\n\t\t\t.willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withImagePlatform(\"linux/arm64\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "original_code": "@ParameterizedTest\n\t@BooleanValueSource\n\tvoid executeWithImagePlatformExecutesPhases(boolean trustBuilder) throws Exception {\n\t\tgiven(this.docker.container().create(any(), eq(ImagePlatform.of(\"linux/arm64\"))))\n\t\t\t.willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().create(any(), eq(ImagePlatform.of(\"linux/arm64\")), any()))\n\t\t\t.willAnswer(answerWithGeneratedContainerId());\n\t\tgiven(this.docker.container().wait(any())).willReturn(ContainerStatus.of(0, null));\n\t\tBuildRequest request = getTestRequest(trustBuilder).withImagePlatform(\"linux/arm64\");\n\t\tcreateLifecycle(request).execute();\n\t\tif (trustBuilder) {\n\t\t\tassertPhaseWasRun(\"creator\", withExpectedConfig(\"lifecycle-creator.json\"));\n\t\t}\n\t\telse {\n\t\t\tassertPhaseWasRun(\"analyzer\", withExpectedConfig(\"lifecycle-analyzer.json\"));\n\t\t\tassertPhaseWasRun(\"detector\", withExpectedConfig(\"lifecycle-detector.json\"));\n\t\t\tassertPhaseWasRun(\"restorer\", withExpectedConfig(\"lifecycle-restorer.json\"));\n\t\t\tassertPhaseWasRun(\"builder\", withExpectedConfig(\"lifecycle-builder.json\"));\n\t\t\tassertPhaseWasRun(\"exporter\", withExpectedConfig(\"lifecycle-exporter.json\"));\n\t\t}\n\t\tassertThat(this.out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "boolean", "value", "source", "void", "execute", "with", "image", "platform", "executes", "phases", "(", "boolean", "trust", "builder", ")", "throws", "exception", "{", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "eq", "(", "image", "platform", ".", "of", "(", "__STR__", ")", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "create", "(", "any", "(", ")", ",", "eq", "(", "image", "platform", ".", "of", "(", "__STR__", ")", ")", ",", "any", "(", ")", ")", ")", ".", "will", "answer", "(", "answer", "with", "generated", "container", "id", "(", ")", ")", ";", "given", "(", "this", ".", "docker", ".", "container", "(", ")", ".", "wait", "(", "any", "(", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", "trust", "builder", ")", ".", "with", "image", "platform", "(", "__STR__", ")", ";", "create", "lifecycle", "(", "request", ")", ".", "execute", "(", ")", ";", "if", "(", "trust", "builder", ")", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "else", "{", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "assert", "phase", "was", "run", "(", "__STR__", ",", "with", "expected", "config", "(", "__STR__", ")", ")", ";", "}", "assert", "that", "(", "this", ".", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 288, "vocab_size": 60, "cyclomatic_complexity": 2, "ast_node_count": 338, "n_identifiers": 59, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.736038+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39ee4cd2ce6418732e5fa0cbd6c1f1fbf7486a75", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "mockDockerApi", "signature": null, "start_line": 425, "end_line": 434, "nloc": 10, "method_source_normalized": "privateDockerApimockDockerApi(){\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "original_code": "private DockerApi mockDockerApi() {\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "code_tokens": ["private", "docker", "api", "mock", "docker", "api", "(", ")", "{", "docker", "api", "docker", "=", "mock", "(", "docker", "api", ".", "class", ")", ";", "image", "api", "image", "api", "=", "mock", "(", "image", "api", ".", "class", ")", ";", "container", "api", "container", "api", "=", "mock", "(", "container", "api", ".", "class", ")", ";", "volume", "api", "volume", "api", "=", "mock", "(", "volume", "api", ".", "class", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ")", ".", "will", "return", "(", "image", "api", ")", ";", "given", "(", "docker", ".", "container", "(", ")", ")", ".", "will", "return", "(", "container", "api", ")", ";", "given", "(", "docker", ".", "volume", "(", ")", ")", ".", "will", "return", "(", "volume", "api", ")", ";", "return", "docker", ";", "}"], "token_count": 112, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 138, "n_identifiers": 38, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.736385+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c9a093dfda6a0f626c9425672d1e8170cd270cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "getTestRequest", "signature": null, "start_line": 436, "end_line": 442, "nloc": 7, "method_source_normalized": "privateBuildRequestgetTestRequest(boolean trustBuilder){\n\t\tTarArchive content = mock(TarArchive.class);\n\t\tImageReference name = ImageReference.of(\"my-application\");\n\t\treturn BuildRequest.of(name, (owner) -> content)\n\t\t\t.withRunImage(ImageReference.of(\"cloudfoundry/run\"))\n\t\t\t.withTrustBuilder(trustBuilder);\n\t}", "original_code": "private BuildRequest getTestRequest(boolean trustBuilder) {\n\t\tTarArchive content = mock(TarArchive.class);\n\t\tImageReference name = ImageReference.of(\"my-application\");\n\t\treturn BuildRequest.of(name, (owner) -> content)\n\t\t\t.withRunImage(ImageReference.of(\"cloudfoundry/run\"))\n\t\t\t.withTrustBuilder(trustBuilder);\n\t}", "code_tokens": ["private", "build", "request", "get", "test", "request", "(", "boolean", "trust", "builder", ")", "{", "tar", "archive", "content", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "image", "reference", "name", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "return", "build", "request", ".", "of", "(", "name", ",", "(", "owner", ")", "->", "content", ")", ".", "with", "run", "image", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "trust", "builder", "(", "trust", "builder", ")", ";", "}"], "token_count": 73, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 83, "n_identifiers": 22, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.736672+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "15414a7e590bf4c56af81466bfca2c22ac51b45f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createLifecycle", "signature": null, "start_line": 444, "end_line": 446, "nloc": 3, "method_source_normalized": "privateLifecyclecreateLifecycle(boolean trustBuilder)throws IOException{\n\t\treturn createLifecycle(getTestRequest(trustBuilder));\n\t}", "original_code": "private Lifecycle createLifecycle(boolean trustBuilder) throws IOException {\n\t\treturn createLifecycle(getTestRequest(trustBuilder));\n\t}", "code_tokens": ["private", "lifecycle", "create", "lifecycle", "(", "boolean", "trust", "builder", ")", "throws", "io", "exception", "{", "return", "create", "lifecycle", "(", "get", "test", "request", "(", "trust", "builder", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 7, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.736923+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d93599b1b97b625a2edb5e90c0468e7c9caeed18", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createLifecycle", "signature": null, "start_line": 448, "end_line": 451, "nloc": 4, "method_source_normalized": "privateLifecyclecreateLifecycle(BuildRequest request)throws IOException{\n\t\tEphemeralBuilder builder = mockEphemeralBuilder();\n\t\treturn createLifecycle(request, builder);\n\t}", "original_code": "private Lifecycle createLifecycle(BuildRequest request) throws IOException {\n\t\tEphemeralBuilder builder = mockEphemeralBuilder();\n\t\treturn createLifecycle(request, builder);\n\t}", "code_tokens": ["private", "lifecycle", "create", "lifecycle", "(", "build", "request", "request", ")", "throws", "io", "exception", "{", "ephemeral", "builder", "builder", "=", "mock", "ephemeral", "builder", "(", ")", ";", "return", "create", "lifecycle", "(", "request", ",", "builder", ")", ";", "}"], "token_count": 33, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 11, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.737156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "28a6058509b1355e74b1dd1e1c336646ddbc994f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createLifecycle", "signature": null, "start_line": 453, "end_line": 456, "nloc": 4, "method_source_normalized": "privateLifecyclecreateLifecycle(boolean trustBuilder, String builderMetadata)throws IOException{\n\t\tEphemeralBuilder builder = mockEphemeralBuilder(builderMetadata);\n\t\treturn createLifecycle(getTestRequest(trustBuilder), builder);\n\t}", "original_code": "private Lifecycle createLifecycle(boolean trustBuilder, String builderMetadata) throws IOException {\n\t\tEphemeralBuilder builder = mockEphemeralBuilder(builderMetadata);\n\t\treturn createLifecycle(getTestRequest(trustBuilder), builder);\n\t}", "code_tokens": ["private", "lifecycle", "create", "lifecycle", "(", "boolean", "trust", "builder", ",", "string", "builder", "metadata", ")", "throws", "io", "exception", "{", "ephemeral", "builder", "builder", "=", "mock", "ephemeral", "builder", "(", "builder", "metadata", ")", ";", "return", "create", "lifecycle", "(", "get", "test", "request", "(", "trust", "builder", ")", ",", "builder", ")", ";", "}"], "token_count": 45, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 14, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.737412+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3f1097e3c8dac0d41d53c73ca5e4ebde363b48f8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createLifecycle", "signature": null, "start_line": 458, "end_line": 461, "nloc": 4, "method_source_normalized": "privateLifecyclecreateLifecycle(BuildRequest request, ResolvedDockerHost dockerHost)throws IOException{\n\t\tEphemeralBuilder builder = mockEphemeralBuilder();\n\t\treturn new TestLifecycle(BuildLog.to(this.out), this.docker, dockerHost, request, builder);\n\t}", "original_code": "private Lifecycle createLifecycle(BuildRequest request, ResolvedDockerHost dockerHost) throws IOException {\n\t\tEphemeralBuilder builder = mockEphemeralBuilder();\n\t\treturn new TestLifecycle(BuildLog.to(this.out), this.docker, dockerHost, request, builder);\n\t}", "code_tokens": ["private", "lifecycle", "create", "lifecycle", "(", "build", "request", "request", ",", "resolved", "docker", "host", "docker", "host", ")", "throws", "io", "exception", "{", "ephemeral", "builder", "builder", "=", "mock", "ephemeral", "builder", "(", ")", ";", "return", "new", "test", "lifecycle", "(", "build", "log", ".", "to", "(", "this", ".", "out", ")", ",", "this", ".", "docker", ",", "docker", "host", ",", "request", ",", "builder", ")", ";", "}"], "token_count": 57, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 63, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.737669+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5addfa6124e111d5c2b260b82eb5a8319212a4bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createLifecycle", "signature": null, "start_line": 463, "end_line": 465, "nloc": 3, "method_source_normalized": "privateLifecyclecreateLifecycle(BuildRequest request, EphemeralBuilder ephemeralBuilder){\n\t\treturn new TestLifecycle(BuildLog.to(this.out), this.docker, null, request, ephemeralBuilder);\n\t}", "original_code": "private Lifecycle createLifecycle(BuildRequest request, EphemeralBuilder ephemeralBuilder) {\n\t\treturn new TestLifecycle(BuildLog.to(this.out), this.docker, null, request, ephemeralBuilder);\n\t}", "code_tokens": ["private", "lifecycle", "create", "lifecycle", "(", "build", "request", "request", ",", "ephemeral", "builder", "ephemeral", "builder", ")", "{", "return", "new", "test", "lifecycle", "(", "build", "log", ".", "to", "(", "this", ".", "out", ")", ",", "this", ".", "docker", ",", "null", ",", "request", ",", "ephemeral", "builder", ")", ";", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.737924+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aad4d62aeee8eea9c05a7076a0e9fde1696bb23d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "mockEphemeralBuilder", "signature": null, "start_line": 467, "end_line": 469, "nloc": 3, "method_source_normalized": "privateEphemeralBuildermockEphemeralBuilder()throws IOException{\n\t\treturn mockEphemeralBuilder(\"builder-metadata.json\");\n\t}", "original_code": "private EphemeralBuilder mockEphemeralBuilder() throws IOException {\n\t\treturn mockEphemeralBuilder(\"builder-metadata.json\");\n\t}", "code_tokens": ["private", "ephemeral", "builder", "mock", "ephemeral", "builder", "(", ")", "throws", "io", "exception", "{", "return", "mock", "ephemeral", "builder", "(", "__STR__", ")", ";", "}"], "token_count": 21, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.738160+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "81d281970bad377076832573290b3744a6e26b23", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "mockEphemeralBuilder", "signature": null, "start_line": 471, "end_line": 478, "nloc": 8, "method_source_normalized": "privateEphemeralBuildermockEphemeralBuilder(String builderMetadata)throws IOException{\n\t\tEphemeralBuilder builder = mock(EphemeralBuilder.class);\n\t\tbyte[] metadataContent = FileCopyUtils.copyToByteArray(getClass().getResourceAsStream(builderMetadata));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(new String(metadataContent, StandardCharsets.UTF_8));\n\t\tgiven(builder.getName()).willReturn(ImageReference.of(\"pack.local/ephemeral-builder\"));\n\t\tgiven(builder.getBuilderMetadata()).willReturn(metadata);\n\t\treturn builder;\n\t}", "original_code": "private EphemeralBuilder mockEphemeralBuilder(String builderMetadata) throws IOException {\n\t\tEphemeralBuilder builder = mock(EphemeralBuilder.class);\n\t\tbyte[] metadataContent = FileCopyUtils.copyToByteArray(getClass().getResourceAsStream(builderMetadata));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(new String(metadataContent, StandardCharsets.UTF_8));\n\t\tgiven(builder.getName()).willReturn(ImageReference.of(\"pack.local/ephemeral-builder\"));\n\t\tgiven(builder.getBuilderMetadata()).willReturn(metadata);\n\t\treturn builder;\n\t}", "code_tokens": ["private", "ephemeral", "builder", "mock", "ephemeral", "builder", "(", "string", "builder", "metadata", ")", "throws", "io", "exception", "{", "ephemeral", "builder", "builder", "=", "mock", "(", "ephemeral", "builder", ".", "class", ")", ";", "byte", "[", "]", "metadata", "content", "=", "file", "copy", "utils", ".", "copy", "to", "byte", "array", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "builder", "metadata", ")", ")", ";", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "json", "(", "new", "string", "(", "metadata", "content", ",", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "given", "(", "builder", ".", "get", "name", "(", ")", ")", ".", "will", "return", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "given", "(", "builder", ".", "get", "builder", "metadata", "(", ")", ")", ".", "will", "return", "(", "metadata", ")", ";", "return", "builder", ";", "}"], "token_count": 124, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 140, "n_identifiers": 36, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.738464+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eef51ee4547201aa617a0dd116a638db1f11b9d5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "answerWithGeneratedContainerId", "signature": null, "start_line": 480, "end_line": 491, "nloc": 12, "method_source_normalized": "privateAnswer<ContainerReference>answerWithGeneratedContainerId(){\n\t\treturn (invocation) -> {\n\t\t\tContainerConfig config = invocation.getArgument(0, ContainerConfig.class);\n\t\t\tArrayNode command = getCommand(config);\n\t\t\tString name = command.get(0).asString().substring(1).replaceAll(\"/\", \"-\");\n\t\t\tthis.configs.put(name, config);\n\t\t\tif (invocation.getArguments().length > 2) {\n\t\t\t\tthis.content.put(name, invocation.getArgument(2, ContainerContent.class));\n\t\t\t}\n\t\t\treturn ContainerReference.of(name);\n\t\t};\n\t}", "original_code": "private Answer<ContainerReference> answerWithGeneratedContainerId() {\n\t\treturn (invocation) -> {\n\t\t\tContainerConfig config = invocation.getArgument(0, ContainerConfig.class);\n\t\t\tArrayNode command = getCommand(config);\n\t\t\tString name = command.get(0).asString().substring(1).replaceAll(\"/\", \"-\");\n\t\t\tthis.configs.put(name, config);\n\t\t\tif (invocation.getArguments().length > 2) {\n\t\t\t\tthis.content.put(name, invocation.getArgument(2, ContainerContent.class));\n\t\t\t}\n\t\t\treturn ContainerReference.of(name);\n\t\t};\n\t}", "code_tokens": ["private", "answer", "<", "container", "reference", ">", "answer", "with", "generated", "container", "id", "(", ")", "{", "return", "(", "invocation", ")", "->", "{", "container", "config", "config", "=", "invocation", ".", "get", "argument", "(", "__NUM__", ",", "container", "config", ".", "class", ")", ";", "array", "node", "command", "=", "get", "command", "(", "config", ")", ";", "string", "name", "=", "command", ".", "get", "(", "__NUM__", ")", ".", "as", "string", "(", ")", ".", "substring", "(", "__NUM__", ")", ".", "replace", "all", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "configs", ".", "put", "(", "name", ",", "config", ")", ";", "if", "(", "invocation", ".", "get", "arguments", "(", ")", ".", "length", ">", "__NUM__", ")", "{", "this", ".", "content", ".", "put", "(", "name", ",", "invocation", ".", "get", "argument", "(", "__NUM__", ",", "container", "content", ".", "class", ")", ")", ";", "}", "return", "container", "reference", ".", "of", "(", "name", ")", ";", "}", ";", "}"], "token_count": 135, "vocab_size": 43, "cyclomatic_complexity": 2, "ast_node_count": 169, "n_identifiers": 38, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 66, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.738804+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "abaaeb6545214cc18c570892ad66e8e7937ad600", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "getCommand", "signature": null, "start_line": 493, "end_line": 496, "nloc": 4, "method_source_normalized": "privateArrayNodegetCommand(ContainerConfig config){\n\t\tJsonNode node = SharedObjectMapper.get().readTree(config.toString());\n\t\treturn (ArrayNode) node.at(\"/Cmd\");\n\t}", "original_code": "private ArrayNode getCommand(ContainerConfig config) {\n\t\tJsonNode node = SharedObjectMapper.get().readTree(config.toString());\n\t\treturn (ArrayNode) node.at(\"/Cmd\");\n\t}", "code_tokens": ["private", "array", "node", "get", "command", "(", "container", "config", "config", ")", "{", "json", "node", "node", "=", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "config", ".", "to", "string", "(", ")", ")", ";", "return", "(", "array", "node", ")", "node", ".", "at", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.739073+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f16a130a0d90b6c4a785f38570f75affdce8c74f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "assertPhaseWasRun", "signature": null, "start_line": 498, "end_line": 504, "nloc": 7, "method_source_normalized": "privatevoidassertPhaseWasRun(String name, IOConsumer<ContainerConfig> configConsumer)throws IOException{\n\t\tContainerReference containerReference = ContainerReference.of(\"cnb-lifecycle-\" + name);\n\t\tthen(this.docker.container()).should().start(containerReference);\n\t\tthen(this.docker.container()).should().logs(eq(containerReference), any());\n\t\tthen(this.docker.container()).should().remove(containerReference, true);\n\t\tconfigConsumer.accept(this.configs.get(containerReference.toString()));\n\t}", "original_code": "private void assertPhaseWasRun(String name, IOConsumer<ContainerConfig> configConsumer) throws IOException {\n\t\tContainerReference containerReference = ContainerReference.of(\"cnb-lifecycle-\" + name);\n\t\tthen(this.docker.container()).should().start(containerReference);\n\t\tthen(this.docker.container()).should().logs(eq(containerReference), any());\n\t\tthen(this.docker.container()).should().remove(containerReference, true);\n\t\tconfigConsumer.accept(this.configs.get(containerReference.toString()));\n\t}", "code_tokens": ["private", "void", "assert", "phase", "was", "run", "(", "string", "name", ",", "io", "consumer", "<", "container", "config", ">", "config", "consumer", ")", "throws", "io", "exception", "{", "container", "reference", "container", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", "+", "name", ")", ";", "then", "(", "this", ".", "docker", ".", "container", "(", ")", ")", ".", "should", "(", ")", ".", "start", "(", "container", "reference", ")", ";", "then", "(", "this", ".", "docker", ".", "container", "(", ")", ")", ".", "should", "(", ")", ".", "logs", "(", "eq", "(", "container", "reference", ")", ",", "any", "(", ")", ")", ";", "then", "(", "this", ".", "docker", ".", "container", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "container", "reference", ",", "true", ")", ";", "config", "consumer", ".", "accept", "(", "this", ".", "configs", ".", "get", "(", "container", "reference", ".", "to", "string", "(", ")", ")", ")", ";", "}"], "token_count": 132, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 172, "n_identifiers": 38, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.739401+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ca3a1f4ed0c0d7322e38b9d26852833b8847fe7f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "withExpectedConfig", "signature": null, "start_line": 506, "end_line": 508, "nloc": 3, "method_source_normalized": "privateIOConsumer<ContainerConfig>withExpectedConfig(String name){\n\t\treturn withExpectedConfig(name, false);\n\t}", "original_code": "private IOConsumer<ContainerConfig> withExpectedConfig(String name) {\n\t\treturn withExpectedConfig(name, false);\n\t}", "code_tokens": ["private", "io", "consumer", "<", "container", "config", ">", "with", "expected", "config", "(", "string", "name", ")", "{", "return", "with", "expected", "config", "(", "name", ",", "false", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 7, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.739661+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2555418b60e6d5e8420efc62738b15715ebfd4da", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "withExpectedConfig", "signature": null, "start_line": 510, "end_line": 526, "nloc": 17, "method_source_normalized": "privateIOConsumer<ContainerConfig>withExpectedConfig(String name, boolean expectSecurityOptAlways){\n\t\treturn (config) -> {\n\t\t\ttry {\n\t\t\t\tInputStream in = getClass().getResourceAsStream(name);\n\t\t\t\tString jsonString = FileCopyUtils.copyToString(new InputStreamReader(in, StandardCharsets.UTF_8));\n\t\t\t\tJSONObject json = new JSONObject(jsonString);\n\t\t\t\tif (!expectSecurityOptAlways && Platform.isWindows()) {\n\t\t\t\t\tJSONObject hostConfig = json.getJSONObject(\"HostConfig\");\n\t\t\t\t\thostConfig.remove(\"SecurityOpt\");\n\t\t\t\t}\n\t\t\t\tJSONAssert.assertEquals(config.toString(), json, true);\n\t\t\t}\n\t\t\tcatch (JSONException ex) {\n\t\t\t\tthrow new IOException(ex);\n\t\t\t}\n\t\t};\n\t}", "original_code": "private IOConsumer<ContainerConfig> withExpectedConfig(String name, boolean expectSecurityOptAlways) {\n\t\treturn (config) -> {\n\t\t\ttry {\n\t\t\t\tInputStream in = getClass().getResourceAsStream(name);\n\t\t\t\tString jsonString = FileCopyUtils.copyToString(new InputStreamReader(in, StandardCharsets.UTF_8));\n\t\t\t\tJSONObject json = new JSONObject(jsonString);\n\t\t\t\tif (!expectSecurityOptAlways && Platform.isWindows()) {\n\t\t\t\t\tJSONObject hostConfig = json.getJSONObject(\"HostConfig\");\n\t\t\t\t\thostConfig.remove(\"SecurityOpt\");\n\t\t\t\t}\n\t\t\t\tJSONAssert.assertEquals(config.toString(), json, true);\n\t\t\t}\n\t\t\tcatch (JSONException ex) {\n\t\t\t\tthrow new IOException(ex);\n\t\t\t}\n\t\t};\n\t}", "code_tokens": ["private", "io", "consumer", "<", "container", "config", ">", "with", "expected", "config", "(", "string", "name", ",", "boolean", "expect", "security", "opt", "always", ")", "{", "return", "(", "config", ")", "->", "{", "try", "{", "input", "stream", "in", "=", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ";", "string", "json", "string", "=", "file", "copy", "utils", ".", "copy", "to", "string", "(", "new", "input", "stream", "reader", "(", "in", ",", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "json", "object", "json", "=", "new", "json", "object", "(", "json", "string", ")", ";", "if", "(", "!", "expect", "security", "opt", "always", "&&", "platform", ".", "is", "windows", "(", ")", ")", "{", "json", "object", "host", "config", "=", "json", ".", "get", "json", "object", "(", "__STR__", ")", ";", "host", "config", ".", "remove", "(", "__STR__", ")", ";", "}", "json", "assert", ".", "assert", "equals", "(", "config", ".", "to", "string", "(", ")", ",", "json", ",", "true", ")", ";", "}", "catch", "(", "json", "exception", "ex", ")", "{", "throw", "new", "io", "exception", "(", "ex", ")", ";", "}", "}", ";", "}"], "token_count": 162, "vocab_size": 62, "cyclomatic_complexity": 4, "ast_node_count": 181, "n_identifiers": 42, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 107, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.740031+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "377b2731898704aac2e62eb936c6b2fae78b9fbe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "TestLifecycle", "signature": null, "start_line": 530, "end_line": 533, "nloc": 4, "method_source_normalized": "TestLifecycle(BuildLog log, DockerApi docker, ResolvedDockerHost dockerHost, BuildRequest request,\n\t\t\t\tEphemeralBuilder builder){\n\t\t\tsuper(log, docker, dockerHost, request, builder);\n\t\t}", "original_code": "TestLifecycle(BuildLog log, DockerApi docker, ResolvedDockerHost dockerHost, BuildRequest request,\n\t\t\t\tEphemeralBuilder builder) {\n\t\t\tsuper(log, docker, dockerHost, request, builder);\n\t\t}", "code_tokens": ["test", "lifecycle", "(", "build", "log", "log", ",", "docker", "api", "docker", ",", "resolved", "docker", "host", "docker", "host", ",", "build", "request", "request", ",", "ephemeral", "builder", "builder", ")", "{", "super", "(", "log", ",", "docker", ",", "docker", "host", ",", "request", ",", "builder", ")", ";", "}"], "token_count": 41, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 16, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.740357+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b74c337ad21499be947bb59137cce06142770a08", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "createRandomVolumeName", "signature": null, "start_line": 535, "end_line": 538, "nloc": 4, "method_source_normalized": "@Override\n\t\tprotectedVolumeNamecreateRandomVolumeName(String prefix){\n\t\t\treturn VolumeName.of(prefix + \"aaaaaaaaaa\");\n\t\t}", "original_code": "@Override\n\t\tprotected VolumeName createRandomVolumeName(String prefix) {\n\t\t\treturn VolumeName.of(prefix + \"aaaaaaaaaa\");\n\t\t}", "code_tokens": ["@", "override", "protected", "volume", "name", "create", "random", "volume", "name", "(", "string", "prefix", ")", "{", "return", "volume", "name", ".", "of", "(", "prefix", "+", "__STR__", ")", ";", "}"], "token_count": 26, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 31, "n_identifiers": 8, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.740602+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dbcb941d032ed1e20710f0ba553a886785f951c8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "TestPrintStream", "signature": null, "start_line": 544, "end_line": 546, "nloc": 3, "method_source_normalized": "TestPrintStream(){\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "original_code": "TestPrintStream() {\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "code_tokens": ["test", "print", "stream", "(", ")", "{", "super", "(", "new", "byte", "array", "output", "stream", "(", ")", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 2, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.740883+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "13eb0782116e7312513e9f5e545e364bf57a07bc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 548, "end_line": 551, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.out.toString();\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.out.toString();\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "out", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.741107+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a05544bed0598e6b5006cb1d0652f5221c35a0e6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 80, "end_line": 88, "nloc": 9, "method_source_normalized": "@BeforeEachvoidsetup()throws Exception{\n\t\tthis.image = Image.of(getContent(\"image.json\"));\n\t\tthis.targetImage = ImageReference.of(\"my-image:latest\");\n\t\tthis.metadata = BuilderMetadata.fromImage(this.image);\n\t\tthis.env = new HashMap<>();\n\t\tthis.env.put(\"spring\", \"boot\");\n\t\tthis.env.put(\"empty\", null);\n\t}", "original_code": "@BeforeEach\n\tvoid setup() throws Exception {\n\t\tthis.image = Image.of(getContent(\"image.json\"));\n\t\tthis.targetImage = ImageReference.of(\"my-image:latest\");\n\t\tthis.metadata = BuilderMetadata.fromImage(this.image);\n\t\tthis.env = new HashMap<>();\n\t\tthis.env.put(\"spring\", \"boot\");\n\t\tthis.env.put(\"empty\", null);\n\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "throws", "exception", "{", "this", ".", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "this", ".", "target", "image", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "this", ".", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "this", ".", "image", ")", ";", "this", ".", "env", "=", "new", "hash", "map", "<", ">", "(", ")", ";", "this", ".", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "env", ".", "put", "(", "__STR__", ",", "null", ")", ";", "}"], "token_count": 88, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 120, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.744764+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "da02d0a4f1a6bba288948fe9a12d917530c4d414", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getNameHasRandomName", "signature": null, "start_line": 90, "end_line": 98, "nloc": 9, "method_source_normalized": "@TestvoidgetNameHasRandomName(){\n\t\tEphemeralBuilder b1 = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tEphemeralBuilder b2 = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tassertThat(b1.getName().toString()).startsWith(\"pack.local/builder/\").endsWith(\":latest\");\n\t\tassertThat(b1.getName().toString()).isNotEqualTo(b2.getName().toString());\n\t}", "original_code": "@Test\n\tvoid getNameHasRandomName() {\n\t\tEphemeralBuilder b1 = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tEphemeralBuilder b2 = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tassertThat(b1.getName().toString()).startsWith(\"pack.local/builder/\").endsWith(\":latest\");\n\t\tassertThat(b1.getName().toString()).isNotEqualTo(b2.getName().toString());\n\t}", "code_tokens": ["@", "test", "void", "get", "name", "has", "random", "name", "(", ")", "{", "ephemeral", "builder", "b", "1", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "ephemeral", "builder", "b", "2", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "assert", "that", "(", "b", "1", ".", "get", "name", "(", ")", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "ends", "with", "(", "__STR__", ")", ";", "assert", "that", "(", "b", "1", ".", "get", "name", "(", ")", ".", "to", "string", "(", ")", ")", ".", "is", "not", "equal", "to", "(", "b", "2", ".", "get", "name", "(", ")", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 155, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 178, "n_identifiers": 36, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.745119+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5c90d94d7e0620cd412706a113c2ca4367d49799", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveHasCreatedByConfig", "signature": null, "start_line": 100, "end_line": 108, "nloc": 9, "method_source_normalized": "@TestvoidgetArchiveHasCreatedByConfig()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageConfig config = builder.getArchive(null).getImageConfig();\n\t\tBuilderMetadata ephemeralMetadata = BuilderMetadata.fromImageConfig(config);\n\t\tassertThat(ephemeralMetadata.getCreatedBy().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(ephemeralMetadata.getCreatedBy().getVersion()).isEqualTo(\"dev\");\n\t}", "original_code": "@Test\n\tvoid getArchiveHasCreatedByConfig() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageConfig config = builder.getArchive(null).getImageConfig();\n\t\tBuilderMetadata ephemeralMetadata = BuilderMetadata.fromImageConfig(config);\n\t\tassertThat(ephemeralMetadata.getCreatedBy().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(ephemeralMetadata.getCreatedBy().getVersion()).isEqualTo(\"dev\");\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "has", "created", "by", "config", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "image", "config", "config", "=", "builder", ".", "get", "archive", "(", "null", ")", ".", "get", "image", "config", "(", ")", ";", "builder", "metadata", "ephemeral", "metadata", "=", "builder", "metadata", ".", "from", "image", "config", "(", "config", ")", ";", "assert", "that", "(", "ephemeral", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "ephemeral", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 136, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 150, "n_identifiers": 33, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.745466+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5fd310b9b7d5cedc2b36df24a470c227bc6f2ace", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveHasTag", "signature": null, "start_line": 110, "end_line": 116, "nloc": 7, "method_source_normalized": "@TestvoidgetArchiveHasTag()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageReference tag = builder.getArchive(null).getTag();\n\t\tassertThat(tag.toString()).startsWith(\"pack.local/builder/\").endsWith(\":latest\");\n\t}", "original_code": "@Test\n\tvoid getArchiveHasTag() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageReference tag = builder.getArchive(null).getTag();\n\t\tassertThat(tag.toString()).startsWith(\"pack.local/builder/\").endsWith(\":latest\");\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "has", "tag", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "image", "reference", "tag", "=", "builder", ".", "get", "archive", "(", "null", ")", ".", "get", "tag", "(", ")", ";", "assert", "that", "(", "tag", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "ends", "with", "(", "__STR__", ")", ";", "}"], "token_count": 91, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 110, "n_identifiers": 23, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.745846+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b27b2cbc3df4a316475e76ca9c5d49e8725a1d21", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveHasFixedCreatedDate", "signature": null, "start_line": 118, "end_line": 130, "nloc": 13, "method_source_normalized": "@TestvoidgetArchiveHasFixedCreatedDate()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tInstant createInstant = builder.getArchive(null).getCreateDate();\n\t\tOffsetDateTime createDateTime = OffsetDateTime.ofInstant(createInstant, ZoneId.of(\"UTC\"));\n\t\tassertThat(createDateTime.getYear()).isEqualTo(1980);\n\t\tassertThat(createDateTime.getMonthValue()).isOne();\n\t\tassertThat(createDateTime.getDayOfMonth()).isOne();\n\t\tassertThat(createDateTime.getHour()).isZero();\n\t\tassertThat(createDateTime.getMinute()).isZero();\n\t\tassertThat(createDateTime.getSecond()).isOne();\n\t}", "original_code": "@Test\n\tvoid getArchiveHasFixedCreatedDate() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tInstant createInstant = builder.getArchive(null).getCreateDate();\n\t\tOffsetDateTime createDateTime = OffsetDateTime.ofInstant(createInstant, ZoneId.of(\"UTC\"));\n\t\tassertThat(createDateTime.getYear()).isEqualTo(1980);\n\t\tassertThat(createDateTime.getMonthValue()).isOne();\n\t\tassertThat(createDateTime.getDayOfMonth()).isOne();\n\t\tassertThat(createDateTime.getHour()).isZero();\n\t\tassertThat(createDateTime.getMinute()).isZero();\n\t\tassertThat(createDateTime.getSecond()).isOne();\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "has", "fixed", "created", "date", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "instant", "create", "instant", "=", "builder", ".", "get", "archive", "(", "null", ")", ".", "get", "create", "date", "(", ")", ";", "offset", "date", "time", "create", "date", "time", "=", "offset", "date", "time", ".", "of", "instant", "(", "create", "instant", ",", "zone", "id", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "year", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "month", "value", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "day", "of", "month", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "hour", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "minute", "(", ")", ")", ".", "is", "zero", "(", ")", ";", "assert", "that", "(", "create", "date", "time", ".", "get", "second", "(", ")", ")", ".", "is", "one", "(", ")", ";", "}"], "token_count": 210, "vocab_size": 54, "cyclomatic_complexity": 1, "ast_node_count": 226, "n_identifiers": 49, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.746220+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "441d9acbda7e015ce6a4cf30b311ec80bdebbe1b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveContainsEnvLayer", "signature": null, "start_line": 132, "end_line": 139, "nloc": 8, "method_source_normalized": "@TestvoidgetArchiveContainsEnvLayer()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tFile directory = unpack(getLayer(builder.getArchive(null), EXISTING_IMAGE_LAYER_COUNT), \"env\");\n\t\tassertThat(new File(directory, \"platform/env/spring\")).usingCharset(StandardCharsets.UTF_8).hasContent(\"boot\");\n\t\tassertThat(new File(directory, \"platform/env/empty\")).usingCharset(StandardCharsets.UTF_8).hasContent(\"\");\n\t}", "original_code": "@Test\n\tvoid getArchiveContainsEnvLayer() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tFile directory = unpack(getLayer(builder.getArchive(null), EXISTING_IMAGE_LAYER_COUNT), \"env\");\n\t\tassertThat(new File(directory, \"platform/env/spring\")).usingCharset(StandardCharsets.UTF_8).hasContent(\"boot\");\n\t\tassertThat(new File(directory, \"platform/env/empty\")).usingCharset(StandardCharsets.UTF_8).hasContent(\"\");\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "contains", "env", "layer", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "file", "directory", "=", "unpack", "(", "get", "layer", "(", "builder", ".", "get", "archive", "(", "null", ")", ",", "existing", "image", "layer", "count", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "new", "file", "(", "directory", ",", "__STR__", ")", ")", ".", "using", "charset", "(", "standard", "charsets", ".", "utf", "8", ")", ".", "has", "content", "(", "__STR__", ")", ";", "assert", "that", "(", "new", "file", "(", "directory", ",", "__STR__", ")", ")", ".", "using", "charset", "(", "standard", "charsets", ".", "utf", "8", ")", ".", "has", "content", "(", "__STR__", ")", ";", "}"], "token_count": 133, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 156, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.746573+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e15b765e22a31b979a2c5f39f63714bdcf53402", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveHasBuilderForLabel", "signature": null, "start_line": 141, "end_line": 148, "nloc": 8, "method_source_normalized": "@TestvoidgetArchiveHasBuilderForLabel()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageConfig config = builder.getArchive(null).getImageConfig();\n\t\tassertThat(config.getLabels())\n\t\t\t.contains(entry(EphemeralBuilder.BUILDER_FOR_LABEL_NAME, this.targetImage.toString()));\n\t}", "original_code": "@Test\n\tvoid getArchiveHasBuilderForLabel() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tImageConfig config = builder.getArchive(null).getImageConfig();\n\t\tassertThat(config.getLabels())\n\t\t\t.contains(entry(EphemeralBuilder.BUILDER_FOR_LABEL_NAME, this.targetImage.toString()));\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "has", "builder", "for", "label", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "image", "config", "config", "=", "builder", ".", "get", "archive", "(", "null", ")", ".", "get", "image", "config", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "labels", "(", ")", ")", ".", "contains", "(", "entry", "(", "ephemeral", "builder", ".", "builder", "for", "label", "name", ",", "this", ".", "target", "image", ".", "to", "string", "(", ")", ")", ")", ";", "}"], "token_count": 106, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 122, "n_identifiers": 27, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.746905+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bd973f58c3ebbc6d050ce83691e588d7e454b99a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveContainsBuildpackLayers", "signature": null, "start_line": 150, "end_line": 168, "nloc": 19, "method_source_normalized": "@TestvoidgetArchiveContainsBuildpackLayers()throws Exception{\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack3\", \"0.0.3\"));\n\t\tthis.buildpacks = Buildpacks.of(buildpackList);\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, null, this.buildpacks);\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack1/0.0.1/buildpack.toml\");\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT + 1,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack2/0.0.2/buildpack.toml\");\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT + 2,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack3/0.0.3/buildpack.toml\");\n\t\tFile orderDirectory = unpack(getLayer(builder.getArchive(null), EXISTING_IMAGE_LAYER_COUNT + 3), \"order\");\n\t\tassertThat(new File(orderDirectory, \"cnb/order.toml\")).usingCharset(StandardCharsets.UTF_8)\n\t\t\t.hasContent(content(\"order.toml\"));\n\t}", "original_code": "@Test\n\tvoid getArchiveContainsBuildpackLayers() throws Exception {\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack3\", \"0.0.3\"));\n\t\tthis.buildpacks = Buildpacks.of(buildpackList);\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, null, this.buildpacks);\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack1/0.0.1/buildpack.toml\");\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT + 1,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack2/0.0.2/buildpack.toml\");\n\t\tassertBuildpackLayerContent(builder, EXISTING_IMAGE_LAYER_COUNT + 2,\n\t\t\t\t\"/cnb/buildpacks/example_buildpack3/0.0.3/buildpack.toml\");\n\t\tFile orderDirectory = unpack(getLayer(builder.getArchive(null), EXISTING_IMAGE_LAYER_COUNT + 3), \"order\");\n\t\tassertThat(new File(orderDirectory, \"cnb/order.toml\")).usingCharset(StandardCharsets.UTF_8)\n\t\t\t.hasContent(content(\"order.toml\"));\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "contains", "buildpack", "layers", "(", ")", "throws", "exception", "{", "list", "<", "buildpack", ">", "buildpack", "list", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "this", ".", "buildpacks", "=", "buildpacks", ".", "of", "(", "buildpack", "list", ")", ";", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "null", ",", "this", ".", "buildpacks", ")", ";", "assert", "buildpack", "layer", "content", "(", "builder", ",", "existing", "image", "layer", "count", ",", "__STR__", ")", ";", "assert", "buildpack", "layer", "content", "(", "builder", ",", "existing", "image", "layer", "count", "+", "__NUM__", ",", "__STR__", ")", ";", "assert", "buildpack", "layer", "content", "(", "builder", ",", "existing", "image", "layer", "count", "+", "__NUM__", ",", "__STR__", ")", ";", "file", "order", "directory", "=", "unpack", "(", "get", "layer", "(", "builder", ".", "get", "archive", "(", "null", ")", ",", "existing", "image", "layer", "count", "+", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "new", "file", "(", "order", "directory", ",", "__STR__", ")", ")", ".", "using", "charset", "(", "standard", "charsets", ".", "utf", "8", ")", ".", "has", "content", "(", "content", "(", "__STR__", ")", ")", ";", "}"], "token_count": 231, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 261, "n_identifiers": 53, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 102, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.747322+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b0880a737e780c0e12646d6d6d33d75a7a4b727a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getArchiveHasApplicationDirectoryLayer", "signature": null, "start_line": 170, "end_line": 176, "nloc": 7, "method_source_normalized": "@TestvoidgetArchiveHasApplicationDirectoryLayer()throws Exception{\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tFile directory = unpack(getLayer(builder.getArchive(\"/myapp\"), EXISTING_IMAGE_LAYER_COUNT + 1), \"appdir\");\n\t\tassertThat(new File(directory, \"myapp\")).isDirectory();\n\t}", "original_code": "@Test\n\tvoid getArchiveHasApplicationDirectoryLayer() throws Exception {\n\t\tEphemeralBuilder builder = new EphemeralBuilder(this.owner, this.image, this.targetImage, this.metadata,\n\t\t\t\tthis.creator, this.env, this.buildpacks);\n\t\tFile directory = unpack(getLayer(builder.getArchive(\"/myapp\"), EXISTING_IMAGE_LAYER_COUNT + 1), \"appdir\");\n\t\tassertThat(new File(directory, \"myapp\")).isDirectory();\n\t}", "code_tokens": ["@", "test", "void", "get", "archive", "has", "application", "directory", "layer", "(", ")", "throws", "exception", "{", "ephemeral", "builder", "builder", "=", "new", "ephemeral", "builder", "(", "this", ".", "owner", ",", "this", ".", "image", ",", "this", ".", "target", "image", ",", "this", ".", "metadata", ",", "this", ".", "creator", ",", "this", ".", "env", ",", "this", ".", "buildpacks", ")", ";", "file", "directory", "=", "unpack", "(", "get", "layer", "(", "builder", ".", "get", "archive", "(", "__STR__", ")", ",", "existing", "image", "layer", "count", "+", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "new", "file", "(", "directory", ",", "__STR__", ")", ")", ".", "is", "directory", "(", ")", ";", "}"], "token_count": 97, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 115, "n_identifiers": 24, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.747741+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9eb5831c36f23bee6116afe573e9e6c500538093", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "assertBuildpackLayerContent", "signature": null, "start_line": 178, "end_line": 181, "nloc": 4, "method_source_normalized": "privatevoidassertBuildpackLayerContent(EphemeralBuilder builder, int index, String s)throws Exception{\n\t\tFile buildpackDirectory = unpack(getLayer(builder.getArchive(null), index), \"buildpack\");\n\t\tassertThat(new File(buildpackDirectory, s)).usingCharset(StandardCharsets.UTF_8).hasContent(\"[test]\");\n\t}", "original_code": "private void assertBuildpackLayerContent(EphemeralBuilder builder, int index, String s) throws Exception {\n\t\tFile buildpackDirectory = unpack(getLayer(builder.getArchive(null), index), \"buildpack\");\n\t\tassertThat(new File(buildpackDirectory, s)).usingCharset(StandardCharsets.UTF_8).hasContent(\"[test]\");\n\t}", "code_tokens": ["private", "void", "assert", "buildpack", "layer", "content", "(", "ephemeral", "builder", "builder", ",", "int", "index", ",", "string", "s", ")", "throws", "exception", "{", "file", "buildpack", "directory", "=", "unpack", "(", "get", "layer", "(", "builder", ".", "get", "archive", "(", "null", ")", ",", "index", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "new", "file", "(", "buildpack", "directory", ",", "s", ")", ")", ".", "using", "charset", "(", "standard", "charsets", ".", "utf", "8", ")", ".", "has", "content", "(", "__STR__", ")", ";", "}"], "token_count": 73, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 22, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.748034+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "708dcde81656f4be48ed31ca38cc5a79322d944a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "getLayer", "signature": null, "start_line": 183, "end_line": 191, "nloc": 9, "method_source_normalized": "privateTarArchiveInputStreamgetLayer(ImageArchive archive, int index)throws Exception{\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tarchive.writeTo(outputStream);\n\t\tTarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(outputStream.toByteArray()));\n\t\tfor (int i = 0; i <= index; i++) {\n\t\t\ttar.getNextEntry();\n\t\t}\n\t\treturn new TarArchiveInputStream(tar);\n\t}", "original_code": "private TarArchiveInputStream getLayer(ImageArchive archive, int index) throws Exception {\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tarchive.writeTo(outputStream);\n\t\tTarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(outputStream.toByteArray()));\n\t\tfor (int i = 0; i <= index; i++) {\n\t\t\ttar.getNextEntry();\n\t\t}\n\t\treturn new TarArchiveInputStream(tar);\n\t}", "code_tokens": ["private", "tar", "archive", "input", "stream", "get", "layer", "(", "image", "archive", "archive", ",", "int", "index", ")", "throws", "exception", "{", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "archive", ".", "write", "to", "(", "output", "stream", ")", ";", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ";", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<=", "index", ";", "i", "++", ")", "{", "tar", ".", "get", "next", "entry", "(", ")", ";", "}", "return", "new", "tar", "archive", "input", "stream", "(", "tar", ")", ";", "}"], "token_count": 106, "vocab_size": 34, "cyclomatic_complexity": 2, "ast_node_count": 111, "n_identifiers": 26, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 52, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.748348+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3222fffffa7c25957e6ca32c451b2c21e6414005", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "unpack", "signature": null, "start_line": 193, "end_line": 211, "nloc": 19, "method_source_normalized": "privateFileunpack(TarArchiveInputStream archive, String name)throws Exception{\n\t\tFile directory = new File(this.temp, name);\n\t\tdirectory.mkdirs();\n\t\tArchiveEntry entry = archive.getNextEntry();\n\t\twhile (entry != null) {\n\t\t\tFile file = new File(directory, entry.getName());\n\t\t\tif (entry.isDirectory()) {\n\t\t\t\tfile.mkdirs();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfile.getParentFile().mkdirs();\n\t\t\t\ttry (OutputStream out = new FileOutputStream(file)) {\n\t\t\t\t\tStreamUtils.copy(archive, out);\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry = archive.getNextEntry();\n\t\t}\n\t\treturn directory;\n\t}", "original_code": "private File unpack(TarArchiveInputStream archive, String name) throws Exception {\n\t\tFile directory = new File(this.temp, name);\n\t\tdirectory.mkdirs();\n\t\tArchiveEntry entry = archive.getNextEntry();\n\t\twhile (entry != null) {\n\t\t\tFile file = new File(directory, entry.getName());\n\t\t\tif (entry.isDirectory()) {\n\t\t\t\tfile.mkdirs();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfile.getParentFile().mkdirs();\n\t\t\t\ttry (OutputStream out = new FileOutputStream(file)) {\n\t\t\t\t\tStreamUtils.copy(archive, out);\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry = archive.getNextEntry();\n\t\t}\n\t\treturn directory;\n\t}", "code_tokens": ["private", "file", "unpack", "(", "tar", "archive", "input", "stream", "archive", ",", "string", "name", ")", "throws", "exception", "{", "file", "directory", "=", "new", "file", "(", "this", ".", "temp", ",", "name", ")", ";", "directory", ".", "mkdirs", "(", ")", ";", "archive", "entry", "entry", "=", "archive", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "file", "file", "=", "new", "file", "(", "directory", ",", "entry", ".", "get", "name", "(", ")", ")", ";", "if", "(", "entry", ".", "is", "directory", "(", ")", ")", "{", "file", ".", "mkdirs", "(", ")", ";", "}", "else", "{", "file", ".", "get", "parent", "file", "(", ")", ".", "mkdirs", "(", ")", ";", "try", "(", "output", "stream", "out", "=", "new", "file", "output", "stream", "(", "file", ")", ")", "{", "stream", "utils", ".", "copy", "(", "archive", ",", "out", ")", ";", "}", "}", "entry", "=", "archive", ".", "get", "next", "entry", "(", ")", ";", "}", "return", "directory", ";", "}"], "token_count": 143, "vocab_size": 40, "cyclomatic_complexity": 3, "ast_node_count": 184, "n_identifiers": 44, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 108, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.748698+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "15df69325d77823dee3f056d3304aa526695fd63", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/EphemeralBuilderTests.java", "file_blob_sha": null, "method_name": "content", "signature": null, "start_line": 213, "end_line": 216, "nloc": 4, "method_source_normalized": "privateStringcontent(String fileName)throws IOException{\n\t\tInputStream in = getClass().getResourceAsStream(fileName);\n\t\treturn FileCopyUtils.copyToString(new InputStreamReader(in, StandardCharsets.UTF_8));\n\t}", "original_code": "private String content(String fileName) throws IOException {\n\t\tInputStream in = getClass().getResourceAsStream(fileName);\n\t\treturn FileCopyUtils.copyToString(new InputStreamReader(in, StandardCharsets.UTF_8));\n\t}", "code_tokens": ["private", "string", "content", "(", "string", "file", "name", ")", "throws", "io", "exception", "{", "input", "stream", "in", "=", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "file", "name", ")", ";", "return", "file", "copy", "utils", ".", "copy", "to", "string", "(", "new", "input", "stream", "reader", "(", "in", ",", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "}"], "token_count": 55, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.748985+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ae99991b3532ad367571bea8952819f5ad10e8e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenValueIsNullThrowsException", "signature": null, "start_line": 31, "end_line": 35, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenValueIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid parseWhenValueIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "value", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "lifecycle", "version", ".", "parse", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.750025+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "903b0e021c94d1f60564167bd1e26347b9629649", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenTooLongThrowsException", "signature": null, "start_line": 37, "end_line": 41, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenTooLongThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(\"v1.2.3.4\"))\n\t\t\t.withMessage(\"'value' [v1.2.3.4] must be a valid version number\");\n\t}", "original_code": "@Test\n\tvoid parseWhenTooLongThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(\"v1.2.3.4\"))\n\t\t\t.withMessage(\"'value' [v1.2.3.4] must be a valid version number\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "too", "long", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.750307+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed293a130412344f47aa5c469328760611cba028", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenNonNumericThrowsException", "signature": null, "start_line": 43, "end_line": 47, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenNonNumericThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(\"v1.2.3a\"))\n\t\t\t.withMessage(\"'value' [v1.2.3a] must be a valid version number\");\n\t}", "original_code": "@Test\n\tvoid parseWhenNonNumericThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LifecycleVersion.parse(\"v1.2.3a\"))\n\t\t\t.withMessage(\"'value' [v1.2.3a] must be a valid version number\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "non", "numeric", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.750574+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "58099661c7a44a6395b777eead88f1c49097c31c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "compareTo", "signature": null, "start_line": 49, "end_line": 55, "nloc": 7, "method_source_normalized": "@TestvoidcompareTo(){\n\t\tLifecycleVersion v4 = LifecycleVersion.parse(\"0.0.4\");\n\t\tassertThat(LifecycleVersion.parse(\"0.0.3\")).isLessThan(v4);\n\t\tassertThat(LifecycleVersion.parse(\"0.0.4\")).isEqualByComparingTo(v4);\n\t\tassertThat(LifecycleVersion.parse(\"0.0.5\")).isGreaterThan(v4);\n\t}", "original_code": "@Test\n\tvoid compareTo() {\n\t\tLifecycleVersion v4 = LifecycleVersion.parse(\"0.0.4\");\n\t\tassertThat(LifecycleVersion.parse(\"0.0.3\")).isLessThan(v4);\n\t\tassertThat(LifecycleVersion.parse(\"0.0.4\")).isEqualByComparingTo(v4);\n\t\tassertThat(LifecycleVersion.parse(\"0.0.5\")).isGreaterThan(v4);\n\t}", "code_tokens": ["@", "test", "void", "compare", "to", "(", ")", "{", "lifecycle", "version", "v", "4", "=", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "is", "less", "than", "(", "v", "4", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "is", "equal", "by", "comparing", "to", "(", "v", "4", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "is", "greater", "than", "(", "v", "4", ")", ";", "}"], "token_count": 84, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 93, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.750865+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dc7e24925dc88846b84c7555b91593017923e9d0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "isEqualOrGreaterThan", "signature": null, "start_line": 57, "end_line": 63, "nloc": 7, "method_source_normalized": "@TestvoidisEqualOrGreaterThan(){\n\t\tLifecycleVersion v4 = LifecycleVersion.parse(\"0.0.4\");\n\t\tassertThat(LifecycleVersion.parse(\"0.0.3\").isEqualOrGreaterThan(v4)).isFalse();\n\t\tassertThat(LifecycleVersion.parse(\"0.0.4\").isEqualOrGreaterThan(v4)).isTrue();\n\t\tassertThat(LifecycleVersion.parse(\"0.0.5\").isEqualOrGreaterThan(v4)).isTrue();\n\t}", "original_code": "@Test\n\tvoid isEqualOrGreaterThan() {\n\t\tLifecycleVersion v4 = LifecycleVersion.parse(\"0.0.4\");\n\t\tassertThat(LifecycleVersion.parse(\"0.0.3\").isEqualOrGreaterThan(v4)).isFalse();\n\t\tassertThat(LifecycleVersion.parse(\"0.0.4\").isEqualOrGreaterThan(v4)).isTrue();\n\t\tassertThat(LifecycleVersion.parse(\"0.0.5\").isEqualOrGreaterThan(v4)).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "is", "equal", "or", "greater", "than", "(", ")", "{", "lifecycle", "version", "v", "4", "=", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ".", "is", "equal", "or", "greater", "than", "(", "v", "4", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ".", "is", "equal", "or", "greater", "than", "(", "v", "4", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ".", "is", "equal", "or", "greater", "than", "(", "v", "4", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 106, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 111, "n_identifiers": 24, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.751202+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0cfd0247c7465e6d379e4aa14a12e8efdd3d84b8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleVersionTests.java", "file_blob_sha": null, "method_name": "parseReturnsVersion", "signature": null, "start_line": 65, "end_line": 70, "nloc": 6, "method_source_normalized": "@TestvoidparseReturnsVersion(){\n\t\tassertThat(LifecycleVersion.parse(\"1.2.3\")).hasToString(\"v1.2.3\");\n\t\tassertThat(LifecycleVersion.parse(\"1.2\")).hasToString(\"v1.2.0\");\n\t\tassertThat(LifecycleVersion.parse(\"1\")).hasToString(\"v1.0.0\");\n\t}", "original_code": "@Test\n\tvoid parseReturnsVersion() {\n\t\tassertThat(LifecycleVersion.parse(\"1.2.3\")).hasToString(\"v1.2.3\");\n\t\tassertThat(LifecycleVersion.parse(\"1.2\")).hasToString(\"v1.2.0\");\n\t\tassertThat(LifecycleVersion.parse(\"1\")).hasToString(\"v1.0.0\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "returns", "version", "(", ")", "{", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 67, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.751489+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cd58bc6707e81446941171bde95ebc87767e55ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageLoadsMetadata", "signature": null, "start_line": 41, "end_line": 53, "nloc": 13, "method_source_normalized": "@TestvoidfromImageLoadsMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackLayersMetadata metadata = BuildpackLayersMetadata.fromImage(image);\n\t\tassertThat(metadata.getBuildpack(\"example/hello-moon\", \"0.0.3\")).extracting(\"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"https://github.com/example/tree/main/buildpacks/hello-moon\",\n\t\t\t\t\t\"sha256:4bfdc8714aee68da6662c43bc28d3b41202c88e915641c356523dabe729814c2\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.2\")).extracting(\"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:f752fe099c846e501bdc991d1a22f98c055ddc62f01cfc0495fff2c69f8eb940\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"version-does-not-exist\")).isNull();\n\t\tassertThat(metadata.getBuildpack(\"id-does-not-exist\", \"9.9.9\")).isNull();\n\t}", "original_code": "@Test\n\tvoid fromImageLoadsMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tBuildpackLayersMetadata metadata = BuildpackLayersMetadata.fromImage(image);\n\t\tassertThat(metadata.getBuildpack(\"example/hello-moon\", \"0.0.3\")).extracting(\"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"https://github.com/example/tree/main/buildpacks/hello-moon\",\n\t\t\t\t\t\"sha256:4bfdc8714aee68da6662c43bc28d3b41202c88e915641c356523dabe729814c2\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.2\")).extracting(\"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:f752fe099c846e501bdc991d1a22f98c055ddc62f01cfc0495fff2c69f8eb940\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"version-does-not-exist\")).isNull();\n\t\tassertThat(metadata.getBuildpack(\"id-does-not-exist\", \"9.9.9\")).isNull();\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "buildpack", "layers", "metadata", "metadata", "=", "buildpack", "layers", "metadata", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 139, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 165, "n_identifiers": 31, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 58, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.752874+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9b15fe8448dc6674a72fec58ca928aba20fe7487", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageIsNullThrowsException", "signature": null, "start_line": 55, "end_line": 59, "nloc": 5, "method_source_normalized": "@TestvoidfromImageWhenImageIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "layers", "metadata", ".", "from", "image", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.753153+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1d93a5b6bab1c53692f7b1ea6966b9f226a3277e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageConfigIsNullThrowsException", "signature": null, "start_line": 61, "end_line": 66, "nloc": 6, "method_source_normalized": "@TestvoidfromImageWhenImageConfigIsNullThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageConfigIsNullThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "config", "is", "null", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "layers", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 58, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 61, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.753411+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6c14664ee314759ed4567c2a60ee426020b96d37", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageConfigWhenLabelIsMissingThrowsException", "signature": null, "start_line": 68, "end_line": 76, "nloc": 9, "method_source_normalized": "@TestvoidfromImageConfigWhenLabelIsMissingThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.buildpack.layers' label found in image config labels 'alpha'\");\n\t}", "original_code": "@Test\n\tvoid fromImageConfigWhenLabelIsMissingThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuildpackLayersMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.buildpack.layers' label found in image config labels 'alpha'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "config", "when", "label", "is", "missing", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "image", "config", "image", "config", "=", "mock", "(", "image", "config", ".", "class", ")", ";", "given", "(", "image", ".", "get", "config", "(", ")", ")", ".", "will", "return", "(", "image", "config", ")", ";", "given", "(", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "map", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "layers", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 113, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 29, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.753713+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1d436d1a2fba3bb9c62b9fe8279ad8d9bc25ad7f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackLayersMetadataTests.java", "file_blob_sha": null, "method_name": "fromJsonLoadsMetadata", "signature": null, "start_line": 78, "end_line": 96, "nloc": 19, "method_source_normalized": "@TestvoidfromJsonLoadsMetadata()throws IOException{\n\t\tBuildpackLayersMetadata metadata = BuildpackLayersMetadata\n\t\t\t.fromJson(getContentAsString(\"buildpack-layers-metadata.json\"));\n\t\tassertThat(metadata.getBuildpack(\"example/hello-moon\", \"0.0.3\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-moon buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-moon\",\n\t\t\t\t\t\"sha256:4bfdc8714aee68da6662c43bc28d3b41202c88e915641c356523dabe729814c2\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.1\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-world buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:1c90e0b80d92555a0523c9ee6500845328fc39ba9dca9d30a877ff759ffbff28\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.2\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-world buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:f752fe099c846e501bdc991d1a22f98c055ddc62f01cfc0495fff2c69f8eb940\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"version-does-not-exist\")).isNull();\n\t\tassertThat(metadata.getBuildpack(\"id-does-not-exist\", \"9.9.9\")).isNull();\n\t}", "original_code": "@Test\n\tvoid fromJsonLoadsMetadata() throws IOException {\n\t\tBuildpackLayersMetadata metadata = BuildpackLayersMetadata\n\t\t\t.fromJson(getContentAsString(\"buildpack-layers-metadata.json\"));\n\t\tassertThat(metadata.getBuildpack(\"example/hello-moon\", \"0.0.3\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-moon buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-moon\",\n\t\t\t\t\t\"sha256:4bfdc8714aee68da6662c43bc28d3b41202c88e915641c356523dabe729814c2\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.1\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-world buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:1c90e0b80d92555a0523c9ee6500845328fc39ba9dca9d30a877ff759ffbff28\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"0.0.2\")).extracting(\"name\", \"homepage\", \"layerDiffId\")\n\t\t\t.containsExactly(\"Example hello-world buildpack\",\n\t\t\t\t\t\"https://github.com/example/tree/main/buildpacks/hello-world\",\n\t\t\t\t\t\"sha256:f752fe099c846e501bdc991d1a22f98c055ddc62f01cfc0495fff2c69f8eb940\");\n\t\tassertThat(metadata.getBuildpack(\"example/hello-world\", \"version-does-not-exist\")).isNull();\n\t\tassertThat(metadata.getBuildpack(\"id-does-not-exist\", \"9.9.9\")).isNull();\n\t}", "code_tokens": ["@", "test", "void", "from", "json", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "buildpack", "layers", "metadata", "metadata", "=", "buildpack", "layers", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 172, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 198, "n_identifiers": 31, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 98, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.754076+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "26532615a133b2674f50dc2537d768ef04c6b07c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 43, "end_line": 48, "nloc": 6, "method_source_normalized": "@BeforeEachvoidsetUp()throws Exception{\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(this.resolverContext.getBuildpackMetadata()).willReturn(metadata.getBuildpacks());\n\t}", "original_code": "@BeforeEach\n\tvoid setUp() throws Exception {\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(this.resolverContext.getBuildpackMetadata()).willReturn(metadata.getBuildpacks());\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", ")", "throws", "exception", "{", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "this", ".", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "this", ".", "resolver", "context", ".", "get", "buildpack", "metadata", "(", ")", ")", ".", "will", "return", "(", "metadata", ".", "get", "buildpacks", "(", ")", ")", ";", "}"], "token_count": 70, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.755589+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6961a26e7a527bb6e9c5a752ab27d3add165b3af", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedBuildpackWithVersionResolves", "signature": null, "start_line": 50, "end_line": 57, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedBuildpackWithVersionResolves()throws Exception{\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedBuildpackWithVersionResolves() throws Exception {\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "buildpack", "with", "version", "resolves", "(", ")", "throws", "exception", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "is", "equal", "to", "(", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "no", "layers", "are", "added", "(", "buildpack", ")", ";", "}"], "token_count": 81, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.755887+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5f5def8b36bda70a4480cea606c400b7538e602a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedBuildpackWithoutVersionResolves", "signature": null, "start_line": 59, "end_line": 66, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedBuildpackWithoutVersionResolves()throws Exception{\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedBuildpackWithoutVersionResolves() throws Exception {\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:paketo-buildpacks/spring-boot\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "buildpack", "without", "version", "resolves", "(", ")", "throws", "exception", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "is", "equal", "to", "(", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "no", "layers", "are", "added", "(", "buildpack", ")", ";", "}"], "token_count": 81, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.756172+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ad3a9e1d5498936bc6b019796719057acc1caa70", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenUnqualifiedBuildpackWithVersionResolves", "signature": null, "start_line": 68, "end_line": 75, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenUnqualifiedBuildpackWithVersionResolves()throws Exception{\n\t\tBuildpackReference reference = BuildpackReference.of(\"paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenUnqualifiedBuildpackWithVersionResolves() throws Exception {\n\t\tBuildpackReference reference = BuildpackReference.of(\"paketo-buildpacks/spring-boot@3.5.0\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "unqualified", "buildpack", "with", "version", "resolves", "(", ")", "throws", "exception", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "is", "equal", "to", "(", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "no", "layers", "are", "added", "(", "buildpack", ")", ";", "}"], "token_count": 80, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.756463+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "215c0f5f562efb131e94259f3b95c37656377ec9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenUnqualifiedBuildpackWithoutVersionResolves", "signature": null, "start_line": 77, "end_line": 84, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenUnqualifiedBuildpackWithoutVersionResolves()throws Exception{\n\t\tBuildpackReference reference = BuildpackReference.of(\"paketo-buildpacks/spring-boot\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenUnqualifiedBuildpackWithoutVersionResolves() throws Exception {\n\t\tBuildpackReference reference = BuildpackReference.of(\"paketo-buildpacks/spring-boot\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates())\n\t\t\t.isEqualTo(BuildpackCoordinates.of(\"paketo-buildpacks/spring-boot\", \"3.5.0\"));\n\t\tassertThatNoLayersAreAdded(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "unqualified", "buildpack", "without", "version", "resolves", "(", ")", "throws", "exception", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "is", "equal", "to", "(", "buildpack", "coordinates", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "no", "layers", "are", "added", "(", "buildpack", ")", ";", "}"], "token_count": 80, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 87, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.756772+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "342dd45412620e039cc257133437d3aefe88467f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedBuildpackWithVersionNotInBuilderThrowsException", "signature": null, "start_line": 86, "end_line": 92, "nloc": 7, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedBuildpackWithVersionNotInBuilderThrowsException(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack1@1.2.3\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack1@1.2.3'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedBuildpackWithVersionNotInBuilderThrowsException() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack1@1.2.3\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack1@1.2.3'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "buildpack", "with", "version", "not", "in", "builder", "throws", "exception", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 72, "n_identifiers": 14, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.757055+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8d3481852799cce209e6973709e0df90db7babd9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedBuildpackWithoutVersionNotInBuilderThrowsException", "signature": null, "start_line": 94, "end_line": 100, "nloc": 7, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedBuildpackWithoutVersionNotInBuilderThrowsException(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack1\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack1'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedBuildpackWithoutVersionNotInBuilderThrowsException() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack1\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack1'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "buildpack", "without", "version", "not", "in", "builder", "throws", "exception", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 72, "n_identifiers": 14, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.757334+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "706a8fc2ef9e6ab426547ac15108fc57084bbd58", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenUnqualifiedBuildpackNotInBuilderReturnsNull", "signature": null, "start_line": 102, "end_line": 107, "nloc": 6, "method_source_normalized": "@TestvoidresolveWhenUnqualifiedBuildpackNotInBuilderReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1@1.2.3\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenUnqualifiedBuildpackNotInBuilderReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1@1.2.3\");\n\t\tBuildpack buildpack = BuilderBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "unqualified", "buildpack", "not", "in", "builder", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "builder", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 55, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.757603+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0bdb5879ea449ec9639b035c6fe961a1dee0b5e7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderBuildpackTests.java", "file_blob_sha": null, "method_name": "assertThatNoLayersAreAdded", "signature": null, "start_line": 109, "end_line": 113, "nloc": 5, "method_source_normalized": "privatevoidassertThatNoLayersAreAdded(Buildpack buildpack)throws IOException{\n\t\tList<Layer> layers = new ArrayList<>();\n\t\tbuildpack.apply(layers::add);\n\t\tassertThat(layers).isEmpty();\n\t}", "original_code": "private void assertThatNoLayersAreAdded(Buildpack buildpack) throws IOException {\n\t\tList<Layer> layers = new ArrayList<>();\n\t\tbuildpack.apply(layers::add);\n\t\tassertThat(layers).isEmpty();\n\t}", "code_tokens": ["private", "void", "assert", "that", "no", "layers", "are", "added", "(", "buildpack", "buildpack", ")", "throws", "io", "exception", "{", "list", "<", "layer", ">", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", ".", "apply", "(", "layers", "::", "add", ")", ";", "assert", "that", "(", "layers", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 51, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.757867+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "92d0dac046a00c1727685d41725a76c0a4756b28", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "forJarFileReturnsRequest", "signature": null, "start_line": 66, "end_line": 75, "nloc": 10, "method_source_normalized": "@TestvoidforJarFileReturnsRequest()throws IOException{\n\t\tFile jarFile = new File(this.tempDir, \"my-app-0.0.1.jar\");\n\t\twriteTestJarFile(jarFile);\n\t\tBuildRequest request = BuildRequest.forJarFile(jarFile);\n\t\tassertThat(request.getName()).hasToString(\"docker.io/library/my-app:0.0.1\");\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/\" + BuildRequest.DEFAULT_BUILDER_IMAGE_REF);\n\t\tassertThat(request.getApplicationContent(Owner.ROOT)).satisfies(this::hasExpectedJarContent);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t}", "original_code": "@Test\n\tvoid forJarFileReturnsRequest() throws IOException {\n\t\tFile jarFile = new File(this.tempDir, \"my-app-0.0.1.jar\");\n\t\twriteTestJarFile(jarFile);\n\t\tBuildRequest request = BuildRequest.forJarFile(jarFile);\n\t\tassertThat(request.getName()).hasToString(\"docker.io/library/my-app:0.0.1\");\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/\" + BuildRequest.DEFAULT_BUILDER_IMAGE_REF);\n\t\tassertThat(request.getApplicationContent(Owner.ROOT)).satisfies(this::hasExpectedJarContent);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "returns", "request", "(", ")", "throws", "io", "exception", "{", "file", "jar", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ";", "write", "test", "jar", "file", "(", "jar", "file", ")", ";", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "jar", "file", ")", ";", "assert", "that", "(", "request", ".", "get", "name", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "get", "builder", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", "+", "build", "request", ".", "default", "builder", "image", "ref", ")", ";", "assert", "that", "(", "request", ".", "get", "application", "content", "(", "owner", ".", "root", ")", ")", ".", "satisfies", "(", "this", "::", "has", "expected", "jar", "content", ")", ";", "assert", "that", "(", "request", ".", "get", "env", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 139, "vocab_size": 48, "cyclomatic_complexity": 1, "ast_node_count": 152, "n_identifiers": 35, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.763944+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a1bdc7c2392c47b4e72ac3fbd94c1566f3bb67f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "forJarFileWithNameReturnsRequest", "signature": null, "start_line": 77, "end_line": 86, "nloc": 10, "method_source_normalized": "@TestvoidforJarFileWithNameReturnsRequest()throws IOException{\n\t\tFile jarFile = new File(this.tempDir, \"my-app-0.0.1.jar\");\n\t\twriteTestJarFile(jarFile);\n\t\tBuildRequest request = BuildRequest.forJarFile(ImageReference.of(\"test-app\"), jarFile);\n\t\tassertThat(request.getName()).hasToString(\"docker.io/library/test-app:latest\");\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/\" + BuildRequest.DEFAULT_BUILDER_IMAGE_REF);\n\t\tassertThat(request.getApplicationContent(Owner.ROOT)).satisfies(this::hasExpectedJarContent);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t}", "original_code": "@Test\n\tvoid forJarFileWithNameReturnsRequest() throws IOException {\n\t\tFile jarFile = new File(this.tempDir, \"my-app-0.0.1.jar\");\n\t\twriteTestJarFile(jarFile);\n\t\tBuildRequest request = BuildRequest.forJarFile(ImageReference.of(\"test-app\"), jarFile);\n\t\tassertThat(request.getName()).hasToString(\"docker.io/library/test-app:latest\");\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/\" + BuildRequest.DEFAULT_BUILDER_IMAGE_REF);\n\t\tassertThat(request.getApplicationContent(Owner.ROOT)).satisfies(this::hasExpectedJarContent);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "with", "name", "returns", "request", "(", ")", "throws", "io", "exception", "{", "file", "jar", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ";", "write", "test", "jar", "file", "(", "jar", "file", ")", ";", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "jar", "file", ")", ";", "assert", "that", "(", "request", ".", "get", "name", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "get", "builder", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", "+", "build", "request", ".", "default", "builder", "image", "ref", ")", ";", "assert", "that", "(", "request", ".", "get", "application", "content", "(", "owner", ".", "root", ")", ")", ".", "satisfies", "(", "this", "::", "has", "expected", "jar", "content", ")", ";", "assert", "that", "(", "request", ".", "get", "env", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 149, "vocab_size": 51, "cyclomatic_complexity": 1, "ast_node_count": 161, "n_identifiers": 37, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.764315+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b85f545669339bcd95471fdee837b33d11453862", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "forJarFileWhenJarFileIsNullThrowsException", "signature": null, "start_line": 88, "end_line": 92, "nloc": 5, "method_source_normalized": "@TestvoidforJarFileWhenJarFileIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildRequest.forJarFile(null))\n\t\t\t.withMessage(\"'jarFile' must not be null\");\n\t}", "original_code": "@Test\n\tvoid forJarFileWhenJarFileIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildRequest.forJarFile(null))\n\t\t\t.withMessage(\"'jarFile' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "when", "jar", "file", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "request", ".", "for", "jar", "file", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 49, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.764603+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b5ca8ca93ed69a07f08d755f5048767701fcc49e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "forJarFileWhenJarFileIsMissingThrowsException", "signature": null, "start_line": 94, "end_line": 99, "nloc": 6, "method_source_normalized": "@TestvoidforJarFileWhenJarFileIsMissingThrowsException(){\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> BuildRequest.forJarFile(new File(this.tempDir, \"missing.jar\")))\n\t\t\t.withMessage(\"'jarFile' must exist\");\n\t}", "original_code": "@Test\n\tvoid forJarFileWhenJarFileIsMissingThrowsException() {\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> BuildRequest.forJarFile(new File(this.tempDir, \"missing.jar\")))\n\t\t\t.withMessage(\"'jarFile' must exist\");\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "when", "jar", "file", "is", "missing", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "request", ".", "for", "jar", "file", "(", "new", "file", "(", "this", ".", "temp", "dir", ",", "__STR__", ")", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 58, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 57, "n_identifiers": 9, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.764865+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aa76076c7babb01feb43c1759d21c042c50f5d3e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "forJarFileWhenJarFileIsDirectoryThrowsException", "signature": null, "start_line": 101, "end_line": 105, "nloc": 5, "method_source_normalized": "@TestvoidforJarFileWhenJarFileIsDirectoryThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildRequest.forJarFile(this.tempDir))\n\t\t\t.withMessage(\"'jarFile' must be a file\");\n\t}", "original_code": "@Test\n\tvoid forJarFileWhenJarFileIsDirectoryThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildRequest.forJarFile(this.tempDir))\n\t\t\t.withMessage(\"'jarFile' must be a file\");\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "when", "jar", "file", "is", "directory", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "build", "request", ".", "for", "jar", "file", "(", "this", ".", "temp", "dir", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.765123+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aea9bedaa7e7c5585de5475eec149d7be0f8e398", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuilderUpdatesBuilder", "signature": null, "start_line": 107, "end_line": 113, "nloc": 7, "method_source_normalized": "@TestvoidwithBuilderUpdatesBuilder()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(\"spring/builder\"));\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/spring/builder:latest\");\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "original_code": "@Test\n\tvoid withBuilderUpdatesBuilder() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(\"spring/builder\"));\n\t\tassertThat(request.getBuilder()).hasToString(\"docker.io/spring/builder:latest\");\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "with", "builder", "updates", "builder", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "builder", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 81, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 19, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.765533+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20a215ae6d5f60fc1967cbb4a062a34940d0a3e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuilderWhenHasDigestUpdatesBuilder", "signature": null, "start_line": 115, "end_line": 123, "nloc": 9, "method_source_normalized": "@TestvoidwithBuilderWhenHasDigestUpdatesBuilder()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference\n\t\t\t\t.of(\"spring/builder@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.getBuilder()).hasToString(\n\t\t\t\t\"docker.io/spring/builder@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "original_code": "@Test\n\tvoid withBuilderWhenHasDigestUpdatesBuilder() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference\n\t\t\t\t.of(\"spring/builder@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.getBuilder()).hasToString(\n\t\t\t\t\"docker.io/spring/builder@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "with", "builder", "when", "has", "digest", "updates", "builder", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "builder", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 84, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 90, "n_identifiers": 19, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.765838+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "02305081cb54ef5f83e60f88a0aedce082181b4f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withoutBuilderTrustsDefaultBuilder", "signature": null, "start_line": 125, "end_line": 129, "nloc": 5, "method_source_normalized": "@TestvoidwithoutBuilderTrustsDefaultBuilder()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "original_code": "@Test\n\tvoid withoutBuilderTrustsDefaultBuilder() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "without", "builder", "trusts", "default", "builder", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 52, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.766109+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e3a4914014df3f6288c141d754f95bcde0643ac", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withoutBuilderTrustsDefaultBuilderWithDifferentTag", "signature": null, "start_line": 131, "end_line": 136, "nloc": 6, "method_source_normalized": "@TestvoidwithoutBuilderTrustsDefaultBuilderWithDifferentTag()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(ImageName.of(BuildRequest.DEFAULT_BUILDER_IMAGE_NAME), \"other\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "original_code": "@Test\n\tvoid withoutBuilderTrustsDefaultBuilderWithDifferentTag() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(ImageName.of(BuildRequest.DEFAULT_BUILDER_IMAGE_NAME), \"other\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "without", "builder", "trusts", "default", "builder", "with", "different", "tag", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "image", "reference", ".", "of", "(", "image", "name", ".", "of", "(", "build", "request", ".", "default", "builder", "image", "name", ")", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 81, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 81, "n_identifiers": 19, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.766397+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d60ad13db6b5768a8ee465f98abeb874f1ea6bc0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withoutBuilderTrustsDefaultBuilderWithDigest", "signature": null, "start_line": 138, "end_line": 144, "nloc": 7, "method_source_normalized": "@TestvoidwithoutBuilderTrustsDefaultBuilderWithDigest()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(BuildRequest.DEFAULT_BUILDER_IMAGE_REF)\n\t\t\t\t.withDigest(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "original_code": "@Test\n\tvoid withoutBuilderTrustsDefaultBuilderWithDigest() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(BuildRequest.DEFAULT_BUILDER_IMAGE_REF)\n\t\t\t\t.withDigest(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "without", "builder", "trusts", "default", "builder", "with", "digest", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "image", "reference", ".", "of", "(", "build", "request", ".", "default", "builder", "image", "ref", ")", ".", "with", "digest", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 78, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 79, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.766685+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4af027b0991c84033aa4573cb07200c43b650fdb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withKnownTrustedBuilderTrustsBuilder", "signature": null, "start_line": 146, "end_line": 151, "nloc": 6, "method_source_normalized": "@ParameterizedTest\n\t@MethodSource(\"trustedBuilders\")voidwithKnownTrustedBuilderTrustsBuilder(ImageReference builder)throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withBuilder(builder);\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "original_code": "@ParameterizedTest\n\t@MethodSource(\"trustedBuilders\")\n\tvoid withKnownTrustedBuilderTrustsBuilder(ImageReference builder) throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withBuilder(builder);\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "method", "source", "(", "__STR__", ")", "void", "with", "known", "trusted", "builder", "trusts", "builder", "(", "image", "reference", "builder", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "builder", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 69, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 72, "n_identifiers": 17, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.766964+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "10df2fe5cd9ce1e6a567eba703c6ca078be62691", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "trustedBuilders", "signature": null, "start_line": 153, "end_line": 155, "nloc": 3, "method_source_normalized": "staticStream<ImageReference>trustedBuilders(){\n\t\treturn BuildRequest.KNOWN_TRUSTED_BUILDERS.stream();\n\t}", "original_code": "static Stream<ImageReference> trustedBuilders() {\n\t\treturn BuildRequest.KNOWN_TRUSTED_BUILDERS.stream();\n\t}", "code_tokens": ["static", "stream", "<", "image", "reference", ">", "trusted", "builders", "(", ")", "{", "return", "build", "request", ".", "known", "trusted", "builders", ".", "stream", "(", ")", ";", "}"], "token_count": 24, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 6, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.767209+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "33529c85ff05b79a4d0dfa59d2e0b8044424fa8b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withoutTrustBuilderAndDefaultBuilderUpdatesTrustsBuilder", "signature": null, "start_line": 157, "end_line": 161, "nloc": 5, "method_source_normalized": "@TestvoidwithoutTrustBuilderAndDefaultBuilderUpdatesTrustsBuilder()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withTrustBuilder(false);\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "original_code": "@Test\n\tvoid withoutTrustBuilderAndDefaultBuilderUpdatesTrustsBuilder() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withTrustBuilder(false);\n\t\tassertThat(request.isTrustBuilder()).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "without", "trust", "builder", "and", "default", "builder", "updates", "trusts", "builder", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "trust", "builder", "(", "false", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 63, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 62, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.767474+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f51169dec624a2a023b89d9ba5b671b8a8c29770", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withTrustBuilderAndBuilderUpdatesTrustBuilder", "signature": null, "start_line": 163, "end_line": 169, "nloc": 7, "method_source_normalized": "@TestvoidwithTrustBuilderAndBuilderUpdatesTrustBuilder()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(\"spring/builder\"))\n\t\t\t.withTrustBuilder(true);\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "original_code": "@Test\n\tvoid withTrustBuilderAndBuilderUpdatesTrustBuilder() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withBuilder(ImageReference.of(\"spring/builder\"))\n\t\t\t.withTrustBuilder(true);\n\t\tassertThat(request.isTrustBuilder()).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "with", "trust", "builder", "and", "builder", "updates", "trust", "builder", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "builder", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "trust", "builder", "(", "true", ")", ";", "assert", "that", "(", "request", ".", "is", "trust", "builder", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 74, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 76, "n_identifiers": 16, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.767764+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e646d0decff04d020e351a0dbf05c9b9933c264", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withRunImageUpdatesRunImage", "signature": null, "start_line": 171, "end_line": 176, "nloc": 6, "method_source_normalized": "@TestvoidwithRunImageUpdatesRunImage()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withRunImage(ImageReference.of(\"example.com/custom/run-image:latest\"));\n\t\tassertThat(request.getRunImage()).hasToString(\"example.com/custom/run-image:latest\");\n\t}", "original_code": "@Test\n\tvoid withRunImageUpdatesRunImage() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withRunImage(ImageReference.of(\"example.com/custom/run-image:latest\"));\n\t\tassertThat(request.getRunImage()).hasToString(\"example.com/custom/run-image:latest\");\n\t}", "code_tokens": ["@", "test", "void", "with", "run", "image", "updates", "run", "image", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "run", "image", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "run", "image", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 68, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 15, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.768057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "69e3e5902f2e5f2f13252219be5fcea7854074ee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withRunImageWhenHasDigestUpdatesRunImage", "signature": null, "start_line": 178, "end_line": 185, "nloc": 8, "method_source_normalized": "@TestvoidwithRunImageWhenHasDigestUpdatesRunImage()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withRunImage(ImageReference\n\t\t\t\t.of(\"example.com/custom/run-image@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.getRunImage()).hasToString(\n\t\t\t\t\"example.com/custom/run-image@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid withRunImageWhenHasDigestUpdatesRunImage() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"))\n\t\t\t.withRunImage(ImageReference\n\t\t\t\t.of(\"example.com/custom/run-image@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\"));\n\t\tassertThat(request.getRunImage()).hasToString(\n\t\t\t\t\"example.com/custom/run-image@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "with", "run", "image", "when", "has", "digest", "updates", "run", "image", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "run", "image", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "run", "image", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 71, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 15, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.768338+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "03ed710c4ba6615a87674cd2959f0062761cef1a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withCreatorUpdatesCreator", "signature": null, "start_line": 187, "end_line": 195, "nloc": 9, "method_source_normalized": "@TestvoidwithCreatorUpdatesCreator()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreator = request.withCreator(Creator.withVersion(\"1.0.0\"));\n\t\tassertThat(request.getCreator().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(request.getCreator().getVersion()).isEmpty();\n\t\tassertThat(withCreator.getCreator().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(withCreator.getCreator().getVersion()).isEqualTo(\"1.0.0\");\n\t}", "original_code": "@Test\n\tvoid withCreatorUpdatesCreator() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreator = request.withCreator(Creator.withVersion(\"1.0.0\"));\n\t\tassertThat(request.getCreator().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(request.getCreator().getVersion()).isEmpty();\n\t\tassertThat(withCreator.getCreator().getName()).isEqualTo(\"Spring Boot\");\n\t\tassertThat(withCreator.getCreator().getVersion()).isEqualTo(\"1.0.0\");\n\t}", "code_tokens": ["@", "test", "void", "with", "creator", "updates", "creator", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "creator", "=", "request", ".", "with", "creator", "(", "creator", ".", "with", "version", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "creator", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "get", "creator", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "creator", ".", "get", "creator", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "with", "creator", ".", "get", "creator", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 145, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 163, "n_identifiers": 34, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.768678+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c8e58c8ab54d678d0cc505710cbafc64c189308d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withEnvAddsEnvEntry", "signature": null, "start_line": 197, "end_line": 203, "nloc": 7, "method_source_normalized": "@TestvoidwithEnvAddsEnvEntry()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withEnv = request.withEnv(\"spring\", \"boot\");\n\t\tassertThat(request.getEnv()).isEmpty();\n\t\tassertThat(withEnv.getEnv()).containsExactly(entry(\"spring\", \"boot\"));\n\t}", "original_code": "@Test\n\tvoid withEnvAddsEnvEntry() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withEnv = request.withEnv(\"spring\", \"boot\");\n\t\tassertThat(request.getEnv()).isEmpty();\n\t\tassertThat(withEnv.getEnv()).containsExactly(entry(\"spring\", \"boot\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "env", "adds", "env", "entry", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "env", "=", "request", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "get", "env", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "env", ".", "get", "env", "(", ")", ")", ".", "contains", "exactly", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 89, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.768989+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9445c79e50cafc364252b90061f35559a78e2f09", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withEnvMapAddsEnvEntries", "signature": null, "start_line": 205, "end_line": 214, "nloc": 10, "method_source_normalized": "@TestvoidwithEnvMapAddsEnvEntries()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"spring\", \"boot\");\n\t\tenv.put(\"test\", \"test\");\n\t\tBuildRequest withEnv = request.withEnv(env);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t\tassertThat(withEnv.getEnv()).containsExactly(entry(\"spring\", \"boot\"), entry(\"test\", \"test\"));\n\t}", "original_code": "@Test\n\tvoid withEnvMapAddsEnvEntries() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tMap<String, String> env = new LinkedHashMap<>();\n\t\tenv.put(\"spring\", \"boot\");\n\t\tenv.put(\"test\", \"test\");\n\t\tBuildRequest withEnv = request.withEnv(env);\n\t\tassertThat(request.getEnv()).isEmpty();\n\t\tassertThat(withEnv.getEnv()).containsExactly(entry(\"spring\", \"boot\"), entry(\"test\", \"test\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "env", "map", "adds", "env", "entries", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "new", "linked", "hash", "map", "<", ">", "(", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "env", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "build", "request", "with", "env", "=", "request", ".", "with", "env", "(", "env", ")", ";", "assert", "that", "(", "request", ".", "get", "env", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "env", ".", "get", "env", "(", ")", ")", ".", "contains", "exactly", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 130, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 153, "n_identifiers": 32, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.769323+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dcaceed47889298dbbef92322f1ea7c294626552", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withEnvWhenKeyIsNullThrowsException", "signature": null, "start_line": 216, "end_line": 221, "nloc": 6, "method_source_normalized": "@TestvoidwithEnvWhenKeyIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withEnv(null, \"test\"))\n\t\t\t.withMessage(\"'name' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid withEnvWhenKeyIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withEnv(null, \"test\"))\n\t\t\t.withMessage(\"'name' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "with", "env", "when", "key", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "env", "(", "null", ",", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 70, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.769610+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cabeeb92db7bef3a2bd30cd9e4d3ae39099d63b7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withEnvWhenValueIsNullThrowsException", "signature": null, "start_line": 223, "end_line": 228, "nloc": 6, "method_source_normalized": "@TestvoidwithEnvWhenValueIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withEnv(\"test\", null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid withEnvWhenValueIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withEnv(\"test\", null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "with", "env", "when", "value", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "env", "(", "__STR__", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 70, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.769887+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d9cbcd9ff5baf703dbd462184989f1217e4815e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildpacksAddsBuildpacks", "signature": null, "start_line": 230, "end_line": 238, "nloc": 9, "method_source_normalized": "@TestvoidwithBuildpacksAddsBuildpacks()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildpackReference buildpackReference1 = BuildpackReference.of(\"example/buildpack1\");\n\t\tBuildpackReference buildpackReference2 = BuildpackReference.of(\"example/buildpack2\");\n\t\tBuildRequest withBuildpacks = request.withBuildpacks(buildpackReference1, buildpackReference2);\n\t\tassertThat(request.getBuildpacks()).isEmpty();\n\t\tassertThat(withBuildpacks.getBuildpacks()).containsExactly(buildpackReference1, buildpackReference2);\n\t}", "original_code": "@Test\n\tvoid withBuildpacksAddsBuildpacks() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildpackReference buildpackReference1 = BuildpackReference.of(\"example/buildpack1\");\n\t\tBuildpackReference buildpackReference2 = BuildpackReference.of(\"example/buildpack2\");\n\t\tBuildRequest withBuildpacks = request.withBuildpacks(buildpackReference1, buildpackReference2);\n\t\tassertThat(request.getBuildpacks()).isEmpty();\n\t\tassertThat(withBuildpacks.getBuildpacks()).containsExactly(buildpackReference1, buildpackReference2);\n\t}", "code_tokens": ["@", "test", "void", "with", "buildpacks", "adds", "buildpacks", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "buildpack", "reference", "buildpack", "reference", "1", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "reference", "buildpack", "reference", "2", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "build", "request", "with", "buildpacks", "=", "request", ".", "with", "buildpacks", "(", "buildpack", "reference", "1", ",", "buildpack", "reference", "2", ")", ";", "assert", "that", "(", "request", ".", "get", "buildpacks", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "contains", "exactly", "(", "buildpack", "reference", "1", ",", "buildpack", "reference", "2", ")", ";", "}"], "token_count": 121, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 122, "n_identifiers": 32, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.770209+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c818fbf08a09b41cb2906121ab59841ae92f886a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildpacksWhenBuildpacksIsNullThrowsException", "signature": null, "start_line": 240, "end_line": 245, "nloc": 6, "method_source_normalized": "@TestvoidwithBuildpacksWhenBuildpacksIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBuildpacks((List<BuildpackReference>) null))\n\t\t\t.withMessage(\"'buildpacks' must not be null\");\n\t}", "original_code": "@Test\n\tvoid withBuildpacksWhenBuildpacksIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBuildpacks((List<BuildpackReference>) null))\n\t\t\t.withMessage(\"'buildpacks' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "with", "buildpacks", "when", "buildpacks", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "buildpacks", "(", "(", "list", "<", "buildpack", "reference", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 75, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 15, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.770501+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3d50698d4df98db2f709b5989947d6b1a2d82e49", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBindingsAddsBindings", "signature": null, "start_line": 247, "end_line": 255, "nloc": 9, "method_source_normalized": "@TestvoidwithBindingsAddsBindings()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withBindings = request.withBindings(Binding.of(\"/host/path:/container/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/path:rw\"));\n\t\tassertThat(request.getBindings()).isEmpty();\n\t\tassertThat(withBindings.getBindings()).containsExactly(Binding.of(\"/host/path:/container/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/path:rw\"));\n\t}", "original_code": "@Test\n\tvoid withBindingsAddsBindings() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withBindings = request.withBindings(Binding.of(\"/host/path:/container/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/path:rw\"));\n\t\tassertThat(request.getBindings()).isEmpty();\n\t\tassertThat(withBindings.getBindings()).containsExactly(Binding.of(\"/host/path:/container/path:ro\"),\n\t\t\t\tBinding.of(\"volume-name:/container/path:rw\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "bindings", "adds", "bindings", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "bindings", "=", "request", ".", "with", "bindings", "(", "binding", ".", "of", "(", "__STR__", ")", ",", "binding", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "bindings", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "bindings", ".", "get", "bindings", "(", ")", ")", ".", "contains", "exactly", "(", "binding", ".", "of", "(", "__STR__", ")", ",", "binding", ".", "of", "(", "__STR__", ")", ")", ";", "}"], "token_count": 105, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 122, "n_identifiers": 28, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.770824+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bfd35e8b5e5afe7590da94da46d5ad16b062c040", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBindingsWhenBindingsIsNullThrowsException", "signature": null, "start_line": 257, "end_line": 262, "nloc": 6, "method_source_normalized": "@TestvoidwithBindingsWhenBindingsIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBindings((List<Binding>) null))\n\t\t\t.withMessage(\"'bindings' must not be null\");\n\t}", "original_code": "@Test\n\tvoid withBindingsWhenBindingsIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBindings((List<Binding>) null))\n\t\t\t.withMessage(\"'bindings' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "with", "bindings", "when", "bindings", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "bindings", "(", "(", "list", "<", "binding", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 15, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.771114+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b3ea969e19adfc6c24fa61b50d449cac89f03b12", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withNetworkUpdatesNetwork", "signature": null, "start_line": 264, "end_line": 268, "nloc": 5, "method_source_normalized": "@TestvoidwithNetworkUpdatesNetwork()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withNetwork(\"test\");\n\t\tassertThat(request.getNetwork()).isEqualTo(\"test\");\n\t}", "original_code": "@Test\n\tvoid withNetworkUpdatesNetwork() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\")).withNetwork(\"test\");\n\t\tassertThat(request.getNetwork()).isEqualTo(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "with", "network", "updates", "network", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ".", "with", "network", "(", "__STR__", ")", ";", "assert", "that", "(", "request", ".", "get", "network", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 58, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 63, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.771385+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b71b392acd8ae9f6ac3b5212396d5aced82ba940", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withTagsAddsTags", "signature": null, "start_line": 270, "end_line": 280, "nloc": 11, "method_source_normalized": "@TestvoidwithTagsAddsTags()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withTags = request.withTags(ImageReference.of(\"docker.io/library/my-app:latest\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:0.0.1\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:latest\"));\n\t\tassertThat(request.getTags()).isEmpty();\n\t\tassertThat(withTags.getTags()).containsExactly(ImageReference.of(\"docker.io/library/my-app:latest\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:0.0.1\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:latest\"));\n\t}", "original_code": "@Test\n\tvoid withTagsAddsTags() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withTags = request.withTags(ImageReference.of(\"docker.io/library/my-app:latest\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:0.0.1\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:latest\"));\n\t\tassertThat(request.getTags()).isEmpty();\n\t\tassertThat(withTags.getTags()).containsExactly(ImageReference.of(\"docker.io/library/my-app:latest\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:0.0.1\"),\n\t\t\t\tImageReference.of(\"example.com/custom/my-app:latest\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "tags", "adds", "tags", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "tags", "=", "request", ".", "with", "tags", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "tags", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "with", "tags", ".", "get", "tags", "(", ")", ")", ".", "contains", "exactly", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "image", "reference", ".", "of", "(", "__STR__", ")", ",", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "}"], "token_count": 125, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 140, "n_identifiers": 32, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 46, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.771763+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c01d18795d5c6fd407a93c1f07c1eeb44b90404", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withTagsWhenTagsIsNullThrowsException", "signature": null, "start_line": 282, "end_line": 287, "nloc": 6, "method_source_normalized": "@TestvoidwithTagsWhenTagsIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withTags((List<ImageReference>) null))\n\t\t\t.withMessage(\"'tags' must not be null\");\n\t}", "original_code": "@Test\n\tvoid withTagsWhenTagsIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withTags((List<ImageReference>) null))\n\t\t\t.withMessage(\"'tags' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "with", "tags", "when", "tags", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "tags", "(", "(", "list", "<", "image", "reference", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 75, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 15, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.772057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e279022c2a278ea437453eedabb7ea4f1f190be6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildWorkspaceVolumeAddsWorkspace", "signature": null, "start_line": 289, "end_line": 295, "nloc": 7, "method_source_normalized": "@TestvoidwithBuildWorkspaceVolumeAddsWorkspace()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withWorkspace = request.withBuildWorkspace(Cache.volume(\"build-workspace\"));\n\t\tassertThat(request.getBuildWorkspace()).isNull();\n\t\tassertThat(withWorkspace.getBuildWorkspace()).isEqualTo(Cache.volume(\"build-workspace\"));\n\t}", "original_code": "@Test\n\tvoid withBuildWorkspaceVolumeAddsWorkspace() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withWorkspace = request.withBuildWorkspace(Cache.volume(\"build-workspace\"));\n\t\tassertThat(request.getBuildWorkspace()).isNull();\n\t\tassertThat(withWorkspace.getBuildWorkspace()).isEqualTo(Cache.volume(\"build-workspace\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "build", "workspace", "volume", "adds", "workspace", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "workspace", "=", "request", ".", "with", "build", "workspace", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "build", "workspace", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "workspace", ".", "get", "build", "workspace", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.772360+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bb505a2c2aac5087f7fe4945370df7d6fe645e33", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildWorkspaceBindAddsWorkspace", "signature": null, "start_line": 297, "end_line": 303, "nloc": 7, "method_source_normalized": "@TestvoidwithBuildWorkspaceBindAddsWorkspace()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withWorkspace = request.withBuildWorkspace(Cache.bind(\"/tmp/build-workspace\"));\n\t\tassertThat(request.getBuildWorkspace()).isNull();\n\t\tassertThat(withWorkspace.getBuildWorkspace()).isEqualTo(Cache.bind(\"/tmp/build-workspace\"));\n\t}", "original_code": "@Test\n\tvoid withBuildWorkspaceBindAddsWorkspace() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withWorkspace = request.withBuildWorkspace(Cache.bind(\"/tmp/build-workspace\"));\n\t\tassertThat(request.getBuildWorkspace()).isNull();\n\t\tassertThat(withWorkspace.getBuildWorkspace()).isEqualTo(Cache.bind(\"/tmp/build-workspace\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "build", "workspace", "bind", "adds", "workspace", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "workspace", "=", "request", ".", "with", "build", "workspace", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "build", "workspace", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "workspace", ".", "get", "build", "workspace", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.772663+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "97526a7cab597d03b5a301e1f7c0ef82e2d61e37", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildVolumeCacheAddsCache", "signature": null, "start_line": 305, "end_line": 311, "nloc": 7, "method_source_normalized": "@TestvoidwithBuildVolumeCacheAddsCache()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withBuildCache(Cache.volume(\"build-volume\"));\n\t\tassertThat(request.getBuildCache()).isNull();\n\t\tassertThat(withCache.getBuildCache()).isEqualTo(Cache.volume(\"build-volume\"));\n\t}", "original_code": "@Test\n\tvoid withBuildVolumeCacheAddsCache() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withBuildCache(Cache.volume(\"build-volume\"));\n\t\tassertThat(request.getBuildCache()).isNull();\n\t\tassertThat(withCache.getBuildCache()).isEqualTo(Cache.volume(\"build-volume\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "build", "volume", "cache", "adds", "cache", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "cache", "=", "request", ".", "with", "build", "cache", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "build", "cache", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "cache", ".", "get", "build", "cache", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.772965+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "542617518166378f654dbebc58ff72f6a4beaed5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildBindCacheAddsCache", "signature": null, "start_line": 313, "end_line": 319, "nloc": 7, "method_source_normalized": "@TestvoidwithBuildBindCacheAddsCache()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withBuildCache(Cache.bind(\"/tmp/build-cache\"));\n\t\tassertThat(request.getBuildCache()).isNull();\n\t\tassertThat(withCache.getBuildCache()).isEqualTo(Cache.bind(\"/tmp/build-cache\"));\n\t}", "original_code": "@Test\n\tvoid withBuildBindCacheAddsCache() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withBuildCache(Cache.bind(\"/tmp/build-cache\"));\n\t\tassertThat(request.getBuildCache()).isNull();\n\t\tassertThat(withCache.getBuildCache()).isEqualTo(Cache.bind(\"/tmp/build-cache\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "build", "bind", "cache", "adds", "cache", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "cache", "=", "request", ".", "with", "build", "cache", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "build", "cache", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "cache", ".", "get", "build", "cache", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.773272+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e392c7545a5341ba4049dd1aefa9531260380f67", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withBuildVolumeCacheWhenCacheIsNullThrowsException", "signature": null, "start_line": 321, "end_line": 326, "nloc": 6, "method_source_normalized": "@TestvoidwithBuildVolumeCacheWhenCacheIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBuildCache(null))\n\t\t\t.withMessage(\"'buildCache' must not be null\");\n\t}", "original_code": "@Test\n\tvoid withBuildVolumeCacheWhenCacheIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withBuildCache(null))\n\t\t\t.withMessage(\"'buildCache' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "with", "build", "volume", "cache", "when", "cache", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "build", "cache", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 71, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.773590+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc32b38273e28ac91ddd139a3877d930c94843ad", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withLaunchVolumeCacheAddsCache", "signature": null, "start_line": 328, "end_line": 334, "nloc": 7, "method_source_normalized": "@TestvoidwithLaunchVolumeCacheAddsCache()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withLaunchCache(Cache.volume(\"launch-volume\"));\n\t\tassertThat(request.getLaunchCache()).isNull();\n\t\tassertThat(withCache.getLaunchCache()).isEqualTo(Cache.volume(\"launch-volume\"));\n\t}", "original_code": "@Test\n\tvoid withLaunchVolumeCacheAddsCache() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withLaunchCache(Cache.volume(\"launch-volume\"));\n\t\tassertThat(request.getLaunchCache()).isNull();\n\t\tassertThat(withCache.getLaunchCache()).isEqualTo(Cache.volume(\"launch-volume\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "launch", "volume", "cache", "adds", "cache", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "cache", "=", "request", ".", "with", "launch", "cache", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "launch", "cache", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "cache", ".", "get", "launch", "cache", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "volume", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.773895+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7e17fad05b38a2ec41438f527ffeb182955317d2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withLaunchBindCacheAddsCache", "signature": null, "start_line": 336, "end_line": 342, "nloc": 7, "method_source_normalized": "@TestvoidwithLaunchBindCacheAddsCache()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withLaunchCache(Cache.bind(\"/tmp/launch-cache\"));\n\t\tassertThat(request.getLaunchCache()).isNull();\n\t\tassertThat(withCache.getLaunchCache()).isEqualTo(Cache.bind(\"/tmp/launch-cache\"));\n\t}", "original_code": "@Test\n\tvoid withLaunchBindCacheAddsCache() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCache = request.withLaunchCache(Cache.bind(\"/tmp/launch-cache\"));\n\t\tassertThat(request.getLaunchCache()).isNull();\n\t\tassertThat(withCache.getLaunchCache()).isEqualTo(Cache.bind(\"/tmp/launch-cache\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "launch", "bind", "cache", "adds", "cache", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "cache", "=", "request", ".", "with", "launch", "cache", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "request", ".", "get", "launch", "cache", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "with", "cache", ".", "get", "launch", "cache", "(", ")", ")", ".", "is", "equal", "to", "(", "cache", ".", "bind", "(", "__STR__", ")", ")", ";", "}"], "token_count": 97, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.774177+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dc768fce3de6a492457a26633851b21679b199ea", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withLaunchVolumeCacheWhenCacheIsNullThrowsException", "signature": null, "start_line": 344, "end_line": 349, "nloc": 6, "method_source_normalized": "@TestvoidwithLaunchVolumeCacheWhenCacheIsNullThrowsException()throws IOException{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withLaunchCache(null))\n\t\t\t.withMessage(\"'launchCache' must not be null\");\n\t}", "original_code": "@Test\n\tvoid withLaunchVolumeCacheWhenCacheIsNullThrowsException() throws IOException {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withLaunchCache(null))\n\t\t\t.withMessage(\"'launchCache' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "with", "launch", "volume", "cache", "when", "cache", "is", "null", "throws", "exception", "(", ")", "throws", "io", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "launch", "cache", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 71, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.774433+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bac6e12ac73b74402b23e6259105ca1c3b336994", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withCreatedDateSetsCreatedDate", "signature": null, "start_line": 351, "end_line": 357, "nloc": 7, "method_source_normalized": "@TestvoidwithCreatedDateSetsCreatedDate()throws Exception{\n\t\tInstant createDate = Instant.now();\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreatedDate = request.withCreatedDate(createDate.toString());\n\t\tassertThat(withCreatedDate.getCreatedDate()).isEqualTo(createDate);\n\t}", "original_code": "@Test\n\tvoid withCreatedDateSetsCreatedDate() throws Exception {\n\t\tInstant createDate = Instant.now();\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreatedDate = request.withCreatedDate(createDate.toString());\n\t\tassertThat(withCreatedDate.getCreatedDate()).isEqualTo(createDate);\n\t}", "code_tokens": ["@", "test", "void", "with", "created", "date", "sets", "created", "date", "(", ")", "throws", "exception", "{", "instant", "create", "date", "=", "instant", ".", "now", "(", ")", ";", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "created", "date", "=", "request", ".", "with", "created", "date", "(", "create", "date", ".", "to", "string", "(", ")", ")", ";", "assert", "that", "(", "with", "created", "date", ".", "get", "created", "date", "(", ")", ")", ".", "is", "equal", "to", "(", "create", "date", ")", ";", "}"], "token_count": 88, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 89, "n_identifiers": 23, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.774704+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5915d09dd9d126a42d067f3be0c6dc0c82fd1cdc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withCreatedDateNowSetsCreatedDate", "signature": null, "start_line": 359, "end_line": 373, "nloc": 15, "method_source_normalized": "@TestvoidwithCreatedDateNowSetsCreatedDate()throws Exception{\n\t\tOffsetDateTime now = OffsetDateTime.now(UTC);\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreatedDate = request.withCreatedDate(\"now\");\n\t\tOffsetDateTime createdDate = OffsetDateTime.ofInstant(withCreatedDate.getCreatedDate(), UTC);\n\t\tassertThat(createdDate.getYear()).isEqualTo(now.getYear());\n\t\tassertThat(createdDate.getMonth()).isEqualTo(now.getMonth());\n\t\tassertThat(createdDate.getDayOfMonth()).isEqualTo(now.getDayOfMonth());\n\t\twithCreatedDate = request.withCreatedDate(\"NOW\");\n\t\tcreatedDate = OffsetDateTime.ofInstant(withCreatedDate.getCreatedDate(), UTC);\n\t\tassertThat(createdDate.getYear()).isEqualTo(now.getYear());\n\t\tassertThat(createdDate.getMonth()).isEqualTo(now.getMonth());\n\t\tassertThat(createdDate.getDayOfMonth()).isEqualTo(now.getDayOfMonth());\n\t}", "original_code": "@Test\n\tvoid withCreatedDateNowSetsCreatedDate() throws Exception {\n\t\tOffsetDateTime now = OffsetDateTime.now(UTC);\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withCreatedDate = request.withCreatedDate(\"now\");\n\t\tOffsetDateTime createdDate = OffsetDateTime.ofInstant(withCreatedDate.getCreatedDate(), UTC);\n\t\tassertThat(createdDate.getYear()).isEqualTo(now.getYear());\n\t\tassertThat(createdDate.getMonth()).isEqualTo(now.getMonth());\n\t\tassertThat(createdDate.getDayOfMonth()).isEqualTo(now.getDayOfMonth());\n\t\twithCreatedDate = request.withCreatedDate(\"NOW\");\n\t\tcreatedDate = OffsetDateTime.ofInstant(withCreatedDate.getCreatedDate(), UTC);\n\t\tassertThat(createdDate.getYear()).isEqualTo(now.getYear());\n\t\tassertThat(createdDate.getMonth()).isEqualTo(now.getMonth());\n\t\tassertThat(createdDate.getDayOfMonth()).isEqualTo(now.getDayOfMonth());\n\t}", "code_tokens": ["@", "test", "void", "with", "created", "date", "now", "sets", "created", "date", "(", ")", "throws", "exception", "{", "offset", "date", "time", "now", "=", "offset", "date", "time", ".", "now", "(", "utc", ")", ";", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "created", "date", "=", "request", ".", "with", "created", "date", "(", "__STR__", ")", ";", "offset", "date", "time", "created", "date", "=", "offset", "date", "time", ".", "of", "instant", "(", "with", "created", "date", ".", "get", "created", "date", "(", ")", ",", "utc", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "year", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "year", "(", ")", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "month", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "month", "(", ")", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "day", "of", "month", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "day", "of", "month", "(", ")", ")", ";", "with", "created", "date", "=", "request", ".", "with", "created", "date", "(", "__STR__", ")", ";", "created", "date", "=", "offset", "date", "time", ".", "of", "instant", "(", "with", "created", "date", ".", "get", "created", "date", "(", ")", ",", "utc", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "year", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "year", "(", ")", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "month", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "month", "(", ")", ")", ";", "assert", "that", "(", "created", "date", ".", "get", "day", "of", "month", "(", ")", ")", ".", "is", "equal", "to", "(", "now", ".", "get", "day", "of", "month", "(", ")", ")", ";", "}"], "token_count": 279, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 281, "n_identifiers": 69, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 62, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.775112+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "55e6c0eaeb43948d65880daec08251b17018e4c0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withCreatedDateAndInvalidDateThrowsException", "signature": null, "start_line": 375, "end_line": 380, "nloc": 6, "method_source_normalized": "@TestvoidwithCreatedDateAndInvalidDateThrowsException()throws Exception{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withCreatedDate(\"not a date\"))\n\t\t\t.withMessageContaining(\"'not a date'\");\n\t}", "original_code": "@Test\n\tvoid withCreatedDateAndInvalidDateThrowsException() throws Exception {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> request.withCreatedDate(\"not a date\"))\n\t\t\t.withMessageContaining(\"'not a date'\");\n\t}", "code_tokens": ["@", "test", "void", "with", "created", "date", "and", "invalid", "date", "throws", "exception", "(", ")", "throws", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "request", ".", "with", "created", "date", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 69, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.775419+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "05dcf4a78cfc5c12e883fa81b8ca1d00a5ede1d3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withApplicationDirectorySetsApplicationDirectory", "signature": null, "start_line": 382, "end_line": 387, "nloc": 6, "method_source_normalized": "@TestvoidwithApplicationDirectorySetsApplicationDirectory()throws Exception{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withApplicationDirectory(\"/application\");\n\t\tassertThat(withAppDir.getApplicationDirectory()).isEqualTo(\"/application\");\n\t}", "original_code": "@Test\n\tvoid withApplicationDirectorySetsApplicationDirectory() throws Exception {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withApplicationDirectory(\"/application\");\n\t\tassertThat(withAppDir.getApplicationDirectory()).isEqualTo(\"/application\");\n\t}", "code_tokens": ["@", "test", "void", "with", "application", "directory", "sets", "application", "directory", "(", ")", "throws", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "app", "dir", "=", "request", ".", "with", "application", "directory", "(", "__STR__", ")", ";", "assert", "that", "(", "with", "app", "dir", ".", "get", "application", "directory", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 71, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.775686+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b4d2dfa6ebb4d14335fb9aff7a93bdeb816fc82e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withSecurityOptionsSetsSecurityOptions", "signature": null, "start_line": 389, "end_line": 394, "nloc": 6, "method_source_normalized": "@TestvoidwithSecurityOptionsSetsSecurityOptions()throws Exception{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withSecurityOptions(List.of(\"label=user:USER\", \"label=role:ROLE\"));\n\t\tassertThat(withAppDir.getSecurityOptions()).containsExactly(\"label=user:USER\", \"label=role:ROLE\");\n\t}", "original_code": "@Test\n\tvoid withSecurityOptionsSetsSecurityOptions() throws Exception {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withSecurityOptions(List.of(\"label=user:USER\", \"label=role:ROLE\"));\n\t\tassertThat(withAppDir.getSecurityOptions()).containsExactly(\"label=user:USER\", \"label=role:ROLE\");\n\t}", "code_tokens": ["@", "test", "void", "with", "security", "options", "sets", "security", "options", "(", ")", "throws", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "app", "dir", "=", "request", ".", "with", "security", "options", "(", "list", ".", "of", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "with", "app", "dir", ".", "get", "security", "options", "(", ")", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 81, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.775967+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "05b112d66d99352619d95dd667e1c92678049949", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "withPlatformSetsPlatform", "signature": null, "start_line": 396, "end_line": 401, "nloc": 6, "method_source_normalized": "@TestvoidwithPlatformSetsPlatform()throws Exception{\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withImagePlatform(\"linux/arm64\");\n\t\tassertThat(withAppDir.getImagePlatform()).isEqualTo(ImagePlatform.of(\"linux/arm64\"));\n\t}", "original_code": "@Test\n\tvoid withPlatformSetsPlatform() throws Exception {\n\t\tBuildRequest request = BuildRequest.forJarFile(writeTestJarFile(\"my-app-0.0.1.jar\"));\n\t\tBuildRequest withAppDir = request.withImagePlatform(\"linux/arm64\");\n\t\tassertThat(withAppDir.getImagePlatform()).isEqualTo(ImagePlatform.of(\"linux/arm64\"));\n\t}", "code_tokens": ["@", "test", "void", "with", "platform", "sets", "platform", "(", ")", "throws", "exception", "{", "build", "request", "request", "=", "build", "request", ".", "for", "jar", "file", "(", "write", "test", "jar", "file", "(", "__STR__", ")", ")", ";", "build", "request", "with", "app", "dir", "=", "request", ".", "with", "image", "platform", "(", "__STR__", ")", ";", "assert", "that", "(", "with", "app", "dir", ".", "get", "image", "platform", "(", ")", ")", ".", "is", "equal", "to", "(", "image", "platform", ".", "of", "(", "__STR__", ")", ")", ";", "}"], "token_count": 75, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.776237+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "389167765b9b6234066506b9c0c4a94cf9d92bc5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "hasExpectedJarContent", "signature": null, "start_line": 403, "end_line": 417, "nloc": 15, "method_source_normalized": "privatevoidhasExpectedJarContent(TarArchive archive){\n\t\ttry {\n\t\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\t\tarchive.writeTo(outputStream);\n\t\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"spring/\");\n\t\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"spring/boot\");\n\t\t\t\tassertThat(tar.getNextEntry()).isNull();\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "original_code": "private void hasExpectedJarContent(TarArchive archive) {\n\t\ttry {\n\t\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\t\tarchive.writeTo(outputStream);\n\t\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"spring/\");\n\t\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"spring/boot\");\n\t\t\t\tassertThat(tar.getNextEntry()).isNull();\n\t\t\t}\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tthrow new IllegalStateException(ex);\n\t\t}\n\t}", "code_tokens": ["private", "void", "has", "expected", "jar", "content", "(", "tar", "archive", "archive", ")", "{", "try", "{", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "archive", ".", "write", "to", "(", "output", "stream", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", "}", "catch", "(", "io", "exception", "ex", ")", "{", "throw", "new", "illegal", "state", "exception", "(", "ex", ")", ";", "}", "}"], "token_count": 155, "vocab_size": 41, "cyclomatic_complexity": 2, "ast_node_count": 167, "n_identifiers": 33, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 76, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.776561+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f89d1f6fae0d8cec986e4196dca88afbc7ce80bf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "writeTestJarFile", "signature": null, "start_line": 419, "end_line": 423, "nloc": 5, "method_source_normalized": "privateFilewriteTestJarFile(String name)throws IOException{\n\t\tFile file = new File(this.tempDir, name);\n\t\twriteTestJarFile(file);\n\t\treturn file;\n\t}", "original_code": "private File writeTestJarFile(String name) throws IOException {\n\t\tFile file = new File(this.tempDir, name);\n\t\twriteTestJarFile(file);\n\t\treturn file;\n\t}", "code_tokens": ["private", "file", "write", "test", "jar", "file", "(", "string", "name", ")", "throws", "io", "exception", "{", "file", "file", "=", "new", "file", "(", "this", ".", "temp", "dir", ",", "name", ")", ";", "write", "test", "jar", "file", "(", "file", ")", ";", "return", "file", ";", "}"], "token_count": 40, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.776895+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6f96428e44396ea560dc3b9a8928f4ed1535b18a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildRequestTests.java", "file_blob_sha": null, "method_name": "writeTestJarFile", "signature": null, "start_line": 425, "end_line": 435, "nloc": 11, "method_source_normalized": "privatevoidwriteTestJarFile(File file)throws IOException{\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t\tZipArchiveEntry fileEntry = new ZipArchiveEntry(\"spring/boot\");\n\t\t\tzip.putArchiveEntry(fileEntry);\n\t\t\tzip.write(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "original_code": "private void writeTestJarFile(File file) throws IOException {\n\t\ttry (ZipArchiveOutputStream zip = new ZipArchiveOutputStream(file)) {\n\t\t\tZipArchiveEntry dirEntry = new ZipArchiveEntry(\"spring/\");\n\t\t\tzip.putArchiveEntry(dirEntry);\n\t\t\tzip.closeArchiveEntry();\n\t\t\tZipArchiveEntry fileEntry = new ZipArchiveEntry(\"spring/boot\");\n\t\t\tzip.putArchiveEntry(fileEntry);\n\t\t\tzip.write(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\t\tzip.closeArchiveEntry();\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "test", "jar", "file", "(", "file", "file", ")", "throws", "io", "exception", "{", "try", "(", "zip", "archive", "output", "stream", "zip", "=", "new", "zip", "archive", "output", "stream", "(", "file", ")", ")", "{", "zip", "archive", "entry", "dir", "entry", "=", "new", "zip", "archive", "entry", "(", "__STR__", ")", ";", "zip", ".", "put", "archive", "entry", "(", "dir", "entry", ")", ";", "zip", ".", "close", "archive", "entry", "(", ")", ";", "zip", "archive", "entry", "file", "entry", "=", "new", "zip", "archive", "entry", "(", "__STR__", ")", ";", "zip", ".", "put", "archive", "entry", "(", "file", "entry", ")", ";", "zip", ".", "write", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "zip", ".", "close", "archive", "entry", "(", ")", ";", "}", "}"], "token_count": 115, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 120, "n_identifiers": 29, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.777177+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "930272c97bc2cc268e15bd5947dc1337316b3076", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenValueIsEmptyThrowsException", "signature": null, "start_line": 33, "end_line": 37, "nloc": 5, "method_source_normalized": "@TestvoidofWhenValueIsEmptyThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackReference.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenValueIsEmptyThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuildpackReference.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "value", "is", "empty", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.778446+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "21d652a0cffcf0dab6f1c7958982145454fc432b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "ofCreatesInstance", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "@TestvoidofCreatesInstance(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference).isNotNull();\n\t}", "original_code": "@Test\n\tvoid ofCreatesInstance() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "instance", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 34, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 41, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.778716+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bea09b3fb40cb8408fb90831fda6456405502f26", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "toStringReturnsValue", "signature": null, "start_line": 45, "end_line": 49, "nloc": 5, "method_source_normalized": "@TestvoidtoStringReturnsValue(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference).hasToString(\"test\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsValue() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference).hasToString(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "value", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 36, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.779018+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e43091d1b38f55eda36859b00ad0df2927f1191f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 51, "end_line": 58, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tBuildpackReference a = BuildpackReference.of(\"test1\");\n\t\tBuildpackReference b = BuildpackReference.of(\"test1\");\n\t\tBuildpackReference c = BuildpackReference.of(\"test2\");\n\t\tassertThat(a).isEqualTo(a).isEqualTo(b).isNotEqualTo(c);\n\t\tassertThat(a).hasSameHashCodeAs(b);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tBuildpackReference a = BuildpackReference.of(\"test1\");\n\t\tBuildpackReference b = BuildpackReference.of(\"test1\");\n\t\tBuildpackReference c = BuildpackReference.of(\"test2\");\n\t\tassertThat(a).isEqualTo(a).isEqualTo(b).isNotEqualTo(c);\n\t\tassertThat(a).hasSameHashCodeAs(b);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "buildpack", "reference", "a", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "reference", "b", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "reference", "c", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "a", ")", ".", "is", "equal", "to", "(", "a", ")", ".", "is", "equal", "to", "(", "b", ")", ".", "is", "not", "equal", "to", "(", "c", ")", ";", "assert", "that", "(", "a", ")", ".", "has", "same", "hash", "code", "as", "(", "b", ")", ";", "}"], "token_count": 90, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.779325+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2469fdc4dc09b691584a37f94f1eb587b2012c02", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "hasPrefixWhenPrefixMatchReturnsTrue", "signature": null, "start_line": 60, "end_line": 64, "nloc": 5, "method_source_normalized": "@TestvoidhasPrefixWhenPrefixMatchReturnsTrue(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.hasPrefix(\"te\")).isTrue();\n\t}", "original_code": "@Test\n\tvoid hasPrefixWhenPrefixMatchReturnsTrue() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.hasPrefix(\"te\")).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "has", "prefix", "when", "prefix", "match", "returns", "true", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "has", "prefix", "(", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.779586+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "85f63d561b4cd53889ca09346e2050b7f2f7cfdf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "hasPrefixWhenPrefixMismatchReturnsFalse", "signature": null, "start_line": 66, "end_line": 70, "nloc": 5, "method_source_normalized": "@TestvoidhasPrefixWhenPrefixMismatchReturnsFalse(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.hasPrefix(\"st\")).isFalse();\n\t}", "original_code": "@Test\n\tvoid hasPrefixWhenPrefixMismatchReturnsFalse() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.hasPrefix(\"st\")).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "has", "prefix", "when", "prefix", "mismatch", "returns", "false", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "has", "prefix", "(", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 43, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.779832+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a9302fc365ab82495a7caa8881da301803c73cf2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "getSubReferenceWhenPrefixMatchReturnsSubReference", "signature": null, "start_line": 72, "end_line": 76, "nloc": 5, "method_source_normalized": "@TestvoidgetSubReferenceWhenPrefixMatchReturnsSubReference(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.getSubReference(\"te\")).isEqualTo(\"st\");\n\t}", "original_code": "@Test\n\tvoid getSubReferenceWhenPrefixMatchReturnsSubReference() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.getSubReference(\"te\")).isEqualTo(\"st\");\n\t}", "code_tokens": ["@", "test", "void", "get", "sub", "reference", "when", "prefix", "match", "returns", "sub", "reference", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "sub", "reference", "(", "__STR__", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.780074+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e52b07be2344cb4eeec2920009b8b269a90e9f9a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "getSubReferenceWhenPrefixMismatchReturnsNull", "signature": null, "start_line": 78, "end_line": 82, "nloc": 5, "method_source_normalized": "@TestvoidgetSubReferenceWhenPrefixMismatchReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.getSubReference(\"st\")).isNull();\n\t}", "original_code": "@Test\n\tvoid getSubReferenceWhenPrefixMismatchReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"test\");\n\t\tassertThat(reference.getSubReference(\"st\")).isNull();\n\t}", "code_tokens": ["@", "test", "void", "get", "sub", "reference", "when", "prefix", "mismatch", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "sub", "reference", "(", "__STR__", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 45, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.780316+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e5f36eba57817a7de5b45238bfc2d14a1d7445e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "asPathWhenFileUrlReturnsPath", "signature": null, "start_line": 84, "end_line": 88, "nloc": 5, "method_source_normalized": "@TestvoidasPathWhenFileUrlReturnsPath(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"file:///test.dat\");\n\t\tassertThat(reference.asPath()).isEqualTo(Paths.get(\"/test.dat\"));\n\t}", "original_code": "@Test\n\tvoid asPathWhenFileUrlReturnsPath() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"file:///test.dat\");\n\t\tassertThat(reference.asPath()).isEqualTo(Paths.get(\"/test.dat\"));\n\t}", "code_tokens": ["@", "test", "void", "as", "path", "when", "file", "url", "returns", "path", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "as", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "paths", ".", "get", "(", "__STR__", ")", ")", ";", "}"], "token_count": 49, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.780575+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "44ff8ba5dd42264715b2f634f1919b12b36be5fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpackReferenceTests.java", "file_blob_sha": null, "method_name": "asPathWhenPathReturnsPath", "signature": null, "start_line": 90, "end_line": 94, "nloc": 5, "method_source_normalized": "@TestvoidasPathWhenPathReturnsPath(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test.dat\");\n\t\tassertThat(reference.asPath()).isEqualTo(Paths.get(\"/test.dat\"));\n\t}", "original_code": "@Test\n\tvoid asPathWhenPathReturnsPath() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test.dat\");\n\t\tassertThat(reference.asPath()).isEqualTo(Paths.get(\"/test.dat\"));\n\t}", "code_tokens": ["@", "test", "void", "as", "path", "when", "path", "returns", "path", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "as", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "paths", ".", "get", "(", "__STR__", ")", ")", ";", "}"], "token_count": 48, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.780843+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f3ef8e416fb5830979aa24840858817bcebebb75", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "ofWhenBuildpacksIsNullReturnsEmpty", "signature": null, "start_line": 42, "end_line": 47, "nloc": 6, "method_source_normalized": "@TestvoidofWhenBuildpacksIsNullReturnsEmpty(){\n\t\tBuildpacks buildpacks = Buildpacks.of(null);\n\t\tassertThat(buildpacks).isSameAs(Buildpacks.EMPTY);\n\t\tassertThat(buildpacks.getBuildpacks()).isEmpty();\n\t}", "original_code": "@Test\n\tvoid ofWhenBuildpacksIsNullReturnsEmpty() {\n\t\tBuildpacks buildpacks = Buildpacks.of(null);\n\t\tassertThat(buildpacks).isSameAs(Buildpacks.EMPTY);\n\t\tassertThat(buildpacks.getBuildpacks()).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "buildpacks", "is", "null", "returns", "empty", "(", ")", "{", "buildpacks", "buildpacks", "=", "buildpacks", ".", "of", "(", "null", ")", ";", "assert", "that", "(", "buildpacks", ")", ".", "is", "same", "as", "(", "buildpacks", ".", "empty", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 55, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.782478+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3b2dadb074b7d82834bfff3f554e4dab5b0b0245", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "ofReturnsBuildpacks", "signature": null, "start_line": 49, "end_line": 56, "nloc": 8, "method_source_normalized": "@TestvoidofReturnsBuildpacks(){\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tBuildpacks buildpacks = Buildpacks.of(buildpackList);\n\t\tassertThat(buildpacks.getBuildpacks()).isEqualTo(buildpackList);\n\t}", "original_code": "@Test\n\tvoid ofReturnsBuildpacks() {\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tBuildpacks buildpacks = Buildpacks.of(buildpackList);\n\t\tassertThat(buildpacks.getBuildpacks()).isEqualTo(buildpackList);\n\t}", "code_tokens": ["@", "test", "void", "of", "returns", "buildpacks", "(", ")", "{", "list", "<", "buildpack", ">", "buildpack", "list", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpacks", "buildpacks", "=", "buildpacks", ".", "of", "(", "buildpack", "list", ")", ";", "assert", "that", "(", "buildpacks", ".", "get", "buildpacks", "(", ")", ")", ".", "is", "equal", "to", "(", "buildpack", "list", ")", ";", "}"], "token_count": 85, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 105, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.782790+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "43ac420bcfc51f7e8fe9d1d85fdf4c9ec24ecbd3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "applyWritesLayersAndOrderLayer", "signature": null, "start_line": 58, "end_line": 72, "nloc": 15, "method_source_normalized": "@TestvoidapplyWritesLayersAndOrderLayer()throws Exception{\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack3\", null));\n\t\tBuildpacks buildpacks = Buildpacks.of(buildpackList);\n\t\tList<Layer> layers = new ArrayList<>();\n\t\tbuildpacks.apply(layers::add);\n\t\tassertThat(layers).hasSize(4);\n\t\tassertThatLayerContentIsCorrect(layers.get(0), \"example_buildpack1/0.0.1\");\n\t\tassertThatLayerContentIsCorrect(layers.get(1), \"example_buildpack2/0.0.2\");\n\t\tassertThatLayerContentIsCorrect(layers.get(2), \"example_buildpack3/null\");\n\t\tassertThatOrderLayerContentIsCorrect(layers.get(3));\n\t}", "original_code": "@Test\n\tvoid applyWritesLayersAndOrderLayer() throws Exception {\n\t\tList<Buildpack> buildpackList = new ArrayList<>();\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack1\", \"0.0.1\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack2\", \"0.0.2\"));\n\t\tbuildpackList.add(new TestBuildpack(\"example/buildpack3\", null));\n\t\tBuildpacks buildpacks = Buildpacks.of(buildpackList);\n\t\tList<Layer> layers = new ArrayList<>();\n\t\tbuildpacks.apply(layers::add);\n\t\tassertThat(layers).hasSize(4);\n\t\tassertThatLayerContentIsCorrect(layers.get(0), \"example_buildpack1/0.0.1\");\n\t\tassertThatLayerContentIsCorrect(layers.get(1), \"example_buildpack2/0.0.2\");\n\t\tassertThatLayerContentIsCorrect(layers.get(2), \"example_buildpack3/null\");\n\t\tassertThatOrderLayerContentIsCorrect(layers.get(3));\n\t}", "code_tokens": ["@", "test", "void", "apply", "writes", "layers", "and", "order", "layer", "(", ")", "throws", "exception", "{", "list", "<", "buildpack", ">", "buildpack", "list", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "__STR__", ")", ")", ";", "buildpack", "list", ".", "add", "(", "new", "test", "buildpack", "(", "__STR__", ",", "null", ")", ")", ";", "buildpacks", "buildpacks", "=", "buildpacks", ".", "of", "(", "buildpack", "list", ")", ";", "list", "<", "layer", ">", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpacks", ".", "apply", "(", "layers", "::", "add", ")", ";", "assert", "that", "(", "layers", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "layer", "content", "is", "correct", "(", "layers", ".", "get", "(", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "layer", "content", "is", "correct", "(", "layers", ".", "get", "(", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "layer", "content", "is", "correct", "(", "layers", ".", "get", "(", "__NUM__", ")", ",", "__STR__", ")", ";", "assert", "that", "order", "layer", "content", "is", "correct", "(", "layers", ".", "get", "(", "__NUM__", ")", ")", ";", "}"], "token_count": 188, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 220, "n_identifiers": 44, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.783177+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1e7c78f76a327d70254d905599b5cc5ee6481ef4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "assertThatLayerContentIsCorrect", "signature": null, "start_line": 74, "end_line": 81, "nloc": 8, "method_source_normalized": "privatevoidassertThatLayerContentIsCorrect(Layer layer, String path)throws IOException{\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tlayer.writeTo(out);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(out.toByteArray()))) {\n\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"/cnb/buildpacks/\" + path + \"/buildpack.toml\");\n\t\t\tassertThat(tar.getNextEntry()).isNull();\n\t\t}\n\t}", "original_code": "private void assertThatLayerContentIsCorrect(Layer layer, String path) throws IOException {\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tlayer.writeTo(out);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(out.toByteArray()))) {\n\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"/cnb/buildpacks/\" + path + \"/buildpack.toml\");\n\t\t\tassertThat(tar.getNextEntry()).isNull();\n\t\t}\n\t}", "code_tokens": ["private", "void", "assert", "that", "layer", "content", "is", "correct", "(", "layer", "layer", ",", "string", "path", ")", "throws", "io", "exception", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "out", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", "+", "path", "+", "__STR__", ")", ";", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", "}"], "token_count": 119, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 28, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.783516+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4d44e455337f382584de54fdff66a824dd5dc61e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "assertThatOrderLayerContentIsCorrect", "signature": null, "start_line": 83, "end_line": 92, "nloc": 10, "method_source_normalized": "privatevoidassertThatOrderLayerContentIsCorrect(Layer layer)throws IOException{\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tlayer.writeTo(out);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(out.toByteArray()))) {\n\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"/cnb/order.toml\");\n\t\t\tbyte[] content = StreamUtils.copyToByteArray(tar);\n\t\t\tString toml = new String(content, StandardCharsets.UTF_8);\n\t\t\tassertThat(toml).isEqualTo(getExpectedToml());\n\t\t}\n\t}", "original_code": "private void assertThatOrderLayerContentIsCorrect(Layer layer) throws IOException {\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tlayer.writeTo(out);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(out.toByteArray()))) {\n\t\t\tassertThat(tar.getNextEntry().getName()).isEqualTo(\"/cnb/order.toml\");\n\t\t\tbyte[] content = StreamUtils.copyToByteArray(tar);\n\t\t\tString toml = new String(content, StandardCharsets.UTF_8);\n\t\t\tassertThat(toml).isEqualTo(getExpectedToml());\n\t\t}\n\t}", "code_tokens": ["private", "void", "assert", "that", "order", "layer", "content", "is", "correct", "(", "layer", "layer", ")", "throws", "io", "exception", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "out", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "out", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "assert", "that", "(", "tar", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "byte", "[", "]", "content", "=", "stream", "utils", ".", "copy", "to", "byte", "array", "(", "tar", ")", ";", "string", "toml", "=", "new", "string", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "assert", "that", "(", "toml", ")", ".", "is", "equal", "to", "(", "get", "expected", "toml", "(", ")", ")", ";", "}", "}"], "token_count": 144, "vocab_size": 49, "cyclomatic_complexity": 1, "ast_node_count": 153, "n_identifiers": 35, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 55, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.783850+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99dfdb6bd0022b3d44aae59a6056519256bac541", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuildpacksTests.java", "file_blob_sha": null, "method_name": "getExpectedToml", "signature": null, "start_line": 94, "end_line": 110, "nloc": 17, "method_source_normalized": "privateStringgetExpectedToml(){\n\t\tStringBuilder toml = new StringBuilder();\n\t\ttoml.append(\"[[order]]\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack1\\\"\\n\");\n\t\ttoml.append(\"    version = \\\"0.0.1\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack2\\\"\\n\");\n\t\ttoml.append(\"    version = \\\"0.0.2\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack3\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\treturn toml.toString();\n\t}", "original_code": "private String getExpectedToml() {\n\t\tStringBuilder toml = new StringBuilder();\n\t\ttoml.append(\"[[order]]\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack1\\\"\\n\");\n\t\ttoml.append(\"    version = \\\"0.0.1\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack2\\\"\\n\");\n\t\ttoml.append(\"    version = \\\"0.0.2\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\ttoml.append(\"  [[order.group]]\\n\");\n\t\ttoml.append(\"    id = \\\"example/buildpack3\\\"\\n\");\n\t\ttoml.append(\"\\n\");\n\t\treturn toml.toString();\n\t}", "code_tokens": ["private", "string", "get", "expected", "toml", "(", ")", "{", "string", "builder", "toml", "=", "new", "string", "builder", "(", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "toml", ".", "append", "(", "__STR__", ")", ";", "return", "toml", ".", "to", "string", "(", ")", ";", "}"], "token_count": 118, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 163, "n_identifiers": 33, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 91, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.784164+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed271edf9e24aa87446ba5946bd55bdab7d2314c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "TestTarGzip", "signature": null, "start_line": 49, "end_line": 51, "nloc": 3, "method_source_normalized": "TestTarGzip(File buildpackDir){\n\t\tthis.buildpackDir = buildpackDir;\n\t}", "original_code": "TestTarGzip(File buildpackDir) {\n\t\tthis.buildpackDir = buildpackDir;\n\t}", "code_tokens": ["test", "tar", "gzip", "(", "file", "buildpack", "dir", ")", "{", "this", ".", "buildpack", "dir", "=", "buildpack", "dir", ";", "}"], "token_count": 18, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.786400+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0bad1bf8a0cf46a838c0addcaee46337e2b274f9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "createArchive", "signature": null, "start_line": 53, "end_line": 55, "nloc": 3, "method_source_normalized": "PathcreateArchive()throws Exception{\n\t\treturn createArchive(true);\n\t}", "original_code": "Path createArchive() throws Exception {\n\t\treturn createArchive(true);\n\t}", "code_tokens": ["path", "create", "archive", "(", ")", "throws", "exception", "{", "return", "create", "archive", "(", "true", ")", ";", "}"], "token_count": 16, "vocab_size": 12, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.786671+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "090bc4341936110127944d8f6c5b4f1fb14c8ca9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "createEmptyArchive", "signature": null, "start_line": 57, "end_line": 59, "nloc": 3, "method_source_normalized": "PathcreateEmptyArchive()throws Exception{\n\t\treturn createArchive(false);\n\t}", "original_code": "Path createEmptyArchive() throws Exception {\n\t\treturn createArchive(false);\n\t}", "code_tokens": ["path", "create", "empty", "archive", "(", ")", "throws", "exception", "{", "return", "create", "archive", "(", "false", ")", ";", "}"], "token_count": 17, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 21, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.786911+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "37a18bd896c5f1181cbdd1b30336f3007045539f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "createArchive", "signature": null, "start_line": 61, "end_line": 68, "nloc": 8, "method_source_normalized": "privatePathcreateArchive(boolean addContent)throws Exception{\n\t\tPath path = Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.tar\");\n\t\tPath archive = Files.createFile(path);\n\t\tif (addContent) {\n\t\t\twriteBuildpackContentToArchive(archive);\n\t\t}\n\t\treturn compressBuildpackArchive(archive);\n\t}", "original_code": "private Path createArchive(boolean addContent) throws Exception {\n\t\tPath path = Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.tar\");\n\t\tPath archive = Files.createFile(path);\n\t\tif (addContent) {\n\t\t\twriteBuildpackContentToArchive(archive);\n\t\t}\n\t\treturn compressBuildpackArchive(archive);\n\t}", "code_tokens": ["private", "path", "create", "archive", "(", "boolean", "add", "content", ")", "throws", "exception", "{", "path", "path", "=", "paths", ".", "get", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ",", "__STR__", ")", ";", "path", "archive", "=", "files", ".", "create", "file", "(", "path", ")", ";", "if", "(", "add", "content", ")", "{", "write", "buildpack", "content", "to", "archive", "(", "archive", ")", ";", "}", "return", "compress", "buildpack", "archive", "(", "archive", ")", ";", "}"], "token_count": 69, "vocab_size": 31, "cyclomatic_complexity": 2, "ast_node_count": 82, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.787187+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b7edabd8bbdfdc64ab6b573d4153a37352411812", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "compressBuildpackArchive", "signature": null, "start_line": 70, "end_line": 75, "nloc": 6, "method_source_normalized": "privatePathcompressBuildpackArchive(Path archive)throws Exception{\n\t\tPath tgzPath = Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.tgz\");\n\t\tFileCopyUtils.copy(Files.newInputStream(archive),\n\t\t\t\tnew GzipCompressorOutputStream(Files.newOutputStream(tgzPath)));\n\t\treturn tgzPath;\n\t}", "original_code": "private Path compressBuildpackArchive(Path archive) throws Exception {\n\t\tPath tgzPath = Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.tgz\");\n\t\tFileCopyUtils.copy(Files.newInputStream(archive),\n\t\t\t\tnew GzipCompressorOutputStream(Files.newOutputStream(tgzPath)));\n\t\treturn tgzPath;\n\t}", "code_tokens": ["private", "path", "compress", "buildpack", "archive", "(", "path", "archive", ")", "throws", "exception", "{", "path", "tgz", "path", "=", "paths", ".", "get", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ",", "__STR__", ")", ";", "file", "copy", "utils", ".", "copy", "(", "files", ".", "new", "input", "stream", "(", "archive", ")", ",", "new", "gzip", "compressor", "output", "stream", "(", "files", ".", "new", "output", "stream", "(", "tgz", "path", ")", ")", ")", ";", "return", "tgz", "path", ";", "}"], "token_count": 72, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 78, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.787465+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9e2fda65ff55da30d13620abf2978c62dddfe948", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/TestTarGzip.java", "file_blob_sha": null, "method_name": "writeBuildpackContentToArchive", "signature": null, "start_line": 77, "end_line": 100, "nloc": 24, "method_source_normalized": "privatevoidwriteBuildpackContentToArchive(Path archive)throws Exception{\n\t\tStringBuilder buildpackToml = new StringBuilder();\n\t\tbuildpackToml.append(\"[buildpack]\\n\");\n\t\tbuildpackToml.append(\"id = \\\"example/buildpack1\\\"\\n\");\n\t\tbuildpackToml.append(\"version = \\\"0.0.1\\\"\\n\");\n\t\tbuildpackToml.append(\"name = \\\"Example buildpack\\\"\\n\");\n\t\tbuildpackToml.append(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\\n\");\n\t\tbuildpackToml.append(\"[[stacks]]\\n\");\n\t\tbuildpackToml.append(\"id = \\\"io.buildpacks.stacks.bionic\\\"\\n\");\n\t\tString detectScript = \"\"\"\n\t\t\t\t#!/usr/bin/env bash\n\t\t\t\techo \"---> detect\"\n\t\t\t\t\"\"\";\n\t\tString buildScript = \"\"\"\n\t\t\t\t#!/usr/bin/env bash\n\t\t\t\techo \"---> build\"\n\t\t\t\t\"\"\";\n\t\ttry (TarArchiveOutputStream tar = new TarArchiveOutputStream(Files.newOutputStream(archive))) {\n\t\t\twriteEntry(tar, \"buildpack.toml\", buildpackToml.toString());\n\t\t\twriteEntry(tar, \"bin/\");\n\t\t\twriteEntry(tar, \"bin/detect\", detectScript);\n\t\t\twriteEntry(tar, \"bin/build\", buildScript);\n\t\t\ttar.finish();\n\t\t}", "original_code": "private void writeBuildpackContentToArchive(Path archive) throws Exception {\n\t\tStringBuilder buildpackToml = new StringBuilder();\n\t\tbuildpackToml.append(\"[buildpack]\\n\");\n\t\tbuildpackToml.append(\"id = \\\"example/buildpack1\\\"\\n\");\n\t\tbuildpackToml.append(\"version = \\\"0.0.1\\\"\\n\");\n\t\tbuildpackToml.append(\"name = \\\"Example buildpack\\\"\\n\");\n\t\tbuildpackToml.append(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\\n\");\n\t\tbuildpackToml.append(\"[[stacks]]\\n\");\n\t\tbuildpackToml.append(\"id = \\\"io.buildpacks.stacks.bionic\\\"\\n\");\n\t\tString detectScript = \"\"\"\n\t\t\t\t#!/usr/bin/env bash\n\t\t\t\techo \"---> detect\"\n\t\t\t\t\"\"\";\n\t\tString buildScript = \"\"\"\n\t\t\t\t#!/usr/bin/env bash\n\t\t\t\techo \"---> build\"\n\t\t\t\t\"\"\";\n\t\ttry (TarArchiveOutputStream tar = new TarArchiveOutputStream(Files.newOutputStream(archive))) {\n\t\t\twriteEntry(tar, \"buildpack.toml\", buildpackToml.toString());\n\t\t\twriteEntry(tar, \"bin/\");\n\t\t\twriteEntry(tar, \"bin/detect\", detectScript);\n\t\t\twriteEntry(tar, \"bin/build\", buildScript);\n\t\t\ttar.finish();\n\t\t}", "code_tokens": ["private", "void", "write", "buildpack", "content", "to", "archive", "(", "path", "archive", ")", "throws", "exception", "{", "string", "builder", "buildpack", "toml", "=", "new", "string", "builder", "(", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "buildpack", "toml", ".", "append", "(", "__STR__", ")", ";", "string", "detect", "script", "=", "__STR__", "\"\n\t\t\t\t#", "!", "/", "usr", "/", "bin", "/", "env", "bash", "echo", "__STR__", "__STR__", "\";", "string", "build", "script", "=", "__STR__", "\"\n\t\t\t\t#", "!", "/", "usr", "/", "bin", "/", "env", "bash", "echo", "__STR__", "__STR__", "\";", "try", "(", "tar", "archive", "output", "stream", "tar", "=", "new", "tar", "archive", "output", "stream", "(", "files", ".", "new", "output", "stream", "(", "archive", ")", ")", ")", "{", "write", "entry", "(", "tar", ",", "__STR__", ",", "buildpack", "toml", ".", "to", "string", "(", ")", ")", ";", "write", "entry", "(", "tar", ",", "__STR__", ")", ";", "write", "entry", "(", "tar", ",", "__STR__", ",", "detect", "script", ")", ";", "write", "entry", "(", "tar", ",", "__STR__", ",", "build", "script", ")", ";", "tar", ".", "finish", "(", ")", ";", "}"], "token_count": 195, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 230, "n_identifiers": 55, "ast_max_depth": 13, "ast_error_count": 9, "ast_error_nodes": ["env bash\n\t\t\t\techo \"---> build\"\n\t\t\t\t\"\"\";\n\t\ttry (TarArchiveOutputStream tar = new TarArchiveOutputStream(Files.newOutputStream(archive))) {", "TarArchiveOutputStream tar =", "\";", "\"\n\t\t\t\t#!", "\"\n\t\t\t\t#", "env bash\n\t\t\t\techo \"---> detect\"\n\t\t\t\t\"\"\";\n\t\tString", "\";", "\"\n\t\t\t\t#!", "\"\n\t\t\t\t#"], "n_whitespaces": 132, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.787840+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d3ebc01d49fdabcef65af090de77a0954660feab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLogTests.java", "file_blob_sha": null, "method_name": "printsExpectedOutput", "signature": null, "start_line": 48, "end_line": 86, "nloc": 39, "method_source_normalized": "@TestvoidprintsExpectedOutput()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tPrintStreamBuildLog log = new PrintStreamBuildLog(out);\n\t\tBuildRequest request = mock(BuildRequest.class);\n\t\tImageReference name = ImageReference.of(\"my-app:latest\");\n\t\tImageReference builderImageReference = ImageReference.of(\"cnb/builder\");\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\tImage builderImage = mock(Image.class);\n\t\tgiven(builderImage.getDigests()).willReturn(Collections.singletonList(\"00000001\"));\n\t\tImageReference runImageReference = ImageReference.of(\"cnb/runner\");\n\t\tImage runImage = mock(Image.class);\n\t\tgiven(runImage.getDigests()).willReturn(Collections.singletonList(\"00000002\"));\n\t\tgiven(request.getName()).willReturn(name);\n\t\tImageReference tag = ImageReference.of(\"my-app:1.0\");\n\t\tgiven(request.getTags()).willReturn(Collections.singletonList(tag));\n\t\tlog.start(request);\n\t\tConsumer<TotalProgressEvent> pullBuildImageConsumer = log.pullingImage(builderImageReference, null,\n\t\t\t\tImageType.BUILDER);\n\t\tpullBuildImageConsumer.accept(new TotalProgressEvent(100));\n\t\tlog.pulledImage(builderImage, ImageType.BUILDER);\n\t\tConsumer<TotalProgressEvent> pullRunImageConsumer = log.pullingImage(runImageReference, platform,\n\t\t\t\tImageType.RUNNER);\n\t\tpullRunImageConsumer.accept(new TotalProgressEvent(100));\n\t\tlog.pulledImage(runImage, ImageType.RUNNER);\n\t\tlog.executingLifecycle(request, LifecycleVersion.parse(\"0.5\"), Cache.volume(VolumeName.of(\"pack-abc.cache\")));\n\t\tConsumer<LogUpdateEvent> phase1Consumer = log.runningPhase(request, \"alphabet\");\n\t\tphase1Consumer.accept(mockLogEvent(\"one\"));\n\t\tphase1Consumer.accept(mockLogEvent(\"two\"));\n\t\tphase1Consumer.accept(mockLogEvent(\"three\"));\n\t\tConsumer<LogUpdateEvent> phase2Consumer = log.runningPhase(request, \"basket\");\n\t\tphase2Consumer.accept(mockLogEvent(\"spring\"));\n\t\tphase2Consumer.accept(mockLogEvent(\"boot\"));\n\t\tlog.executedLifecycle(request);\n\t\tlog.taggedImage(tag);\n\t\tString expected = FileCopyUtils.copyToString(new InputStreamReader(\n\t\t\t\tgetClass().getResourceAsStream(\"print-stream-build-log.txt\"), StandardCharsets.UTF_8));\n\t\tassertThat(out.toString()).isEqualToIgnoringNewLines(expected);\n\t}", "original_code": "@Test\n\tvoid printsExpectedOutput() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tPrintStreamBuildLog log = new PrintStreamBuildLog(out);\n\t\tBuildRequest request = mock(BuildRequest.class);\n\t\tImageReference name = ImageReference.of(\"my-app:latest\");\n\t\tImageReference builderImageReference = ImageReference.of(\"cnb/builder\");\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\tImage builderImage = mock(Image.class);\n\t\tgiven(builderImage.getDigests()).willReturn(Collections.singletonList(\"00000001\"));\n\t\tImageReference runImageReference = ImageReference.of(\"cnb/runner\");\n\t\tImage runImage = mock(Image.class);\n\t\tgiven(runImage.getDigests()).willReturn(Collections.singletonList(\"00000002\"));\n\t\tgiven(request.getName()).willReturn(name);\n\t\tImageReference tag = ImageReference.of(\"my-app:1.0\");\n\t\tgiven(request.getTags()).willReturn(Collections.singletonList(tag));\n\t\tlog.start(request);\n\t\tConsumer<TotalProgressEvent> pullBuildImageConsumer = log.pullingImage(builderImageReference, null,\n\t\t\t\tImageType.BUILDER);\n\t\tpullBuildImageConsumer.accept(new TotalProgressEvent(100));\n\t\tlog.pulledImage(builderImage, ImageType.BUILDER);\n\t\tConsumer<TotalProgressEvent> pullRunImageConsumer = log.pullingImage(runImageReference, platform,\n\t\t\t\tImageType.RUNNER);\n\t\tpullRunImageConsumer.accept(new TotalProgressEvent(100));\n\t\tlog.pulledImage(runImage, ImageType.RUNNER);\n\t\tlog.executingLifecycle(request, LifecycleVersion.parse(\"0.5\"), Cache.volume(VolumeName.of(\"pack-abc.cache\")));\n\t\tConsumer<LogUpdateEvent> phase1Consumer = log.runningPhase(request, \"alphabet\");\n\t\tphase1Consumer.accept(mockLogEvent(\"one\"));\n\t\tphase1Consumer.accept(mockLogEvent(\"two\"));\n\t\tphase1Consumer.accept(mockLogEvent(\"three\"));\n\t\tConsumer<LogUpdateEvent> phase2Consumer = log.runningPhase(request, \"basket\");\n\t\tphase2Consumer.accept(mockLogEvent(\"spring\"));\n\t\tphase2Consumer.accept(mockLogEvent(\"boot\"));\n\t\tlog.executedLifecycle(request);\n\t\tlog.taggedImage(tag);\n\t\tString expected = FileCopyUtils.copyToString(new InputStreamReader(\n\t\t\t\tgetClass().getResourceAsStream(\"print-stream-build-log.txt\"), StandardCharsets.UTF_8));\n\t\tassertThat(out.toString()).isEqualToIgnoringNewLines(expected);\n\t}", "code_tokens": ["@", "test", "void", "prints", "expected", "output", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "print", "stream", "build", "log", "log", "=", "new", "print", "stream", "build", "log", "(", "out", ")", ";", "build", "request", "request", "=", "mock", "(", "build", "request", ".", "class", ")", ";", "image", "reference", "name", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "builder", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "image", "builder", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "given", "(", "builder", "image", ".", "get", "digests", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "list", "(", "__STR__", ")", ")", ";", "image", "reference", "run", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "run", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "given", "(", "run", "image", ".", "get", "digests", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "list", "(", "__STR__", ")", ")", ";", "given", "(", "request", ".", "get", "name", "(", ")", ")", ".", "will", "return", "(", "name", ")", ";", "image", "reference", "tag", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "given", "(", "request", ".", "get", "tags", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "list", "(", "tag", ")", ")", ";", "log", ".", "start", "(", "request", ")", ";", "consumer", "<", "total", "progress", "event", ">", "pull", "build", "image", "consumer", "=", "log", ".", "pulling", "image", "(", "builder", "image", "reference", ",", "null", ",", "image", "type", ".", "builder", ")", ";", "pull", "build", "image", "consumer", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "log", ".", "pulled", "image", "(", "builder", "image", ",", "image", "type", ".", "builder", ")", ";", "consumer", "<", "total", "progress", "event", ">", "pull", "run", "image", "consumer", "=", "log", ".", "pulling", "image", "(", "run", "image", "reference", ",", "platform", ",", "image", "type", ".", "runner", ")", ";", "pull", "run", "image", "consumer", ".", "accept", "(", "new", "total", "progress", "event", "(", "__NUM__", ")", ")", ";", "log", ".", "pulled", "image", "(", "run", "image", ",", "image", "type", ".", "runner", ")", ";", "log", ".", "executing", "lifecycle", "(", "request", ",", "lifecycle", "version", ".", "parse", "(", "__STR__", ")", ",", "cache", ".", "volume", "(", "volume", "name", ".", "of", "(", "__STR__", ")", ")", ")", ";", "consumer", "<", "log", "update", "event", ">", "phase", "1", "consumer", "=", "log", ".", "running", "phase", "(", "request", ",", "__STR__", ")", ";", "phase", "1", "consumer", ".", "accept", "(", "mock", "log", "event", "(", "__STR__", ")", ")", ";", "phase", "1", "consumer", ".", "accept", "(", "mock", "log", "event", "(", "__STR__", ")", ")", ";", "phase", "1", "consumer", ".", "accept", "(", "mock", "log", "event", "(", "__STR__", ")", ")", ";", "consumer", "<", "log", "update", "event", ">", "phase", "2", "consumer", "=", "log", ".", "running", "phase", "(", "request", ",", "__STR__", ")", ";", "phase", "2", "consumer", ".", "accept", "(", "mock", "log", "event", "(", "__STR__", ")", ")", ";", "phase", "2", "consumer", ".", "accept", "(", "mock", "log", "event", "(", "__STR__", ")", ")", ";", "log", ".", "executed", "lifecycle", "(", "request", ")", ";", "log", ".", "tagged", "image", "(", "tag", ")", ";", "string", "expected", "=", "file", "copy", "utils", ".", "copy", "to", "string", "(", "new", "input", "stream", "reader", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "is", "equal", "to", "ignoring", "new", "lines", "(", "expected", ")", ";", "}"], "token_count": 557, "vocab_size": 90, "cyclomatic_complexity": 1, "ast_node_count": 614, "n_identifiers": 161, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 181, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.790045+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e0ad961231daa36729dbfd0778adb0b7fb5f693", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLogTests.java", "file_blob_sha": null, "method_name": "mockLogEvent", "signature": null, "start_line": 88, "end_line": 92, "nloc": 5, "method_source_normalized": "privateLogUpdateEventmockLogEvent(String string){\n\t\tLogUpdateEvent event = mock(LogUpdateEvent.class);\n\t\tgiven(event.toString()).willReturn(string);\n\t\treturn event;\n\t}", "original_code": "private LogUpdateEvent mockLogEvent(String string) {\n\t\tLogUpdateEvent event = mock(LogUpdateEvent.class);\n\t\tgiven(event.toString()).willReturn(string);\n\t\treturn event;\n\t}", "code_tokens": ["private", "log", "update", "event", "mock", "log", "event", "(", "string", "string", ")", "{", "log", "update", "event", "event", "=", "mock", "(", "log", "update", "event", ".", "class", ")", ";", "given", "(", "event", ".", "to", "string", "(", ")", ")", ".", "will", "return", "(", "string", ")", ";", "return", "event", ";", "}"], "token_count": 46, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 15, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.790412+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d7016c9bd2b2f195d714d56a65c556c8d89a5088", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLogTests.java", "file_blob_sha": null, "method_name": "TestPrintStream", "signature": null, "start_line": 96, "end_line": 98, "nloc": 3, "method_source_normalized": "TestPrintStream(){\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "original_code": "TestPrintStream() {\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "code_tokens": ["test", "print", "stream", "(", ")", "{", "super", "(", "new", "byte", "array", "output", "stream", "(", ")", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 2, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.790650+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2a470ed054aabc60bf27c76b45ab20423a632d7e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/PrintStreamBuildLogTests.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 100, "end_line": 103, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.out.toString();\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.out.toString();\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "out", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.790896+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6015a8c6d45ed4696d1876c0cbd87f54b421e56b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 59, "end_line": 64, "nloc": 6, "method_source_normalized": "@BeforeEachvoidsetUp(){\n\t\tthis.buildpackDir = new File(this.temp, \"buildpack\");\n\t\tthis.buildpackDir.mkdirs();\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t}", "original_code": "@BeforeEach\n\tvoid setUp() {\n\t\tthis.buildpackDir = new File(this.temp, \"buildpack\");\n\t\tthis.buildpackDir.mkdirs();\n\t\tthis.resolverContext = mock(BuildpackResolverContext.class);\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", ")", "{", "this", ".", "buildpack", "dir", "=", "new", "file", "(", "this", ".", "temp", ",", "__STR__", ")", ";", "this", ".", "buildpack", "dir", ".", "mkdirs", "(", ")", ";", "this", ".", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "}"], "token_count": 48, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 62, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.793423+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c4cda21f5ea1521e6efbeefed17c7b947c808e50", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenPath", "signature": null, "start_line": 66, "end_line": 75, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenPath()throws Exception{\n\t\twriteBuildpackDescriptor();\n\t\twriteScripts();\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tassertHasExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenPath() throws Exception {\n\t\twriteBuildpackDescriptor();\n\t\twriteScripts();\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tassertHasExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "path", "(", ")", "throws", "exception", "{", "write", "buildpack", "descriptor", "(", ")", ";", "write", "scripts", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "this", ".", "buildpack", "dir", ".", "to", "string", "(", ")", ")", ";", "buildpack", "buildpack", "=", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "has", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 97, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 115, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.793737+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fde94b8829fa6ee2adc9ff9feffc664e0dea38ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFileUrl", "signature": null, "start_line": 77, "end_line": 86, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenFileUrl()throws Exception{\n\t\twriteBuildpackDescriptor();\n\t\twriteScripts();\n\t\tBuildpackReference reference = BuildpackReference.of(\"file://\" + this.buildpackDir.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tassertHasExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFileUrl() throws Exception {\n\t\twriteBuildpackDescriptor();\n\t\twriteScripts();\n\t\tBuildpackReference reference = BuildpackReference.of(\"file://\" + this.buildpackDir.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNotNull();\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/buildpack1@0.0.1\");\n\t\tassertHasExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "file", "url", "(", ")", "throws", "exception", "{", "write", "buildpack", "descriptor", "(", ")", ";", "write", "scripts", "(", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", "+", "this", ".", "buildpack", "dir", ".", "to", "string", "(", ")", ")", ";", "buildpack", "buildpack", "=", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "has", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 100, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 118, "n_identifiers": 26, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.794051+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "416b355d13a30355973c783e23b5ebc7f7645084", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenDirectoryWithoutBuildpackTomlThrowsException", "signature": null, "start_line": 88, "end_line": 95, "nloc": 8, "method_source_normalized": "@TestvoidresolveWhenDirectoryWithoutBuildpackTomlThrowsException()throws Exception{\n\t\tFiles.createDirectories(this.buildpackDir.toPath());\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.toString());\n\t\tassertThatIllegalStateException().isThrownBy(() -> DirectoryBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(this.buildpackDir.getAbsolutePath());\n\t}", "original_code": "@Test\n\tvoid resolveWhenDirectoryWithoutBuildpackTomlThrowsException() throws Exception {\n\t\tFiles.createDirectories(this.buildpackDir.toPath());\n\t\tBuildpackReference reference = BuildpackReference.of(this.buildpackDir.toString());\n\t\tassertThatIllegalStateException().isThrownBy(() -> DirectoryBuildpack.resolve(this.resolverContext, reference))\n\t\t\t.withMessageContaining(\"Buildpack descriptor 'buildpack.toml' is required\")\n\t\t\t.withMessageContaining(this.buildpackDir.getAbsolutePath());\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "directory", "without", "buildpack", "toml", "throws", "exception", "(", ")", "throws", "exception", "{", "files", ".", "create", "directories", "(", "this", ".", "buildpack", "dir", ".", "to", "path", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "this", ".", "buildpack", "dir", ".", "to", "string", "(", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ")", ";", "}"], "token_count": 105, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 112, "n_identifiers": 23, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.794368+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59cf8cc3545ef548348e261dd5377d1db9594efd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFileReturnsNull", "signature": null, "start_line": 97, "end_line": 103, "nloc": 7, "method_source_normalized": "@TestvoidresolveWhenFileReturnsNull()throws Exception{\n\t\tPath file = Files.createFile(Paths.get(this.buildpackDir.toString(), \"test\"));\n\t\tBuildpackReference reference = BuildpackReference.of(file.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenFileReturnsNull() throws Exception {\n\t\tPath file = Files.createFile(Paths.get(this.buildpackDir.toString(), \"test\"));\n\t\tBuildpackReference reference = BuildpackReference.of(file.toString());\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "file", "returns", "null", "(", ")", "throws", "exception", "{", "path", "file", "=", "files", ".", "create", "file", "(", "paths", ".", "get", "(", "this", ".", "buildpack", "dir", ".", "to", "string", "(", ")", ",", "__STR__", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "file", ".", "to", "string", "(", ")", ")", ";", "buildpack", "buildpack", "=", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 84, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 101, "n_identifiers": 26, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 31, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.794678+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40a81da4aefb0fcec6d7e41fec9de482658166cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenDirectoryDoesNotExistReturnsNull", "signature": null, "start_line": 105, "end_line": 110, "nloc": 6, "method_source_normalized": "@TestvoidresolveWhenDirectoryDoesNotExistReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test/a/missing/buildpack\");\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenDirectoryDoesNotExistReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"/test/a/missing/buildpack\");\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "directory", "does", "not", "exist", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 54, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.794946+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "67a770141d19d0825b07d0207bf1e71baeabfb04", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "locateDirectoryAsUrlThatDoesNotExistThrowsException", "signature": null, "start_line": 112, "end_line": 117, "nloc": 6, "method_source_normalized": "@TestvoidlocateDirectoryAsUrlThatDoesNotExistThrowsException(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"file:///test/a/missing/buildpack\");\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid locateDirectoryAsUrlThatDoesNotExistThrowsException() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"file:///test/a/missing/buildpack\");\n\t\tBuildpack buildpack = DirectoryBuildpack.resolve(this.resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "locate", "directory", "as", "url", "that", "does", "not", "exist", "throws", "exception", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "directory", "buildpack", ".", "resolve", "(", "this", ".", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 56, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 60, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.795210+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "442491ff39a06561b4f59309b73753ad7d677efa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "assertHasExpectedLayers", "signature": null, "start_line": 119, "end_line": 144, "nloc": 26, "method_source_normalized": "privatevoidassertHasExpectedLayers(Buildpack buildpack)throws IOException{\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).hasSize(1);\n\t\tbyte[] content = layers.get(0).toByteArray();\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t\tassertThat(entries).extracting(\"name\", \"mode\")\n\t\t\t\t.containsExactlyInAnyOrder(tuple(\"/cnb/\", 0755), tuple(\"/cnb/buildpacks/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/buildpack.toml\", 0644),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/detect\", 0744),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/build\", 0744));\n\t\t}\n\t}", "original_code": "private void assertHasExpectedLayers(Buildpack buildpack) throws IOException {\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).hasSize(1);\n\t\tbyte[] content = layers.get(0).toByteArray();\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t\tassertThat(entries).extracting(\"name\", \"mode\")\n\t\t\t\t.containsExactlyInAnyOrder(tuple(\"/cnb/\", 0755), tuple(\"/cnb/buildpacks/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/buildpack.toml\", 0644),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/\", 0755),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/detect\", 0744),\n\t\t\t\t\t\ttuple(\"/cnb/buildpacks/example_buildpack1/0.0.1/bin/build\", 0744));\n\t\t}\n\t}", "code_tokens": ["private", "void", "assert", "has", "expected", "layers", "(", "buildpack", "buildpack", ")", "throws", "io", "exception", "{", "list", "<", "byte", "array", "output", "stream", ">", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", ".", "apply", "(", "(", "layer", ")", "->", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "out", ")", ";", "layers", ".", "add", "(", "out", ")", ";", "}", ")", ";", "assert", "that", "(", "layers", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "byte", "[", "]", "content", "=", "layers", ".", "get", "(", "__NUM__", ")", ".", "to", "byte", "array", "(", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "content", ")", ")", ")", "{", "list", "<", "tar", "archive", "entry", ">", "entries", "=", "new", "array", "list", "<", ">", "(", ")", ";", "tar", "archive", "entry", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "entries", ".", "add", "(", "entry", ")", ";", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "}", "assert", "that", "(", "entries", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "in", "any", "order", "(", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ",", "tuple", "(", "__STR__", ",", "__NUM__", ")", ")", ";", "}", "}"], "token_count": 259, "vocab_size": 58, "cyclomatic_complexity": 2, "ast_node_count": 315, "n_identifiers": 59, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 161, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.795791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aee483fee2686bd5e3fbe3a2f62781a72b92dce3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "writeBuildpackDescriptor", "signature": null, "start_line": 146, "end_line": 158, "nloc": 13, "method_source_normalized": "privatevoidwriteBuildpackDescriptor()throws IOException{\n\t\tPath descriptor = Files.createFile(Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.toml\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rw-r--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(descriptor))) {\n\t\t\twriter.println(\"[buildpack]\");\n\t\t\twriter.println(\"id = \\\"example/buildpack1\\\"\");\n\t\t\twriter.println(\"version = \\\"0.0.1\\\"\");\n\t\t\twriter.println(\"name = \\\"Example buildpack\\\"\");\n\t\t\twriter.println(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\");\n\t\t\twriter.println(\"[[stacks]]\");\n\t\t\twriter.println(\"id = \\\"io.buildpacks.stacks.bionic\\\"\");\n\t\t}\n\t}", "original_code": "private void writeBuildpackDescriptor() throws IOException {\n\t\tPath descriptor = Files.createFile(Paths.get(this.buildpackDir.getAbsolutePath(), \"buildpack.toml\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rw-r--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(descriptor))) {\n\t\t\twriter.println(\"[buildpack]\");\n\t\t\twriter.println(\"id = \\\"example/buildpack1\\\"\");\n\t\t\twriter.println(\"version = \\\"0.0.1\\\"\");\n\t\t\twriter.println(\"name = \\\"Example buildpack\\\"\");\n\t\t\twriter.println(\"homepage = \\\"https://github.com/example/example-buildpack\\\"\");\n\t\t\twriter.println(\"[[stacks]]\");\n\t\t\twriter.println(\"id = \\\"io.buildpacks.stacks.bionic\\\"\");\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "buildpack", "descriptor", "(", ")", "throws", "io", "exception", "{", "path", "descriptor", "=", "files", ".", "create", "file", "(", "paths", ".", "get", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ",", "__STR__", ")", ",", "posix", "file", "permissions", ".", "as", "file", "attribute", "(", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ")", ")", ";", "try", "(", "print", "writer", "writer", "=", "new", "print", "writer", "(", "files", ".", "new", "buffered", "writer", "(", "descriptor", ")", ")", ")", "{", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "}", "}"], "token_count": 129, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 158, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 70, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.796153+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "27ab0914cea51ded8d7e4b5c4ad1b3abcb1c6403", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/DirectoryBuildpackTests.java", "file_blob_sha": null, "method_name": "writeScripts", "signature": null, "start_line": 160, "end_line": 176, "nloc": 17, "method_source_normalized": "privatevoidwriteScripts()throws IOException{\n\t\tPath binDirectory = Files.createDirectory(Paths.get(this.buildpackDir.getAbsolutePath(), \"bin\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr-xr-x\")));\n\t\tbinDirectory.toFile().mkdirs();\n\t\tPath detect = Files.createFile(Paths.get(binDirectory.toString(), \"detect\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(detect))) {\n\t\t\twriter.println(\"#!/usr/bin/env bash\");\n\t\t\twriter.println(\"echo \\\"---> detect\\\"\");\n\t\t}\n\t\tPath build = Files.createFile(Paths.get(binDirectory.toString(), \"build\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(build))) {\n\t\t\twriter.println(\"#!/usr/bin/env bash\");\n\t\t\twriter.println(\"echo \\\"---> build\\\"\");\n\t\t}\n\t}", "original_code": "private void writeScripts() throws IOException {\n\t\tPath binDirectory = Files.createDirectory(Paths.get(this.buildpackDir.getAbsolutePath(), \"bin\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr-xr-x\")));\n\t\tbinDirectory.toFile().mkdirs();\n\t\tPath detect = Files.createFile(Paths.get(binDirectory.toString(), \"detect\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(detect))) {\n\t\t\twriter.println(\"#!/usr/bin/env bash\");\n\t\t\twriter.println(\"echo \\\"---> detect\\\"\");\n\t\t}\n\t\tPath build = Files.createFile(Paths.get(binDirectory.toString(), \"build\"),\n\t\t\t\tPosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwxr--r--\")));\n\t\ttry (PrintWriter writer = new PrintWriter(Files.newBufferedWriter(build))) {\n\t\t\twriter.println(\"#!/usr/bin/env bash\");\n\t\t\twriter.println(\"echo \\\"---> build\\\"\");\n\t\t}\n\t}", "code_tokens": ["private", "void", "write", "scripts", "(", ")", "throws", "io", "exception", "{", "path", "bin", "directory", "=", "files", ".", "create", "directory", "(", "paths", ".", "get", "(", "this", ".", "buildpack", "dir", ".", "get", "absolute", "path", "(", ")", ",", "__STR__", ")", ",", "posix", "file", "permissions", ".", "as", "file", "attribute", "(", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ")", ")", ";", "bin", "directory", ".", "to", "file", "(", ")", ".", "mkdirs", "(", ")", ";", "path", "detect", "=", "files", ".", "create", "file", "(", "paths", ".", "get", "(", "bin", "directory", ".", "to", "string", "(", ")", ",", "__STR__", ")", ",", "posix", "file", "permissions", ".", "as", "file", "attribute", "(", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ")", ")", ";", "try", "(", "print", "writer", "writer", "=", "new", "print", "writer", "(", "files", ".", "new", "buffered", "writer", "(", "detect", ")", ")", ")", "{", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "}", "path", "build", "=", "files", ".", "create", "file", "(", "paths", ".", "get", "(", "bin", "directory", ".", "to", "string", "(", ")", ",", "__STR__", ")", ",", "posix", "file", "permissions", ".", "as", "file", "attribute", "(", "posix", "file", "permissions", ".", "from", "string", "(", "__STR__", ")", ")", ")", ";", "try", "(", "print", "writer", "writer", "=", "new", "print", "writer", "(", "files", ".", "new", "buffered", "writer", "(", "build", ")", ")", ")", "{", "writer", ".", "println", "(", "__STR__", ")", ";", "writer", ".", "println", "(", "__STR__", ")", ";", "}", "}"], "token_count": 228, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 259, "n_identifiers": 61, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.796559+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ef189b6a378188962dcffd6aeb979fc50123d3bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageLoadsMetadata", "signature": null, "start_line": 45, "end_line": 66, "nloc": 22, "method_source_normalized": "@TestvoidfromImageLoadsMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tassertThat(metadata.getStack().getRunImage().getImage()).isEqualTo(\"cloudfoundry/run:base-cnb\");\n\t\tassertThat(metadata.getStack().getRunImage().getMirrors()).isEmpty();\n\t\tassertThat(metadata.getRunImages()).isEmpty();\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.3\");\n\t\tassertThat(metadata.getCreatedBy().getName()).isEqualTo(\"Pack CLI\");\n\t\tassertThat(metadata.getCreatedBy().getVersion())\n\t\t\t.isEqualTo(\"v0.9.0 (git sha: d42c384a39f367588f2653f2a99702db910e5ad7)\");\n\t\tassertThat(metadata.getBuildpacks()).extracting(BuildpackMetadata::getId, BuildpackMetadata::getVersion)\n\t\t\t.contains(tuple(\"paketo-buildpacks/java\", \"4.10.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot\", \"3.5.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/executable-jar\", \"3.1.3\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/graalvm\", \"4.1.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/java-native-image\", \"4.7.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot-native-image\", \"2.0.1\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/bellsoft-liberica\", \"6.2.0\"));\n\t}", "original_code": "@Test\n\tvoid fromImageLoadsMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tassertThat(metadata.getStack().getRunImage().getImage()).isEqualTo(\"cloudfoundry/run:base-cnb\");\n\t\tassertThat(metadata.getStack().getRunImage().getMirrors()).isEmpty();\n\t\tassertThat(metadata.getRunImages()).isEmpty();\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.3\");\n\t\tassertThat(metadata.getCreatedBy().getName()).isEqualTo(\"Pack CLI\");\n\t\tassertThat(metadata.getCreatedBy().getVersion())\n\t\t\t.isEqualTo(\"v0.9.0 (git sha: d42c384a39f367588f2653f2a99702db910e5ad7)\");\n\t\tassertThat(metadata.getBuildpacks()).extracting(BuildpackMetadata::getId, BuildpackMetadata::getVersion)\n\t\t\t.contains(tuple(\"paketo-buildpacks/java\", \"4.10.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot\", \"3.5.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/executable-jar\", \"3.1.3\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/graalvm\", \"4.1.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/java-native-image\", \"4.7.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot-native-image\", \"2.0.1\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/bellsoft-liberica\", \"6.2.0\"));\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "image", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "mirrors", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "run", "images", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpacks", "(", ")", ")", ".", "extracting", "(", "buildpack", "metadata", "::", "get", "id", ",", "buildpack", "metadata", "::", "get", "version", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 337, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 408, "n_identifiers": 78, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 91, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.799591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8f8202605373da160650fbca842ec5429c3908e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWithoutStackLoadsMetadata", "signature": null, "start_line": 68, "end_line": 88, "nloc": 21, "method_source_normalized": "@TestvoidfromImageWithoutStackLoadsMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"image-with-empty-stack.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tassertThat(metadata.getRunImages()).extracting(RunImage::getImage, RunImage::getMirrors)\n\t\t\t.contains(tuple(\"cloudfoundry/run:base-cnb\", Collections.emptyList()));\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.3\");\n\t\tassertThat(metadata.getCreatedBy().getName()).isEqualTo(\"Pack CLI\");\n\t\tassertThat(metadata.getCreatedBy().getVersion())\n\t\t\t.isEqualTo(\"v0.9.0 (git sha: d42c384a39f367588f2653f2a99702db910e5ad7)\");\n\t\tassertThat(metadata.getBuildpacks()).extracting(BuildpackMetadata::getId, BuildpackMetadata::getVersion)\n\t\t\t.contains(tuple(\"paketo-buildpacks/java\", \"4.10.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot\", \"3.5.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/executable-jar\", \"3.1.3\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/graalvm\", \"4.1.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/java-native-image\", \"4.7.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot-native-image\", \"2.0.1\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/bellsoft-liberica\", \"6.2.0\"));\n\t}", "original_code": "@Test\n\tvoid fromImageWithoutStackLoadsMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"image-with-empty-stack.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tassertThat(metadata.getRunImages()).extracting(RunImage::getImage, RunImage::getMirrors)\n\t\t\t.contains(tuple(\"cloudfoundry/run:base-cnb\", Collections.emptyList()));\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.3\");\n\t\tassertThat(metadata.getCreatedBy().getName()).isEqualTo(\"Pack CLI\");\n\t\tassertThat(metadata.getCreatedBy().getVersion())\n\t\t\t.isEqualTo(\"v0.9.0 (git sha: d42c384a39f367588f2653f2a99702db910e5ad7)\");\n\t\tassertThat(metadata.getBuildpacks()).extracting(BuildpackMetadata::getId, BuildpackMetadata::getVersion)\n\t\t\t.contains(tuple(\"paketo-buildpacks/java\", \"4.10.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot\", \"3.5.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/executable-jar\", \"3.1.3\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/graalvm\", \"4.1.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/java-native-image\", \"4.7.0\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/spring-boot-native-image\", \"2.0.1\"))\n\t\t\t.contains(tuple(\"paketo-buildpacks/bellsoft-liberica\", \"6.2.0\"));\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "without", "stack", "loads", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "image", ")", ";", "assert", "that", "(", "metadata", ".", "get", "run", "images", "(", ")", ")", ".", "extracting", "(", "run", "image", "::", "get", "image", ",", "run", "image", "::", "get", "mirrors", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "collections", ".", "empty", "list", "(", ")", ")", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "created", "by", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "buildpacks", "(", ")", ")", ".", "extracting", "(", "buildpack", "metadata", "::", "get", "id", ",", "buildpack", "metadata", "::", "get", "version", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ".", "contains", "(", "tuple", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 308, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 372, "n_identifiers": 74, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 91, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.800127+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed8be566f03c3af83fc714a317d07c2b0dfa5b5c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageIsNullThrowsException", "signature": null, "start_line": 90, "end_line": 94, "nloc": 5, "method_source_normalized": "@TestvoidfromImageWhenImageIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuilderMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuilderMetadata.fromImage(null))\n\t\t\t.withMessage(\"'image' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", "metadata", ".", "from", "image", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.800437+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "93da98a7e9413a0a381eed04c4697572a4872336", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageWhenImageConfigIsNullThrowsException", "signature": null, "start_line": 96, "end_line": 101, "nloc": 6, "method_source_normalized": "@TestvoidfromImageWhenImageConfigIsNullThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuilderMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromImageWhenImageConfigIsNullThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> BuilderMetadata.fromImage(image))\n\t\t\t.withMessage(\"'imageConfig' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "when", "image", "config", "is", "null", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 57, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 61, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.800709+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6af75ec7df90860815c645ae128403e7fefc9677", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromImageConfigWhenLabelIsMissingThrowsException", "signature": null, "start_line": 103, "end_line": 111, "nloc": 9, "method_source_normalized": "@TestvoidfromImageConfigWhenLabelIsMissingThrowsException(){\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.builder.metadata' label found in image config labels 'alpha'\");\n\t}", "original_code": "@Test\n\tvoid fromImageConfigWhenLabelIsMissingThrowsException() {\n\t\tImage image = mock(Image.class);\n\t\tImageConfig imageConfig = mock(ImageConfig.class);\n\t\tgiven(image.getConfig()).willReturn(imageConfig);\n\t\tgiven(imageConfig.getLabels()).willReturn(Collections.singletonMap(\"alpha\", \"a\"));\n\t\tassertThatIllegalStateException().isThrownBy(() -> BuilderMetadata.fromImage(image))\n\t\t\t.withMessage(\"No 'io.buildpacks.builder.metadata' label found in image config labels 'alpha'\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "config", "when", "label", "is", "missing", "throws", "exception", "(", ")", "{", "image", "image", "=", "mock", "(", "image", ".", "class", ")", ";", "image", "config", "image", "config", "=", "mock", "(", "image", "config", ".", "class", ")", ";", "given", "(", "image", ".", "get", "config", "(", ")", ")", ".", "will", "return", "(", "image", "config", ")", ";", "given", "(", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "will", "return", "(", "collections", ".", "singleton", "map", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", "metadata", ".", "from", "image", "(", "image", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 112, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 29, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.801031+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5bf857d6ede9beff5a74d2afd6953e033cfefa82", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromJsonLoadsMetadataWithoutSupportedApis", "signature": null, "start_line": 113, "end_line": 123, "nloc": 11, "method_source_normalized": "@TestvoidfromJsonLoadsMetadataWithoutSupportedApis()throws IOException{\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tassertThat(metadata.getStack().getRunImage().getImage()).isEqualTo(\"cloudfoundry/run:base-cnb\");\n\t\tassertThat(metadata.getStack().getRunImage().getMirrors()).isEmpty();\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.8\");\n\t\tassertThat(metadata.getLifecycle().getApis().getBuildpack()).isNull();\n\t\tassertThat(metadata.getLifecycle().getApis().getPlatform()).isNull();\n\t}", "original_code": "@Test\n\tvoid fromJsonLoadsMetadataWithoutSupportedApis() throws IOException {\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata.json\"));\n\t\tassertThat(metadata.getStack().getRunImage().getImage()).isEqualTo(\"cloudfoundry/run:base-cnb\");\n\t\tassertThat(metadata.getStack().getRunImage().getMirrors()).isEmpty();\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.8\");\n\t\tassertThat(metadata.getLifecycle().getApis().getBuildpack()).isNull();\n\t\tassertThat(metadata.getLifecycle().getApis().getPlatform()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "from", "json", "loads", "metadata", "without", "supported", "apis", "(", ")", "throws", "io", "exception", "{", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "image", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "mirrors", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "apis", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "apis", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 223, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 257, "n_identifiers": 49, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.801446+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c47054dcee2d101cf2280b9080420e081e7524bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "fromJsonLoadsMetadataWithSupportedApis", "signature": null, "start_line": 125, "end_line": 134, "nloc": 10, "method_source_normalized": "@TestvoidfromJsonLoadsMetadataWithSupportedApis()throws IOException{\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata-supported-apis.json\"));\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.8\");\n\t\tassertThat(metadata.getLifecycle().getApis().getBuildpack()).containsExactly(\"0.1\", \"0.2\", \"0.3\");\n\t\tassertThat(metadata.getLifecycle().getApis().getPlatform()).containsExactly(\"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\",\n\t\t\t\t\"0.8\");\n\t}", "original_code": "@Test\n\tvoid fromJsonLoadsMetadataWithSupportedApis() throws IOException {\n\t\tBuilderMetadata metadata = BuilderMetadata.fromJson(getContentAsString(\"builder-metadata-supported-apis.json\"));\n\t\tassertThat(metadata.getLifecycle().getVersion()).isEqualTo(\"0.7.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getBuildpack()).isEqualTo(\"0.2\");\n\t\tassertThat(metadata.getLifecycle().getApi().getPlatform()).isEqualTo(\"0.8\");\n\t\tassertThat(metadata.getLifecycle().getApis().getBuildpack()).containsExactly(\"0.1\", \"0.2\", \"0.3\");\n\t\tassertThat(metadata.getLifecycle().getApis().getPlatform()).containsExactly(\"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\",\n\t\t\t\t\"0.8\");\n\t}", "code_tokens": ["@", "test", "void", "from", "json", "loads", "metadata", "with", "supported", "apis", "(", ")", "throws", "io", "exception", "{", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "api", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "apis", "(", ")", ".", "get", "buildpack", "(", ")", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "metadata", ".", "get", "lifecycle", "(", ")", ".", "get", "apis", "(", ")", ".", "get", "platform", "(", ")", ")", ".", "contains", "exactly", "(", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 183, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 208, "n_identifiers": 37, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.801833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c0ba77288b04f47dbff3a47221b307aba0624ce2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "copyWithUpdatedCreatedByReturnsNewMetadata", "signature": null, "start_line": 136, "end_line": 144, "nloc": 9, "method_source_normalized": "@TestvoidcopyWithUpdatedCreatedByReturnsNewMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tBuilderMetadata copy = metadata.copy((update) -> update.withCreatedBy(\"test123\", \"test456\"));\n\t\tassertThat(copy).isNotSameAs(metadata);\n\t\tassertThat(copy.getCreatedBy().getName()).isEqualTo(\"test123\");\n\t\tassertThat(copy.getCreatedBy().getVersion()).isEqualTo(\"test456\");\n\t}", "original_code": "@Test\n\tvoid copyWithUpdatedCreatedByReturnsNewMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tBuilderMetadata copy = metadata.copy((update) -> update.withCreatedBy(\"test123\", \"test456\"));\n\t\tassertThat(copy).isNotSameAs(metadata);\n\t\tassertThat(copy.getCreatedBy().getName()).isEqualTo(\"test123\");\n\t\tassertThat(copy.getCreatedBy().getVersion()).isEqualTo(\"test456\");\n\t}", "code_tokens": ["@", "test", "void", "copy", "with", "updated", "created", "by", "returns", "new", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "image", ")", ";", "builder", "metadata", "copy", "=", "metadata", ".", "copy", "(", "(", "update", ")", "->", "update", ".", "with", "created", "by", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "copy", ")", ".", "is", "not", "same", "as", "(", "metadata", ")", ";", "assert", "that", "(", "copy", ".", "get", "created", "by", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "copy", ".", "get", "created", "by", "(", ")", ".", "get", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 131, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 147, "n_identifiers": 34, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.802189+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62a0a09b3e1932ee7cd06ea1bf17975d9f023a2c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderMetadataTests.java", "file_blob_sha": null, "method_name": "attachToUpdatesMetadata", "signature": null, "start_line": 146, "end_line": 156, "nloc": 11, "method_source_normalized": "@TestvoidattachToUpdatesMetadata()throws IOException{\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tImageConfig imageConfig = image.getConfig();\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tImageConfig imageConfigCopy = imageConfig.copy(metadata::attachTo);\n\t\tString label = imageConfigCopy.getLabels().get(\"io.buildpacks.builder.metadata\");\n\t\tBuilderMetadata metadataCopy = BuilderMetadata.fromJson(label);\n\t\tassertThat(metadataCopy.getStack().getRunImage().getImage())\n\t\t\t.isEqualTo(metadata.getStack().getRunImage().getImage());\n\t}", "original_code": "@Test\n\tvoid attachToUpdatesMetadata() throws IOException {\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tImageConfig imageConfig = image.getConfig();\n\t\tBuilderMetadata metadata = BuilderMetadata.fromImage(image);\n\t\tImageConfig imageConfigCopy = imageConfig.copy(metadata::attachTo);\n\t\tString label = imageConfigCopy.getLabels().get(\"io.buildpacks.builder.metadata\");\n\t\tBuilderMetadata metadataCopy = BuilderMetadata.fromJson(label);\n\t\tassertThat(metadataCopy.getStack().getRunImage().getImage())\n\t\t\t.isEqualTo(metadata.getStack().getRunImage().getImage());\n\t}", "code_tokens": ["@", "test", "void", "attach", "to", "updates", "metadata", "(", ")", "throws", "io", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "config", "image", "config", "=", "image", ".", "get", "config", "(", ")", ";", "builder", "metadata", "metadata", "=", "builder", "metadata", ".", "from", "image", "(", "image", ")", ";", "image", "config", "image", "config", "copy", "=", "image", "config", ".", "copy", "(", "metadata", "::", "attach", "to", ")", ";", "string", "label", "=", "image", "config", "copy", ".", "get", "labels", "(", ")", ".", "get", "(", "__STR__", ")", ";", "builder", "metadata", "metadata", "copy", "=", "builder", "metadata", ".", "from", "json", "(", "label", ")", ";", "assert", "that", "(", "metadata", "copy", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "image", "(", ")", ")", ".", "is", "equal", "to", "(", "metadata", ".", "get", "stack", "(", ")", ".", "get", "run", "image", "(", ")", ".", "get", "image", "(", ")", ")", ";", "}"], "token_count": 147, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 164, "n_identifiers": 43, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.802566+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4abf6c89e6427ab63c7a38bd383bf39a3e54f4fb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "createWhenLogIsNullThrowsException", "signature": null, "start_line": 79, "end_line": 83, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenLogIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new Builder((BuildLog) null))\n\t\t\t.withMessage(\"'log' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenLogIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new Builder((BuildLog) null))\n\t\t\t.withMessage(\"'log' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "log", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "builder", "(", "(", "build", "log", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 7, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.813664+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "386ccd747a84fe833a40679fb65dc2257ba36e6a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "createWithDockerConfiguration", "signature": null, "start_line": 85, "end_line": 88, "nloc": 4, "method_source_normalized": "@TestvoidcreateWithDockerConfiguration(){\n\t\tassertThatNoException().isThrownBy(() -> new Builder(BuildLog.toSystemOut()));\n\t}", "original_code": "@Test\n\tvoid createWithDockerConfiguration() {\n\t\tassertThatNoException().isThrownBy(() -> new Builder(BuildLog.toSystemOut()));\n\t}", "code_tokens": ["@", "test", "void", "create", "with", "docker", "configuration", "(", ")", "{", "assert", "that", "no", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "builder", "(", "build", "log", ".", "to", "system", "out", "(", ")", ")", ")", ";", "}"], "token_count": 39, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 7, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.814050+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "301536cde2fb9a7840c1119e61a8aa61d3ca4e6e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "createDockerApiWithLogDockerLogDelegate", "signature": null, "start_line": 90, "end_line": 97, "nloc": 8, "method_source_normalized": "@TestvoidcreateDockerApiWithLogDockerLogDelegate(){\n\t\tBuilder builder = new Builder(BuildLog.toSystemOut());\n\t\tassertThat(builder).extracting(\"docker\")\n\t\t\t.extracting(\"system\")\n\t\t\t.extracting(\"log\")\n\t\t\t.isInstanceOf(BuildLogAdapter.class);\n\t}", "original_code": "@Test\n\tvoid createDockerApiWithLogDockerLogDelegate() {\n\t\tBuilder builder = new Builder(BuildLog.toSystemOut());\n\t\tassertThat(builder).extracting(\"docker\")\n\t\t\t.extracting(\"system\")\n\t\t\t.extracting(\"log\")\n\t\t\t.isInstanceOf(BuildLogAdapter.class);\n\t}", "code_tokens": ["@", "test", "void", "create", "docker", "api", "with", "log", "docker", "log", "delegate", "(", ")", "{", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "system", "out", "(", ")", ")", ";", "assert", "that", "(", "builder", ")", ".", "extracting", "(", "__STR__", ")", ".", "extracting", "(", "__STR__", ")", ".", "extracting", "(", "__STR__", ")", ".", "is", "instance", "of", "(", "build", "log", "adapter", ".", "class", ")", ";", "}"], "token_count": 63, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 71, "n_identifiers": 15, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.814337+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "907a199868a0bfb8043111334c3d2659f8fdd033", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "createDockerApiWithLogDockerSystemOutDelegate", "signature": null, "start_line": 99, "end_line": 106, "nloc": 8, "method_source_normalized": "@TestvoidcreateDockerApiWithLogDockerSystemOutDelegate(){\n\t\tBuilder builder = new Builder(mock(BuildLog.class));\n\t\tassertThat(builder).extracting(\"docker\")\n\t\t\t.extracting(\"system\")\n\t\t\t.extracting(\"log\")\n\t\t\t.isInstanceOf(DockerLog.toSystemOut().getClass());\n\t}", "original_code": "@Test\n\tvoid createDockerApiWithLogDockerSystemOutDelegate() {\n\t\tBuilder builder = new Builder(mock(BuildLog.class));\n\t\tassertThat(builder).extracting(\"docker\")\n\t\t\t.extracting(\"system\")\n\t\t\t.extracting(\"log\")\n\t\t\t.isInstanceOf(DockerLog.toSystemOut().getClass());\n\t}", "code_tokens": ["@", "test", "void", "create", "docker", "api", "with", "log", "docker", "system", "out", "delegate", "(", ")", "{", "builder", "builder", "=", "new", "builder", "(", "mock", "(", "build", "log", ".", "class", ")", ")", ";", "assert", "that", "(", "builder", ")", ".", "extracting", "(", "__STR__", ")", ".", "extracting", "(", "__STR__", ")", ".", "extracting", "(", "__STR__", ")", ".", "is", "instance", "of", "(", "docker", "log", ".", "to", "system", "out", "(", ")", ".", "get", "class", "(", ")", ")", ";", "}"], "token_count": 71, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 17, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.814637+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "331961d8a7fe30438ce4fa1d3fce9f64f7961163", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildWhenRequestIsNullThrowsException", "signature": null, "start_line": 108, "end_line": 113, "nloc": 6, "method_source_normalized": "@TestvoidbuildWhenRequestIsNullThrowsException(){\n\t\tBuilder builder = new Builder();\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> builder.build(null))\n\t\t\t.withMessage(\"'request' must not be null\");\n\t}", "original_code": "@Test\n\tvoid buildWhenRequestIsNullThrowsException() {\n\t\tBuilder builder = new Builder();\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> builder.build(null))\n\t\t\t.withMessage(\"'request' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "build", "when", "request", "is", "null", "throws", "exception", "(", ")", "{", "builder", "builder", "=", "new", "builder", "(", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", ".", "build", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 51, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 10, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.814917+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b59238f105c59d941b3478b04dd6ad31063cc1e5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilder", "signature": null, "start_line": 115, "end_line": 136, "nloc": 22, "method_source_normalized": "@TestvoidbuildInvokesBuilder()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull());\n\t\tthen(docker.image()).should().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull());\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilder() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull());\n\t\tthen(docker.image()).should().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull());\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 389, "vocab_size": 68, "cyclomatic_complexity": 1, "ast_node_count": 500, "n_identifiers": 113, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 110, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.815474+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "afb0a7e18e55865a0d29f4446eb1c7e6c2ad88a5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderAndPublishesImage", "signature": null, "start_line": 138, "end_line": 166, "nloc": 29, "method_source_normalized": "@TestvoidbuildInvokesBuilderAndPublishesImage()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tDockerRegistryAuthentication builderToken = DockerRegistryAuthentication.token(\"builder token\");\n\t\tDockerRegistryAuthentication publishToken = DockerRegistryAuthentication.token(\"publish token\");\n\t\tBuilderDockerConfiguration dockerConfiguration = new BuilderDockerConfiguration()\n\t\t\t.withBuilderRegistryAuthentication(builderToken)\n\t\t\t.withPublishRegistryAuthentication(publishToken);\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, dockerConfiguration);\n\t\tBuildRequest request = getTestRequest().withPublish(true);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), isNull(), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should()\n\t\t\t.pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should().push(eq(request.getName()), any(), regAuthEq(publishToken));\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderAndPublishesImage() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tDockerRegistryAuthentication builderToken = DockerRegistryAuthentication.token(\"builder token\");\n\t\tDockerRegistryAuthentication publishToken = DockerRegistryAuthentication.token(\"publish token\");\n\t\tBuilderDockerConfiguration dockerConfiguration = new BuilderDockerConfiguration()\n\t\t\t.withBuilderRegistryAuthentication(builderToken)\n\t\t\t.withPublishRegistryAuthentication(publishToken);\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, dockerConfiguration);\n\t\tBuildRequest request = getTestRequest().withPublish(true);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), isNull(), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should()\n\t\t\t.pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should().push(eq(request.getName()), any(), regAuthEq(publishToken));\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "and", "publishes", "image", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "docker", "registry", "authentication", "builder", "token", "=", "docker", "registry", "authentication", ".", "token", "(", "__STR__", ")", ";", "docker", "registry", "authentication", "publish", "token", "=", "docker", "registry", "authentication", ".", "token", "(", "__STR__", ")", ";", "builder", "docker", "configuration", "docker", "configuration", "=", "new", "builder", "docker", "configuration", "(", ")", ".", "with", "builder", "registry", "authentication", "(", "builder", "token", ")", ".", "with", "publish", "registry", "authentication", "(", "publish", "token", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "docker", "configuration", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "publish", "(", "true", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "push", "(", "eq", "(", "request", ".", "get", "name", "(", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "publish", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 510, "vocab_size": 79, "cyclomatic_complexity": 1, "ast_node_count": 616, "n_identifiers": 145, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 148, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.816259+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d9d3fddcf943020ee54c99cf94cf4f6e053bf79", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithDefaultImageTags", "signature": null, "start_line": 168, "end_line": 188, "nloc": 21, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithDefaultImageTags()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-no-run-image-tag.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(LATEST_PAKETO_BUILDPACKS_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference.of(\"docker.io/cloudfoundry/run:latest\")), eq(ImagePlatform.from(builderImage)),\n\t\t\t\t\tany(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBuilder(PAKETO_BUILDPACKS_BUILDER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithDefaultImageTags() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-no-run-image-tag.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(LATEST_PAKETO_BUILDPACKS_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference.of(\"docker.io/cloudfoundry/run:latest\")), eq(ImagePlatform.from(builderImage)),\n\t\t\t\t\tany(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBuilder(PAKETO_BUILDPACKS_BUILDER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "default", "image", "tags", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "latest", "paketo", "buildpacks", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "builder", "(", "paketo", "buildpacks", "builder", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "}"], "token_count": 312, "vocab_size": 68, "cyclomatic_complexity": 1, "ast_node_count": 386, "n_identifiers": 89, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 104, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.816820+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e68ef7b3ed0ed4df8ead571f18051cca96d3a3dd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithRunImageInDigestForm", "signature": null, "start_line": 190, "end_line": 211, "nloc": 22, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithRunImageInDigestForm()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-run-image-digest.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference\n\t\t\t\t.of(\"docker.io/cloudfoundry/run@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\")),\n\t\t\t\t\teq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithRunImageInDigestForm() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-run-image-digest.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference\n\t\t\t\t.of(\"docker.io/cloudfoundry/run@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\")),\n\t\t\t\t\teq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "run", "image", "in", "digest", "form", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "}"], "token_count": 304, "vocab_size": 67, "cyclomatic_complexity": 1, "ast_node_count": 379, "n_identifiers": 87, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 109, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.817350+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c66063009fd6471c26f9edefa8fe87abc1f71b60", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithNoStack", "signature": null, "start_line": 213, "end_line": 231, "nloc": 19, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithNoStack()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-empty-stack.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(LATEST_PAKETO_BUILDPACKS_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBuilder(PAKETO_BUILDPACKS_BUILDER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithNoStack() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image-with-empty-stack.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(LATEST_PAKETO_BUILDPACKS_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBuilder(PAKETO_BUILDPACKS_BUILDER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "no", "stack", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "latest", "paketo", "buildpacks", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "builder", "(", "paketo", "buildpacks", "builder", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "}"], "token_count": 306, "vocab_size": 68, "cyclomatic_complexity": 1, "ast_node_count": 379, "n_identifiers": 88, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 95, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.817907+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b7b4f5409cb9fd0cb1a29d78b890257f1ea12521", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithRunImageFromRequest", "signature": null, "start_line": 233, "end_line": 253, "nloc": 21, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithRunImageFromRequest()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference.of(\"example.com/custom/run:latest\")), eq(ImagePlatform.from(builderImage)), any(),\n\t\t\t\t\tisNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withRunImage(ImageReference.of(\"example.com/custom/run:latest\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithRunImageFromRequest() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(ImageReference.of(\"example.com/custom/run:latest\")), eq(ImagePlatform.from(builderImage)), any(),\n\t\t\t\t\tisNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withRunImage(ImageReference.of(\"example.com/custom/run:latest\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "run", "image", "from", "request", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "run", "image", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "}"], "token_count": 316, "vocab_size": 64, "cyclomatic_complexity": 1, "ast_node_count": 393, "n_identifiers": 90, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 104, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.818475+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "efc52b8bfec6260ec3d62c96add2c49962513c19", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithNeverPullPolicy", "signature": null, "start_line": 255, "end_line": 277, "nloc": 23, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithNeverPullPolicy()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER))).willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB))).willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.NEVER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(never()).pull(any(), any(), any());\n\t\tthen(docker.image()).should(times(2)).inspect(any());\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithNeverPullPolicy() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER))).willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB))).willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.NEVER);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(never()).pull(any(), any(), any());\n\t\tthen(docker.image()).should(times(2)).inspect(any());\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "never", "pull", "policy", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "default", "builder", ")", ")", ")", ".", "will", "return", "(", "builder", "image", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "base", "cnb", ")", ")", ")", ".", "will", "return", "(", "run", "image", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "pull", "policy", "(", "pull", "policy", ".", "never", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "never", "(", ")", ")", ".", "pull", "(", "any", "(", ")", ",", "any", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "times", "(", "__NUM__", ")", ")", ".", "inspect", "(", "any", "(", ")", ")", ";", "}"], "token_count": 412, "vocab_size": 70, "cyclomatic_complexity": 1, "ast_node_count": 533, "n_identifiers": 121, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 109, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.819348+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b3c8db24969ca4d51e1889223de3992670ed9607", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithAlwaysPullPolicy", "signature": null, "start_line": 279, "end_line": 301, "nloc": 23, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithAlwaysPullPolicy()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER))).willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB))).willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.ALWAYS);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(times(2)).pull(any(), any(), any(), isNull());\n\t\tthen(docker.image()).should(never()).inspect(any());\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithAlwaysPullPolicy() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER))).willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB))).willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.ALWAYS);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(times(2)).pull(any(), any(), any(), isNull());\n\t\tthen(docker.image()).should(never()).inspect(any());\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "always", "pull", "policy", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "default", "builder", ")", ")", ")", ".", "will", "return", "(", "builder", "image", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "base", "cnb", ")", ")", ")", ".", "will", "return", "(", "run", "image", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "pull", "policy", "(", "pull", "policy", ".", "always", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "times", "(", "__NUM__", ")", ")", ".", "pull", "(", "any", "(", ")", ",", "any", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "never", "(", ")", ")", ".", "inspect", "(", "any", "(", ")", ")", ";", "}"], "token_count": 417, "vocab_size": 71, "cyclomatic_complexity": 1, "ast_node_count": 539, "n_identifiers": 122, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 110, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.819999+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "149bcedb0b42a8b8805b704437f5f331d21d2bd1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithIfNotPresentPullPolicy", "signature": null, "start_line": 303, "end_line": 331, "nloc": 29, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithIfNotPresentPullPolicy()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER)))\n\t\t\t.willThrow(\n\t\t\t\t\tnew DockerEngineException(\"docker://localhost/\", new URI(\"example\"), 404, \"NOT FOUND\", null, null))\n\t\t\t.willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB)))\n\t\t\t.willThrow(\n\t\t\t\t\tnew DockerEngineException(\"docker://localhost/\", new URI(\"example\"), 404, \"NOT FOUND\", null, null))\n\t\t\t.willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.IF_NOT_PRESENT);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(times(2)).inspect(any());\n\t\tthen(docker.image()).should(times(2)).pull(any(), any(), any(), isNull());\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithIfNotPresentPullPolicy() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tgiven(docker.image().inspect(eq(DEFAULT_BUILDER)))\n\t\t\t.willThrow(\n\t\t\t\t\tnew DockerEngineException(\"docker://localhost/\", new URI(\"example\"), 404, \"NOT FOUND\", null, null))\n\t\t\t.willReturn(builderImage);\n\t\tgiven(docker.image().inspect(eq(BASE_CNB)))\n\t\t\t.willThrow(\n\t\t\t\t\tnew DockerEngineException(\"docker://localhost/\", new URI(\"example\"), 404, \"NOT FOUND\", null, null))\n\t\t\t.willReturn(runImage);\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withPullPolicy(PullPolicy.IF_NOT_PRESENT);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).should(times(2)).inspect(any());\n\t\tthen(docker.image()).should(times(2)).pull(any(), any(), any(), isNull());\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "if", "not", "present", "pull", "policy", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "default", "builder", ")", ")", ")", ".", "will", "throw", "(", "new", "docker", "engine", "exception", "(", "__STR__", ",", "new", "uri", "(", "__STR__", ")", ",", "__NUM__", ",", "__STR__", ",", "null", ",", "null", ")", ")", ".", "will", "return", "(", "builder", "image", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "inspect", "(", "eq", "(", "base", "cnb", ")", ")", ")", ".", "will", "throw", "(", "new", "docker", "engine", "exception", "(", "__STR__", ",", "new", "uri", "(", "__STR__", ")", ",", "__NUM__", ",", "__STR__", ",", "null", ",", "null", ")", ")", ".", "will", "return", "(", "run", "image", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "pull", "policy", "(", "pull", "policy", ".", "if", "not", "present", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "times", "(", "__NUM__", ")", ")", ".", "inspect", "(", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", "times", "(", "__NUM__", ")", ")", ".", "pull", "(", "any", "(", ")", ",", "any", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 474, "vocab_size": 75, "cyclomatic_complexity": 1, "ast_node_count": 598, "n_identifiers": 128, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 154, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.820678+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "73d8b3811c3c2253836fcd0558df0abb482655ae", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithTags", "signature": null, "start_line": 333, "end_line": 353, "nloc": 21, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithTags()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withTags(ImageReference.of(\"my-application:1.2.3\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tassertThat(out.toString()).contains(\"Successfully created image tag 'docker.io/library/my-application:1.2.3'\");\n\t\tthen(docker.image()).should().tag(eq(request.getName()), eq(ImageReference.of(\"my-application:1.2.3\")));\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithTags() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withTags(ImageReference.of(\"my-application:1.2.3\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tassertThat(out.toString()).contains(\"Successfully created image tag 'docker.io/library/my-application:1.2.3'\");\n\t\tthen(docker.image()).should().tag(eq(request.getName()), eq(ImageReference.of(\"my-application:1.2.3\")));\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "tags", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "tags", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "tag", "(", "eq", "(", "request", ".", "get", "name", "(", ")", ")", ",", "eq", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "}"], "token_count": 360, "vocab_size": 68, "cyclomatic_complexity": 1, "ast_node_count": 459, "n_identifiers": 104, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 106, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.821269+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "44d18d753c03bc602bba5864b5557dd02c590df9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithTagsAndPublishesImageAndTags", "signature": null, "start_line": 355, "end_line": 390, "nloc": 36, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithTagsAndPublishesImageAndTags()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tDockerRegistryAuthentication builderToken = DockerRegistryAuthentication.token(\"builder token\");\n\t\tDockerRegistryAuthentication publishToken = DockerRegistryAuthentication.token(\"publish token\");\n\t\tBuilderDockerConfiguration dockerConfiguration = new BuilderDockerConfiguration()\n\t\t\t.withBuilderRegistryAuthentication(builderToken)\n\t\t\t.withPublishRegistryAuthentication(publishToken);\n\t\tImageReference defaultBuilderImageReference = DEFAULT_BUILDER;\n\t\tgiven(docker.image().pull(eq(defaultBuilderImageReference), isNull(), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tImageReference baseImageReference = BASE_CNB;\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(baseImageReference), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, dockerConfiguration);\n\t\tImageReference builtImageReference = ImageReference.of(\"my-application:1.2.3\");\n\t\tBuildRequest request = getTestRequest().withPublish(true).withTags(builtImageReference);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tassertThat(out.toString()).contains(\"Successfully created image tag 'docker.io/library/my-application:1.2.3'\");\n\t\tthen(docker.image()).should().pull(eq(defaultBuilderImageReference), isNull(), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should()\n\t\t\t.pull(eq(baseImageReference), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should().push(eq(request.getName()), any(), regAuthEq(publishToken));\n\t\tthen(docker.image()).should().tag(eq(request.getName()), eq(builtImageReference));\n\t\tthen(docker.image()).should().push(eq(builtImageReference), any(), regAuthEq(publishToken));\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithTagsAndPublishesImageAndTags() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tDockerRegistryAuthentication builderToken = DockerRegistryAuthentication.token(\"builder token\");\n\t\tDockerRegistryAuthentication publishToken = DockerRegistryAuthentication.token(\"publish token\");\n\t\tBuilderDockerConfiguration dockerConfiguration = new BuilderDockerConfiguration()\n\t\t\t.withBuilderRegistryAuthentication(builderToken)\n\t\t\t.withPublishRegistryAuthentication(publishToken);\n\t\tImageReference defaultBuilderImageReference = DEFAULT_BUILDER;\n\t\tgiven(docker.image().pull(eq(defaultBuilderImageReference), isNull(), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tImageReference baseImageReference = BASE_CNB;\n\t\tgiven(docker.image()\n\t\t\t.pull(eq(baseImageReference), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken)))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, dockerConfiguration);\n\t\tImageReference builtImageReference = ImageReference.of(\"my-application:1.2.3\");\n\t\tBuildRequest request = getTestRequest().withPublish(true).withTags(builtImageReference);\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tassertThat(out.toString()).contains(\"Successfully created image tag 'docker.io/library/my-application:1.2.3'\");\n\t\tthen(docker.image()).should().pull(eq(defaultBuilderImageReference), isNull(), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should()\n\t\t\t.pull(eq(baseImageReference), eq(ImagePlatform.from(builderImage)), any(), regAuthEq(builderToken));\n\t\tthen(docker.image()).should().push(eq(request.getName()), any(), regAuthEq(publishToken));\n\t\tthen(docker.image()).should().tag(eq(request.getName()), eq(builtImageReference));\n\t\tthen(docker.image()).should().push(eq(builtImageReference), any(), regAuthEq(publishToken));\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "tags", "and", "publishes", "image", "and", "tags", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "docker", "registry", "authentication", "builder", "token", "=", "docker", "registry", "authentication", ".", "token", "(", "__STR__", ")", ";", "docker", "registry", "authentication", "publish", "token", "=", "docker", "registry", "authentication", ".", "token", "(", "__STR__", ")", ";", "builder", "docker", "configuration", "docker", "configuration", "=", "new", "builder", "docker", "configuration", "(", ")", ".", "with", "builder", "registry", "authentication", "(", "builder", "token", ")", ".", "with", "publish", "registry", "authentication", "(", "publish", "token", ")", ";", "image", "reference", "default", "builder", "image", "reference", "=", "default", "builder", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", "image", "reference", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "image", "reference", "base", "image", "reference", "=", "base", "cnb", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "image", "reference", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "docker", "configuration", ")", ";", "image", "reference", "built", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "publish", "(", "true", ")", ".", "with", "tags", "(", "built", "image", "reference", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", "image", "reference", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "base", "image", "reference", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "builder", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "push", "(", "eq", "(", "request", ".", "get", "name", "(", ")", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "publish", "token", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "tag", "(", "eq", "(", "request", ".", "get", "name", "(", ")", ")", ",", "eq", "(", "built", "image", "reference", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "push", "(", "eq", "(", "built", "image", "reference", ")", ",", "any", "(", ")", ",", "reg", "auth", "eq", "(", "publish", "token", ")", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 645, "vocab_size": 83, "cyclomatic_complexity": 1, "ast_node_count": 762, "n_identifiers": 181, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 186, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.822110+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ea3482ca2c3e20772288b24796569881fedfaa49", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildInvokesBuilderWithPlatform", "signature": null, "start_line": 392, "end_line": 413, "nloc": 22, "method_source_normalized": "@TestvoidbuildInvokesBuilderWithPlatform()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\tDockerApi docker = mockDockerApi(platform);\n\t\tImage builderImage = loadImage(\"image-with-platform.json\");\n\t\tImage runImage = loadImage(\"run-image-with-platform.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), eq(platform), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(platform), any(), isNull())).willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withImagePlatform(\"linux/arm64/v1\");\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), eq(platform), any(), isNull());\n\t\tthen(docker.image()).should().pull(eq(BASE_CNB), eq(platform), any(), isNull());\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "original_code": "@Test\n\tvoid buildInvokesBuilderWithPlatform() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/arm64/v1\");\n\t\tDockerApi docker = mockDockerApi(platform);\n\t\tImage builderImage = loadImage(\"image-with-platform.json\");\n\t\tImage runImage = loadImage(\"run-image-with-platform.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), eq(platform), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(platform), any(), isNull())).willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withImagePlatform(\"linux/arm64/v1\");\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\"Running creator\");\n\t\tassertThat(out.toString()).contains(\"Successfully built image 'docker.io/library/my-application:latest'\");\n\t\tArgumentCaptor<ImageArchive> archive = ArgumentCaptor.forClass(ImageArchive.class);\n\t\tthen(docker.image()).should().pull(eq(DEFAULT_BUILDER), eq(platform), any(), isNull());\n\t\tthen(docker.image()).should().pull(eq(BASE_CNB), eq(platform), any(), isNull());\n\t\tthen(docker.image()).should().load(archive.capture(), any());\n\t\tthen(docker.image()).should().remove(archive.getValue().getTag(), true);\n\t\tthen(docker.image()).shouldHaveNoMoreInteractions();\n\t}", "code_tokens": ["@", "test", "void", "build", "invokes", "builder", "with", "platform", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", "platform", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "eq", "(", "platform", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "platform", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "image", "platform", "(", "__STR__", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "argument", "captor", "<", "image", "archive", ">", "archive", "=", "argument", "captor", ".", "for", "class", "(", "image", "archive", ".", "class", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "eq", "(", "platform", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "platform", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "load", "(", "archive", ".", "capture", "(", ")", ",", "any", "(", ")", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "(", ")", ".", "remove", "(", "archive", ".", "get", "value", "(", ")", ".", "get", "tag", "(", ")", ",", "true", ")", ";", "then", "(", "docker", ".", "image", "(", ")", ")", ".", "should", "have", "no", "more", "interactions", "(", ")", ";", "}"], "token_count": 397, "vocab_size": 68, "cyclomatic_complexity": 1, "ast_node_count": 510, "n_identifiers": 117, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 112, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.822766+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bb2a979962f8e16a9f0ad7fa094fd3a8fda6312d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildWhenStackIdDoesNotMatchThrowsException", "signature": null, "start_line": 415, "end_line": 430, "nloc": 16, "method_source_normalized": "@TestvoidbuildWhenStackIdDoesNotMatchThrowsException()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image-with-bad-stack.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tassertThatIllegalStateException().isThrownBy(() -> builder.build(request))\n\t\t\t.withMessage(\n\t\t\t\t\t\"Run image stack 'org.cloudfoundry.stacks.cfwindowsfs3' does not match builder stack 'io.buildpacks.stacks.bionic'\");\n\t}", "original_code": "@Test\n\tvoid buildWhenStackIdDoesNotMatchThrowsException() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image-with-bad-stack.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tassertThatIllegalStateException().isThrownBy(() -> builder.build(request))\n\t\t\t.withMessage(\n\t\t\t\t\t\"Run image stack 'org.cloudfoundry.stacks.cfwindowsfs3' does not match builder stack 'io.buildpacks.stacks.bionic'\");\n\t}", "code_tokens": ["@", "test", "void", "build", "when", "stack", "id", "does", "not", "match", "throws", "exception", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", ".", "build", "(", "request", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 213, "vocab_size": 59, "cyclomatic_complexity": 1, "ast_node_count": 251, "n_identifiers": 58, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 92, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.823232+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32d7baa7f8a0d2d9a0b28889677669c876e03c42", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildWhenBuilderReturnsErrorThrowsException", "signature": null, "start_line": 432, "end_line": 446, "nloc": 15, "method_source_normalized": "@TestvoidbuildWhenBuilderReturnsErrorThrowsException()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApiLifecycleError();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tassertThatExceptionOfType(BuilderException.class).isThrownBy(() -> builder.build(request))\n\t\t\t.withMessage(\"Builder lifecycle 'creator' failed with status code 9\");\n\t}", "original_code": "@Test\n\tvoid buildWhenBuilderReturnsErrorThrowsException() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApiLifecycleError();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest();\n\t\tassertThatExceptionOfType(BuilderException.class).isThrownBy(() -> builder.build(request))\n\t\t\t.withMessage(\"Builder lifecycle 'creator' failed with status code 9\");\n\t}", "code_tokens": ["@", "test", "void", "build", "when", "builder", "returns", "error", "throws", "exception", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "lifecycle", "error", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ";", "assert", "that", "exception", "of", "type", "(", "builder", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", ".", "build", "(", "request", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 217, "vocab_size": 58, "cyclomatic_complexity": 1, "ast_node_count": 255, "n_identifiers": 60, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 84, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.823694+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b42399f532b974ca8c1f492bb79a6be55e4f81e6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "buildWhenRequestedBuildpackNotInBuilderThrowsException", "signature": null, "start_line": 448, "end_line": 463, "nloc": 16, "method_source_normalized": "@TestvoidbuildWhenRequestedBuildpackNotInBuilderThrowsException()throws Exception{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApiLifecycleError();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), any(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), any(), any(), isNull())).willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack@1.2.3\");\n\t\tBuildRequest request = getTestRequest().withBuildpacks(reference);\n\t\tassertThatIllegalStateException().isThrownBy(() -> builder.build(request))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack@1.2.3'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "original_code": "@Test\n\tvoid buildWhenRequestedBuildpackNotInBuilderThrowsException() throws Exception {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApiLifecycleError();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), any(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), any(), any(), isNull())).willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildpackReference reference = BuildpackReference.of(\"urn:cnb:builder:example/buildpack@1.2.3\");\n\t\tBuildRequest request = getTestRequest().withBuildpacks(reference);\n\t\tassertThatIllegalStateException().isThrownBy(() -> builder.build(request))\n\t\t\t.withMessageContaining(\"'urn:cnb:builder:example/buildpack@1.2.3'\")\n\t\t\t.withMessageContaining(\"not found in builder\");\n\t}", "code_tokens": ["@", "test", "void", "build", "when", "requested", "buildpack", "not", "in", "builder", "throws", "exception", "(", ")", "throws", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "lifecycle", "error", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "any", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "any", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "buildpacks", "(", "reference", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "builder", ".", "build", "(", "request", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 232, "vocab_size": 62, "cyclomatic_complexity": 1, "ast_node_count": 271, "n_identifiers": 62, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 86, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.824145+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a9f4e866edb35b19691d6f366d8ebe5677e5f17f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "logsWarningIfBindingWithSensitiveTargetIsDetected", "signature": null, "start_line": 465, "end_line": 480, "nloc": 16, "method_source_normalized": "@TestvoidlogsWarningIfBindingWithSensitiveTargetIsDetected()throws IOException{\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBindings(Binding.from(\"/host\", \"/cnb\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\n\t\t\t\t\"Warning: Binding '/host:/cnb' uses a container path which is used by buildpacks while building. Binding to it can cause problems!\");\n\t}", "original_code": "@Test\n\tvoid logsWarningIfBindingWithSensitiveTargetIsDetected() throws IOException {\n\t\tTestPrintStream out = new TestPrintStream();\n\t\tDockerApi docker = mockDockerApi();\n\t\tImage builderImage = loadImage(\"image.json\");\n\t\tImage runImage = loadImage(\"run-image.json\");\n\t\tgiven(docker.image().pull(eq(DEFAULT_BUILDER), isNull(), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(builderImage));\n\t\tgiven(docker.image().pull(eq(BASE_CNB), eq(ImagePlatform.from(builderImage)), any(), isNull()))\n\t\t\t.willAnswer(withPulledImage(runImage));\n\t\tBuilder builder = new Builder(BuildLog.to(out), docker, null);\n\t\tBuildRequest request = getTestRequest().withBindings(Binding.from(\"/host\", \"/cnb\"));\n\t\tbuilder.build(request);\n\t\tassertThat(out.toString()).contains(\n\t\t\t\t\"Warning: Binding '/host:/cnb' uses a container path which is used by buildpacks while building. Binding to it can cause problems!\");\n\t}", "code_tokens": ["@", "test", "void", "logs", "warning", "if", "binding", "with", "sensitive", "target", "is", "detected", "(", ")", "throws", "io", "exception", "{", "test", "print", "stream", "out", "=", "new", "test", "print", "stream", "(", ")", ";", "docker", "api", "docker", "=", "mock", "docker", "api", "(", ")", ";", "image", "builder", "image", "=", "load", "image", "(", "__STR__", ")", ";", "image", "run", "image", "=", "load", "image", "(", "__STR__", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "default", "builder", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "builder", "image", ")", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ".", "pull", "(", "eq", "(", "base", "cnb", ")", ",", "eq", "(", "image", "platform", ".", "from", "(", "builder", "image", ")", ")", ",", "any", "(", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "answer", "(", "with", "pulled", "image", "(", "run", "image", ")", ")", ";", "builder", "builder", "=", "new", "builder", "(", "build", "log", ".", "to", "(", "out", ")", ",", "docker", ",", "null", ")", ";", "build", "request", "request", "=", "get", "test", "request", "(", ")", ".", "with", "bindings", "(", "binding", ".", "from", "(", "__STR__", ",", "__STR__", ")", ")", ";", "builder", ".", "build", "(", "request", ")", ";", "assert", "that", "(", "out", ".", "to", "string", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 221, "vocab_size": 58, "cyclomatic_complexity": 1, "ast_node_count": 265, "n_identifiers": 62, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 99, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.824640+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "83a4a3d9239e28bafae98028256a08663fb9a047", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "mockDockerApi", "signature": null, "start_line": 482, "end_line": 484, "nloc": 3, "method_source_normalized": "privateDockerApimockDockerApi()throws IOException{\n\t\treturn mockDockerApi(null);\n\t}", "original_code": "private DockerApi mockDockerApi() throws IOException {\n\t\treturn mockDockerApi(null);\n\t}", "code_tokens": ["private", "docker", "api", "mock", "docker", "api", "(", ")", "throws", "io", "exception", "{", "return", "mock", "docker", "api", "(", "null", ")", ";", "}"], "token_count": 21, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 23, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.824920+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fbad0ee2ce3ff60285350935466203431a269460", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "mockDockerApi", "signature": null, "start_line": 486, "end_line": 498, "nloc": 13, "method_source_normalized": "privateDockerApimockDockerApi(ImagePlatform platform)throws IOException{\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tContainerReference reference = ContainerReference.of(\"container-ref\");\n\t\tgiven(containerApi.create(any(), eq(platform), any())).willReturn(reference);\n\t\tgiven(containerApi.wait(eq(reference))).willReturn(ContainerStatus.of(0, null));\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "original_code": "private DockerApi mockDockerApi(ImagePlatform platform) throws IOException {\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tContainerReference reference = ContainerReference.of(\"container-ref\");\n\t\tgiven(containerApi.create(any(), eq(platform), any())).willReturn(reference);\n\t\tgiven(containerApi.wait(eq(reference))).willReturn(ContainerStatus.of(0, null));\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "code_tokens": ["private", "docker", "api", "mock", "docker", "api", "(", "image", "platform", "platform", ")", "throws", "io", "exception", "{", "container", "api", "container", "api", "=", "mock", "(", "container", "api", ".", "class", ")", ";", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "given", "(", "container", "api", ".", "create", "(", "any", "(", ")", ",", "eq", "(", "platform", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "reference", ")", ";", "given", "(", "container", "api", ".", "wait", "(", "eq", "(", "reference", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "image", "api", "image", "api", "=", "mock", "(", "image", "api", ".", "class", ")", ";", "volume", "api", "volume", "api", "=", "mock", "(", "volume", "api", ".", "class", ")", ";", "docker", "api", "docker", "=", "mock", "(", "docker", "api", ".", "class", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ")", ".", "will", "return", "(", "image", "api", ")", ";", "given", "(", "docker", ".", "container", "(", ")", ")", ".", "will", "return", "(", "container", "api", ")", ";", "given", "(", "docker", ".", "volume", "(", ")", ")", ".", "will", "return", "(", "volume", "api", ")", ";", "return", "docker", ";", "}"], "token_count": 186, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 233, "n_identifiers": 62, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.825292+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8ffd244e0898ff55dad8e272b03858e998ec06de", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "mockDockerApiLifecycleError", "signature": null, "start_line": 500, "end_line": 512, "nloc": 13, "method_source_normalized": "privateDockerApimockDockerApiLifecycleError()throws IOException{\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tContainerReference reference = ContainerReference.of(\"container-ref\");\n\t\tgiven(containerApi.create(any(), isNull(), any())).willReturn(reference);\n\t\tgiven(containerApi.wait(eq(reference))).willReturn(ContainerStatus.of(9, null));\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "original_code": "private DockerApi mockDockerApiLifecycleError() throws IOException {\n\t\tContainerApi containerApi = mock(ContainerApi.class);\n\t\tContainerReference reference = ContainerReference.of(\"container-ref\");\n\t\tgiven(containerApi.create(any(), isNull(), any())).willReturn(reference);\n\t\tgiven(containerApi.wait(eq(reference))).willReturn(ContainerStatus.of(9, null));\n\t\tImageApi imageApi = mock(ImageApi.class);\n\t\tVolumeApi volumeApi = mock(VolumeApi.class);\n\t\tDockerApi docker = mock(DockerApi.class);\n\t\tgiven(docker.image()).willReturn(imageApi);\n\t\tgiven(docker.container()).willReturn(containerApi);\n\t\tgiven(docker.volume()).willReturn(volumeApi);\n\t\treturn docker;\n\t}", "code_tokens": ["private", "docker", "api", "mock", "docker", "api", "lifecycle", "error", "(", ")", "throws", "io", "exception", "{", "container", "api", "container", "api", "=", "mock", "(", "container", "api", ".", "class", ")", ";", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "given", "(", "container", "api", ".", "create", "(", "any", "(", ")", ",", "is", "null", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "reference", ")", ";", "given", "(", "container", "api", ".", "wait", "(", "eq", "(", "reference", ")", ")", ")", ".", "will", "return", "(", "container", "status", ".", "of", "(", "__NUM__", ",", "null", ")", ")", ";", "image", "api", "image", "api", "=", "mock", "(", "image", "api", ".", "class", ")", ";", "volume", "api", "volume", "api", "=", "mock", "(", "volume", "api", ".", "class", ")", ";", "docker", "api", "docker", "=", "mock", "(", "docker", "api", ".", "class", ")", ";", "given", "(", "docker", ".", "image", "(", ")", ")", ".", "will", "return", "(", "image", "api", ")", ";", "given", "(", "docker", ".", "container", "(", ")", ")", ".", "will", "return", "(", "container", "api", ")", ";", "given", "(", "docker", ".", "volume", "(", ")", ")", ".", "will", "return", "(", "volume", "api", ")", ";", "return", "docker", ";", "}"], "token_count": 185, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 229, "n_identifiers": 59, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 59, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.825684+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aca4a7dca6e12f499c64723b03ffa4c5c739723b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "getTestRequest", "signature": null, "start_line": 514, "end_line": 518, "nloc": 5, "method_source_normalized": "privateBuildRequestgetTestRequest(){\n\t\tTarArchive content = mock(TarArchive.class);\n\t\tImageReference name = ImageReference.of(\"my-application\");\n\t\treturn BuildRequest.of(name, (owner) -> content).withTrustBuilder(true);\n\t}", "original_code": "private BuildRequest getTestRequest() {\n\t\tTarArchive content = mock(TarArchive.class);\n\t\tImageReference name = ImageReference.of(\"my-application\");\n\t\treturn BuildRequest.of(name, (owner) -> content).withTrustBuilder(true);\n\t}", "code_tokens": ["private", "build", "request", "get", "test", "request", "(", ")", "{", "tar", "archive", "content", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "image", "reference", "name", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "return", "build", "request", ".", "of", "(", "name", ",", "(", "owner", ")", "->", "content", ")", ".", "with", "trust", "builder", "(", "true", ")", ";", "}"], "token_count": 56, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 66, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.825975+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bd53ca6e2a3d91c1aa5c82e55c3722fe647dfda1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "loadImage", "signature": null, "start_line": 520, "end_line": 522, "nloc": 3, "method_source_normalized": "privateImageloadImage(String name)throws IOException{\n\t\treturn Image.of(getClass().getResourceAsStream(name));\n\t}", "original_code": "private Image loadImage(String name) throws IOException {\n\t\treturn Image.of(getClass().getResourceAsStream(name));\n\t}", "code_tokens": ["private", "image", "load", "image", "(", "string", "name", ")", "throws", "io", "exception", "{", "return", "image", ".", "of", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "name", ")", ")", ";", "}"], "token_count": 32, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 39, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.826229+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e2bb0c2b07251a00fce66656b3da34128af4add6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "withPulledImage", "signature": null, "start_line": 524, "end_line": 531, "nloc": 8, "method_source_normalized": "privateAnswer<Image>withPulledImage(Image image){\n\t\treturn (invocation) -> {\n\t\t\tTotalProgressPullListener listener = invocation.getArgument(2, TotalProgressPullListener.class);\n\t\t\tlistener.onStart();\n\t\t\tlistener.onFinish();\n\t\t\treturn image;\n\t\t};\n\t}", "original_code": "private Answer<Image> withPulledImage(Image image) {\n\t\treturn (invocation) -> {\n\t\t\tTotalProgressPullListener listener = invocation.getArgument(2, TotalProgressPullListener.class);\n\t\t\tlistener.onStart();\n\t\t\tlistener.onFinish();\n\t\t\treturn image;\n\t\t};\n\t}", "code_tokens": ["private", "answer", "<", "image", ">", "with", "pulled", "image", "(", "image", "image", ")", "{", "return", "(", "invocation", ")", "->", "{", "total", "progress", "pull", "listener", "listener", "=", "invocation", ".", "get", "argument", "(", "__NUM__", ",", "total", "progress", "pull", "listener", ".", "class", ")", ";", "listener", ".", "on", "start", "(", ")", ";", "listener", ".", "on", "finish", "(", ")", ";", "return", "image", ";", "}", ";", "}"], "token_count": 60, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 72, "n_identifiers": 17, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.826504+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d05ded8115ada75fba0a8a1fdf5ee0e73f1dc253", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "regAuthEq", "signature": null, "start_line": 533, "end_line": 535, "nloc": 3, "method_source_normalized": "private staticStringregAuthEq(DockerRegistryAuthentication authentication){\n\t\treturn argThat(authentication.getAuthHeader()::equals);\n\t}", "original_code": "private static String regAuthEq(DockerRegistryAuthentication authentication) {\n\t\treturn argThat(authentication.getAuthHeader()::equals);\n\t}", "code_tokens": ["private", "static", "string", "reg", "auth", "eq", "(", "docker", "registry", "authentication", "authentication", ")", "{", "return", "arg", "that", "(", "authentication", ".", "get", "auth", "header", "(", ")", "::", "equals", ")", ";", "}"], "token_count": 29, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.826758+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e437584418aa78feb946620d0b51ebdc3ea4c129", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "TestPrintStream", "signature": null, "start_line": 539, "end_line": 541, "nloc": 3, "method_source_normalized": "TestPrintStream(){\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "original_code": "TestPrintStream() {\n\t\t\tsuper(new ByteArrayOutputStream());\n\t\t}", "code_tokens": ["test", "print", "stream", "(", ")", "{", "super", "(", "new", "byte", "array", "output", "stream", "(", ")", ")", ";", "}"], "token_count": 18, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 20, "n_identifiers": 2, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.826997+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "695e60b3f9e003aa379fa50d82c3e4762fc0721e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java", "file_blob_sha": null, "method_name": "toString", "signature": null, "start_line": 543, "end_line": 546, "nloc": 4, "method_source_normalized": "@Override\n\t\tpublicStringtoString(){\n\t\t\treturn this.out.toString();\n\t\t}", "original_code": "@Override\n\t\tpublic String toString() {\n\t\t\treturn this.out.toString();\n\t\t}", "code_tokens": ["@", "override", "public", "string", "to", "string", "(", ")", "{", "return", "this", ".", "out", ".", "to", "string", "(", ")", ";", "}"], "token_count": 20, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 27, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.827236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ff007b942b9f53ae5a52d6b53b0592c2ddee45db", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 65, "end_line": 70, "nloc": 6, "method_source_normalized": "@BeforeEachvoidsetUp(){\n\t\tStringBuilder path = new StringBuilder();\n\t\tnew Random().ints('a', 'z' + 1).limit(100).forEach((i) -> path.append((char) i));\n\t\tthis.longFilePath = path.toString();\n\t}", "original_code": "@BeforeEach\n\tvoid setUp() {\n\t\tStringBuilder path = new StringBuilder();\n\t\tnew Random().ints('a', 'z' + 1).limit(100).forEach((i) -> path.append((char) i));\n\t\tthis.longFilePath = path.toString();\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", ")", "{", "string", "builder", "path", "=", "new", "string", "builder", "(", ")", ";", "new", "random", "(", ")", ".", "ints", "(", "__STR__", ",", "__STR__", "+", "__NUM__", ")", ".", "limit", "(", "__NUM__", ")", ".", "for", "each", "(", "(", "i", ")", "->", "path", ".", "append", "(", "(", "char", ")", "i", ")", ")", ";", "this", ".", "long", "file", "path", "=", "path", ".", "to", "string", "(", ")", ";", "}"], "token_count": 70, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 92, "n_identifiers": 16, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.831357+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c1bbb3f469888a74fb34265f37fcf7f0bb368781", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedReferenceReturnsBuildpack", "signature": null, "start_line": 72, "end_line": 84, "nloc": 13, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedReferenceReturnsBuildpack()throws Exception{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedReferenceReturnsBuildpack() throws Exception {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "reference", "returns", "buildpack", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "__STR__", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "eq", "(", "image", "reference", ")", ",", "eq", "(", "image", "type", ".", "buildpack", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "will", "answer", "(", "this", "::", "with", "mock", "layers", ")", ".", "given", "(", "resolver", "context", ")", ".", "export", "image", "layers", "(", "eq", "(", "image", "reference", ")", ",", "any", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "applies", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 198, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 224, "n_identifiers": 57, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.831785+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "97625923680eba9c07525d65926108452b25b245", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenUnqualifiedReferenceReturnsBuildpack", "signature": null, "start_line": 86, "end_line": 98, "nloc": 13, "method_source_normalized": "@TestvoidresolveWhenUnqualifiedReferenceReturnsBuildpack()throws Exception{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenUnqualifiedReferenceReturnsBuildpack() throws Exception {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "unqualified", "reference", "returns", "buildpack", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "__STR__", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "eq", "(", "image", "reference", ")", ",", "eq", "(", "image", "type", ".", "buildpack", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "will", "answer", "(", "this", "::", "with", "mock", "layers", ")", ".", "given", "(", "resolver", "context", ")", ".", "export", "image", "layers", "(", "eq", "(", "image", "reference", ")", ",", "any", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "applies", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 197, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 224, "n_identifiers": 57, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.832190+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17bf2d93a27d72983382c81bff96fbe7e9e1cdc1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveReferenceWithoutTagUsesLatestTag", "signature": null, "start_line": 100, "end_line": 112, "nloc": 13, "method_source_normalized": "@TestvoidresolveReferenceWithoutTagUsesLatestTag()throws Exception{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:latest\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveReferenceWithoutTagUsesLatestTag() throws Exception {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:latest\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "reference", "without", "tag", "uses", "latest", "tag", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "__STR__", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "eq", "(", "image", "reference", ")", ",", "eq", "(", "image", "type", ".", "buildpack", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "will", "answer", "(", "this", "::", "with", "mock", "layers", ")", ".", "given", "(", "resolver", "context", ")", ".", "export", "image", "layers", "(", "eq", "(", "image", "reference", ")", ",", "any", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "applies", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 198, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 224, "n_identifiers": 57, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 56, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.832591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c64dc6941e7bbf5839b32309a6bc63fc0b03519e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveReferenceWithDigestUsesDigest", "signature": null, "start_line": 114, "end_line": 127, "nloc": 14, "method_source_normalized": "@TestvoidresolveReferenceWithDigestUsesDigest()throws Exception{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tString digest = \"sha256:4acb6bfd6c4f0cabaf7f3690e444afe51f1c7de54d51da7e63fac709c56f1c30\";\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1@\" + digest);\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1@\" + digest);\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveReferenceWithDigestUsesDigest() throws Exception {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tString digest = \"sha256:4acb6bfd6c4f0cabaf7f3690e444afe51f1c7de54d51da7e63fac709c56f1c30\";\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1@\" + digest);\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata()).willReturn(BuildpackLayersMetadata.fromJson(\"{}\"));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"example/buildpack1@\" + digest);\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesExpectedLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "reference", "with", "digest", "uses", "digest", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "string", "digest", "=", "__STR__", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", "+", "digest", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "__STR__", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "eq", "(", "image", "reference", ")", ",", "eq", "(", "image", "type", ".", "buildpack", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "will", "answer", "(", "this", "::", "with", "mock", "layers", ")", ".", "given", "(", "resolver", "context", ")", ".", "export", "image", "layers", "(", "eq", "(", "image", "reference", ")", ",", "any", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", "+", "digest", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "applies", "expected", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 206, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 237, "n_identifiers": 61, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 66, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.833002+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c94f4e944ae84b66ab5d71f50980ce60a2d469bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenBuildpackExistsInBuilderSkipsLayers", "signature": null, "start_line": 129, "end_line": 142, "nloc": 14, "method_source_normalized": "@TestvoidresolveWhenBuildpackExistsInBuilderSkipsLayers()throws Exception{\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata())\n\t\t\t.willReturn(BuildpackLayersMetadata.fromJson(getContentAsString(\"buildpack-layers-metadata.json\")));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesNoLayers(buildpack);\n\t}", "original_code": "@Test\n\tvoid resolveWhenBuildpackExistsInBuilderSkipsLayers() throws Exception {\n\t\tImage image = Image.of(getContent(\"buildpack-image.json\"));\n\t\tImageReference imageReference = ImageReference.of(\"example/buildpack1:1.0.0\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.getBuildpackLayersMetadata())\n\t\t\t.willReturn(BuildpackLayersMetadata.fromJson(getContentAsString(\"buildpack-layers-metadata.json\")));\n\t\tgiven(resolverContext.fetchImage(eq(imageReference), eq(ImageType.BUILDPACK))).willReturn(image);\n\t\twillAnswer(this::withMockLayers).given(resolverContext).exportImageLayers(eq(imageReference), any());\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:1.0.0\");\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack.getCoordinates()).hasToString(\"example/hello-universe@0.0.1\");\n\t\tassertAppliesNoLayers(buildpack);\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "buildpack", "exists", "in", "builder", "skips", "layers", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "get", "buildpack", "layers", "metadata", "(", ")", ")", ".", "will", "return", "(", "buildpack", "layers", "metadata", ".", "from", "json", "(", "get", "content", "as", "string", "(", "__STR__", ")", ")", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "eq", "(", "image", "reference", ")", ",", "eq", "(", "image", "type", ".", "buildpack", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "will", "answer", "(", "this", "::", "with", "mock", "layers", ")", ".", "given", "(", "resolver", "context", ")", ".", "export", "image", "layers", "(", "eq", "(", "image", "reference", ")", ",", "any", "(", ")", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ".", "get", "coordinates", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "applies", "no", "layers", "(", "buildpack", ")", ";", "}"], "token_count": 205, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 229, "n_identifiers": 58, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.833411+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a50a2f556f08d235eb86c90bd276b0e6db32e979", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenWhenImageNotPulledThrowsException", "signature": null, "start_line": 144, "end_line": 152, "nloc": 9, "method_source_normalized": "@TestvoidresolveWhenWhenImageNotPulledThrowsException()throws Exception{\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.fetchImage(any(), any())).willThrow(IOException.class);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1\");\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"Error pulling buildpack image\")\n\t\t\t.withMessageContaining(\"example/buildpack1:latest\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenWhenImageNotPulledThrowsException() throws Exception {\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.fetchImage(any(), any())).willThrow(IOException.class);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1\");\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"Error pulling buildpack image\")\n\t\t\t.withMessageContaining(\"example/buildpack1:latest\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "when", "image", "not", "pulled", "throws", "exception", "(", ")", "throws", "exception", "{", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "any", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "throw", "(", "io", "exception", ".", "class", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 112, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 122, "n_identifiers": 28, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.833739+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c2b9e49062e9826a83725a91ee05e1230bc27a7f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenMissingMetadataLabelThrowsException", "signature": null, "start_line": 154, "end_line": 162, "nloc": 9, "method_source_normalized": "@TestvoidresolveWhenMissingMetadataLabelThrowsException()throws Exception{\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.fetchImage(any(), any())).willReturn(image);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:latest\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"No 'io.buildpacks.buildpackage.metadata' label found\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenMissingMetadataLabelThrowsException() throws Exception {\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tgiven(resolverContext.fetchImage(any(), any())).willReturn(image);\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://example/buildpack1:latest\");\n\t\tassertThatIllegalStateException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"No 'io.buildpacks.buildpackage.metadata' label found\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "missing", "metadata", "label", "throws", "exception", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "given", "(", "resolver", "context", ".", "fetch", "image", "(", "any", "(", ")", ",", "any", "(", ")", ")", ")", ".", "will", "return", "(", "image", ")", ";", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 115, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 131, "n_identifiers": 31, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.834141+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9467925405754814a1945ce18cbf55b19e594cfe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenFullyQualifiedReferenceWithInvalidImageReferenceThrowsException", "signature": null, "start_line": 164, "end_line": 170, "nloc": 7, "method_source_normalized": "@TestvoidresolveWhenFullyQualifiedReferenceWithInvalidImageReferenceThrowsException(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://buildpack@0.0.1\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"'value' [buildpack@0.0.1] must be an image reference\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenFullyQualifiedReferenceWithInvalidImageReferenceThrowsException() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"docker://buildpack@0.0.1\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageBuildpack.resolve(resolverContext, reference))\n\t\t\t.withMessageContaining(\"'value' [buildpack@0.0.1] must be an image reference\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "fully", "qualified", "reference", "with", "invalid", "image", "reference", "throws", "exception", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 38, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 18, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.834470+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec3273b1a5905be00db5f2082d91571b3c5a87bb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "resolveWhenUnqualifiedReferenceWithInvalidImageReferenceReturnsNull", "signature": null, "start_line": 172, "end_line": 178, "nloc": 7, "method_source_normalized": "@TestvoidresolveWhenUnqualifiedReferenceWithInvalidImageReferenceReturnsNull(){\n\t\tBuildpackReference reference = BuildpackReference.of(\"buildpack@0.0.1\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenUnqualifiedReferenceWithInvalidImageReferenceReturnsNull() {\n\t\tBuildpackReference reference = BuildpackReference.of(\"buildpack@0.0.1\");\n\t\tBuildpackResolverContext resolverContext = mock(BuildpackResolverContext.class);\n\t\tBuildpack buildpack = ImageBuildpack.resolve(resolverContext, reference);\n\t\tassertThat(buildpack).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "unqualified", "reference", "with", "invalid", "image", "reference", "returns", "null", "(", ")", "{", "buildpack", "reference", "reference", "=", "buildpack", "reference", ".", "of", "(", "__STR__", ")", ";", "buildpack", "resolver", "context", "resolver", "context", "=", "mock", "(", "buildpack", "resolver", "context", ".", "class", ")", ";", "buildpack", "buildpack", "=", "image", "buildpack", ".", "resolve", "(", "resolver", "context", ",", "reference", ")", ";", "assert", "that", "(", "buildpack", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 69, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 72, "n_identifiers": 20, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.834816+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "72e39e8a5198dee75ff3cb5d714b045d737f4249", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "withMockLayers", "signature": null, "start_line": 180, "end_line": 203, "nloc": 24, "method_source_normalized": "privateObjectwithMockLayers(InvocationOnMock invocation){\n\t\ttry {\n\t\t\tIOBiConsumer<String, TarArchive> consumer = invocation.getArgument(1);\n\t\t\tFile tarFile = File.createTempFile(\"create-builder-test-\", null);\n\t\t\ttry (TarArchiveOutputStream tarOut = new TarArchiveOutputStream(new FileOutputStream(tarFile))) {\n\t\t\t\ttarOut.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/buildpack.toml\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/\" + this.longFilePath);\n\t\t\t\ttarOut.finish();\n\t\t\t}\n\t\t\ttry (FileInputStream tarFileStream = new FileInputStream(tarFile)) {\n\t\t\t\tconsumer.accept(\"test\", TarArchive.fromInputStream(tarFileStream, Compression.NONE));\n\t\t\t}\n\t\t\tFiles.delete(tarFile.toPath());\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tfail(\"Error writing mock layers\", ex);\n\t\t}\n\t\treturn null;\n\t}", "original_code": "private Object withMockLayers(InvocationOnMock invocation) {\n\t\ttry {\n\t\t\tIOBiConsumer<String, TarArchive> consumer = invocation.getArgument(1);\n\t\t\tFile tarFile = File.createTempFile(\"create-builder-test-\", null);\n\t\t\ttry (TarArchiveOutputStream tarOut = new TarArchiveOutputStream(new FileOutputStream(tarFile))) {\n\t\t\t\ttarOut.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/buildpack.toml\");\n\t\t\t\twriteTarEntry(tarOut, \"/cnb/buildpacks/example_buildpack/0.0.1/\" + this.longFilePath);\n\t\t\t\ttarOut.finish();\n\t\t\t}\n\t\t\ttry (FileInputStream tarFileStream = new FileInputStream(tarFile)) {\n\t\t\t\tconsumer.accept(\"test\", TarArchive.fromInputStream(tarFileStream, Compression.NONE));\n\t\t\t}\n\t\t\tFiles.delete(tarFile.toPath());\n\t\t}\n\t\tcatch (IOException ex) {\n\t\t\tfail(\"Error writing mock layers\", ex);\n\t\t}\n\t\treturn null;\n\t}", "code_tokens": ["private", "object", "with", "mock", "layers", "(", "invocation", "on", "mock", "invocation", ")", "{", "try", "{", "io", "bi", "consumer", "<", "string", ",", "tar", "archive", ">", "consumer", "=", "invocation", ".", "get", "argument", "(", "__NUM__", ")", ";", "file", "tar", "file", "=", "file", ".", "create", "temp", "file", "(", "__STR__", ",", "null", ")", ";", "try", "(", "tar", "archive", "output", "stream", "tar", "out", "=", "new", "tar", "archive", "output", "stream", "(", "new", "file", "output", "stream", "(", "tar", "file", ")", ")", ")", "{", "tar", "out", ".", "set", "long", "file", "mode", "(", "tar", "archive", "output", "stream", ".", "longfile", "posix", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", ")", ";", "write", "tar", "entry", "(", "tar", "out", ",", "__STR__", "+", "this", ".", "long", "file", "path", ")", ";", "tar", "out", ".", "finish", "(", ")", ";", "}", "try", "(", "file", "input", "stream", "tar", "file", "stream", "=", "new", "file", "input", "stream", "(", "tar", "file", ")", ")", "{", "consumer", ".", "accept", "(", "__STR__", ",", "tar", "archive", ".", "from", "input", "stream", "(", "tar", "file", "stream", ",", "compression", ".", "none", ")", ")", ";", "}", "files", ".", "delete", "(", "tar", "file", ".", "to", "path", "(", ")", ")", ";", "}", "catch", "(", "io", "exception", "ex", ")", "{", "fail", "(", "__STR__", ",", "ex", ")", ";", "}", "return", "null", ";", "}"], "token_count": 241, "vocab_size": 60, "cyclomatic_complexity": 2, "ast_node_count": 253, "n_identifiers": 57, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 138, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.835197+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "314705db2a78c2191806991f939347234da08bd5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "writeTarEntry", "signature": null, "start_line": 205, "end_line": 209, "nloc": 5, "method_source_normalized": "privatevoidwriteTarEntry(TarArchiveOutputStream tarOut, String name)throws IOException{\n\t\tTarArchiveEntry entry = new TarArchiveEntry(name);\n\t\ttarOut.putArchiveEntry(entry);\n\t\ttarOut.closeArchiveEntry();\n\t}", "original_code": "private void writeTarEntry(TarArchiveOutputStream tarOut, String name) throws IOException {\n\t\tTarArchiveEntry entry = new TarArchiveEntry(name);\n\t\ttarOut.putArchiveEntry(entry);\n\t\ttarOut.closeArchiveEntry();\n\t}", "code_tokens": ["private", "void", "write", "tar", "entry", "(", "tar", "archive", "output", "stream", "tar", "out", ",", "string", "name", ")", "throws", "io", "exception", "{", "tar", "archive", "entry", "entry", "=", "new", "tar", "archive", "entry", "(", "name", ")", ";", "tar", "out", ".", "put", "archive", "entry", "(", "entry", ")", ";", "tar", "out", ".", "close", "archive", "entry", "(", ")", ";", "}"], "token_count": 53, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 15, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.835476+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "442461bab24b331953e160c92a2722aedcdddb64", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "assertAppliesExpectedLayers", "signature": null, "start_line": 211, "end_line": 236, "nloc": 26, "method_source_normalized": "privatevoidassertAppliesExpectedLayers(Buildpack buildpack)throws IOException{\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).hasSize(1);\n\t\tbyte[] content = layers.get(0).toByteArray();\n\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t}\n\t\tassertThat(entries).extracting(\"name\", \"mode\")\n\t\t\t.containsExactlyInAnyOrder(tuple(\"cnb/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/buildpack.toml\", TarArchiveEntry.DEFAULT_FILE_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/\" + this.longFilePath,\n\t\t\t\t\t\t\tTarArchiveEntry.DEFAULT_FILE_MODE));\n\t}", "original_code": "private void assertAppliesExpectedLayers(Buildpack buildpack) throws IOException {\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).hasSize(1);\n\t\tbyte[] content = layers.get(0).toByteArray();\n\t\tList<TarArchiveEntry> entries = new ArrayList<>();\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tTarArchiveEntry entry = tar.getNextEntry();\n\t\t\twhile (entry != null) {\n\t\t\t\tentries.add(entry);\n\t\t\t\tentry = tar.getNextEntry();\n\t\t\t}\n\t\t}\n\t\tassertThat(entries).extracting(\"name\", \"mode\")\n\t\t\t.containsExactlyInAnyOrder(tuple(\"cnb/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/\", TarArchiveEntry.DEFAULT_DIR_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/buildpack.toml\", TarArchiveEntry.DEFAULT_FILE_MODE),\n\t\t\t\t\ttuple(\"cnb/buildpacks/example_buildpack/0.0.1/\" + this.longFilePath,\n\t\t\t\t\t\t\tTarArchiveEntry.DEFAULT_FILE_MODE));\n\t}", "code_tokens": ["private", "void", "assert", "applies", "expected", "layers", "(", "buildpack", "buildpack", ")", "throws", "io", "exception", "{", "list", "<", "byte", "array", "output", "stream", ">", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", ".", "apply", "(", "(", "layer", ")", "->", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "out", ")", ";", "layers", ".", "add", "(", "out", ")", ";", "}", ")", ";", "assert", "that", "(", "layers", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "byte", "[", "]", "content", "=", "layers", ".", "get", "(", "__NUM__", ")", ".", "to", "byte", "array", "(", ")", ";", "list", "<", "tar", "archive", "entry", ">", "entries", "=", "new", "array", "list", "<", ">", "(", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "content", ")", ")", ")", "{", "tar", "archive", "entry", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "while", "(", "entry", "!=", "null", ")", "{", "entries", ".", "add", "(", "entry", ")", ";", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "}", "}", "assert", "that", "(", "entries", ")", ".", "extracting", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "exactly", "in", "any", "order", "(", "tuple", "(", "__STR__", ",", "tar", "archive", "entry", ".", "default", "dir", "mode", ")", ",", "tuple", "(", "__STR__", ",", "tar", "archive", "entry", ".", "default", "dir", "mode", ")", ",", "tuple", "(", "__STR__", ",", "tar", "archive", "entry", ".", "default", "dir", "mode", ")", ",", "tuple", "(", "__STR__", ",", "tar", "archive", "entry", ".", "default", "dir", "mode", ")", ",", "tuple", "(", "__STR__", ",", "tar", "archive", "entry", ".", "default", "file", "mode", ")", ",", "tuple", "(", "__STR__", "+", "this", ".", "long", "file", "path", ",", "tar", "archive", "entry", ".", "default", "file", "mode", ")", ")", ";", "}"], "token_count": 287, "vocab_size": 67, "cyclomatic_complexity": 2, "ast_node_count": 321, "n_identifiers": 70, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 152, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.835896+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "47633f24a8d1cbd06c55b655ceb42dd4fed387a7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/ImageBuildpackTests.java", "file_blob_sha": null, "method_name": "assertAppliesNoLayers", "signature": null, "start_line": 238, "end_line": 246, "nloc": 9, "method_source_normalized": "privatevoidassertAppliesNoLayers(Buildpack buildpack)throws IOException{\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).isEmpty();\n\t}", "original_code": "private void assertAppliesNoLayers(Buildpack buildpack) throws IOException {\n\t\tList<ByteArrayOutputStream> layers = new ArrayList<>();\n\t\tbuildpack.apply((layer) -> {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tlayer.writeTo(out);\n\t\t\tlayers.add(out);\n\t\t});\n\t\tassertThat(layers).isEmpty();\n\t}", "code_tokens": ["private", "void", "assert", "applies", "no", "layers", "(", "buildpack", "buildpack", ")", "throws", "io", "exception", "{", "list", "<", "byte", "array", "output", "stream", ">", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "buildpack", ".", "apply", "(", "(", "layer", ")", "->", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "out", ")", ";", "layers", ".", "add", "(", "out", ")", ";", "}", ")", ";", "assert", "that", "(", "layers", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 84, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 23, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.836216+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d09a7ebde542a44bb5043e63cab2d8387b4fcb8d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "acquireReturnsHandle", "signature": null, "start_line": 36, "end_line": 43, "nloc": 8, "method_source_normalized": "@TestvoidacquireReturnsHandle()throws Exception{\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tassertThat(handle.intValue()).isEqualTo(this.sourceHandle);\n\t\t\tassertThat(handle.isClosed()).isFalse();\n\t\t}\n\t}", "original_code": "@Test\n\tvoid acquireReturnsHandle() throws Exception {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tassertThat(handle.intValue()).isEqualTo(this.sourceHandle);\n\t\t\tassertThat(handle.isClosed()).isFalse();\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "acquire", "returns", "handle", "(", ")", "throws", "exception", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "try", "(", "handle", "handle", "=", "descriptor", ".", "acquire", "(", ")", ")", "{", "assert", "that", "(", "handle", ".", "int", "value", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "source", "handle", ")", ";", "assert", "that", "(", "handle", ".", "is", "closed", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}", "}"], "token_count": 80, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 21, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.837552+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "26d2cd7634ae953a3c766cfade320edb2e1de3f5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "acquireWhenClosedReturnsClosedHandle", "signature": null, "start_line": 45, "end_line": 53, "nloc": 9, "method_source_normalized": "@TestvoidacquireWhenClosedReturnsClosedHandle()throws Exception{\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tassertThat(handle.intValue()).isEqualTo(-1);\n\t\t\tassertThat(handle.isClosed()).isTrue();\n\t\t}\n\t}", "original_code": "@Test\n\tvoid acquireWhenClosedReturnsClosedHandle() throws Exception {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tassertThat(handle.intValue()).isEqualTo(-1);\n\t\t\tassertThat(handle.isClosed()).isTrue();\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "acquire", "when", "closed", "returns", "closed", "handle", "(", ")", "throws", "exception", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "descriptor", ".", "close", "(", ")", ";", "try", "(", "handle", "handle", "=", "descriptor", ".", "acquire", "(", ")", ")", "{", "assert", "that", "(", "handle", ".", "int", "value", "(", ")", ")", ".", "is", "equal", "to", "(", "-", "__NUM__", ")", ";", "assert", "that", "(", "handle", ".", "is", "closed", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}", "}"], "token_count": 87, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 108, "n_identifiers": 22, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.837874+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "96929ad49948d444d2eea4e7e6200e2ac4bc5320", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "acquireWhenPendingCloseReturnsClosedHandle", "signature": null, "start_line": 55, "end_line": 65, "nloc": 11, "method_source_normalized": "@TestvoidacquireWhenPendingCloseReturnsClosedHandle()throws Exception{\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle1 = descriptor.acquire()) {\n\t\t\tdescriptor.close();\n\t\t\ttry (Handle handle2 = descriptor.acquire()) {\n\t\t\t\tassertThat(handle2.intValue()).isEqualTo(-1);\n\t\t\t\tassertThat(handle2.isClosed()).isTrue();\n\t\t\t}\n\t\t}\n\t}", "original_code": "@Test\n\tvoid acquireWhenPendingCloseReturnsClosedHandle() throws Exception {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle1 = descriptor.acquire()) {\n\t\t\tdescriptor.close();\n\t\t\ttry (Handle handle2 = descriptor.acquire()) {\n\t\t\t\tassertThat(handle2.intValue()).isEqualTo(-1);\n\t\t\t\tassertThat(handle2.isClosed()).isTrue();\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "acquire", "when", "pending", "close", "returns", "closed", "handle", "(", ")", "throws", "exception", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "try", "(", "handle", "handle", "1", "=", "descriptor", ".", "acquire", "(", ")", ")", "{", "descriptor", ".", "close", "(", ")", ";", "try", "(", "handle", "handle", "2", "=", "descriptor", ".", "acquire", "(", ")", ")", "{", "assert", "that", "(", "handle", "2", ".", "int", "value", "(", ")", ")", ".", "is", "equal", "to", "(", "-", "__NUM__", ")", ";", "assert", "that", "(", "handle", "2", ".", "is", "closed", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}", "}", "}"], "token_count": 105, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 26, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.838232+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "88c52b50f7adf7eb31aa1106cea8e1824caec336", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "finalizeTriggersClose", "signature": null, "start_line": 67, "end_line": 72, "nloc": 6, "method_source_normalized": "@TestvoidfinalizeTriggersClose(){\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "original_code": "@Test\n\tvoid finalizeTriggersClose() {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "code_tokens": ["@", "test", "void", "finalize", "triggers", "close", "(", ")", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "descriptor", ".", "close", "(", ")", ";", "assert", "that", "(", "this", ".", "closed", "handle", ")", ".", "is", "equal", "to", "(", "this", ".", "source", "handle", ")", ";", "}"], "token_count": 53, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.838527+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c0b9fb79dfb7664e4474929e82adf8310355981a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "closeWhenHandleAcquiredClosesOnRelease", "signature": null, "start_line": 74, "end_line": 82, "nloc": 9, "method_source_normalized": "@TestvoidcloseWhenHandleAcquiredClosesOnRelease()throws Exception{\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tdescriptor.close();\n\t\t\tassertThat(this.closedHandle).isZero();\n\t\t}\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "original_code": "@Test\n\tvoid closeWhenHandleAcquiredClosesOnRelease() throws Exception {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\ttry (Handle handle = descriptor.acquire()) {\n\t\t\tdescriptor.close();\n\t\t\tassertThat(this.closedHandle).isZero();\n\t\t}\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "code_tokens": ["@", "test", "void", "close", "when", "handle", "acquired", "closes", "on", "release", "(", ")", "throws", "exception", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "try", "(", "handle", "handle", "=", "descriptor", ".", "acquire", "(", ")", ")", "{", "descriptor", ".", "close", "(", ")", ";", "assert", "that", "(", "this", ".", "closed", "handle", ")", ".", "is", "zero", "(", ")", ";", "}", "assert", "that", "(", "this", ".", "closed", "handle", ")", ".", "is", "equal", "to", "(", "this", ".", "source", "handle", ")", ";", "}"], "token_count": 86, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 103, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 38, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.838811+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0cf04b7660a45bb6bf7c86a7a64e830a27c6a350", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "closeWhenHandleNotAcquiredClosesImmediately", "signature": null, "start_line": 84, "end_line": 89, "nloc": 6, "method_source_normalized": "@TestvoidcloseWhenHandleNotAcquiredClosesImmediately(){\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "original_code": "@Test\n\tvoid closeWhenHandleNotAcquiredClosesImmediately() {\n\t\tFileDescriptor descriptor = new FileDescriptor(this.sourceHandle, this::close);\n\t\tdescriptor.close();\n\t\tassertThat(this.closedHandle).isEqualTo(this.sourceHandle);\n\t}", "code_tokens": ["@", "test", "void", "close", "when", "handle", "not", "acquired", "closes", "immediately", "(", ")", "{", "file", "descriptor", "descriptor", "=", "new", "file", "descriptor", "(", "this", ".", "source", "handle", ",", "this", "::", "close", ")", ";", "descriptor", ".", "close", "(", ")", ";", "assert", "that", "(", "this", ".", "closed", "handle", ")", ".", "is", "equal", "to", "(", "this", ".", "source", "handle", ")", ";", "}"], "token_count": 57, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 13, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.839072+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2065324ee01c3af17685deebbb33da12e5014de6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/socket/FileDescriptorTests.java", "file_blob_sha": null, "method_name": "close", "signature": null, "start_line": 91, "end_line": 93, "nloc": 3, "method_source_normalized": "privatevoidclose(int handle){\n\t\tthis.closedHandle = handle;\n\t}", "original_code": "private void close(int handle) {\n\t\tthis.closedHandle = handle;\n\t}", "code_tokens": ["private", "void", "close", "(", "int", "handle", ")", "{", "this", ".", "closed", "handle", "=", "handle", ";", "}"], "token_count": 16, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 24, "n_identifiers": 4, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.839308+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b9c2782b515f7dc976749814982a4a4fd30b9a03", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configWithContextIsRead", "signature": null, "start_line": 46, "end_line": 57, "nloc": 12, "method_source_normalized": "@TestvoidconfigWithContextIsRead()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isEqualTo(\"test-context\");\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isEqualTo(\"unix:///home/user/.docker/docker.sock\");\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "original_code": "@Test\n\tvoid configWithContextIsRead() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isEqualTo(\"test-context\");\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isEqualTo(\"unix:///home/user/.docker/docker.sock\");\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "config", "with", "context", "is", "read", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "docker", "configuration", "metadata", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "current", "context", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "auths", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "cred", "helpers", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "creds", "store", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "docker", "host", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "is", "tls", "verify", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "tls", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 205, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 240, "n_identifiers": 47, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.841891+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8c566f4b89502cd9b093414062532b660d9f299f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configWithoutContextIsRead", "signature": null, "start_line": 59, "end_line": 70, "nloc": 12, "method_source_normalized": "@TestvoidconfigWithoutContextIsRead()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"without-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isNull();\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "original_code": "@Test\n\tvoid configWithoutContextIsRead() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"without-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isNull();\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "config", "without", "context", "is", "read", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "docker", "configuration", "metadata", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "current", "context", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "auths", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "cred", "helpers", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "creds", "store", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "docker", "host", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "is", "tls", "verify", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "tls", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 201, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 238, "n_identifiers": 47, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.842310+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8c9e2c0b46f36242b4e9127d2ccf459901bc7d3e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configWithDefaultContextIsRead", "signature": null, "start_line": 72, "end_line": 83, "nloc": 12, "method_source_normalized": "@TestvoidconfigWithDefaultContextIsRead()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isEqualTo(\"default\");\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "original_code": "@Test\n\tvoid configWithDefaultContextIsRead() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isEqualTo(\"default\");\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t\tassertThat(config.getContext().getTlsPath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "config", "with", "default", "context", "is", "read", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "docker", "configuration", "metadata", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "current", "context", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "auths", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "cred", "helpers", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "creds", "store", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "docker", "host", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "is", "tls", "verify", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "tls", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 204, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 239, "n_identifiers": 47, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.842712+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f886cc29ceaf5b2b92158e7d0cd96588697a6cc9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configIsReadWithProvidedContext", "signature": null, "start_line": 85, "end_line": 94, "nloc": 10, "method_source_normalized": "@TestvoidconfigIsReadWithProvidedContext()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tDockerContext context = config.forContext(\"test-context\");\n\t\tassertThat(context.getDockerHost()).isEqualTo(\"unix:///home/user/.docker/docker.sock\");\n\t\tassertThat(context.isTlsVerify()).isTrue();\n\t\tassertThat(context.getTlsPath()).matches(String.join(Pattern.quote(File.separator), \"^.*\",\n\t\t\t\t\"with-default-context\", \"contexts\", \"tls\", \"[a-zA-z0-9]*\", \"docker$\"));\n\t}", "original_code": "@Test\n\tvoid configIsReadWithProvidedContext() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tDockerContext context = config.forContext(\"test-context\");\n\t\tassertThat(context.getDockerHost()).isEqualTo(\"unix:///home/user/.docker/docker.sock\");\n\t\tassertThat(context.isTlsVerify()).isTrue();\n\t\tassertThat(context.getTlsPath()).matches(String.join(Pattern.quote(File.separator), \"^.*\",\n\t\t\t\t\"with-default-context\", \"contexts\", \"tls\", \"[a-zA-z0-9]*\", \"docker$\"));\n\t}", "code_tokens": ["@", "test", "void", "config", "is", "read", "with", "provided", "context", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "docker", "configuration", "metadata", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "docker", "context", "context", "=", "config", ".", "for", "context", "(", "__STR__", ")", ";", "assert", "that", "(", "context", ".", "get", "docker", "host", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "context", ".", "is", "tls", "verify", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "context", ".", "get", "tls", "path", "(", ")", ")", ".", "matches", "(", "string", ".", "join", "(", "pattern", ".", "quote", "(", "file", ".", "separator", ")", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 138, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 161, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.843075+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "558ae71a66ab6d4863038a3b053c4af52e682ba2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "invalidContextThrowsException", "signature": null, "start_line": 96, "end_line": 102, "nloc": 7, "method_source_normalized": "@TestvoidinvalidContextThrowsException()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> DockerConfigurationMetadata.from(this.environment::get).forContext(\"invalid-context\"))\n\t\t\t.withMessageContaining(\"Docker context 'invalid-context' does not exist\");\n\t}", "original_code": "@Test\n\tvoid invalidContextThrowsException() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> DockerConfigurationMetadata.from(this.environment::get).forContext(\"invalid-context\"))\n\t\t\t.withMessageContaining(\"Docker context 'invalid-context' does not exist\");\n\t}", "code_tokens": ["@", "test", "void", "invalid", "context", "throws", "exception", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ".", "for", "context", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 71, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 14, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.843380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d49d3e6649bc4386e29cbccabb0d26f8dc9f4724", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configIsEmptyWhenConfigFileDoesNotExist", "signature": null, "start_line": 104, "end_line": 114, "nloc": 11, "method_source_normalized": "@TestvoidconfigIsEmptyWhenConfigFileDoesNotExist(){\n\t\tthis.environment.put(\"DOCKER_CONFIG\", \"docker-config-dummy-path\");\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isNull();\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t}", "original_code": "@Test\n\tvoid configIsEmptyWhenConfigFileDoesNotExist() {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", \"docker-config-dummy-path\");\n\t\tDockerConfigurationMetadata config = DockerConfigurationMetadata.from(this.environment::get);\n\t\tassertThat(config.getConfiguration().getCurrentContext()).isNull();\n\t\tassertThat(config.getConfiguration().getAuths()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredHelpers()).isEmpty();\n\t\tassertThat(config.getConfiguration().getCredsStore()).isNull();\n\t\tassertThat(config.getContext().getDockerHost()).isNull();\n\t\tassertThat(config.getContext().isTlsVerify()).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "config", "is", "empty", "when", "config", "file", "does", "not", "exist", "(", ")", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "docker", "configuration", "metadata", "config", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "current", "context", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "auths", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "cred", "helpers", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "configuration", "(", ")", ".", "get", "creds", "store", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "get", "docker", "host", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "config", ".", "get", "context", "(", ")", ".", "is", "tls", "verify", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 176, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 204, "n_identifiers": 40, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.843741+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "605b8a31618d749c3565c2944ca0e8208391430f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "configWithAuthIsRead", "signature": null, "start_line": 116, "end_line": 139, "nloc": 24, "method_source_normalized": "@TestvoidconfigWithAuthIsRead()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-auth/config.json\"));\n\t\tDockerConfigurationMetadata metadata = DockerConfigurationMetadata.from(this.environment::get);\n\t\tDockerConfig configuration = metadata.getConfiguration();\n\t\tassertThat(configuration.getCredsStore()).isEqualTo(\"desktop\");\n\t\tassertThat(configuration.getCredHelpers()).hasSize(3)\n\t\t\t.containsEntry(\"azurecr.io\", \"acr-env\")\n\t\t\t.containsEntry(\"ecr.us-east-1.amazonaws.com\", \"ecr-login\")\n\t\t\t.containsEntry(\"gcr.io\", \"gcr\");\n\t\tassertThat(configuration.getAuths()).hasSize(3).hasEntrySatisfying(\"https://index.docker.io/v1/\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"username\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"pass\\u0000word\");\n\t\t\tassertThat(auth.getEmail()).isEqualTo(\"test@example.com\");\n\t\t}).hasEntrySatisfying(\"custom-registry.example.com\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"customUser\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"customPass\");\n\t\t\tassertThat(auth.getEmail()).isNull();\n\t\t}).hasEntrySatisfying(\"my-registry.example.com\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"user\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"password\");\n\t\t\tassertThat(auth.getEmail()).isNull();\n\t\t});\n\t}", "original_code": "@Test\n\tvoid configWithAuthIsRead() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-auth/config.json\"));\n\t\tDockerConfigurationMetadata metadata = DockerConfigurationMetadata.from(this.environment::get);\n\t\tDockerConfig configuration = metadata.getConfiguration();\n\t\tassertThat(configuration.getCredsStore()).isEqualTo(\"desktop\");\n\t\tassertThat(configuration.getCredHelpers()).hasSize(3)\n\t\t\t.containsEntry(\"azurecr.io\", \"acr-env\")\n\t\t\t.containsEntry(\"ecr.us-east-1.amazonaws.com\", \"ecr-login\")\n\t\t\t.containsEntry(\"gcr.io\", \"gcr\");\n\t\tassertThat(configuration.getAuths()).hasSize(3).hasEntrySatisfying(\"https://index.docker.io/v1/\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"username\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"pass\\u0000word\");\n\t\t\tassertThat(auth.getEmail()).isEqualTo(\"test@example.com\");\n\t\t}).hasEntrySatisfying(\"custom-registry.example.com\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"customUser\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"customPass\");\n\t\t\tassertThat(auth.getEmail()).isNull();\n\t\t}).hasEntrySatisfying(\"my-registry.example.com\", (auth) -> {\n\t\t\tassertThat(auth.getUsername()).isEqualTo(\"user\");\n\t\t\tassertThat(auth.getPassword()).isEqualTo(\"password\");\n\t\t\tassertThat(auth.getEmail()).isNull();\n\t\t});\n\t}", "code_tokens": ["@", "test", "void", "config", "with", "auth", "is", "read", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "docker", "configuration", "metadata", "metadata", "=", "docker", "configuration", "metadata", ".", "from", "(", "this", ".", "environment", "::", "get", ")", ";", "docker", "config", "configuration", "=", "metadata", ".", "get", "configuration", "(", ")", ";", "assert", "that", "(", "configuration", ".", "get", "creds", "store", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "configuration", ".", "get", "cred", "helpers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "configuration", ".", "get", "auths", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "has", "entry", "satisfying", "(", "__STR__", ",", "(", "auth", ")", "->", "{", "assert", "that", "(", "auth", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "password", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "email", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}", ")", ".", "has", "entry", "satisfying", "(", "__STR__", ",", "(", "auth", ")", "->", "{", "assert", "that", "(", "auth", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "password", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "email", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", ")", ".", "has", "entry", "satisfying", "(", "__STR__", ",", "(", "auth", ")", "->", "{", "assert", "that", "(", "auth", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "password", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "auth", ".", "get", "email", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", ")", ";", "}"], "token_count": 337, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 397, "n_identifiers": 73, "ast_max_depth": 15, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 102, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.844236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59a381b9bfdd282e42e9753e501bca3057f917c8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerConfigurationMetadataTests.java", "file_blob_sha": null, "method_name": "pathToResource", "signature": null, "start_line": 141, "end_line": 144, "nloc": 4, "method_source_normalized": "privateStringpathToResource(String resource)throws URISyntaxException{\n\t\tURL url = getClass().getResource(resource);\n\t\treturn Paths.get(url.toURI()).getParent().toAbsolutePath().toString();\n\t}", "original_code": "private String pathToResource(String resource) throws URISyntaxException {\n\t\tURL url = getClass().getResource(resource);\n\t\treturn Paths.get(url.toURI()).getParent().toAbsolutePath().toString();\n\t}", "code_tokens": ["private", "string", "path", "to", "resource", "(", "string", "resource", ")", "throws", "uri", "syntax", "exception", "{", "url", "url", "=", "get", "class", "(", ")", ".", "get", "resource", "(", "resource", ")", ";", "return", "paths", ".", "get", "(", "url", ".", "to", "uri", "(", ")", ")", ".", "get", "parent", "(", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "}"], "token_count": 58, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 17, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.844638+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "168147cbc20a9bce8debe2ed23022d8dc9cf735e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialTests.java", "file_blob_sha": null, "method_name": "getCredentials", "signature": null, "start_line": 37, "end_line": 88, "nloc": 52, "method_source_normalized": "@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenUserCredentials() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t}\n\n\t@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"<token>\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenTokenCredentials() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"<token>\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");\n\t\tassertThat(credentials.isIdentityToken()).isTrue();\n\t}\n\n\t@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenNoServerUrl() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isNull();\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t}privateCredentialgetCredentials(String name)throws IOException{\n\t\ttry (InputStream inputStream = new ClassPathResource(name).getInputStream()) {\n\t\t\treturn new Credential(SharedObjectMapper.get().readTree(inputStream));\n\t\t}\n\t}", "original_code": "@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenUserCredentials() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t}\n\n\t@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"<token>\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenTokenCredentials() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"<token>\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");\n\t\tassertThat(credentials.isIdentityToken()).isTrue();\n\t}\n\n\t@Test\n\t@WithResource(name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenNoServerUrl() throws Exception {\n\t\tCredential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isNull();\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t}\n\n\tprivate Credential getCredentials(String name) throws IOException {\n\t\ttry (InputStream inputStream = new ClassPathResource(name).getInputStream()) {\n\t\t\treturn new Credential(SharedObjectMapper.get().readTree(inputStream));\n\t\t}\n\t}", "code_tokens": ["@", "test", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", "}", "__STR__", "\")", "void", "create", "when", "user", "credentials", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "get", "credentials", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "secret", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "server", "url", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "is", "identity", "token", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}", "", "@", "test", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", "}", "__STR__", "\")", "void", "create", "when", "token", "credentials", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "get", "credentials", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "secret", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "server", "url", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "is", "identity", "token", "(", ")", ")", ".", "is", "true", "(", ")", ";", "}", "", "@", "test", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", "}", "__STR__", "\")", "void", "create", "when", "no", "server", "url", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "get", "credentials", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "secret", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "server", "url", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "credentials", ".", "is", "identity", "token", "(", ")", ")", ".", "is", "false", "(", ")", ";", "}", "", "private", "credential", "get", "credentials", "(", "string", "name", ")", "throws", "io", "exception", "{", "try", "(", "input", "stream", "input", "stream", "=", "new", "class", "path", "resource", "(", "name", ")", ".", "get", "input", "stream", "(", ")", ")", "{", "return", "new", "credential", "(", "shared", "object", "mapper", ".", "get", "(", ")", ".", "read", "tree", "(", "input", "stream", ")", ")", ";", "}", "}"], "token_count": 417, "vocab_size": 58, "cyclomatic_complexity": 1, "ast_node_count": 489, "n_identifiers": 94, "ast_max_depth": 11, "ast_error_count": 27, "ast_error_nodes": ["Credential", ";", "Credential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isNull();", "name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenNoServerUrl() throws Exception", "\")", "\"Secret\":", ": \"user\"", "\"\"\"", "\"", ";", "Credential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"<token>\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");", "name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"<token>\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenTokenCredentials() throws Exception", "\")", "\"Secret\":", ": \"<token>\"", "\"ServerURL\":", "\"\"\"", "\"", ";", "Credential credentials = getCredentials(\"credentials.json\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"user\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"https://index.docker.io/v1/\");", "name = \"credentials.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"ServerURL\": \"https://index.docker.io/v1/\",\n\t\t\t  \"Username\": \"user\",\n\t\t\t  \"Secret\": \"secret\"\n\t\t\t}\n\t\t\t\"\"\")\n\tvoid createWhenUserCredentials() throws Exception", "\")", "\"Secret\":", ": \"user\"", "\"ServerURL\":", "\"\"\"", "\""], "n_whitespaces": 226, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.846477+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "edefba045bf17c1642d810bd3f8b931439ff718b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryTokenAuthenticationTests.java", "file_blob_sha": null, "method_name": "createAuthHeaderReturnsEncodedHeader", "signature": null, "start_line": 37, "end_line": 43, "nloc": 7, "method_source_normalized": "@TestvoidcreateAuthHeaderReturnsEncodedHeader()throws IOException, JSONException{\n\t\tDockerRegistryTokenAuthentication auth = new DockerRegistryTokenAuthentication(\"tokenvalue\");\n\t\tString header = auth.getAuthHeader();\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"auth-token.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, new String(Base64.getUrlDecoder().decode(header)), true);\n\t}", "original_code": "@Test\n\tvoid createAuthHeaderReturnsEncodedHeader() throws IOException, JSONException {\n\t\tDockerRegistryTokenAuthentication auth = new DockerRegistryTokenAuthentication(\"tokenvalue\");\n\t\tString header = auth.getAuthHeader();\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"auth-token.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, new String(Base64.getUrlDecoder().decode(header)), true);\n\t}", "code_tokens": ["@", "test", "void", "create", "auth", "header", "returns", "encoded", "header", "(", ")", "throws", "io", "exception", ",", "json", "exception", "{", "docker", "registry", "token", "authentication", "auth", "=", "new", "docker", "registry", "token", "authentication", "(", "__STR__", ")", ";", "string", "header", "=", "auth", ".", "get", "auth", "header", "(", ")", ";", "string", "expected", "json", "=", "stream", "utils", ".", "copy", "to", "string", "(", "get", "content", "(", "__STR__", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "json", "assert", ".", "assert", "equals", "(", "expected", "json", ",", "new", "string", "(", "base", "64", ".", "get", "url", "decoder", "(", ")", ".", "decode", "(", "header", ")", ")", ",", "true", ")", ";", "}"], "token_count": 99, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 101, "n_identifiers": 26, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.847257+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6839a2189d9aa4a0650ffda2c47dd92248a4c34e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostIsNullReturnsLinuxDefault", "signature": null, "start_line": 46, "end_line": 54, "nloc": 9, "method_source_normalized": "@Test\n\t@DisabledOnOs(OS.WINDOWS)voidresolveWhenDockerHostIsNullReturnsLinuxDefault()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/var/run/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\t@DisabledOnOs(OS.WINDOWS)\n\tvoid resolveWhenDockerHostIsNullReturnsLinuxDefault() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/var/run/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "@", "disabled", "on", "os", "(", "os", ".", "windows", ")", "void", "resolve", "when", "docker", "host", "is", "null", "returns", "linux", "default", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 118, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 27, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.850644+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "41cf8d42e8539f95079a9a56201090d0d287eda1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostIsNullReturnsWindowsDefault", "signature": null, "start_line": 56, "end_line": 64, "nloc": 9, "method_source_normalized": "@Test\n\t@EnabledOnOs(OS.WINDOWS)voidresolveWhenDockerHostIsNullReturnsWindowsDefault()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"//./pipe/docker_engine\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\t@EnabledOnOs(OS.WINDOWS)\n\tvoid resolveWhenDockerHostIsNullReturnsWindowsDefault() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"//./pipe/docker_engine\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "@", "enabled", "on", "os", "(", "os", ".", "windows", ")", "void", "resolve", "when", "docker", "host", "is", "null", "returns", "windows", "default", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 118, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 129, "n_identifiers": 27, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.850984+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c5dfdb3e022fa5b953a03856c4192e1e12d813f0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenUsingDefaultContextReturnsWindowsDefault", "signature": null, "start_line": 66, "end_line": 74, "nloc": 9, "method_source_normalized": "@Test\n\t@EnabledOnOs(OS.WINDOWS)voidresolveWhenUsingDefaultContextReturnsWindowsDefault(){\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"default\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"//./pipe/docker_engine\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\t@EnabledOnOs(OS.WINDOWS)\n\tvoid resolveWhenUsingDefaultContextReturnsWindowsDefault() {\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"default\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"//./pipe/docker_engine\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "@", "enabled", "on", "os", "(", "os", ".", "windows", ")", "void", "resolve", "when", "using", "default", "context", "returns", "windows", "default", "(", ")", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 110, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 121, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.851349+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "566ba2f20facc15dfc7673f3a7ffaab23175e380", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenUsingDefaultContextReturnsLinuxDefault", "signature": null, "start_line": 76, "end_line": 84, "nloc": 9, "method_source_normalized": "@Test\n\t@DisabledOnOs(OS.WINDOWS)voidresolveWhenUsingDefaultContextReturnsLinuxDefault(){\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"default\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/var/run/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\t@DisabledOnOs(OS.WINDOWS)\n\tvoid resolveWhenUsingDefaultContextReturnsLinuxDefault() {\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"default\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/var/run/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "@", "disabled", "on", "os", "(", "os", ".", "windows", ")", "void", "resolve", "when", "using", "default", "context", "returns", "linux", "default", "(", ")", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 110, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 121, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.851657+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eb7edb19a1d96f2f889225eddf17cc629a09aa55", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostAddressIsLocalReturnsAddress", "signature": null, "start_line": 86, "end_line": 96, "nloc": 11, "method_source_normalized": "@TestvoidresolveWhenDockerHostAddressIsLocalReturnsAddress(@TempDir Path tempDir)throws IOException{\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(socketFilePath));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenDockerHostAddressIsLocalReturnsAddress(@TempDir Path tempDir) throws IOException {\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(socketFilePath));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "docker", "host", "address", "is", "local", "returns", "address", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "socket", "file", "path", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 178, "vocab_size": 52, "cyclomatic_complexity": 1, "ast_node_count": 185, "n_identifiers": 43, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.852006+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "692a32f382f26dcc45eb02ca5b3623c67554f91d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostAddressIsLocalWithSchemeReturnsAddress", "signature": null, "start_line": 98, "end_line": 108, "nloc": 11, "method_source_normalized": "@TestvoidresolveWhenDockerHostAddressIsLocalWithSchemeReturnsAddress(@TempDir Path tempDir)throws IOException{\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"unix://\" + socketFilePath));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenDockerHostAddressIsLocalWithSchemeReturnsAddress(@TempDir Path tempDir) throws IOException {\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"unix://\" + socketFilePath));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "docker", "host", "address", "is", "local", "with", "scheme", "returns", "address", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", "+", "socket", "file", "path", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 182, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 188, "n_identifiers": 43, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 47, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.852350+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "11fb93b3c64d2722bfd3d6bd9b21d3c6daf873d8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostAddressIsHttpReturnsAddress", "signature": null, "start_line": 110, "end_line": 119, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenDockerHostAddressIsHttpReturnsAddress(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"http://docker.example.com\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"http://docker.example.com\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenDockerHostAddressIsHttpReturnsAddress() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"http://docker.example.com\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"http://docker.example.com\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "docker", "host", "address", "is", "http", "returns", "address", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 135, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 145, "n_identifiers": 30, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.852693+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78732dda0d67832e0a6acb25ccf6025ed6f0f88b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostAddressIsHttpsReturnsAddress", "signature": null, "start_line": 121, "end_line": 130, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenDockerHostAddressIsHttpsReturnsAddress(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"https://docker.example.com\", true, \"/cert-path\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"https://docker.example.com\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenDockerHostAddressIsHttpsReturnsAddress() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"https://docker.example.com\", true, \"/cert-path\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"https://docker.example.com\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "docker", "host", "address", "is", "https", "returns", "address", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ",", "true", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 141, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 150, "n_identifiers": 30, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.853016+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78e2c14e7373beae58a50debc0e7b3b92c437af6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenDockerHostAddressIsTcpReturnsAddress", "signature": null, "start_line": 132, "end_line": 141, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenDockerHostAddressIsTcpReturnsAddress(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"tcp://192.168.99.100:2376\", true, \"/cert-path\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"tcp://192.168.99.100:2376\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenDockerHostAddressIsTcpReturnsAddress() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"tcp://192.168.99.100:2376\", true, \"/cert-path\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"tcp://192.168.99.100:2376\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "docker", "host", "address", "is", "tcp", "returns", "address", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ",", "true", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 141, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 150, "n_identifiers": 30, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.853350+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "998f641281300885bf9501dee504bfe0cb13886e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenEnvironmentAddressIsLocalReturnsAddress", "signature": null, "start_line": 143, "end_line": 154, "nloc": 12, "method_source_normalized": "@TestvoidresolveWhenEnvironmentAddressIsLocalReturnsAddress(@TempDir Path tempDir)throws IOException{\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tthis.environment.put(\"DOCKER_HOST\", socketFilePath);\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"/unused\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenEnvironmentAddressIsLocalReturnsAddress(@TempDir Path tempDir) throws IOException {\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tthis.environment.put(\"DOCKER_HOST\", socketFilePath);\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"/unused\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "environment", "address", "is", "local", "returns", "address", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "socket", "file", "path", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 188, "vocab_size": 53, "cyclomatic_complexity": 1, "ast_node_count": 200, "n_identifiers": 45, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.853796+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40a6c095fa4cebb8d31802bbab58a12cb4e2a416", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenEnvironmentAddressIsLocalWithSchemeReturnsAddress", "signature": null, "start_line": 156, "end_line": 167, "nloc": 12, "method_source_normalized": "@TestvoidresolveWhenEnvironmentAddressIsLocalWithSchemeReturnsAddress(@TempDir Path tempDir)throws IOException{\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tthis.environment.put(\"DOCKER_HOST\", \"unix://\" + socketFilePath);\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"/unused\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenEnvironmentAddressIsLocalWithSchemeReturnsAddress(@TempDir Path tempDir) throws IOException {\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tthis.environment.put(\"DOCKER_HOST\", \"unix://\" + socketFilePath);\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"/unused\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isTrue();\n\t\tassertThat(dockerHost.isRemote()).isFalse();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(socketFilePath);\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "environment", "address", "is", "local", "with", "scheme", "returns", "address", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", "+", "socket", "file", "path", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 192, "vocab_size": 56, "cyclomatic_complexity": 1, "ast_node_count": 203, "n_identifiers": 45, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 51, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.854197+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e8c01c54e1a6424b5749b120c925c93c93ca279", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenEnvironmentAddressIsTcpReturnsAddress", "signature": null, "start_line": 169, "end_line": 181, "nloc": 13, "method_source_normalized": "@TestvoidresolveWhenEnvironmentAddressIsTcpReturnsAddress(){\n\t\tthis.environment.put(\"DOCKER_HOST\", \"tcp://192.168.99.100:2376\");\n\t\tthis.environment.put(\"DOCKER_TLS_VERIFY\", \"1\");\n\t\tthis.environment.put(\"DOCKER_CERT_PATH\", \"/cert-path\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"tcp://1.1.1.1\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"tcp://192.168.99.100:2376\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "original_code": "@Test\n\tvoid resolveWhenEnvironmentAddressIsTcpReturnsAddress() {\n\t\tthis.environment.put(\"DOCKER_HOST\", \"tcp://192.168.99.100:2376\");\n\t\tthis.environment.put(\"DOCKER_TLS_VERIFY\", \"1\");\n\t\tthis.environment.put(\"DOCKER_CERT_PATH\", \"/cert-path\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Host(\"tcp://1.1.1.1\"));\n\t\tassertThat(dockerHost.isLocalFileReference()).isFalse();\n\t\tassertThat(dockerHost.isRemote()).isTrue();\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"tcp://192.168.99.100:2376\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isEqualTo(\"/cert-path\");\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "environment", "address", "is", "tcp", "returns", "address", "(", ")", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "local", "file", "reference", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "remote", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 169, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 191, "n_identifiers": 36, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 45, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.854572+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1b0d35a5f6a66fcf11a33e359b4ebcc05ed859d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWithDockerHostContextReturnsAddress", "signature": null, "start_line": 183, "end_line": 191, "nloc": 9, "method_source_normalized": "@TestvoidresolveWithDockerHostContextReturnsAddress()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Context(\"test-context\"));\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isNotNull();\n\t}", "original_code": "@Test\n\tvoid resolveWithDockerHostContextReturnsAddress() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-default-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get,\n\t\t\t\tnew DockerConnectionConfiguration.Context(\"test-context\"));\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isTrue();\n\t\tassertThat(dockerHost.getCertificatePath()).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "with", "docker", "host", "context", "returns", "address", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "new", "docker", "connection", "configuration", ".", "context", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 116, "vocab_size": 43, "cyclomatic_complexity": 1, "ast_node_count": 128, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.854911+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "03130700a2d51997ab7c2f4047cf4f8964c6e4c7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWithDockerConfigMetadataContextReturnsAddress", "signature": null, "start_line": 193, "end_line": 200, "nloc": 8, "method_source_normalized": "@TestvoidresolveWithDockerConfigMetadataContextReturnsAddress()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWithDockerConfigMetadataContextReturnsAddress() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "with", "docker", "config", "metadata", "context", "returns", "address", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 108, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 119, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.855230+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cda3b343cf88d9bebe4afdb68d4c984a04adb4e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "resolveWhenEnvironmentHasAddressAndContextPrefersContext", "signature": null, "start_line": 202, "end_line": 211, "nloc": 10, "method_source_normalized": "@TestvoidresolveWhenEnvironmentHasAddressAndContextPrefersContext()throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"test-context\");\n\t\tthis.environment.put(\"DOCKER_HOST\", \"notused\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "original_code": "@Test\n\tvoid resolveWhenEnvironmentHasAddressAndContextPrefersContext() throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", pathToResource(\"with-context/config.json\"));\n\t\tthis.environment.put(\"DOCKER_CONTEXT\", \"test-context\");\n\t\tthis.environment.put(\"DOCKER_HOST\", \"notused\");\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(this.environment::get, null);\n\t\tassertThat(dockerHost.getAddress()).isEqualTo(\"/home/user/.docker/docker.sock\");\n\t\tassertThat(dockerHost.isSecure()).isFalse();\n\t\tassertThat(dockerHost.getCertificatePath()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "resolve", "when", "environment", "has", "address", "and", "context", "prefers", "context", "(", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "path", "to", "resource", "(", "__STR__", ")", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "__STR__", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "this", ".", "environment", "::", "get", ",", "null", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "address", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "docker", "host", ".", "is", "secure", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "docker", "host", ".", "get", "certificate", "path", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 131, "vocab_size": 41, "cyclomatic_complexity": 1, "ast_node_count": 149, "n_identifiers": 28, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.855563+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "eccf40710a142c2493f6a9b12799ce23aecb2a67", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/ResolvedDockerHostTests.java", "file_blob_sha": null, "method_name": "pathToResource", "signature": null, "start_line": 213, "end_line": 216, "nloc": 4, "method_source_normalized": "privateStringpathToResource(String resource)throws URISyntaxException{\n\t\tURL url = getClass().getResource(resource);\n\t\treturn Paths.get(url.toURI()).getParent().toAbsolutePath().toString();\n\t}", "original_code": "private String pathToResource(String resource) throws URISyntaxException {\n\t\tURL url = getClass().getResource(resource);\n\t\treturn Paths.get(url.toURI()).getParent().toAbsolutePath().toString();\n\t}", "code_tokens": ["private", "string", "path", "to", "resource", "(", "string", "resource", ")", "throws", "uri", "syntax", "exception", "{", "url", "url", "=", "get", "class", "(", ")", ".", "get", "resource", "(", "resource", ")", ";", "return", "paths", ".", "get", "(", "url", ".", "to", "uri", "(", ")", ")", ".", "get", "parent", "(", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "}"], "token_count": 58, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 17, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.855849+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b51133efabaa480bf681254790b8b457af8e518e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 39, "end_line": 45, "nloc": 7, "method_source_normalized": "@BeforeAll\n\tstaticvoidsetUp()throws Exception{\n\t\tString executableName = \"docker-credential-test\" + ((Platform.isWindows()) ? \".bat\" : \".sh\");\n\t\tString executable = new ClassPathResource(executableName, CredentialHelperTests.class).getFile()\n\t\t\t.getAbsolutePath();\n\t\thelper = new CredentialHelper(executable);\n\t}", "original_code": "@BeforeAll\n\tstatic void setUp() throws Exception {\n\t\tString executableName = \"docker-credential-test\" + ((Platform.isWindows()) ? \".bat\" : \".sh\");\n\t\tString executable = new ClassPathResource(executableName, CredentialHelperTests.class).getFile()\n\t\t\t.getAbsolutePath();\n\t\thelper = new CredentialHelper(executable);\n\t}", "code_tokens": ["@", "before", "all", "static", "void", "set", "up", "(", ")", "throws", "exception", "{", "string", "executable", "name", "=", "__STR__", "+", "(", "(", "platform", ".", "is", "windows", "(", ")", ")", "?", "__STR__", ":", "__STR__", ")", ";", "string", "executable", "=", "new", "class", "path", "resource", "(", "executable", "name", ",", "credential", "helper", "tests", ".", "class", ")", ".", "get", "file", "(", ")", ".", "get", "absolute", "path", "(", ")", ";", "helper", "=", "new", "credential", "helper", "(", "executable", ")", ";", "}"], "token_count": 72, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 86, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.857389+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1b5a6e677839ef3153a976eb5cfff290ddda588a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenKnowUser", "signature": null, "start_line": 47, "end_line": 55, "nloc": 9, "method_source_normalized": "@TestvoidgetWhenKnowUser()throws Exception{\n\t\tCredential credentials = helper.get(\"user.example.com\");\n\t\tassertThat(credentials).isNotNull();\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"user.example.com\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"username\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t}", "original_code": "@Test\n\tvoid getWhenKnowUser() throws Exception {\n\t\tCredential credentials = helper.get(\"user.example.com\");\n\t\tassertThat(credentials).isNotNull();\n\t\tassertThat(credentials.isIdentityToken()).isFalse();\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"user.example.com\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"username\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "know", "user", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "helper", ".", "get", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "credentials", ".", "is", "identity", "token", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "credentials", ".", "get", "server", "url", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "secret", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 107, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.857699+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9172242b0439a33e1396ec57b6aeb29ba3f40f10", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenKnowToken", "signature": null, "start_line": 57, "end_line": 65, "nloc": 9, "method_source_normalized": "@TestvoidgetWhenKnowToken()throws Exception{\n\t\tCredential credentials = helper.get(\"token.example.com\");\n\t\tassertThat(credentials).isNotNull();\n\t\tassertThat(credentials.isIdentityToken()).isTrue();\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"token.example.com\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"<token>\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t}", "original_code": "@Test\n\tvoid getWhenKnowToken() throws Exception {\n\t\tCredential credentials = helper.get(\"token.example.com\");\n\t\tassertThat(credentials).isNotNull();\n\t\tassertThat(credentials.isIdentityToken()).isTrue();\n\t\tassertThat(credentials.getServerUrl()).isEqualTo(\"token.example.com\");\n\t\tassertThat(credentials.getUsername()).isEqualTo(\"<token>\");\n\t\tassertThat(credentials.getSecret()).isEqualTo(\"secret\");\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "know", "token", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "helper", ".", "get", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "credentials", ".", "is", "identity", "token", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "credentials", ".", "get", "server", "url", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "username", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ".", "get", "secret", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 107, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 127, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.858002+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c8e950e1c7a82c1a07278a1a28ac9fe1c948d75", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenCredentialsMissingMessageReturnsNull", "signature": null, "start_line": 67, "end_line": 71, "nloc": 5, "method_source_normalized": "@TestvoidgetWhenCredentialsMissingMessageReturnsNull()throws Exception{\n\t\tCredential credentials = helper.get(\"credentials.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "original_code": "@Test\n\tvoid getWhenCredentialsMissingMessageReturnsNull() throws Exception {\n\t\tCredential credentials = helper.get(\"credentials.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "credentials", "missing", "message", "returns", "null", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "helper", ".", "get", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 37, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.858273+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "067de1802527df2996ff7eb9f599a9c1104709f4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenUsernameMissingMessageReturnsNull", "signature": null, "start_line": 73, "end_line": 77, "nloc": 5, "method_source_normalized": "@TestvoidgetWhenUsernameMissingMessageReturnsNull()throws Exception{\n\t\tCredential credentials = helper.get(\"username.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "original_code": "@Test\n\tvoid getWhenUsernameMissingMessageReturnsNull() throws Exception {\n\t\tCredential credentials = helper.get(\"username.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "username", "missing", "message", "returns", "null", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "helper", ".", "get", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 37, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.858520+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "273f632eb59ddc134adfbeae839f2c84d9254398", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenUrlMissingMessageReturnsNull", "signature": null, "start_line": 79, "end_line": 83, "nloc": 5, "method_source_normalized": "@TestvoidgetWhenUrlMissingMessageReturnsNull()throws Exception{\n\t\tCredential credentials = helper.get(\"url.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "original_code": "@Test\n\tvoid getWhenUrlMissingMessageReturnsNull() throws Exception {\n\t\tCredential credentials = helper.get(\"url.missing.example.com\");\n\t\tassertThat(credentials).isNull();\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "url", "missing", "message", "returns", "null", "(", ")", "throws", "exception", "{", "credential", "credentials", "=", "helper", ".", "get", "(", "__STR__", ")", ";", "assert", "that", "(", "credentials", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 37, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 10, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.858775+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "753f6a961ff51ffa2c56fafd9fa53c70203703d6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenUnknownErrorThrowsException", "signature": null, "start_line": 85, "end_line": 89, "nloc": 5, "method_source_normalized": "@TestvoidgetWhenUnknownErrorThrowsException(){\n\t\tassertThatIOException().isThrownBy(() -> helper.get(\"invalid.example.com\"))\n\t\t\t.withMessageContaining(\"Unknown error\");\n\t}", "original_code": "@Test\n\tvoid getWhenUnknownErrorThrowsException() {\n\t\tassertThatIOException().isThrownBy(() -> helper.get(\"invalid.example.com\"))\n\t\t\t.withMessageContaining(\"Unknown error\");\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "unknown", "error", "throws", "exception", "(", ")", "{", "assert", "that", "io", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "helper", ".", "get", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.859031+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "15cd76c36dcd6367b3860a217a82f8c08df7a451", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/CredentialHelperTests.java", "file_blob_sha": null, "method_name": "getWhenExecutableDoesNotExistErrorThrowsException", "signature": null, "start_line": 91, "end_line": 103, "nloc": 13, "method_source_normalized": "@TestvoidgetWhenExecutableDoesNotExistErrorThrowsException(){\n\t\tString executable = \"docker-credential-%s\".formatted(UUID.randomUUID().toString());\n\t\tassertThatIOException().isThrownBy(() -> new CredentialHelper(executable).get(\"invalid.example.com\"))\n\t\t\t.withMessageContaining(executable)\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tif (Platform.isMac()) {\n\t\t\t\t\tassertThat(ex.getMessage()).doesNotContain(\"/usr/local/bin/\");\n\t\t\t\t\tassertThat(ex.getSuppressed()).allSatisfy((suppressed) -> assertThat(suppressed)\n\t\t\t\t\t\t.hasMessageContaining(\"/usr/local/bin/\" + executable));\n\t\t\t\t}\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid getWhenExecutableDoesNotExistErrorThrowsException() {\n\t\tString executable = \"docker-credential-%s\".formatted(UUID.randomUUID().toString());\n\t\tassertThatIOException().isThrownBy(() -> new CredentialHelper(executable).get(\"invalid.example.com\"))\n\t\t\t.withMessageContaining(executable)\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tif (Platform.isMac()) {\n\t\t\t\t\tassertThat(ex.getMessage()).doesNotContain(\"/usr/local/bin/\");\n\t\t\t\t\tassertThat(ex.getSuppressed()).allSatisfy((suppressed) -> assertThat(suppressed)\n\t\t\t\t\t\t.hasMessageContaining(\"/usr/local/bin/\" + executable));\n\t\t\t\t}\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "get", "when", "executable", "does", "not", "exist", "error", "throws", "exception", "(", ")", "{", "string", "executable", "=", "__STR__", ".", "formatted", "(", "uuid", ".", "random", "uuid", "(", ")", ".", "to", "string", "(", ")", ")", ";", "assert", "that", "io", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "credential", "helper", "(", "executable", ")", ".", "get", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "executable", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "if", "(", "platform", ".", "is", "mac", "(", ")", ")", "{", "assert", "that", "(", "ex", ".", "get", "message", "(", ")", ")", ".", "does", "not", "contain", "(", "__STR__", ")", ";", "assert", "that", "(", "ex", ".", "get", "suppressed", "(", ")", ")", ".", "all", "satisfy", "(", "(", "suppressed", ")", "->", "assert", "that", "(", "suppressed", ")", ".", "has", "message", "containing", "(", "__STR__", "+", "executable", ")", ")", ";", "}", "}", ")", ";", "}"], "token_count": 143, "vocab_size": 49, "cyclomatic_complexity": 2, "ast_node_count": 171, "n_identifiers": 32, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 67, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.859378+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d59db24161a7f75426a390589a7b48118a6a3e7b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthenticationTests.java", "file_blob_sha": null, "method_name": "cleanup", "signature": null, "start_line": 61, "end_line": 64, "nloc": 4, "method_source_normalized": "@BeforeEachvoidcleanup(){\n\t\tDockerRegistryConfigAuthentication.credentialFromHelperCache.clear();\n\t}", "original_code": "@BeforeEach\n\tvoid cleanup() {\n\t\tDockerRegistryConfigAuthentication.credentialFromHelperCache.clear();\n\t}", "code_tokens": ["@", "before", "each", "void", "cleanup", "(", ")", "{", "docker", "registry", "config", "authentication", ".", "credential", "from", "helper", "cache", ".", "clear", "(", ")", ";", "}"], "token_count": 23, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.865423+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e7de05577eaf4470e28f815419114c97133016ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryConfigAuthenticationTests.java", "file_blob_sha": null, "method_name": "getAuthHeaderWhenEmptyConfigDirectoryReturnsFallback", "signature": null, "start_line": 66, "end_line": 166, "nloc": 101, "method_source_normalized": "@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForDockerDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://index.docker.io/v1/\")\n\t\t\t.containsEntry(\"username\", \"username\")\n\t\t\t.containsEntry(\"password\", \"password\")\n\t\t\t.containsEntry(\"email\", \"test@example.com\");\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForLegacyDockerDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"index.docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://index.docker.io/v1/\")\n\t\t\t.containsEntry(\"username\", \"username\")\n\t\t\t.containsEntry(\"password\", \"password\")\n\t\t\t.containsEntry(\"email\", \"test@example.com\");\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"my-registry.example.com\")\n\t\t\t.containsEntry(\"username\", \"customUser\")\n\t\t\t.containsEntry(\"password\", \"customPass\")\n\t\t\t.containsEntry(\"email\", null);\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"https://my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomainWithLegacyFormat(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://my-registry.example.com\")\n\t\t\t.containsEntry(\"username\", \"customUser\")\n\t\t\t.containsEntry(\"password\", \"customPass\")\n\t\t\t.containsEntry(\"email\", null);\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t}\n\t\t\t\"\"\")\n\t@TestvoidgetAuthHeaderWhenEmptyConfigDirectoryReturnsFallback(@ResourcesRoot Path directory)throws Exception{\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference, DockerRegistryAuthentication.EMPTY_USER);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"\")\n\t\t\t.containsEntry(\"username\", \"\")\n\t\t\t.containsEntry(\"password\", \"\")\n\t\t\t.containsEntry(\"email\", \"\");\n\t}", "original_code": "@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForDockerDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://index.docker.io/v1/\")\n\t\t\t.containsEntry(\"username\", \"username\")\n\t\t\t.containsEntry(\"password\", \"password\")\n\t\t\t.containsEntry(\"email\", \"test@example.com\");\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForLegacyDockerDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"index.docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://index.docker.io/v1/\")\n\t\t\t.containsEntry(\"username\", \"username\")\n\t\t\t.containsEntry(\"password\", \"password\")\n\t\t\t.containsEntry(\"email\", \"test@example.com\");\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomain(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"my-registry.example.com\")\n\t\t\t.containsEntry(\"username\", \"customUser\")\n\t\t\t.containsEntry(\"password\", \"customPass\")\n\t\t\t.containsEntry(\"email\", null);\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"https://my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomainWithLegacyFormat(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"https://my-registry.example.com\")\n\t\t\t.containsEntry(\"username\", \"customUser\")\n\t\t\t.containsEntry(\"password\", \"customPass\")\n\t\t\t.containsEntry(\"email\", null);\n\t}\n\n\t@WithResource(name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenEmptyConfigDirectoryReturnsFallback(@ResourcesRoot Path directory) throws Exception {\n\t\tthis.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference, DockerRegistryAuthentication.EMPTY_USER);\n\t\tassertThat(decode(authHeader)).hasSize(4)\n\t\t\t.containsEntry(\"serveraddress\", \"\")\n\t\t\t.containsEntry(\"username\", \"\")\n\t\t\t.containsEntry(\"password\", \"\")\n\t\t\t.containsEntry(\"email\", \"\");\n\t}", "code_tokens": ["@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "{", "__STR__", ":", "{", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", "}", "}", "}", "__STR__", "\")", "@", "test", "void", "get", "auth", "header", "when", "auth", "for", "docker", "domain", "(", "@", "resources", "root", "path", "directory", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "directory", ".", "to", "string", "(", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "string", "auth", "header", "=", "get", "auth", "header", "(", "image", "reference", ")", ";", "assert", "that", "(", "decode", "(", "auth", "header", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ";", "}", "", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "{", "__STR__", ":", "{", "__STR__", ":", "__STR__", ",", "__STR__", ":", "__STR__", "}", "}", "}", "__STR__", "\")", "@", "test", "void", "get", "auth", "header", "when", "auth", "for", "legacy", "docker", "domain", "(", "@", "resources", "root", "path", "directory", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "directory", ".", "to", "string", "(", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "string", "auth", "header", "=", "get", "auth", "header", "(", "image", "reference", ")", ";", "assert", "that", "(", "decode", "(", "auth", "header", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ";", "}", "", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "{", "__STR__", ":", "{", "__STR__", ":", "__STR__", "}", "}", "}", "__STR__", "\")", "@", "test", "void", "get", "auth", "header", "when", "auth", "for", "custom", "domain", "(", "@", "resources", "root", "path", "directory", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "directory", ".", "to", "string", "(", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "string", "auth", "header", "=", "get", "auth", "header", "(", "image", "reference", ")", ";", "assert", "that", "(", "decode", "(", "auth", "header", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "null", ")", ";", "}", "", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "__STR__", "\"", "{", "__STR__", ":", "{", "__STR__", ":", "{", "__STR__", ":", "__STR__", "}", "}", "}", "__STR__", "\")", "@", "test", "void", "get", "auth", "header", "when", "auth", "for", "custom", "domain", "with", "legacy", "format", "(", "@", "resources", "root", "path", "directory", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "directory", ".", "to", "string", "(", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "string", "auth", "header", "=", "get", "auth", "header", "(", "image", "reference", ")", ";", "assert", "that", "(", "decode", "(", "auth", "header", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "null", ")", ";", "}", "", "@", "with", "resource", "(", "name", "=", "__STR__", ",", "content", "=", "\"\"\"\n\t\t\t{\n\t\t\t}\n\t\t\t\"\"\"", ")", "@", "test", "void", "get", "auth", "header", "when", "empty", "config", "directory", "returns", "fallback", "(", "@", "resources", "root", "path", "directory", ")", "throws", "exception", "{", "this", ".", "environment", ".", "put", "(", "__STR__", ",", "directory", ".", "to", "string", "(", ")", ")", ";", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "string", "auth", "header", "=", "get", "auth", "header", "(", "image", "reference", ",", "docker", "registry", "authentication", ".", "empty", "user", ")", ";", "assert", "that", "(", "decode", "(", "auth", "header", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ".", "contains", "entry", "(", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 699, "vocab_size": 61, "cyclomatic_complexity": 1, "ast_node_count": 800, "n_identifiers": 147, "ast_max_depth": 14, "ast_error_count": 38, "ast_error_nodes": [";", "this.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);", "name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"https://my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomainWithLegacyFormat(@ResourcesRoot Path directory) throws Exception", "\")", "\"auth\":", "\"https://my-registry.example.com\":", "\"auths\":", "\"\"\"", "\"", ";", "this.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"my-registry.example.com/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);", "name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t\t\"my-registry.example.com\": {\n\t\t\t\t  \"auth\": \"Y3VzdG9tVXNlcjpjdXN0b21QYXNz\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForCustomDomain(@ResourcesRoot Path directory) throws Exception", "\")", "\"auth\":", "\"my-registry.example.com\":", "\"auths\":", "\"\"\"", "\"", ";", "this.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"index.docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);", "name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForLegacyDockerDomain(@ResourcesRoot Path directory) throws Exception", "\")", "\"email\":", "\"auth\":", "\"https://index.docker.io/v1/\":", "\"auths\":", "\"\"\"", "\"", ";", "this.environment.put(\"DOCKER_CONFIG\", directory.toString());\n\t\tImageReference imageReference = ImageReference.of(\"docker.io/ubuntu:latest\");\n\t\tString authHeader = getAuthHeader(imageReference);", "name = \"config.json\", content = \"\"\"\n\t\t\t{\n\t\t\t  \"auths\": {\n\t\t\t    \"https://index.docker.io/v1/\": {\n\t\t\t      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\",\n\t\t\t      \"email\": \"test@example.com\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t\"\"\")\n\t@Test\n\tvoid getAuthHeaderWhenAuthForDockerDomain(@ResourcesRoot Path directory) throws Exception", "\")", "\"email\":", "\"auth\":", "\"https://index.docker.io/v1/\":", "\"auths\":", "\"\"\"", "\""], "n_whitespaces": 521, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.866240+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1fe3b715f826ef99c3381877751e229fc9624251", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthenticationTests.java", "file_blob_sha": null, "method_name": "createMinimalAuthHeaderReturnsEncodedHeader", "signature": null, "start_line": 37, "end_line": 42, "nloc": 6, "method_source_normalized": "@TestvoidcreateMinimalAuthHeaderReturnsEncodedHeader()throws IOException, JSONException{\n\t\tDockerRegistryUserAuthentication auth = new DockerRegistryUserAuthentication(\"user\", \"secret\",\n\t\t\t\t\"https://docker.example.com\", \"docker@example.com\");\n\t\tJSONAssert.assertEquals(jsonContent(\"auth-user-full.json\"), decoded(auth.getAuthHeader()), true);\n\t}", "original_code": "@Test\n\tvoid createMinimalAuthHeaderReturnsEncodedHeader() throws IOException, JSONException {\n\t\tDockerRegistryUserAuthentication auth = new DockerRegistryUserAuthentication(\"user\", \"secret\",\n\t\t\t\t\"https://docker.example.com\", \"docker@example.com\");\n\t\tJSONAssert.assertEquals(jsonContent(\"auth-user-full.json\"), decoded(auth.getAuthHeader()), true);\n\t}", "code_tokens": ["@", "test", "void", "create", "minimal", "auth", "header", "returns", "encoded", "header", "(", ")", "throws", "io", "exception", ",", "json", "exception", "{", "docker", "registry", "user", "authentication", "auth", "=", "new", "docker", "registry", "user", "authentication", "(", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "json", "assert", ".", "assert", "equals", "(", "json", "content", "(", "__STR__", ")", ",", "decoded", "(", "auth", ".", "get", "auth", "header", "(", ")", ")", ",", "true", ")", ";", "}"], "token_count": 67, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 67, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.867742+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "08921cd5a5be11ea5608887170507f4a6983edff", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthenticationTests.java", "file_blob_sha": null, "method_name": "createFullAuthHeaderReturnsEncodedHeader", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "@TestvoidcreateFullAuthHeaderReturnsEncodedHeader()throws IOException, JSONException{\n\t\tDockerRegistryUserAuthentication auth = new DockerRegistryUserAuthentication(\"user\", \"secret\", null, null);\n\t\tJSONAssert.assertEquals(jsonContent(\"auth-user-minimal.json\"), decoded(auth.getAuthHeader()), false);\n\t}", "original_code": "@Test\n\tvoid createFullAuthHeaderReturnsEncodedHeader() throws IOException, JSONException {\n\t\tDockerRegistryUserAuthentication auth = new DockerRegistryUserAuthentication(\"user\", \"secret\", null, null);\n\t\tJSONAssert.assertEquals(jsonContent(\"auth-user-minimal.json\"), decoded(auth.getAuthHeader()), false);\n\t}", "code_tokens": ["@", "test", "void", "create", "full", "auth", "header", "returns", "encoded", "header", "(", ")", "throws", "io", "exception", ",", "json", "exception", "{", "docker", "registry", "user", "authentication", "auth", "=", "new", "docker", "registry", "user", "authentication", "(", "__STR__", ",", "__STR__", ",", "null", ",", "null", ")", ";", "json", "assert", ".", "assert", "equals", "(", "json", "content", "(", "__STR__", ")", ",", "decoded", "(", "auth", ".", "get", "auth", "header", "(", ")", ")", ",", "false", ")", ";", "}"], "token_count": 67, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 67, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.868063+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b105202603709519710cc9f2fdd304f55e8188d1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthenticationTests.java", "file_blob_sha": null, "method_name": "jsonContent", "signature": null, "start_line": 50, "end_line": 52, "nloc": 3, "method_source_normalized": "privateStringjsonContent(String s)throws IOException{\n\t\treturn StreamUtils.copyToString(getContent(s), StandardCharsets.UTF_8);\n\t}", "original_code": "private String jsonContent(String s) throws IOException {\n\t\treturn StreamUtils.copyToString(getContent(s), StandardCharsets.UTF_8);\n\t}", "code_tokens": ["private", "string", "json", "content", "(", "string", "s", ")", "throws", "io", "exception", "{", "return", "stream", "utils", ".", "copy", "to", "string", "(", "get", "content", "(", "s", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "}"], "token_count": 34, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 38, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.868329+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dbd0dbc73f0438a7151f292cf98d9fb33bbfa100", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/configuration/DockerRegistryUserAuthenticationTests.java", "file_blob_sha": null, "method_name": "decoded", "signature": null, "start_line": 54, "end_line": 56, "nloc": 3, "method_source_normalized": "privateStringdecoded(String header){\n\t\treturn new String(Base64.getUrlDecoder().decode(header));\n\t}", "original_code": "private String decoded(String header) {\n\t\treturn new String(Base64.getUrlDecoder().decode(header));\n\t}", "code_tokens": ["private", "string", "decoded", "(", "string", "header", ")", "{", "return", "new", "string", "(", "base", "64", ".", "get", "url", "decoder", "(", ")", ".", "decode", "(", "header", ")", ")", ";", "}"], "token_count": 28, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 9, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.868557+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "20cc26ecc903bcf9b9b1e1e916c0cf113ffea9db", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemFileWriter.java", "file_blob_sha": null, "method_name": "PemFileWriter", "signature": null, "start_line": 177, "end_line": 179, "nloc": 3, "method_source_normalized": "publicPemFileWriter()throws IOException{\n\t\tthis.tempDir = Files.createTempDirectory(\"buildpack-platform-docker-ssl-tests\");\n\t}", "original_code": "public PemFileWriter() throws IOException {\n\t\tthis.tempDir = Files.createTempDirectory(\"buildpack-platform-docker-ssl-tests\");\n\t}", "code_tokens": ["public", "pem", "file", "writer", "(", ")", "throws", "io", "exception", "{", "this", ".", "temp", "dir", "=", "files", ".", "create", "temp", "directory", "(", "__STR__", ")", ";", "}"], "token_count": 25, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 29, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.870077+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e7ed30eb726ad79875b8e4520a0b438bed2eefe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemFileWriter.java", "file_blob_sha": null, "method_name": "writeFile", "signature": null, "start_line": 181, "end_line": 188, "nloc": 8, "method_source_normalized": "PathwriteFile(String name, String... contents)throws IOException{\n\t\tPath path = Paths.get(this.tempDir.toString(), name);\n\t\tfor (String content : contents) {\n\t\t\tFiles.write(path, content.replaceAll(EXAMPLE_SECRET_QUALIFIER, \"\").getBytes(), StandardOpenOption.CREATE,\n\t\t\t\t\tStandardOpenOption.APPEND);\n\t\t}\n\t\treturn path;\n\t}", "original_code": "Path writeFile(String name, String... contents) throws IOException {\n\t\tPath path = Paths.get(this.tempDir.toString(), name);\n\t\tfor (String content : contents) {\n\t\t\tFiles.write(path, content.replaceAll(EXAMPLE_SECRET_QUALIFIER, \"\").getBytes(), StandardOpenOption.CREATE,\n\t\t\t\t\tStandardOpenOption.APPEND);\n\t\t}\n\t\treturn path;\n\t}", "code_tokens": ["path", "write", "file", "(", "string", "name", ",", "string", "...", "contents", ")", "throws", "io", "exception", "{", "path", "path", "=", "paths", ".", "get", "(", "this", ".", "temp", "dir", ".", "to", "string", "(", ")", ",", "name", ")", ";", "for", "(", "string", "content", ":", "contents", ")", "{", "files", ".", "write", "(", "path", ",", "content", ".", "replace", "all", "(", "example", "secret", "qualifier", ",", "__STR__", ")", ".", "get", "bytes", "(", ")", ",", "standard", "open", "option", ".", "create", ",", "standard", "open", "option", ".", "append", ")", ";", "}", "return", "path", ";", "}"], "token_count": 84, "vocab_size": 41, "cyclomatic_complexity": 2, "ast_node_count": 98, "n_identifiers": 29, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 44, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.870391+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "63126d878cab0afa47fde9721b3c0121747b8716", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemFileWriter.java", "file_blob_sha": null, "method_name": "getTempDir", "signature": null, "start_line": 190, "end_line": 192, "nloc": 3, "method_source_normalized": "publicPathgetTempDir(){\n\t\treturn this.tempDir;\n\t}", "original_code": "public Path getTempDir() {\n\t\treturn this.tempDir;\n\t}", "code_tokens": ["public", "path", "get", "temp", "dir", "(", ")", "{", "return", "this", ".", "temp", "dir", ";", "}"], "token_count": 15, "vocab_size": 13, "cyclomatic_complexity": 1, "ast_node_count": 18, "n_identifiers": 3, "ast_max_depth": 4, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.870641+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b76d1e284aaf9cf99c65dea6f42ca92f472a482e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemFileWriter.java", "file_blob_sha": null, "method_name": "cleanup", "signature": null, "start_line": 194, "end_line": 196, "nloc": 3, "method_source_normalized": "voidcleanup()throws IOException{\n\t\tFileSystemUtils.deleteRecursively(this.tempDir);\n\t}", "original_code": "void cleanup() throws IOException {\n\t\tFileSystemUtils.deleteRecursively(this.tempDir);\n\t}", "code_tokens": ["void", "cleanup", "(", ")", "throws", "io", "exception", "{", "file", "system", "utils", ".", "delete", "recursively", "(", "this", ".", "temp", "dir", ")", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 25, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.870886+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9d23c5f78d1915b41e65f085575619cb840a59fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactoryTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 41, "end_line": 44, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetUp()throws IOException{\n\t\tthis.fileWriter = new PemFileWriter();\n\t}", "original_code": "@BeforeEach\n\tvoid setUp() throws IOException {\n\t\tthis.fileWriter = new PemFileWriter();\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "writer", "=", "new", "pem", "file", "writer", "(", ")", ";", "}"], "token_count": 25, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.871980+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d8d0b9a44c82c3d066a07d4faecf88b5b4b3cc8a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactoryTests.java", "file_blob_sha": null, "method_name": "tearDown", "signature": null, "start_line": 46, "end_line": 49, "nloc": 4, "method_source_normalized": "@AfterEachvoidtearDown()throws IOException{\n\t\tthis.fileWriter.cleanup();\n\t}", "original_code": "@AfterEach\n\tvoid tearDown() throws IOException {\n\t\tthis.fileWriter.cleanup();\n\t}", "code_tokens": ["@", "after", "each", "void", "tear", "down", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "writer", ".", "cleanup", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.872232+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "329cbe29bacbeb45a7e962b017b28ab3f7247d8f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactoryTests.java", "file_blob_sha": null, "method_name": "createKeyStoreWithCertChain", "signature": null, "start_line": 51, "end_line": 62, "nloc": 12, "method_source_normalized": "@TestvoidcreateKeyStoreWithCertChain()throws IOException, KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException{\n\t\tPath certPath = this.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CA_CERTIFICATE, PemFileWriter.CERTIFICATE);\n\t\tKeyStore keyStore = KeyStoreFactory.create(certPath, null, \"test-alias\");\n\t\tassertThat(keyStore.containsAlias(\"test-alias-0\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias-0\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias-0\", new char[] {})).isNull();\n\t\tassertThat(keyStore.containsAlias(\"test-alias-1\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias-1\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias-1\", new char[] {})).isNull();\n\t}", "original_code": "@Test\n\tvoid createKeyStoreWithCertChain()\n\t\t\tthrows IOException, KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException {\n\t\tPath certPath = this.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CA_CERTIFICATE, PemFileWriter.CERTIFICATE);\n\t\tKeyStore keyStore = KeyStoreFactory.create(certPath, null, \"test-alias\");\n\t\tassertThat(keyStore.containsAlias(\"test-alias-0\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias-0\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias-0\", new char[] {})).isNull();\n\t\tassertThat(keyStore.containsAlias(\"test-alias-1\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias-1\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias-1\", new char[] {})).isNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "key", "store", "with", "cert", "chain", "(", ")", "throws", "io", "exception", ",", "key", "store", "exception", ",", "unrecoverable", "key", "exception", ",", "no", "such", "algorithm", "exception", "{", "path", "cert", "path", "=", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "ca", "certificate", ",", "pem", "file", "writer", ".", "certificate", ")", ";", "key", "store", "key", "store", "=", "key", "store", "factory", ".", "create", "(", "cert", "path", ",", "null", ",", "__STR__", ")", ";", "assert", "that", "(", "key", "store", ".", "contains", "alias", "(", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "certificate", "(", "__STR__", ")", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "key", "(", "__STR__", ",", "new", "char", "[", "]", "{", "}", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "contains", "alias", "(", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "certificate", "(", "__STR__", ")", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "key", "(", "__STR__", ",", "new", "char", "[", "]", "{", "}", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 200, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 215, "n_identifiers": 43, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.872615+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2de29764b2ba9b1ffb37903abee0ae53aa643f4b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/KeyStoreFactoryTests.java", "file_blob_sha": null, "method_name": "createKeyStoreWithCertChainAndRsaPrivateKey", "signature": null, "start_line": 64, "end_line": 73, "nloc": 10, "method_source_normalized": "@TestvoidcreateKeyStoreWithCertChainAndRsaPrivateKey()throws IOException, KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException{\n\t\tPath certPath = this.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CA_CERTIFICATE, PemFileWriter.CERTIFICATE);\n\t\tPath keyPath = this.fileWriter.writeFile(\"key.pem\", PemFileWriter.PRIVATE_RSA_KEY);\n\t\tKeyStore keyStore = KeyStoreFactory.create(certPath, keyPath, \"test-alias\");\n\t\tassertThat(keyStore.containsAlias(\"test-alias\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias\", new char[] {})).isNotNull();\n\t}", "original_code": "@Test\n\tvoid createKeyStoreWithCertChainAndRsaPrivateKey()\n\t\t\tthrows IOException, KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException {\n\t\tPath certPath = this.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CA_CERTIFICATE, PemFileWriter.CERTIFICATE);\n\t\tPath keyPath = this.fileWriter.writeFile(\"key.pem\", PemFileWriter.PRIVATE_RSA_KEY);\n\t\tKeyStore keyStore = KeyStoreFactory.create(certPath, keyPath, \"test-alias\");\n\t\tassertThat(keyStore.containsAlias(\"test-alias\")).isTrue();\n\t\tassertThat(keyStore.getCertificate(\"test-alias\")).isNotNull();\n\t\tassertThat(keyStore.getKey(\"test-alias\", new char[] {})).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "key", "store", "with", "cert", "chain", "and", "rsa", "private", "key", "(", ")", "throws", "io", "exception", ",", "key", "store", "exception", ",", "unrecoverable", "key", "exception", ",", "no", "such", "algorithm", "exception", "{", "path", "cert", "path", "=", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "ca", "certificate", ",", "pem", "file", "writer", ".", "certificate", ")", ";", "path", "key", "path", "=", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "private", "rsa", "key", ")", ";", "key", "store", "key", "store", "=", "key", "store", "factory", ".", "create", "(", "cert", "path", ",", "key", "path", ",", "__STR__", ")", ";", "assert", "that", "(", "key", "store", ".", "contains", "alias", "(", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "certificate", "(", "__STR__", ")", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "key", "store", ".", "get", "key", "(", "__STR__", ",", "new", "char", "[", "]", "{", "}", ")", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 167, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 163, "n_identifiers": 38, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.872989+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65a863356f80fbec6b31b4bc9d1daaea6de11d49", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParserTests.java", "file_blob_sha": null, "method_name": "codeShouldMatchSpringBootSslPackage", "signature": null, "start_line": 34, "end_line": 39, "nloc": 6, "method_source_normalized": "@TestvoidcodeShouldMatchSpringBootSslPackage()throws IOException{\n\t\tString buildpackVersion = SslSource.loadBuildpackVersion(SOURCE);\n\t\tString springBootVersion = SslSource.loadSpringBootVersion(SOURCE);\n\t\tassertThat(buildpackVersion).isEqualTo(springBootVersion);\n\t}", "original_code": "@Test\n\tvoid codeShouldMatchSpringBootSslPackage() throws IOException {\n\t\tString buildpackVersion = SslSource.loadBuildpackVersion(SOURCE);\n\t\tString springBootVersion = SslSource.loadSpringBootVersion(SOURCE);\n\t\tassertThat(buildpackVersion).isEqualTo(springBootVersion);\n\t}", "code_tokens": ["@", "test", "void", "code", "should", "match", "spring", "boot", "ssl", "package", "(", ")", "throws", "io", "exception", "{", "string", "buildpack", "version", "=", "ssl", "source", ".", "load", "buildpack", "version", "(", "source", ")", ";", "string", "spring", "boot", "version", "=", "ssl", "source", ".", "load", "spring", "boot", "version", "(", "source", ")", ";", "assert", "that", "(", "buildpack", "version", ")", ".", "is", "equal", "to", "(", "spring", "boot", "version", ")", ";", "}"], "token_count": 63, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 17, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.873623+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "73d589c9935fc31ffd5cc543de0f95988a7b8c38", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParserTests.java", "file_blob_sha": null, "method_name": "codeShouldMatchSpringBootSslPackage", "signature": null, "start_line": 34, "end_line": 39, "nloc": 6, "method_source_normalized": "@TestvoidcodeShouldMatchSpringBootSslPackage()throws IOException{\n\t\tString buildpackVersion = SslSource.loadBuildpackVersion(SOURCE);\n\t\tString springBootVersion = SslSource.loadSpringBootVersion(SOURCE);\n\t\tassertThat(buildpackVersion).isEqualTo(springBootVersion);\n\t}", "original_code": "@Test\n\tvoid codeShouldMatchSpringBootSslPackage() throws IOException {\n\t\tString buildpackVersion = SslSource.loadBuildpackVersion(SOURCE);\n\t\tString springBootVersion = SslSource.loadSpringBootVersion(SOURCE);\n\t\tassertThat(buildpackVersion).isEqualTo(springBootVersion);\n\t}", "code_tokens": ["@", "test", "void", "code", "should", "match", "spring", "boot", "ssl", "package", "(", ")", "throws", "io", "exception", "{", "string", "buildpack", "version", "=", "ssl", "source", ".", "load", "buildpack", "version", "(", "source", ")", ";", "string", "spring", "boot", "version", "=", "ssl", "source", ".", "load", "spring", "boot", "version", "(", "source", ")", ";", "assert", "that", "(", "buildpack", "version", ")", ".", "is", "equal", "to", "(", "spring", "boot", "version", ")", ";", "}"], "token_count": 63, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 17, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.874158+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "61229774951a9b25f38c4ca4d406cb97a08392f5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactoryTests.java", "file_blob_sha": null, "method_name": "setUp", "signature": null, "start_line": 38, "end_line": 41, "nloc": 4, "method_source_normalized": "@BeforeEachvoidsetUp()throws IOException{\n\t\tthis.fileWriter = new PemFileWriter();\n\t}", "original_code": "@BeforeEach\n\tvoid setUp() throws IOException {\n\t\tthis.fileWriter = new PemFileWriter();\n\t}", "code_tokens": ["@", "before", "each", "void", "set", "up", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "writer", "=", "new", "pem", "file", "writer", "(", ")", ";", "}"], "token_count": 25, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 5, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.874830+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "39938a8e18307a123f6f2adb48e09efaf6819d78", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactoryTests.java", "file_blob_sha": null, "method_name": "tearDown", "signature": null, "start_line": 43, "end_line": 46, "nloc": 4, "method_source_normalized": "@AfterEachvoidtearDown()throws IOException{\n\t\tthis.fileWriter.cleanup();\n\t}", "original_code": "@AfterEach\n\tvoid tearDown() throws IOException {\n\t\tthis.fileWriter.cleanup();\n\t}", "code_tokens": ["@", "after", "each", "void", "tear", "down", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "writer", ".", "cleanup", "(", ")", ";", "}"], "token_count": 22, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 28, "n_identifiers": 5, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.875079+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2bbf4108345eef6add30ee94041085d9f497179b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslContextFactoryTests.java", "file_blob_sha": null, "method_name": "createKeyStoreWithCertChain", "signature": null, "start_line": 48, "end_line": 55, "nloc": 8, "method_source_normalized": "@TestvoidcreateKeyStoreWithCertChain()throws IOException{\n\t\tthis.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CERTIFICATE);\n\t\tthis.fileWriter.writeFile(\"key.pem\", PemFileWriter.PRIVATE_RSA_KEY);\n\t\tthis.fileWriter.writeFile(\"ca.pem\", PemFileWriter.CA_CERTIFICATE);\n\t\tSSLContext sslContext = new SslContextFactory().forDirectory(this.fileWriter.getTempDir().toString());\n\t\tassertThat(sslContext).isNotNull();\n\t}", "original_code": "@Test\n\tvoid createKeyStoreWithCertChain() throws IOException {\n\t\tthis.fileWriter.writeFile(\"cert.pem\", PemFileWriter.CERTIFICATE);\n\t\tthis.fileWriter.writeFile(\"key.pem\", PemFileWriter.PRIVATE_RSA_KEY);\n\t\tthis.fileWriter.writeFile(\"ca.pem\", PemFileWriter.CA_CERTIFICATE);\n\t\tSSLContext sslContext = new SslContextFactory().forDirectory(this.fileWriter.getTempDir().toString());\n\t\tassertThat(sslContext).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "key", "store", "with", "cert", "chain", "(", ")", "throws", "io", "exception", "{", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "certificate", ")", ";", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "private", "rsa", "key", ")", ";", "this", ".", "file", "writer", ".", "write", "file", "(", "__STR__", ",", "pem", "file", "writer", ".", "ca", "certificate", ")", ";", "ssl", "context", "ssl", "context", "=", "new", "ssl", "context", "factory", "(", ")", ".", "for", "directory", "(", "this", ".", "file", "writer", ".", "get", "temp", "dir", "(", ")", ".", "to", "string", "(", ")", ")", ";", "assert", "that", "(", "ssl", "context", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 115, "vocab_size": 46, "cyclomatic_complexity": 1, "ast_node_count": 118, "n_identifiers": 25, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.875396+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "57c38d31efba60a44a4d3504e7e1e7b3c263851e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslSource.java", "file_blob_sha": null, "method_name": "SslSource", "signature": null, "start_line": 36, "end_line": 37, "nloc": 2, "method_source_normalized": "privateSslSource(){\n\t}", "original_code": "private SslSource() {\n\t}", "code_tokens": ["private", "ssl", "source", "(", ")", "{", "}"], "token_count": 7, "vocab_size": 7, "cyclomatic_complexity": 1, "ast_node_count": 10, "n_identifiers": 1, "ast_max_depth": 2, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 4, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.876069+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8cefafb44f387c70cd3a0c2d853cf91b4a4354f7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslSource.java", "file_blob_sha": null, "method_name": "loadBuildpackVersion", "signature": null, "start_line": 39, "end_line": 41, "nloc": 3, "method_source_normalized": "staticStringloadBuildpackVersion(String name)throws IOException{\n\t\treturn load(BUILDPACK_LOCATION.resolve(name));\n\t}", "original_code": "static String loadBuildpackVersion(String name) throws IOException {\n\t\treturn load(BUILDPACK_LOCATION.resolve(name));\n\t}", "code_tokens": ["static", "string", "load", "buildpack", "version", "(", "string", "name", ")", "throws", "io", "exception", "{", "return", "load", "(", "buildpack", "location", ".", "resolve", "(", "name", ")", ")", ";", "}"], "token_count": 26, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.876321+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ddcd41d733a8080bae67a992727f62434c0baea4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslSource.java", "file_blob_sha": null, "method_name": "loadSpringBootVersion", "signature": null, "start_line": 43, "end_line": 45, "nloc": 3, "method_source_normalized": "staticStringloadSpringBootVersion(String name)throws IOException{\n\t\treturn load(SPRINGBOOT_LOCATION.resolve(name));\n\t}", "original_code": "static String loadSpringBootVersion(String name) throws IOException {\n\t\treturn load(SPRINGBOOT_LOCATION.resolve(name));\n\t}", "code_tokens": ["static", "string", "load", "spring", "boot", "version", "(", "string", "name", ")", "throws", "io", "exception", "{", "return", "load", "(", "springboot", "location", ".", "resolve", "(", "name", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 33, "n_identifiers": 9, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.876558+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b64a2400f731e27928d97654b892287b9627b475", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/ssl/SslSource.java", "file_blob_sha": null, "method_name": "load", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "private staticStringload(Path path)throws IOException{\n\t\tString code = Files.readString(path);\n\t\tint firstBrace = code.indexOf(\"{\");\n\t\tint lastBrace = code.lastIndexOf(\"}\");\n\t\treturn code.substring(firstBrace, lastBrace + 1);\n\t}", "original_code": "private static String load(Path path) throws IOException {\n\t\tString code = Files.readString(path);\n\t\tint firstBrace = code.indexOf(\"{\");\n\t\tint lastBrace = code.lastIndexOf(\"}\");\n\t\treturn code.substring(firstBrace, lastBrace + 1);\n\t}", "code_tokens": ["private", "static", "string", "load", "(", "path", "path", ")", "throws", "io", "exception", "{", "string", "code", "=", "files", ".", "read", "string", "(", "path", ")", ";", "int", "first", "brace", "=", "code", ".", "index", "of", "(", "__STR__", ")", ";", "int", "last", "brace", "=", "code", ".", "last", "index", "of", "(", "__STR__", ")", ";", "return", "code", ".", "substring", "(", "first", "brace", ",", "last", "brace", "+", "__NUM__", ")", ";", "}"], "token_count": 63, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 78, "n_identifiers": 20, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.876833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bca70747e362849c8dd769e44b3f9c07eeb0e48d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "setup", "signature": null, "start_line": 85, "end_line": 89, "nloc": 5, "method_source_normalized": "@BeforeEachvoidsetup()throws Exception{\n\t\tthis.http = new TestHttpClientTransport(this.client);\n\t\tthis.uri = new URI(\"example\");\n\t}", "original_code": "@BeforeEach\n\tvoid setup() throws Exception {\n\t\tthis.http = new TestHttpClientTransport(this.client);\n\t\tthis.uri = new URI(\"example\");\n\t}", "code_tokens": ["@", "before", "each", "void", "setup", "(", ")", "throws", "exception", "{", "this", ".", "http", "=", "new", "test", "http", "client", "transport", "(", "this", ".", "client", ")", ";", "this", ".", "uri", "=", "new", "uri", "(", "__STR__", ")", ";", "}"], "token_count": 36, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 8, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.882468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ba05977e24f4e84cb726101f55403be42746c670", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "getShouldExecuteHttpGet", "signature": null, "start_line": 91, "end_line": 109, "nloc": 19, "method_source_normalized": "@TestvoidgetShouldExecuteHttpGet()throws Exception{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.get(this.uri);\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((request) -> {\n\t\t\ttry {\n\t\t\t\tassertThat(request).isInstanceOf(HttpGet.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new RuntimeException(ex);\n\t\t\t}\n\t\t}), isNull());\n\n\t}", "original_code": "@Test\n\tvoid getShouldExecuteHttpGet() throws Exception {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.get(this.uri);\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((request) -> {\n\t\t\ttry {\n\t\t\t\tassertThat(request).isInstanceOf(HttpGet.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new RuntimeException(ex);\n\t\t\t}\n\t\t}), isNull());\n\n\t}", "code_tokens": ["@", "test", "void", "get", "should", "execute", "http", "get", "(", ")", "throws", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "request", ")", "->", "{", "try", "{", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "get", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "headers", ".", "content", "type", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", "catch", "(", "exception", "ex", ")", "{", "throw", "new", "runtime", "exception", "(", "ex", ")", ";", "}", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 209, "vocab_size": 56, "cyclomatic_complexity": 2, "ast_node_count": 263, "n_identifiers": 53, "ast_max_depth": 18, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 81, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.882898+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b2a1928d49520f7e2cc8802237b3f99e08220e4b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "postShouldExecuteHttpPost", "signature": null, "start_line": 111, "end_line": 125, "nloc": 15, "method_source_normalized": "@TestvoidpostShouldExecuteHttpPost()throws Exception{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri);\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid postShouldExecuteHttpPost() throws Exception {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri);\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "post", "should", "execute", "http", "post", "(", ")", "throws", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "post", "(", "this", ".", "uri", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "post", ">", ")", "(", "request", ")", "->", "{", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "post", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "headers", ".", "content", "type", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "client", "transport", ".", "registry", "auth", "header", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 223, "vocab_size": 58, "cyclomatic_complexity": 1, "ast_node_count": 270, "n_identifiers": 57, "ast_max_depth": 17, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 64, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.883477+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "84f9117335fc304511bc5c6d829a63d1ea21f090", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "postWithRegistryAuthShouldExecuteHttpPostWithHeader", "signature": null, "start_line": 127, "end_line": 142, "nloc": 16, "method_source_normalized": "@TestvoidpostWithRegistryAuthShouldExecuteHttpPostWithHeader()throws Exception{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, \"auth token\");\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER).getValue())\n\t\t\t\t\t.isEqualTo(\"auth token\");\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid postWithRegistryAuthShouldExecuteHttpPostWithHeader() throws Exception {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, \"auth token\");\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER).getValue())\n\t\t\t\t\t.isEqualTo(\"auth token\");\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "post", "with", "registry", "auth", "should", "execute", "http", "post", "with", "header", "(", ")", "throws", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "post", "(", "this", ".", "uri", ",", "__STR__", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "post", ">", ")", "(", "request", ")", "->", "{", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "post", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "headers", ".", "content", "type", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "client", "transport", ".", "registry", "auth", "header", ")", ".", "get", "value", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 237, "vocab_size": 61, "cyclomatic_complexity": 1, "ast_node_count": 279, "n_identifiers": 58, "ast_max_depth": 18, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 73, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.883942+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "91ca56d32b2d77206e545b4b4896423c4c849faf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "postWithEmptyRegistryAuthShouldExecuteHttpPostWithoutHeader", "signature": null, "start_line": 144, "end_line": 158, "nloc": 15, "method_source_normalized": "@TestvoidpostWithEmptyRegistryAuthShouldExecuteHttpPostWithoutHeader()throws Exception{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, \"\");\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid postWithEmptyRegistryAuthShouldExecuteHttpPostWithoutHeader() throws Exception {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, \"\");\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "post", "with", "empty", "registry", "auth", "should", "execute", "http", "post", "without", "header", "(", ")", "throws", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "post", "(", "this", ".", "uri", ",", "__STR__", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "post", ">", ")", "(", "request", ")", "->", "{", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "post", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "headers", ".", "content", "type", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "client", "transport", ".", "registry", "auth", "header", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 231, "vocab_size": 62, "cyclomatic_complexity": 1, "ast_node_count": 272, "n_identifiers": 57, "ast_max_depth": 17, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 65, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.884404+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "40f13d9b2c7be84a40a622c97c9a42274fa8c5c6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "postWithJsonContentShouldExecuteHttpPost", "signature": null, "start_line": 160, "end_line": 181, "nloc": 22, "method_source_normalized": "@TestvoidpostWithJsonContentShouldExecuteHttpPost()throws Exception{\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, APPLICATION_JSON,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tHttpEntity entity = request.getEntity();\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\t\tassertThat(entity.getContentLength()).isEqualTo(content.length());\n\t\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_JSON);\n\t\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid postWithJsonContentShouldExecuteHttpPost() throws Exception {\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, APPLICATION_JSON,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tHttpEntity entity = request.getEntity();\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\t\tassertThat(entity.getContentLength()).isEqualTo(content.length());\n\t\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_JSON);\n\t\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "post", "with", "json", "content", "should", "execute", "http", "post", "(", ")", "throws", "exception", "{", "string", "content", "=", "__STR__", ";", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "post", "(", "this", ".", "uri", ",", "application", "json", ",", "(", "out", ")", "->", "stream", "utils", ".", "copy", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ",", "out", ")", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "post", ">", ")", "(", "request", ")", "->", "{", "http", "entity", "entity", "=", "request", ".", "get", "entity", "(", ")", ";", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "post", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "entity", ".", "is", "repeatable", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "length", "(", ")", ")", ".", "is", "equal", "to", "(", "content", ".", "length", "(", ")", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "application", "json", ")", ";", "assert", "that", "(", "entity", ".", "is", "streaming", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "exception", "of", "type", "(", "unsupported", "operation", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "entity", "::", "get", "content", ")", ";", "assert", "that", "(", "write", "to", "string", "(", "entity", ")", ")", ".", "is", "equal", "to", "(", "content", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 335, "vocab_size": 76, "cyclomatic_complexity": 1, "ast_node_count": 395, "n_identifiers": 89, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 108, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.884954+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8dcbf1a30aa65964d4f1944654ba3ad294e714dc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "postWithArchiveContentShouldExecuteHttpPost", "signature": null, "start_line": 183, "end_line": 204, "nloc": 22, "method_source_normalized": "@TestvoidpostWithArchiveContentShouldExecuteHttpPost()throws Exception{\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, APPLICATION_X_TAR,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tHttpEntity entity = request.getEntity();\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\t\tassertThat(entity.getContentLength()).isEqualTo(-1);\n\t\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_X_TAR);\n\t\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid postWithArchiveContentShouldExecuteHttpPost() throws Exception {\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.post(this.uri, APPLICATION_X_TAR,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPost>) (request) -> {\n\t\t\t\tHttpEntity entity = request.getEntity();\n\t\t\t\tassertThat(request).isInstanceOf(HttpPost.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\t\tassertThat(entity.getContentLength()).isEqualTo(-1);\n\t\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_X_TAR);\n\t\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "post", "with", "archive", "content", "should", "execute", "http", "post", "(", ")", "throws", "exception", "{", "string", "content", "=", "__STR__", ";", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "post", "(", "this", ".", "uri", ",", "application", "x", "tar", ",", "(", "out", ")", "->", "stream", "utils", ".", "copy", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ",", "out", ")", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "post", ">", ")", "(", "request", ")", "->", "{", "http", "entity", "entity", "=", "request", ".", "get", "entity", "(", ")", ";", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "post", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "entity", ".", "is", "repeatable", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "length", "(", ")", ")", ".", "is", "equal", "to", "(", "-", "__NUM__", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "application", "x", "tar", ")", ";", "assert", "that", "(", "entity", ".", "is", "streaming", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "exception", "of", "type", "(", "unsupported", "operation", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "entity", "::", "get", "content", ")", ";", "assert", "that", "(", "write", "to", "string", "(", "entity", ")", ")", ".", "is", "equal", "to", "(", "content", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 334, "vocab_size": 79, "cyclomatic_complexity": 1, "ast_node_count": 391, "n_identifiers": 87, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 108, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.885468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2ee9ba017fe244e20b53ff5f41c2da010ca6dabe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "putWithJsonContentShouldExecuteHttpPut", "signature": null, "start_line": 206, "end_line": 226, "nloc": 21, "method_source_normalized": "@TestvoidputWithJsonContentShouldExecuteHttpPut()throws Exception{\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.put(this.uri, APPLICATION_JSON,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPut>) (request) -> {\n\t\t\tHttpEntity entity = request.getEntity();\n\t\t\tassertThat(request).isInstanceOf(HttpPut.class);\n\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\tassertThat(entity.getContentLength()).isEqualTo(content.length());\n\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_JSON);\n\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid putWithJsonContentShouldExecuteHttpPut() throws Exception {\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.put(this.uri, APPLICATION_JSON,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPut>) (request) -> {\n\t\t\tHttpEntity entity = request.getEntity();\n\t\t\tassertThat(request).isInstanceOf(HttpPut.class);\n\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\tassertThat(entity.getContentLength()).isEqualTo(content.length());\n\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_JSON);\n\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "put", "with", "json", "content", "should", "execute", "http", "put", "(", ")", "throws", "exception", "{", "string", "content", "=", "__STR__", ";", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "put", "(", "this", ".", "uri", ",", "application", "json", ",", "(", "out", ")", "->", "stream", "utils", ".", "copy", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ",", "out", ")", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "put", ">", ")", "(", "request", ")", "->", "{", "http", "entity", "entity", "=", "request", ".", "get", "entity", "(", ")", ";", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "put", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "entity", ".", "is", "repeatable", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "length", "(", ")", ")", ".", "is", "equal", "to", "(", "content", ".", "length", "(", ")", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "application", "json", ")", ";", "assert", "that", "(", "entity", ".", "is", "streaming", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "exception", "of", "type", "(", "unsupported", "operation", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "entity", "::", "get", "content", ")", ";", "assert", "that", "(", "write", "to", "string", "(", "entity", ")", ")", ".", "is", "equal", "to", "(", "content", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 335, "vocab_size": 76, "cyclomatic_complexity": 1, "ast_node_count": 395, "n_identifiers": 89, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 93, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.885994+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "697b9c4dc5944c93a9ff22d0d25b5a4cc8a0d2e0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "putWithArchiveContentShouldExecuteHttpPut", "signature": null, "start_line": 228, "end_line": 248, "nloc": 21, "method_source_normalized": "@TestvoidputWithArchiveContentShouldExecuteHttpPut()throws Exception{\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.put(this.uri, APPLICATION_X_TAR,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPut>) (request) -> {\n\t\t\tHttpEntity entity = request.getEntity();\n\t\t\tassertThat(request).isInstanceOf(HttpPut.class);\n\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\tassertThat(entity.getContentLength()).isEqualTo(-1);\n\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_X_TAR);\n\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid putWithArchiveContentShouldExecuteHttpPut() throws Exception {\n\t\tString content = \"test\";\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.put(this.uri, APPLICATION_X_TAR,\n\t\t\t\t(out) -> StreamUtils.copy(content, StandardCharsets.UTF_8, out));\n\t\tthen(this.client).should().executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpPut>) (request) -> {\n\t\t\tHttpEntity entity = request.getEntity();\n\t\t\tassertThat(request).isInstanceOf(HttpPut.class);\n\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\tassertThat(entity.isRepeatable()).isFalse();\n\t\t\tassertThat(entity.getContentLength()).isEqualTo(-1);\n\t\t\tassertThat(entity.getContentType()).isEqualTo(APPLICATION_X_TAR);\n\t\t\tassertThat(entity.isStreaming()).isTrue();\n\t\t\tassertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(entity::getContent);\n\t\t\tassertThat(writeToString(entity)).isEqualTo(content);\n\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "put", "with", "archive", "content", "should", "execute", "http", "put", "(", ")", "throws", "exception", "{", "string", "content", "=", "__STR__", ";", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "put", "(", "this", ".", "uri", ",", "application", "x", "tar", ",", "(", "out", ")", "->", "stream", "utils", ".", "copy", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ",", "out", ")", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "put", ">", ")", "(", "request", ")", "->", "{", "http", "entity", "entity", "=", "request", ".", "get", "entity", "(", ")", ";", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "put", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "entity", ".", "is", "repeatable", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "length", "(", ")", ")", ".", "is", "equal", "to", "(", "-", "__NUM__", ")", ";", "assert", "that", "(", "entity", ".", "get", "content", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "application", "x", "tar", ")", ";", "assert", "that", "(", "entity", ".", "is", "streaming", "(", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "exception", "of", "type", "(", "unsupported", "operation", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "entity", "::", "get", "content", ")", ";", "assert", "that", "(", "write", "to", "string", "(", "entity", ")", ")", ".", "is", "equal", "to", "(", "content", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 334, "vocab_size": 79, "cyclomatic_complexity": 1, "ast_node_count": 391, "n_identifiers": 87, "ast_max_depth": 16, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 93, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.886556+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed1dc10a748b1ed387fde552ec14cea90cb1c40e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "deleteShouldExecuteHttpDelete", "signature": null, "start_line": 250, "end_line": 264, "nloc": 15, "method_source_normalized": "@TestvoiddeleteShouldExecuteHttpDelete()throws Exception{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.delete(this.uri);\n\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpDelete>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpDelete.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "original_code": "@Test\n\tvoid deleteShouldExecuteHttpDelete() throws Exception {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(200);\n\t\tResponse response = this.http.delete(this.uri);\n\n\t\tthen(this.client).should()\n\t\t\t.executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer<HttpDelete>) (request) -> {\n\t\t\t\tassertThat(request).isInstanceOf(HttpDelete.class);\n\t\t\t\tassertThat(request.getUri()).isEqualTo(this.uri);\n\t\t\t\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\t\t\t\tassertThat(response.getContent()).isSameAs(this.content);\n\t\t\t}), isNull());\n\t}", "code_tokens": ["@", "test", "void", "delete", "should", "execute", "http", "delete", "(", ")", "throws", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "response", "response", "=", "this", ".", "http", ".", "delete", "(", "this", ".", "uri", ")", ";", "then", "(", "this", ".", "client", ")", ".", "should", "(", ")", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "assert", "arg", "(", "(", "throwing", "consumer", "<", "http", "delete", ">", ")", "(", "request", ")", "->", "{", "assert", "that", "(", "request", ")", ".", "is", "instance", "of", "(", "http", "delete", ".", "class", ")", ";", "assert", "that", "(", "request", ".", "get", "uri", "(", ")", ")", ".", "is", "equal", "to", "(", "this", ".", "uri", ")", ";", "assert", "that", "(", "request", ".", "get", "first", "header", "(", "http", "headers", ".", "content", "type", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "response", ".", "get", "content", "(", ")", ")", ".", "is", "same", "as", "(", "this", ".", "content", ")", ";", "}", ")", ",", "is", "null", "(", ")", ")", ";", "}"], "token_count": 199, "vocab_size": 55, "cyclomatic_complexity": 1, "ast_node_count": 246, "n_identifiers": 51, "ast_max_depth": 17, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 60, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.886995+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "76bfa4e10c70ad204080da125eba52672a4cfa40", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "executeWhenResponseIsIn400RangeShouldThrowDockerException", "signature": null, "start_line": 266, "end_line": 276, "nloc": 11, "method_source_normalized": "@TestvoidexecuteWhenResponseIsIn400RangeShouldThrowDockerException()throws IOException{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"errors.json\"));\n\t\tgiven(this.response.getCode()).willReturn(404);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).hasSize(2);\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid executeWhenResponseIsIn400RangeShouldThrowDockerException() throws IOException {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"errors.json\"));\n\t\tgiven(this.response.getCode()).willReturn(404);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).hasSize(2);\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "response", "is", "in", "400", "range", "should", "throw", "docker", "exception", "(", ")", "throws", "io", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "engine", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "assert", "that", "(", "ex", ".", "get", "errors", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "ex", ".", "get", "response", "message", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", ")", ";", "}"], "token_count": 152, "vocab_size": 54, "cyclomatic_complexity": 1, "ast_node_count": 174, "n_identifiers": 31, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.887367+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0d0790e06b353e9303f219d9fe53a79a4c732401", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "executeWhenResponseIsIn500RangeWithNoContentShouldThrowDockerException", "signature": null, "start_line": 278, "end_line": 287, "nloc": 10, "method_source_normalized": "@TestvoidexecuteWhenResponseIsIn500RangeWithNoContentShouldThrowDockerException()throws IOException{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid executeWhenResponseIsIn500RangeWithNoContentShouldThrowDockerException() throws IOException {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "response", "is", "in", "500", "range", "with", "no", "content", "should", "throw", "docker", "exception", "(", ")", "throws", "io", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "engine", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "assert", "that", "(", "ex", ".", "get", "errors", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "ex", ".", "get", "response", "message", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", ")", ";", "}"], "token_count": 125, "vocab_size": 49, "cyclomatic_complexity": 1, "ast_node_count": 138, "n_identifiers": 25, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.887697+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6df3e19f9d6240e6d79ef0779484c7a7fa4eac30", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "executeWhenResponseIsIn500RangeWithMessageShouldThrowDockerException", "signature": null, "start_line": 289, "end_line": 299, "nloc": 11, "method_source_normalized": "@TestvoidexecuteWhenResponseIsIn500RangeWithMessageShouldThrowDockerException()throws IOException{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"message.json\"));\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage().getMessage()).contains(\"test message\");\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid executeWhenResponseIsIn500RangeWithMessageShouldThrowDockerException() throws IOException {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"message.json\"));\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage().getMessage()).contains(\"test message\");\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "response", "is", "in", "500", "range", "with", "message", "should", "throw", "docker", "exception", "(", ")", "throws", "io", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "engine", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "assert", "that", "(", "ex", ".", "get", "errors", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "ex", ".", "get", "response", "message", "(", ")", ".", "get", "message", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}", ")", ";", "}"], "token_count": 158, "vocab_size": 54, "cyclomatic_complexity": 1, "ast_node_count": 180, "n_identifiers": 32, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.888060+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "473938e8ecfce2321932557a6e0a1cc6d5500fe4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "executeWhenResponseIsIn500RangeWithOtherContentShouldThrowDockerException", "signature": null, "start_line": 301, "end_line": 311, "nloc": 11, "method_source_normalized": "@TestvoidexecuteWhenResponseIsIn500RangeWithOtherContentShouldThrowDockerException()throws IOException{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid executeWhenResponseIsIn500RangeWithOtherContentShouldThrowDockerException() throws IOException {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(this.content);\n\t\tgiven(this.response.getCode()).willReturn(500);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).isNull();\n\t\t\t\tassertThat(ex.getResponseMessage()).isNull();\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "response", "is", "in", "500", "range", "with", "other", "content", "should", "throw", "docker", "exception", "(", ")", "throws", "io", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "this", ".", "content", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "engine", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "assert", "that", "(", "ex", ".", "get", "errors", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "ex", ".", "get", "response", "message", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", ")", ";", "}"], "token_count": 145, "vocab_size": 50, "cyclomatic_complexity": 1, "ast_node_count": 165, "n_identifiers": 30, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.888413+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dabd6fb4c9a23b1702473b63b4d398b49bd3838d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "shouldReturnErrorsAndMessage", "signature": null, "start_line": 313, "end_line": 323, "nloc": 11, "method_source_normalized": "@TestvoidshouldReturnErrorsAndMessage()throws IOException{\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"message-and-errors.json\"));\n\t\tgiven(this.response.getCode()).willReturn(404);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).hasSize(2);\n\t\t\t\tassertThat(ex.getResponseMessage().getMessage()).contains(\"test message\");\n\t\t\t});\n\t}", "original_code": "@Test\n\tvoid shouldReturnErrorsAndMessage() throws IOException {\n\t\tgivenClientWillReturnResponse();\n\t\tgiven(this.entity.getContent()).willReturn(getClass().getResourceAsStream(\"message-and-errors.json\"));\n\t\tgiven(this.response.getCode()).willReturn(404);\n\t\tassertThatExceptionOfType(DockerEngineException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> {\n\t\t\t\tassertThat(ex.getErrors()).hasSize(2);\n\t\t\t\tassertThat(ex.getResponseMessage().getMessage()).contains(\"test message\");\n\t\t\t});\n\t}", "code_tokens": ["@", "test", "void", "should", "return", "errors", "and", "message", "(", ")", "throws", "io", "exception", "{", "given", "client", "will", "return", "response", "(", ")", ";", "given", "(", "this", ".", "entity", ".", "get", "content", "(", ")", ")", ".", "will", "return", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "given", "(", "this", ".", "response", ".", "get", "code", "(", ")", ")", ".", "will", "return", "(", "__NUM__", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "engine", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "{", "assert", "that", "(", "ex", ".", "get", "errors", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "ex", ".", "get", "response", "message", "(", ")", ".", "get", "message", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}", ")", ";", "}"], "token_count": 151, "vocab_size": 49, "cyclomatic_complexity": 1, "ast_node_count": 181, "n_identifiers": 32, "ast_max_depth": 14, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.888773+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "22564e7c7c0e9132aff4409acc840b10b9c71f12", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "executeWhenClientThrowsIOExceptionRethrowsAsDockerException", "signature": null, "start_line": 325, "end_line": 331, "nloc": 7, "method_source_normalized": "@TestvoidexecuteWhenClientThrowsIOExceptionRethrowsAsDockerException()throws IOException{\n\t\tgiven(this.client.executeOpen(any(HttpHost.class), any(HttpUriRequest.class), isNull()))\n\t\t\t.willThrow(new IOException(\"test IO exception\"));\n\t\tassertThatExceptionOfType(DockerConnectionException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> assertThat(ex.getMessage()).contains(\"test IO exception\"));\n\t}", "original_code": "@Test\n\tvoid executeWhenClientThrowsIOExceptionRethrowsAsDockerException() throws IOException {\n\t\tgiven(this.client.executeOpen(any(HttpHost.class), any(HttpUriRequest.class), isNull()))\n\t\t\t.willThrow(new IOException(\"test IO exception\"));\n\t\tassertThatExceptionOfType(DockerConnectionException.class).isThrownBy(() -> this.http.get(this.uri))\n\t\t\t.satisfies((ex) -> assertThat(ex.getMessage()).contains(\"test IO exception\"));\n\t}", "code_tokens": ["@", "test", "void", "execute", "when", "client", "throws", "io", "exception", "rethrows", "as", "docker", "exception", "(", ")", "throws", "io", "exception", "{", "given", "(", "this", ".", "client", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "any", "(", "http", "uri", "request", ".", "class", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "throw", "(", "new", "io", "exception", "(", "__STR__", ")", ")", ";", "assert", "that", "exception", "of", "type", "(", "docker", "connection", "exception", ".", "class", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "this", ".", "http", ".", "get", "(", "this", ".", "uri", ")", ")", ".", "satisfies", "(", "(", "ex", ")", "->", "assert", "that", "(", "ex", ".", "get", "message", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ")", ";", "}"], "token_count": 119, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 138, "n_identifiers": 28, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.889104+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17a988310b1114dd3466332e68b6f6b146de729a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "writeToString", "signature": null, "start_line": 333, "end_line": 337, "nloc": 5, "method_source_normalized": "privateStringwriteToString(HttpEntity entity)throws IOException{\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tentity.writeTo(out);\n\t\treturn out.toString(StandardCharsets.UTF_8);\n\t}", "original_code": "private String writeToString(HttpEntity entity) throws IOException {\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tentity.writeTo(out);\n\t\treturn out.toString(StandardCharsets.UTF_8);\n\t}", "code_tokens": ["private", "string", "write", "to", "string", "(", "http", "entity", "entity", ")", "throws", "io", "exception", "{", "byte", "array", "output", "stream", "out", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "entity", ".", "write", "to", "(", "out", ")", ";", "return", "out", ".", "to", "string", "(", "standard", "charsets", ".", "utf", "8", ")", ";", "}"], "token_count": 50, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 15, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.889380+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f5fbf7d454f27cee31b98af632ee31400419ea80", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "givenClientWillReturnResponse", "signature": null, "start_line": 339, "end_line": 343, "nloc": 5, "method_source_normalized": "privatevoidgivenClientWillReturnResponse()throws IOException{\n\t\tgiven(this.client.executeOpen(any(HttpHost.class), any(HttpUriRequest.class), isNull()))\n\t\t\t.willReturn(this.response);\n\t\tgiven(this.response.getEntity()).willReturn(this.entity);\n\t}", "original_code": "private void givenClientWillReturnResponse() throws IOException {\n\t\tgiven(this.client.executeOpen(any(HttpHost.class), any(HttpUriRequest.class), isNull()))\n\t\t\t.willReturn(this.response);\n\t\tgiven(this.response.getEntity()).willReturn(this.entity);\n\t}", "code_tokens": ["private", "void", "given", "client", "will", "return", "response", "(", ")", "throws", "io", "exception", "{", "given", "(", "this", ".", "client", ".", "execute", "open", "(", "any", "(", "http", "host", ".", "class", ")", ",", "any", "(", "http", "uri", "request", ".", "class", ")", ",", "is", "null", "(", ")", ")", ")", ".", "will", "return", "(", "this", ".", "response", ")", ";", "given", "(", "this", ".", "response", ".", "get", "entity", "(", ")", ")", ".", "will", "return", "(", "this", ".", "entity", ")", ";", "}"], "token_count": 75, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 93, "n_identifiers": 19, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.889663+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "98a6fd67f5a4b77c5e9a0b0f0cdea23a610e5a21", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpClientTransportTests.java", "file_blob_sha": null, "method_name": "TestHttpClientTransport", "signature": null, "start_line": 350, "end_line": 352, "nloc": 3, "method_source_normalized": "protectedTestHttpClientTransport(HttpClient client)throws URISyntaxException{\n\t\t\tsuper(client, HttpHost.create(\"docker://localhost\"));\n\t\t}", "original_code": "protected TestHttpClientTransport(HttpClient client) throws URISyntaxException {\n\t\t\tsuper(client, HttpHost.create(\"docker://localhost\"));\n\t\t}", "code_tokens": ["protected", "test", "http", "client", "transport", "(", "http", "client", "client", ")", "throws", "uri", "syntax", "exception", "{", "super", "(", "client", ",", "http", "host", ".", "create", "(", "__STR__", ")", ")", ";", "}"], "token_count": 29, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 32, "n_identifiers": 7, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 13, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.889925+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1269f832613c21d79aa38016a17dead902c98afa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenDockerHostIsNotSetReturnsNull", "signature": null, "start_line": 43, "end_line": 48, "nloc": 6, "method_source_normalized": "@TestvoidcreateIfPossibleWhenDockerHostIsNotSetReturnsNull(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from((DockerConnectionConfiguration) null);\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNull();\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenDockerHostIsNotSetReturnsNull() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from((DockerConnectionConfiguration) null);\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "docker", "host", "is", "not", "set", "returns", "null", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "(", "docker", "connection", "configuration", ")", "null", ")", ";", "remote", "http", "client", "transport", "transport", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 68, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.891396+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a2add38cd79cccb6c8935c60267b27211872b75e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenDockerHostIsFileReturnsNull", "signature": null, "start_line": 50, "end_line": 56, "nloc": 7, "method_source_normalized": "@TestvoidcreateIfPossibleWhenDockerHostIsFileReturnsNull(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"unix:///var/run/socket.sock\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNull();\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenDockerHostIsFileReturnsNull() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"unix:///var/run/socket.sock\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "docker", "host", "is", "file", "returns", "null", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "remote", "http", "client", "transport", "transport", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 70, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.891681+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d4d6022f41bd4c44b5f463c68edfc567e05ad67f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenDockerHostIsAddressReturnsTransport", "signature": null, "start_line": 58, "end_line": 64, "nloc": 7, "method_source_normalized": "@TestvoidcreateIfPossibleWhenDockerHostIsAddressReturnsTransport(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenDockerHostIsAddressReturnsTransport() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "docker", "host", "is", "address", "returns", "transport", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "remote", "http", "client", "transport", "transport", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "not", "null", "(", ")", ";", "}"], "token_count": 71, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.891968+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0fcac855880704593d6629a530b017676657d105", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenNoTlsVerifyUsesHttp", "signature": null, "start_line": 66, "end_line": 72, "nloc": 7, "method_source_normalized": "@TestvoidcreateIfPossibleWhenNoTlsVerifyUsesHttp(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport.getHost()).satisfies(hostOf(\"http\", \"192.168.1.2\", 2376));\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenNoTlsVerifyUsesHttp() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost);\n\t\tassertThat(transport.getHost()).satisfies(hostOf(\"http\", \"192.168.1.2\", 2376));\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "no", "tls", "verify", "uses", "http", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "remote", "http", "client", "transport", "transport", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ".", "get", "host", "(", ")", ")", ".", "satisfies", "(", "host", "of", "(", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ")", ";", "}"], "token_count": 82, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 80, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.892246+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "46863c2d9d65e14fd4f272e02417f30a67d20cbf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenTlsVerifyUsesHttps", "signature": null, "start_line": 74, "end_line": 82, "nloc": 9, "method_source_normalized": "@TestvoidcreateIfPossibleWhenTlsVerifyUsesHttps()throws Exception{\n\t\tSslContextFactory sslContextFactory = mock(SslContextFactory.class);\n\t\tgiven(sslContextFactory.forDirectory(\"/test-cert-path\")).willReturn(SSLContext.getDefault());\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\", true, \"/test-cert-path\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost, sslContextFactory);\n\t\tassertThat(transport.getHost()).satisfies(hostOf(\"https\", \"192.168.1.2\", 2376));\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenTlsVerifyUsesHttps() throws Exception {\n\t\tSslContextFactory sslContextFactory = mock(SslContextFactory.class);\n\t\tgiven(sslContextFactory.forDirectory(\"/test-cert-path\")).willReturn(SSLContext.getDefault());\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\", true, \"/test-cert-path\"));\n\t\tRemoteHttpClientTransport transport = RemoteHttpClientTransport.createIfPossible(dockerHost, sslContextFactory);\n\t\tassertThat(transport.getHost()).satisfies(hostOf(\"https\", \"192.168.1.2\", 2376));\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "tls", "verify", "uses", "https", "(", ")", "throws", "exception", "{", "ssl", "context", "factory", "ssl", "context", "factory", "=", "mock", "(", "ssl", "context", "factory", ".", "class", ")", ";", "given", "(", "ssl", "context", "factory", ".", "for", "directory", "(", "__STR__", ")", ")", ".", "will", "return", "(", "ssl", "context", ".", "get", "default", "(", ")", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ",", "true", ",", "__STR__", ")", ")", ";", "remote", "http", "client", "transport", "transport", "=", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ",", "ssl", "context", "factory", ")", ";", "assert", "that", "(", "transport", ".", "get", "host", "(", ")", ")", ".", "satisfies", "(", "host", "of", "(", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ")", ";", "}"], "token_count": 132, "vocab_size": 51, "cyclomatic_complexity": 1, "ast_node_count": 132, "n_identifiers": 31, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.892582+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e7d244aa632d1beaa38a903e3ac5298f4468d5b0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createIfPossibleWhenTlsVerifyWithMissingCertPathThrowsException", "signature": null, "start_line": 84, "end_line": 90, "nloc": 7, "method_source_normalized": "@TestvoidcreateIfPossibleWhenTlsVerifyWithMissingCertPathThrowsException(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\", true, null));\n\t\tassertThatIllegalStateException().isThrownBy(() -> RemoteHttpClientTransport.createIfPossible(dockerHost))\n\t\t\t.withMessageContaining(\"Docker host TLS verification requires trust material\");\n\t}", "original_code": "@Test\n\tvoid createIfPossibleWhenTlsVerifyWithMissingCertPathThrowsException() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\", true, null));\n\t\tassertThatIllegalStateException().isThrownBy(() -> RemoteHttpClientTransport.createIfPossible(dockerHost))\n\t\t\t.withMessageContaining(\"Docker host TLS verification requires trust material\");\n\t}", "code_tokens": ["@", "test", "void", "create", "if", "possible", "when", "tls", "verify", "with", "missing", "cert", "path", "throws", "exception", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ",", "true", ",", "null", ")", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "remote", "http", "client", "transport", ".", "create", "if", "possible", "(", "docker", "host", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 82, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 14, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.892877+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d2d59fbc79e3221a8eec48052f31ffa59d9e3f07", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/RemoteHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "hostOf", "signature": null, "start_line": 92, "end_line": 99, "nloc": 8, "method_source_normalized": "privateConsumer<HttpHost>hostOf(String scheme, String hostName, int port){\n\t\treturn (host) -> {\n\t\t\tassertThat(host).isNotNull();\n\t\t\tassertThat(host.getSchemeName()).isEqualTo(scheme);\n\t\t\tassertThat(host.getHostName()).isEqualTo(hostName);\n\t\t\tassertThat(host.getPort()).isEqualTo(port);\n\t\t};\n\t}", "original_code": "private Consumer<HttpHost> hostOf(String scheme, String hostName, int port) {\n\t\treturn (host) -> {\n\t\t\tassertThat(host).isNotNull();\n\t\t\tassertThat(host.getSchemeName()).isEqualTo(scheme);\n\t\t\tassertThat(host.getHostName()).isEqualTo(hostName);\n\t\t\tassertThat(host.getPort()).isEqualTo(port);\n\t\t};\n\t}", "code_tokens": ["private", "consumer", "<", "http", "host", ">", "host", "of", "(", "string", "scheme", ",", "string", "host", "name", ",", "int", "port", ")", "{", "return", "(", "host", ")", "->", "{", "assert", "that", "(", "host", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "host", ".", "get", "scheme", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "scheme", ")", ";", "assert", "that", "(", "host", ".", "get", "host", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "host", "name", ")", ";", "assert", "that", "(", "host", ".", "get", "port", "(", ")", ")", ".", "is", "equal", "to", "(", "port", ")", ";", "}", ";", "}"], "token_count": 98, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 117, "n_identifiers": 27, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.893186+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "24876c9cc1970839aa2b5f5d858dbd93bb2e4c97", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenHostIsNullThrowsException", "signature": null, "start_line": 56, "end_line": 61, "nloc": 6, "method_source_normalized": "@TestvoidcreateWhenHostIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> new DockerEngineException(null, null, 404, null, NO_ERRORS, NO_MESSAGE))\n\t\t\t.withMessage(\"'host' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenHostIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> new DockerEngineException(null, null, 404, null, NO_ERRORS, NO_MESSAGE))\n\t\t\t.withMessage(\"'host' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "host", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "docker", "engine", "exception", "(", "null", ",", "null", ",", "__NUM__", ",", "null", ",", "no", "errors", ",", "no", "message", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 56, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 8, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.894851+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5e306bfa54938fe8535ced954b2aff62c559a454", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenUriIsNullThrowsException", "signature": null, "start_line": 63, "end_line": 68, "nloc": 6, "method_source_normalized": "@TestvoidcreateWhenUriIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> new DockerEngineException(HOST, null, 404, null, NO_ERRORS, NO_MESSAGE))\n\t\t\t.withMessage(\"'uri' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenUriIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> new DockerEngineException(HOST, null, 404, null, NO_ERRORS, NO_MESSAGE))\n\t\t\t.withMessage(\"'uri' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "uri", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "docker", "engine", "exception", "(", "host", ",", "null", ",", "__NUM__", ",", "null", ",", "no", "errors", ",", "no", "message", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 56, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 9, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.895138+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "92fc0d287af5b070a42ee52cf613a68cba47bc57", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "create", "signature": null, "start_line": 70, "end_line": 79, "nloc": 10, "method_source_normalized": "@Testvoidcreate(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\" [code: message]\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isEqualTo(\"missing\");\n\t\tassertThat(exception.getErrors()).isSameAs(ERRORS);\n\t\tassertThat(exception.getResponseMessage()).isSameAs(MESSAGE);\n\t}", "original_code": "@Test\n\tvoid create() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\" [code: message]\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isEqualTo(\"missing\");\n\t\tassertThat(exception.getErrors()).isSameAs(ERRORS);\n\t\tassertThat(exception.getResponseMessage()).isSameAs(MESSAGE);\n\t}", "code_tokens": ["@", "test", "void", "create", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "__STR__", ",", "errors", ",", "message", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "status", "code", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "exception", ".", "get", "reason", "phrase", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "errors", "(", ")", ")", ".", "is", "same", "as", "(", "errors", ")", ";", "assert", "that", "(", "exception", ".", "get", "response", "message", "(", ")", ")", ".", "is", "same", "as", "(", "message", ")", ";", "}"], "token_count": 124, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 31, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 54, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.895468+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cc7a22823e0cda5468d73b078e38e2041bfef949", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenReasonPhraseIsNull", "signature": null, "start_line": 81, "end_line": 90, "nloc": 10, "method_source_normalized": "@TestvoidcreateWhenReasonPhraseIsNull(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, null, ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 and message \\\"response message\\\" [code: message]\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isNull();\n\t\tassertThat(exception.getErrors()).isSameAs(ERRORS);\n\t\tassertThat(exception.getResponseMessage()).isSameAs(MESSAGE);\n\t}", "original_code": "@Test\n\tvoid createWhenReasonPhraseIsNull() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, null, ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 and message \\\"response message\\\" [code: message]\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isNull();\n\t\tassertThat(exception.getErrors()).isSameAs(ERRORS);\n\t\tassertThat(exception.getResponseMessage()).isSameAs(MESSAGE);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "reason", "phrase", "is", "null", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "null", ",", "errors", ",", "message", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "status", "code", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "exception", ".", "get", "reason", "phrase", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "exception", ".", "get", "errors", "(", ")", ")", ".", "is", "same", "as", "(", "errors", ")", ";", "assert", "that", "(", "exception", ".", "get", "response", "message", "(", ")", ")", ".", "is", "same", "as", "(", "message", ")", ";", "}"], "token_count": 127, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 140, "n_identifiers": 31, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 53, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.895867+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "48de9d022cf53430bd508cf18cb9609b3f09baf0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenErrorsIsNull", "signature": null, "start_line": 92, "end_line": 98, "nloc": 7, "method_source_normalized": "@TestvoidcreateWhenErrorsIsNull(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", null, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\"\");\n\t\tassertThat(exception.getErrors()).isNull();\n\t}", "original_code": "@Test\n\tvoid createWhenErrorsIsNull() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", null, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\"\");\n\t\tassertThat(exception.getErrors()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "errors", "is", "null", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "__STR__", ",", "null", ",", "message", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "errors", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 69, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 43, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.896175+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "61007676195e2c615bb9bb4079df1db2b887464c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenErrorsIsEmpty", "signature": null, "start_line": 100, "end_line": 108, "nloc": 9, "method_source_normalized": "@TestvoidcreateWhenErrorsIsEmpty(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", NO_ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\"\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isEqualTo(\"missing\");\n\t\tassertThat(exception.getErrors()).isSameAs(NO_ERRORS);\n\t}", "original_code": "@Test\n\tvoid createWhenErrorsIsEmpty() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", NO_ERRORS, MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" and message \\\"response message\\\"\");\n\t\tassertThat(exception.getStatusCode()).isEqualTo(404);\n\t\tassertThat(exception.getReasonPhrase()).isEqualTo(\"missing\");\n\t\tassertThat(exception.getErrors()).isSameAs(NO_ERRORS);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "errors", "is", "empty", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "__STR__", ",", "no", "errors", ",", "message", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "status", "code", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "exception", ".", "get", "reason", "phrase", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "errors", "(", ")", ")", ".", "is", "same", "as", "(", "no", "errors", ")", ";", "}"], "token_count": 111, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 120, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 49, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.896488+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dce184744a0b520f9f48c849b75d9ed2f6a20893", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenMessageIsNull", "signature": null, "start_line": 110, "end_line": 116, "nloc": 7, "method_source_normalized": "@TestvoidcreateWhenMessageIsNull(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, null);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" [code: message]\");\n\t\tassertThat(exception.getResponseMessage()).isNull();\n\t}", "original_code": "@Test\n\tvoid createWhenMessageIsNull() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, null);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" [code: message]\");\n\t\tassertThat(exception.getResponseMessage()).isNull();\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "message", "is", "null", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "__STR__", ",", "errors", ",", "null", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "response", "message", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}"], "token_count": 70, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 77, "n_identifiers": 16, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.896759+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a7efcb16c233024321e22cd5ebbb52c273782f7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerEngineExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenMessageIsEmpty", "signature": null, "start_line": 118, "end_line": 124, "nloc": 7, "method_source_normalized": "@TestvoidcreateWhenMessageIsEmpty(){\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, NO_MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" [code: message]\");\n\t\tassertThat(exception.getResponseMessage()).isSameAs(NO_MESSAGE);\n\t}", "original_code": "@Test\n\tvoid createWhenMessageIsEmpty() {\n\t\tDockerEngineException exception = new DockerEngineException(HOST, URI, 404, \"missing\", ERRORS, NO_MESSAGE);\n\t\tassertThat(exception.getMessage()).isEqualTo(\n\t\t\t\t\"Docker API call to 'docker://localhost/example' failed with status code 404 \\\"missing\\\" [code: message]\");\n\t\tassertThat(exception.getResponseMessage()).isSameAs(NO_MESSAGE);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "message", "is", "empty", "(", ")", "{", "docker", "engine", "exception", "exception", "=", "new", "docker", "engine", "exception", "(", "host", ",", "uri", ",", "__NUM__", ",", "__STR__", ",", "errors", ",", "no", "message", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "exception", ".", "get", "response", "message", "(", ")", ")", ".", "is", "same", "as", "(", "no", "message", ")", ";", "}"], "token_count": 74, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 78, "n_identifiers": 18, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 41, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.897027+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6f5461e62c31d7361175306806c5fa95cac7d19", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/MessageTests.java", "file_blob_sha": null, "method_name": "readValueDeserializesJson", "signature": null, "start_line": 32, "end_line": 36, "nloc": 5, "method_source_normalized": "@TestvoidreadValueDeserializesJson()throws Exception{\n\t\tMessage message = getObjectMapper().readValue(getContent(\"message.json\"), Message.class);\n\t\tassertThat(message.getMessage()).isEqualTo(\"test message\");\n\t}", "original_code": "@Test\n\tvoid readValueDeserializesJson() throws Exception {\n\t\tMessage message = getObjectMapper().readValue(getContent(\"message.json\"), Message.class);\n\t\tassertThat(message.getMessage()).isEqualTo(\"test message\");\n\t}", "code_tokens": ["@", "test", "void", "read", "value", "deserializes", "json", "(", ")", "throws", "exception", "{", "message", "message", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "message", ".", "class", ")", ";", "assert", "that", "(", "message", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 54, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.897654+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b1256a0d009f4ee62c5a7465d323009065f2037", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/MessageTests.java", "file_blob_sha": null, "method_name": "toStringHasErrorDetails", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "@TestvoidtoStringHasErrorDetails()throws Exception{\n\t\tMessage errors = getObjectMapper().readValue(getContent(\"message.json\"), Message.class);\n\t\tassertThat(errors).hasToString(\"test message\");\n\t}", "original_code": "@Test\n\tvoid toStringHasErrorDetails() throws Exception {\n\t\tMessage errors = getObjectMapper().readValue(getContent(\"message.json\"), Message.class);\n\t\tassertThat(errors).hasToString(\"test message\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "has", "error", "details", "(", ")", "throws", "exception", "{", "message", "errors", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "message", ".", "class", ")", ";", "assert", "that", "(", "errors", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.897940+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2723fd075f06630948960e127ec7b3a33326a159", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostVariableIsAddressReturnsRemote", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenDockerHostVariableIsAddressReturnsRemote(){\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.0\"));\n\t\tassertThat(transport).isInstanceOf(RemoteHttpClientTransport.class);\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostVariableIsAddressReturnsRemote() {\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.0\"));\n\t\tassertThat(transport).isInstanceOf(RemoteHttpClientTransport.class);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "variable", "is", "address", "returns", "remote", "(", ")", "{", "http", "transport", "transport", "=", "http", "transport", ".", "create", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "instance", "of", "(", "remote", "http", "client", "transport", ".", "class", ")", ";", "}"], "token_count": 54, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.898756+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "31e733f4d53e756fb25cd3bdab12b8c4e5ac01b9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostVariableIsFileReturnsLocal", "signature": null, "start_line": 44, "end_line": 49, "nloc": 6, "method_source_normalized": "@TestvoidcreateWhenDockerHostVariableIsFileReturnsLocal(@TempDir Path tempDir)throws IOException{\n\t\tString dummySocketFilePath = Files.createTempFile(tempDir, \"http-transport\", null).toAbsolutePath().toString();\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(dummySocketFilePath));\n\t\tassertThat(transport).isInstanceOf(LocalHttpClientTransport.class);\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostVariableIsFileReturnsLocal(@TempDir Path tempDir) throws IOException {\n\t\tString dummySocketFilePath = Files.createTempFile(tempDir, \"http-transport\", null).toAbsolutePath().toString();\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(dummySocketFilePath));\n\t\tassertThat(transport).isInstanceOf(LocalHttpClientTransport.class);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "variable", "is", "file", "returns", "local", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "dummy", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "http", "transport", "transport", "=", "http", "transport", ".", "create", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "dummy", "socket", "file", "path", ")", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "instance", "of", "(", "local", "http", "client", "transport", ".", "class", ")", ";", "}"], "token_count": 97, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 94, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.899057+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "742fc127b52aeff54b2e6bd8fc6147c317b97ead", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/HttpTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostVariableIsUnixSchemePrefixedFileReturnsLocal", "signature": null, "start_line": 51, "end_line": 56, "nloc": 6, "method_source_normalized": "@TestvoidcreateWhenDockerHostVariableIsUnixSchemePrefixedFileReturnsLocal(@TempDir Path tempDir)throws IOException{\n\t\tString dummySocketFilePath = \"unix://\" + Files.createTempFile(tempDir, \"http-transport\", null).toAbsolutePath();\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(dummySocketFilePath));\n\t\tassertThat(transport).isInstanceOf(LocalHttpClientTransport.class);\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostVariableIsUnixSchemePrefixedFileReturnsLocal(@TempDir Path tempDir) throws IOException {\n\t\tString dummySocketFilePath = \"unix://\" + Files.createTempFile(tempDir, \"http-transport\", null).toAbsolutePath();\n\t\tHttpTransport transport = HttpTransport.create(new DockerConnectionConfiguration.Host(dummySocketFilePath));\n\t\tassertThat(transport).isInstanceOf(LocalHttpClientTransport.class);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "variable", "is", "unix", "scheme", "prefixed", "file", "returns", "local", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "dummy", "socket", "file", "path", "=", "__STR__", "+", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ";", "http", "transport", "transport", "=", "http", "transport", ".", "create", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "dummy", "socket", "file", "path", ")", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "instance", "of", "(", "local", "http", "client", "transport", ".", "class", ")", ";", "}"], "token_count": 97, "vocab_size": 49, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.899371+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b96c9ec5e1a28f30a7343ed4a7d86e5c1cd6d60e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostIsFileReturnsTransport", "signature": null, "start_line": 39, "end_line": 46, "nloc": 8, "method_source_normalized": "@TestvoidcreateWhenDockerHostIsFileReturnsTransport(@TempDir Path tempDir)throws IOException{\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(socketFilePath));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(socketFilePath);\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostIsFileReturnsTransport(@TempDir Path tempDir) throws IOException {\n\t\tString socketFilePath = Files.createTempFile(tempDir, \"remote-transport\", null).toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(socketFilePath));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(socketFilePath);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "is", "file", "returns", "transport", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "throws", "io", "exception", "{", "string", "socket", "file", "path", "=", "files", ".", "create", "temp", "file", "(", "temp", "dir", ",", "__STR__", ",", "null", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "socket", "file", "path", ")", ")", ";", "local", "http", "client", "transport", "transport", "=", "local", "http", "client", "transport", ".", "create", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "transport", ".", "get", "host", "(", ")", ".", "to", "host", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "}"], "token_count": 134, "vocab_size": 45, "cyclomatic_complexity": 1, "ast_node_count": 131, "n_identifiers": 34, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.900425+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c4e482452a7e0a1ea4f8ab8fd798a431e465e10e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostIsFileThatDoesNotExistReturnsTransport", "signature": null, "start_line": 48, "end_line": 55, "nloc": 8, "method_source_normalized": "@TestvoidcreateWhenDockerHostIsFileThatDoesNotExistReturnsTransport(@TempDir Path tempDir){\n\t\tString socketFilePath = Paths.get(tempDir.toString(), \"dummy\").toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(socketFilePath));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(socketFilePath);\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostIsFileThatDoesNotExistReturnsTransport(@TempDir Path tempDir) {\n\t\tString socketFilePath = Paths.get(tempDir.toString(), \"dummy\").toAbsolutePath().toString();\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost.from(new DockerConnectionConfiguration.Host(socketFilePath));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(socketFilePath);\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "is", "file", "that", "does", "not", "exist", "returns", "transport", "(", "@", "temp", "dir", "path", "temp", "dir", ")", "{", "string", "socket", "file", "path", "=", "paths", ".", "get", "(", "temp", "dir", ".", "to", "string", "(", ")", ",", "__STR__", ")", ".", "to", "absolute", "path", "(", ")", ".", "to", "string", "(", ")", ";", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "socket", "file", "path", ")", ")", ";", "local", "http", "client", "transport", "transport", "=", "local", "http", "client", "transport", ".", "create", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "transport", ".", "get", "host", "(", ")", ".", "to", "host", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "socket", "file", "path", ")", ";", "}"], "token_count": 136, "vocab_size": 44, "cyclomatic_complexity": 1, "ast_node_count": 132, "n_identifiers": 34, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 34, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.900776+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a907715d6b61db672dbef1e360d7c1bf724fafae", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/LocalHttpClientTransportTests.java", "file_blob_sha": null, "method_name": "createWhenDockerHostIsAddressReturnsTransport", "signature": null, "start_line": 57, "end_line": 64, "nloc": 8, "method_source_normalized": "@TestvoidcreateWhenDockerHostIsAddressReturnsTransport(){\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(\"tcp://192.168.1.2:2376\");\n\t}", "original_code": "@Test\n\tvoid createWhenDockerHostIsAddressReturnsTransport() {\n\t\tResolvedDockerHost dockerHost = ResolvedDockerHost\n\t\t\t.from(new DockerConnectionConfiguration.Host(\"tcp://192.168.1.2:2376\"));\n\t\tLocalHttpClientTransport transport = LocalHttpClientTransport.create(dockerHost);\n\t\tassertThat(transport).isNotNull();\n\t\tassertThat(transport.getHost().toHostString()).isEqualTo(\"tcp://192.168.1.2:2376\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "docker", "host", "is", "address", "returns", "transport", "(", ")", "{", "resolved", "docker", "host", "docker", "host", "=", "resolved", "docker", "host", ".", "from", "(", "new", "docker", "connection", "configuration", ".", "host", "(", "__STR__", ")", ")", ";", "local", "http", "client", "transport", "transport", "=", "local", "http", "client", "transport", ".", "create", "(", "docker", "host", ")", ";", "assert", "that", "(", "transport", ")", ".", "is", "not", "null", "(", ")", ";", "assert", "that", "(", "transport", ".", "get", "host", "(", ")", ".", "to", "host", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 91, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 91, "n_identifiers": 21, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 29, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.901081+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "08346db0b956c6a4c49bdc1574de459a0278ab87", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/ErrorsTests.java", "file_blob_sha": null, "method_name": "readValueDeserializesJson", "signature": null, "start_line": 35, "end_line": 46, "nloc": 12, "method_source_normalized": "@TestvoidreadValueDeserializesJson()throws Exception{\n\t\tErrors errors = getObjectMapper().readValue(getContent(\"errors.json\"), Errors.class);\n\t\tIterator<Error> iterator = errors.iterator();\n\t\tError error1 = iterator.next();\n\t\tError error2 = iterator.next();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t\tassertThat(error1.getCode()).isEqualTo(\"TEST1\");\n\t\tassertThat(error1.getMessage()).isEqualTo(\"Test One\");\n\t\tassertThat(error2.getCode()).isEqualTo(\"TEST2\");\n\t\tassertThat(error2.getMessage()).isEqualTo(\"Test Two\");\n\t}", "original_code": "@Test\n\tvoid readValueDeserializesJson() throws Exception {\n\t\tErrors errors = getObjectMapper().readValue(getContent(\"errors.json\"), Errors.class);\n\t\tIterator<Error> iterator = errors.iterator();\n\t\tError error1 = iterator.next();\n\t\tError error2 = iterator.next();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t\tassertThat(error1.getCode()).isEqualTo(\"TEST1\");\n\t\tassertThat(error1.getMessage()).isEqualTo(\"Test One\");\n\t\tassertThat(error2.getCode()).isEqualTo(\"TEST2\");\n\t\tassertThat(error2.getMessage()).isEqualTo(\"Test Two\");\n\t}", "code_tokens": ["@", "test", "void", "read", "value", "deserializes", "json", "(", ")", "throws", "exception", "{", "errors", "errors", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "errors", ".", "class", ")", ";", "iterator", "<", "error", ">", "iterator", "=", "errors", ".", "iterator", "(", ")", ";", "error", "error", "1", "=", "iterator", ".", "next", "(", ")", ";", "error", "error", "2", "=", "iterator", ".", "next", "(", ")", ";", "assert", "that", "(", "iterator", ".", "has", "next", "(", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "error", "1", ".", "get", "code", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "error", "1", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "error", "2", ".", "get", "code", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "error", "2", ".", "get", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 160, "vocab_size": 40, "cyclomatic_complexity": 1, "ast_node_count": 192, "n_identifiers": 43, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 50, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.901989+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bef104ef4ceef205d069ab53000878196497adc6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/ErrorsTests.java", "file_blob_sha": null, "method_name": "toStringHasErrorDetails", "signature": null, "start_line": 48, "end_line": 52, "nloc": 5, "method_source_normalized": "@TestvoidtoStringHasErrorDetails()throws Exception{\n\t\tErrors errors = getObjectMapper().readValue(getContent(\"errors.json\"), Errors.class);\n\t\tassertThat(errors).hasToString(\"[TEST1: Test One, TEST2: Test Two]\");\n\t}", "original_code": "@Test\n\tvoid toStringHasErrorDetails() throws Exception {\n\t\tErrors errors = getObjectMapper().readValue(getContent(\"errors.json\"), Errors.class);\n\t\tassertThat(errors).hasToString(\"[TEST1: Test One, TEST2: Test Two]\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "has", "error", "details", "(", ")", "throws", "exception", "{", "errors", "errors", "=", "get", "object", "mapper", "(", ")", ".", "read", "value", "(", "get", "content", "(", "__STR__", ")", ",", "errors", ".", "class", ")", ";", "assert", "that", "(", "errors", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 59, "n_identifiers": 13, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.902270+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c7f4cb92e6164ef3127565c2609501b6c883e66f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenHostIsNullThrowsException", "signature": null, "start_line": 35, "end_line": 39, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenHostIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new DockerConnectionException(null, null))\n\t\t\t.withMessage(\"'host' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenHostIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new DockerConnectionException(null, null))\n\t\t\t.withMessage(\"'host' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "host", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "docker", "connection", "exception", "(", "null", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 6, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.903039+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a62ba3bb59bcdbba769c79d0a7f901154bb9a25d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionExceptionTests.java", "file_blob_sha": null, "method_name": "createWhenCauseIsNullThrowsException", "signature": null, "start_line": 41, "end_line": 45, "nloc": 5, "method_source_normalized": "@TestvoidcreateWhenCauseIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new DockerConnectionException(HOST, null))\n\t\t\t.withMessage(\"'cause' must not be null\");\n\t}", "original_code": "@Test\n\tvoid createWhenCauseIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> new DockerConnectionException(HOST, null))\n\t\t\t.withMessage(\"'cause' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "create", "when", "cause", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "new", "docker", "connection", "exception", "(", "host", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 47, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.903316+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "edbbed3242b3d82889fcb79012e2246d71c9f4c2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionExceptionTests.java", "file_blob_sha": null, "method_name": "createWithIOException", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "@TestvoidcreateWithIOException(){\n\t\tDockerConnectionException exception = new DockerConnectionException(HOST, new IOException(\"error\"));\n\t\tassertThat(exception.getMessage())\n\t\t\t.contains(\"Connection to the Docker daemon at 'docker://localhost/' failed with error \\\"error\\\"\");\n\t}", "original_code": "@Test\n\tvoid createWithIOException() {\n\t\tDockerConnectionException exception = new DockerConnectionException(HOST, new IOException(\"error\"));\n\t\tassertThat(exception.getMessage())\n\t\t\t.contains(\"Connection to the Docker daemon at 'docker://localhost/' failed with error \\\"error\\\"\");\n\t}", "code_tokens": ["@", "test", "void", "create", "with", "io", "exception", "(", ")", "{", "docker", "connection", "exception", "exception", "=", "new", "docker", "connection", "exception", "(", "host", ",", "new", "io", "exception", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.903577+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "55686c3f75c5fdfad9f5e777ea19dcd2b917d79e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/transport/DockerConnectionExceptionTests.java", "file_blob_sha": null, "method_name": "createWithLastErrorException", "signature": null, "start_line": 54, "end_line": 60, "nloc": 7, "method_source_normalized": "@TestvoidcreateWithLastErrorException(){\n\t\tDockerConnectionException exception = new DockerConnectionException(HOST,\n\t\t\t\tnew IOException(new com.sun.jna.LastErrorException(\"root cause\")));\n\t\tassertThat(exception.getMessage())\n\t\t\t.contains(\"Connection to the Docker daemon at 'docker://localhost/' failed with error \\\"root cause\\\"\");\n\t}", "original_code": "@Test\n\tvoid createWithLastErrorException() {\n\t\tDockerConnectionException exception = new DockerConnectionException(HOST,\n\t\t\t\tnew IOException(new com.sun.jna.LastErrorException(\"root cause\")));\n\t\tassertThat(exception.getMessage())\n\t\t\t.contains(\"Connection to the Docker daemon at 'docker://localhost/' failed with error \\\"root cause\\\"\");\n\t}", "code_tokens": ["@", "test", "void", "create", "with", "last", "error", "exception", "(", ")", "{", "docker", "connection", "exception", "exception", "=", "new", "docker", "connection", "exception", "(", "host", ",", "new", "io", "exception", "(", "new", "com", ".", "sun", ".", "jna", ".", "last", "error", "exception", "(", "__STR__", ")", ")", ")", ";", "assert", "that", "(", "exception", ".", "get", "message", "(", ")", ")", ".", "contains", "(", "__STR__", ")", ";", "}"], "token_count": 60, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 15, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.903858+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8876bc6a63500b689cb41a5bd5ec7ce8a37c981f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getConfigEnvContainsParsedValues", "signature": null, "start_line": 37, "end_line": 44, "nloc": 8, "method_source_normalized": "@TestvoidgetConfigEnvContainsParsedValues()throws Exception{\n\t\tImage image = getImage();\n\t\tMap<String, String> env = image.getConfig().getEnv();\n\t\tassertThat(env).contains(entry(\"PATH\", \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"),\n\t\t\t\tentry(\"CNB_USER_ID\", \"2000\"), entry(\"CNB_GROUP_ID\", \"2000\"),\n\t\t\t\tentry(\"CNB_STACK_ID\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "original_code": "@Test\n\tvoid getConfigEnvContainsParsedValues() throws Exception {\n\t\tImage image = getImage();\n\t\tMap<String, String> env = image.getConfig().getEnv();\n\t\tassertThat(env).contains(entry(\"PATH\", \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"),\n\t\t\t\tentry(\"CNB_USER_ID\", \"2000\"), entry(\"CNB_GROUP_ID\", \"2000\"),\n\t\t\t\tentry(\"CNB_STACK_ID\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "code_tokens": ["@", "test", "void", "get", "config", "env", "contains", "parsed", "values", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "image", ".", "get", "config", "(", ")", ".", "get", "env", "(", ")", ";", "assert", "that", "(", "env", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 80, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 102, "n_identifiers": 20, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 39, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.905172+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c575ff46914b77fcb57ee3b6d33ed00946d75c79", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getConfigLabelsReturnsLabels", "signature": null, "start_line": 46, "end_line": 51, "nloc": 6, "method_source_normalized": "@TestvoidgetConfigLabelsReturnsLabels()throws Exception{\n\t\tImage image = getImage();\n\t\tMap<String, String> labels = image.getConfig().getLabels();\n\t\tassertThat(labels).contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "original_code": "@Test\n\tvoid getConfigLabelsReturnsLabels() throws Exception {\n\t\tImage image = getImage();\n\t\tMap<String, String> labels = image.getConfig().getLabels();\n\t\tassertThat(labels).contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "code_tokens": ["@", "test", "void", "get", "config", "labels", "returns", "labels", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "map", "<", "string", ",", "string", ">", "labels", "=", "image", ".", "get", "config", "(", ")", ".", "get", "labels", "(", ")", ";", "assert", "that", "(", "labels", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 58, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 75, "n_identifiers": 17, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.905462+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "12357e47a9f7e80b05caf9240f7a960cace3070f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getLayersReturnsImageLayers", "signature": null, "start_line": 53, "end_line": 62, "nloc": 10, "method_source_normalized": "@TestvoidgetLayersReturnsImageLayers()throws Exception{\n\t\tImage image = getImage();\n\t\tList<LayerId> layers = image.getLayers();\n\t\tassertThat(layers).hasSize(46);\n\t\tassertThat(layers.get(0))\n\t\t\t.hasToString(\"sha256:733a8e5ce32984099ef675fce04730f6e2a6dcfdf5bd292fea01a8f936265342\");\n\t\tassertThat(layers.get(45))\n\t\t\t.hasToString(\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n\t}", "original_code": "@Test\n\tvoid getLayersReturnsImageLayers() throws Exception {\n\t\tImage image = getImage();\n\t\tList<LayerId> layers = image.getLayers();\n\t\tassertThat(layers).hasSize(46);\n\t\tassertThat(layers.get(0))\n\t\t\t.hasToString(\"sha256:733a8e5ce32984099ef675fce04730f6e2a6dcfdf5bd292fea01a8f936265342\");\n\t\tassertThat(layers.get(45))\n\t\t\t.hasToString(\"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n\t}", "code_tokens": ["@", "test", "void", "get", "layers", "returns", "image", "layers", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "list", "<", "layer", "id", ">", "layers", "=", "image", ".", "get", "layers", "(", ")", ";", "assert", "that", "(", "layers", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "layers", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "layers", ".", "get", "(", "__NUM__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 84, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 104, "n_identifiers": 22, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.905778+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "646f3ce4301b938c6c268051bfd3fe6b869cb866", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getOsReturnsOs", "signature": null, "start_line": 64, "end_line": 68, "nloc": 5, "method_source_normalized": "@TestvoidgetOsReturnsOs()throws Exception{\n\t\tImage image = getImage();\n\t\tassertThat(image.getOs()).isEqualTo(\"linux\");\n\t}", "original_code": "@Test\n\tvoid getOsReturnsOs() throws Exception {\n\t\tImage image = getImage();\n\t\tassertThat(image.getOs()).isEqualTo(\"linux\");\n\t}", "code_tokens": ["@", "test", "void", "get", "os", "returns", "os", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "assert", "that", "(", "image", ".", "get", "os", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.906043+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2be54411e14fd81b75367464beeb02fdb2b6d674", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getOsWhenOsIsNotDefaultOsReturnsOs", "signature": null, "start_line": 70, "end_line": 74, "nloc": 5, "method_source_normalized": "@TestvoidgetOsWhenOsIsNotDefaultOsReturnsOs()throws Exception{\n\t\tImage image = Image.of(getContent(\"image-non-default-os.json\"));\n\t\tassertThat(image.getOs()).isEqualTo(\"windows\");\n\t}", "original_code": "@Test\n\tvoid getOsWhenOsIsNotDefaultOsReturnsOs() throws Exception {\n\t\tImage image = Image.of(getContent(\"image-non-default-os.json\"));\n\t\tassertThat(image.getOs()).isEqualTo(\"windows\");\n\t}", "code_tokens": ["@", "test", "void", "get", "os", "when", "os", "is", "not", "default", "os", "returns", "os", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "image", ".", "get", "os", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 51, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.906289+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "feca3a9c44cc383805a6bf14a13b54ed293be40d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getOsWhenOsIsEmptyReturnsDefaultOs", "signature": null, "start_line": 76, "end_line": 80, "nloc": 5, "method_source_normalized": "@TestvoidgetOsWhenOsIsEmptyReturnsDefaultOs()throws Exception{\n\t\tImage image = Image.of(getContent(\"image-empty-os.json\"));\n\t\tassertThat(image.getOs()).isEqualTo(\"linux\");\n\t}", "original_code": "@Test\n\tvoid getOsWhenOsIsEmptyReturnsDefaultOs() throws Exception {\n\t\tImage image = Image.of(getContent(\"image-empty-os.json\"));\n\t\tassertThat(image.getOs()).isEqualTo(\"linux\");\n\t}", "code_tokens": ["@", "test", "void", "get", "os", "when", "os", "is", "empty", "returns", "default", "os", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "image", ".", "get", "os", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.906543+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f4a70ec7df18ca1f6de457bfbc807088b6eeaa2a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getArchitectureReturnsArchitecture", "signature": null, "start_line": 82, "end_line": 86, "nloc": 5, "method_source_normalized": "@TestvoidgetArchitectureReturnsArchitecture()throws Exception{\n\t\tImage image = getImage();\n\t\tassertThat(image.getArchitecture()).isEqualTo(\"amd64\");\n\t}", "original_code": "@Test\n\tvoid getArchitectureReturnsArchitecture() throws Exception {\n\t\tImage image = getImage();\n\t\tassertThat(image.getArchitecture()).isEqualTo(\"amd64\");\n\t}", "code_tokens": ["@", "test", "void", "get", "architecture", "returns", "architecture", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "assert", "that", "(", "image", ".", "get", "architecture", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.906922+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a7fd9fb37a8a75207a9ef4596e0bff73683c458e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getVariantReturnsVariant", "signature": null, "start_line": 88, "end_line": 92, "nloc": 5, "method_source_normalized": "@TestvoidgetVariantReturnsVariant()throws Exception{\n\t\tImage image = getImage();\n\t\tassertThat(image.getVariant()).isEqualTo(\"v1\");\n\t}", "original_code": "@Test\n\tvoid getVariantReturnsVariant() throws Exception {\n\t\tImage image = getImage();\n\t\tassertThat(image.getVariant()).isEqualTo(\"v1\");\n\t}", "code_tokens": ["@", "test", "void", "get", "variant", "returns", "variant", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "assert", "that", "(", "image", ".", "get", "variant", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.907177+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "34581bde17753e776540aa2818edbdf304a2dbf3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getCreatedReturnsDate", "signature": null, "start_line": 94, "end_line": 98, "nloc": 5, "method_source_normalized": "@TestvoidgetCreatedReturnsDate()throws Exception{\n\t\tImage image = getImage();\n\t\tassertThat(image.getCreated()).isEqualTo(\"2019-10-30T19:34:56.296666503Z\");\n\t}", "original_code": "@Test\n\tvoid getCreatedReturnsDate() throws Exception {\n\t\tImage image = getImage();\n\t\tassertThat(image.getCreated()).isEqualTo(\"2019-10-30T19:34:56.296666503Z\");\n\t}", "code_tokens": ["@", "test", "void", "get", "created", "returns", "date", "(", ")", "throws", "exception", "{", "image", "image", "=", "get", "image", "(", ")", ";", "assert", "that", "(", "image", ".", "get", "created", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 39, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.907424+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ce8eb72bcc96d168e6e66d544962040e43893d0a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageTests.java", "file_blob_sha": null, "method_name": "getImage", "signature": null, "start_line": 100, "end_line": 102, "nloc": 3, "method_source_normalized": "privateImagegetImage()throws IOException{\n\t\treturn Image.of(getContent(\"image.json\"));\n\t}", "original_code": "private Image getImage() throws IOException {\n\t\treturn Image.of(getContent(\"image.json\"));\n\t}", "code_tokens": ["private", "image", "get", "image", "(", ")", "throws", "io", "exception", "{", "return", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.907667+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a0beda06bbc9f8d9a5d4a3dc26f7d54f413e02ed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ManifestListTests.java", "file_blob_sha": null, "method_name": "loadJsonFromDistributionManifestList", "signature": null, "start_line": 32, "end_line": 39, "nloc": 8, "method_source_normalized": "@TestvoidloadJsonFromDistributionManifestList(){\n\t\tString content = getContentAsString(\"distribution-manifest-list.json\");\n\t\tManifestList manifestList = getManifestList(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.list.v2+json\");\n\t\tassertThat(manifestList.getManifests()).hasSize(2);\n\t}", "original_code": "@Test\n\tvoid loadJsonFromDistributionManifestList() {\n\t\tString content = getContentAsString(\"distribution-manifest-list.json\");\n\t\tManifestList manifestList = getManifestList(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.list.v2+json\");\n\t\tassertThat(manifestList.getManifests()).hasSize(2);\n\t}", "code_tokens": ["@", "test", "void", "load", "json", "from", "distribution", "manifest", "list", "(", ")", "{", "string", "content", "=", "get", "content", "as", "string", "(", "__STR__", ")", ";", "manifest", "list", "manifest", "list", "=", "get", "manifest", "list", "(", "content", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "schema", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "media", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "manifests", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "}"], "token_count": 94, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.908336+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "066f62bf49c4b87f3f6b242e8f0b325fbedebc23", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ManifestListTests.java", "file_blob_sha": null, "method_name": "getManifestList", "signature": null, "start_line": 41, "end_line": 43, "nloc": 3, "method_source_normalized": "privateManifestListgetManifestList(String content){\n\t\treturn new ManifestList(getObjectMapper().readTree(content));\n\t}", "original_code": "private ManifestList getManifestList(String content) {\n\t\treturn new ManifestList(getObjectMapper().readTree(content));\n\t}", "code_tokens": ["private", "manifest", "list", "get", "manifest", "list", "(", "string", "content", ")", "{", "return", "new", "manifest", "list", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "content", ")", ")", ";", "}"], "token_count": 30, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.908607+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9a8594127a7f2841a0fe6b3910752a3e9162e28c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ManifestTests.java", "file_blob_sha": null, "method_name": "loadJsonFromDistributionManifest", "signature": null, "start_line": 32, "end_line": 39, "nloc": 8, "method_source_normalized": "@TestvoidloadJsonFromDistributionManifest(){\n\t\tString content = getContentAsString(\"distribution-manifest.json\");\n\t\tManifest manifestList = getManifest(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.v2+json\");\n\t\tassertThat(manifestList.getLayers()).hasSize(1);\n\t}", "original_code": "@Test\n\tvoid loadJsonFromDistributionManifest() {\n\t\tString content = getContentAsString(\"distribution-manifest.json\");\n\t\tManifest manifestList = getManifest(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.v2+json\");\n\t\tassertThat(manifestList.getLayers()).hasSize(1);\n\t}", "code_tokens": ["@", "test", "void", "load", "json", "from", "distribution", "manifest", "(", ")", "{", "string", "content", "=", "get", "content", "as", "string", "(", "__STR__", ")", ";", "manifest", "manifest", "list", "=", "get", "manifest", "(", "content", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "schema", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "media", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "}"], "token_count": 91, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.909378+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f5b6284afcef81649d9f128058fa430479fafae7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ManifestTests.java", "file_blob_sha": null, "method_name": "loadJsonFromImageManifest", "signature": null, "start_line": 41, "end_line": 48, "nloc": 8, "method_source_normalized": "@TestvoidloadJsonFromImageManifest(){\n\t\tString content = getContentAsString(\"image-manifest.json\");\n\t\tManifest manifestList = getManifest(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.oci.image.manifest.v1+json\");\n\t\tassertThat(manifestList.getLayers()).hasSize(1);\n\t}", "original_code": "@Test\n\tvoid loadJsonFromImageManifest() {\n\t\tString content = getContentAsString(\"image-manifest.json\");\n\t\tManifest manifestList = getManifest(content);\n\t\tassertThat(manifestList.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(manifestList.getMediaType()).isEqualTo(\"application/vnd.oci.image.manifest.v1+json\");\n\t\tassertThat(manifestList.getLayers()).hasSize(1);\n\t}", "code_tokens": ["@", "test", "void", "load", "json", "from", "image", "manifest", "(", ")", "{", "string", "content", "=", "get", "content", "as", "string", "(", "__STR__", ")", ";", "manifest", "manifest", "list", "=", "get", "manifest", "(", "content", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "schema", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "media", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "manifest", "list", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "}"], "token_count": 91, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 100, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.909687+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9ac9dd19803e0ad49833225f3ad96aafef97a389", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ManifestTests.java", "file_blob_sha": null, "method_name": "getManifest", "signature": null, "start_line": 50, "end_line": 52, "nloc": 3, "method_source_normalized": "privateManifestgetManifest(String content){\n\t\treturn new Manifest(getObjectMapper().readTree(content));\n\t}", "original_code": "private Manifest getManifest(String content) {\n\t\treturn new Manifest(getObjectMapper().readTree(content));\n\t}", "code_tokens": ["private", "manifest", "get", "manifest", "(", "string", "content", ")", "{", "return", "new", "manifest", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "content", ")", ")", ";", "}"], "token_count": 27, "vocab_size": 17, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.909942+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c2e642d2617495e5b133e457c9cd618f5d3023cc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContentTests.java", "file_blob_sha": null, "method_name": "ofWhenArchiveIsNullThrowsException", "signature": null, "start_line": 34, "end_line": 38, "nloc": 5, "method_source_normalized": "@TestvoidofWhenArchiveIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(null))\n\t\t\t.withMessage(\"'archive' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenArchiveIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(null))\n\t\t\t.withMessage(\"'archive' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "archive", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "content", ".", "of", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.910849+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e2cedf5dbceb7839f17493708bbe26e3ffaa93fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContentTests.java", "file_blob_sha": null, "method_name": "ofWhenDestinationPathIsNullThrowsException", "signature": null, "start_line": 40, "end_line": 45, "nloc": 6, "method_source_normalized": "@TestvoidofWhenDestinationPathIsNullThrowsException(){\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(archive, null))\n\t\t\t.withMessage(\"'destinationPath' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenDestinationPathIsNullThrowsException() {\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(archive, null))\n\t\t\t.withMessage(\"'destinationPath' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "destination", "path", "is", "null", "throws", "exception", "(", ")", "{", "tar", "archive", "archive", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "content", ".", "of", "(", "archive", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 59, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 63, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.911125+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2e4e32775fdb7cdd9186385bf042cd8c194cc3fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContentTests.java", "file_blob_sha": null, "method_name": "ofWhenDestinationPathIsEmptyThrowsException", "signature": null, "start_line": 47, "end_line": 52, "nloc": 6, "method_source_normalized": "@TestvoidofWhenDestinationPathIsEmptyThrowsException(){\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(archive, \"\"))\n\t\t\t.withMessage(\"'destinationPath' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenDestinationPathIsEmptyThrowsException() {\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerContent.of(archive, \"\"))\n\t\t\t.withMessage(\"'destinationPath' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "destination", "path", "is", "empty", "throws", "exception", "(", ")", "{", "tar", "archive", "archive", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "content", ".", "of", "(", "archive", ",", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 59, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 63, "n_identifiers": 13, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.911409+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f07e701d99c65098f3128501c24ccd4c5a0c90f2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContentTests.java", "file_blob_sha": null, "method_name": "ofCreatesContainerContent", "signature": null, "start_line": 54, "end_line": 60, "nloc": 7, "method_source_normalized": "@TestvoidofCreatesContainerContent(){\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tContainerContent content = ContainerContent.of(archive);\n\t\tassertThat(content.getArchive()).isSameAs(archive);\n\t\tassertThat(content.getDestinationPath()).isEqualTo(\"/\");\n\t}", "original_code": "@Test\n\tvoid ofCreatesContainerContent() {\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tContainerContent content = ContainerContent.of(archive);\n\t\tassertThat(content.getArchive()).isSameAs(archive);\n\t\tassertThat(content.getDestinationPath()).isEqualTo(\"/\");\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "container", "content", "(", ")", "{", "tar", "archive", "archive", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "container", "content", "content", "=", "container", "content", ".", "of", "(", "archive", ")", ";", "assert", "that", "(", "content", ".", "get", "archive", "(", ")", ")", ".", "is", "same", "as", "(", "archive", ")", ";", "assert", "that", "(", "content", ".", "get", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 72, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.911695+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7ac7e79559528c43953994b8c9a13efa561003e4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerContentTests.java", "file_blob_sha": null, "method_name": "ofWithDestinationPathCreatesContainerContent", "signature": null, "start_line": 62, "end_line": 68, "nloc": 7, "method_source_normalized": "@TestvoidofWithDestinationPathCreatesContainerContent(){\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tContainerContent content = ContainerContent.of(archive, \"/test\");\n\t\tassertThat(content.getArchive()).isSameAs(archive);\n\t\tassertThat(content.getDestinationPath()).isEqualTo(\"/test\");\n\t}", "original_code": "@Test\n\tvoid ofWithDestinationPathCreatesContainerContent() {\n\t\tTarArchive archive = mock(TarArchive.class);\n\t\tContainerContent content = ContainerContent.of(archive, \"/test\");\n\t\tassertThat(content.getArchive()).isSameAs(archive);\n\t\tassertThat(content.getDestinationPath()).isEqualTo(\"/test\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "destination", "path", "creates", "container", "content", "(", ")", "{", "tar", "archive", "archive", "=", "mock", "(", "tar", "archive", ".", "class", ")", ";", "container", "content", "content", "=", "container", "content", ".", "of", "(", "archive", ",", "__STR__", ")", ";", "assert", "that", "(", "content", ".", "get", "archive", "(", ")", ")", ".", "is", "same", "as", "(", "archive", ")", ";", "assert", "that", "(", "content", ".", "get", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 77, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 86, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.911996+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cc5b8b86fab8e05ee9dcaaa45ca792ffe8c53e6e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatusTests.java", "file_blob_sha": null, "method_name": "ofCreatesFromJson", "signature": null, "start_line": 32, "end_line": 37, "nloc": 6, "method_source_normalized": "@TestvoidofCreatesFromJson()throws IOException{\n\t\tContainerStatus status = ContainerStatus.of(getClass().getResourceAsStream(\"container-status-error.json\"));\n\t\tassertThat(status.getStatusCode()).isOne();\n\t\tassertThat(status.getWaitingErrorMessage()).isEqualTo(\"error detail\");\n\t}", "original_code": "@Test\n\tvoid ofCreatesFromJson() throws IOException {\n\t\tContainerStatus status = ContainerStatus.of(getClass().getResourceAsStream(\"container-status-error.json\"));\n\t\tassertThat(status.getStatusCode()).isOne();\n\t\tassertThat(status.getWaitingErrorMessage()).isEqualTo(\"error detail\");\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "from", "json", "(", ")", "throws", "io", "exception", "{", "container", "status", "status", "=", "container", "status", ".", "of", "(", "get", "class", "(", ")", ".", "get", "resource", "as", "stream", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "status", ".", "get", "status", "code", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "status", ".", "get", "waiting", "error", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 74, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 82, "n_identifiers": 17, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.912892+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b1d9e148500ce9af2b8d70a70dfec36b3ffedb27", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatusTests.java", "file_blob_sha": null, "method_name": "ofCreatesFromValues", "signature": null, "start_line": 39, "end_line": 44, "nloc": 6, "method_source_normalized": "@TestvoidofCreatesFromValues(){\n\t\tContainerStatus status = ContainerStatus.of(1, \"error detail\");\n\t\tassertThat(status.getStatusCode()).isOne();\n\t\tassertThat(status.getWaitingErrorMessage()).isEqualTo(\"error detail\");\n\t}", "original_code": "@Test\n\tvoid ofCreatesFromValues() {\n\t\tContainerStatus status = ContainerStatus.of(1, \"error detail\");\n\t\tassertThat(status.getStatusCode()).isOne();\n\t\tassertThat(status.getWaitingErrorMessage()).isEqualTo(\"error detail\");\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "from", "values", "(", ")", "{", "container", "status", "status", "=", "container", "status", ".", "of", "(", "__NUM__", ",", "__STR__", ")", ";", "assert", "that", "(", "status", ".", "get", "status", "code", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "status", ".", "get", "waiting", "error", "message", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 62, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 70, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.913201+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4aac00489bc2e41d2e9643c15f3803e23f751dc8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameOnlyCreatesImageName", "signature": null, "start_line": 32, "end_line": 38, "nloc": 7, "method_source_normalized": "@TestvoidofWhenNameOnlyCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameOnlyCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "only", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.915226+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "302e9b397f031dea48feec13f49bac94e03933b9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenSlashedNameCreatesImageName", "signature": null, "start_line": 40, "end_line": 46, "nloc": 7, "method_source_normalized": "@TestvoidofWhenSlashedNameCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenSlashedNameCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "slashed", "name", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.915541+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2cf610b32e96ca318e0edadbd10a64dd3ce33a94", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenLocalhostNameCreatesImageName", "signature": null, "start_line": 48, "end_line": 54, "nloc": 7, "method_source_normalized": "@TestvoidofWhenLocalhostNameCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"localhost/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"localhost/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenLocalhostNameCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"localhost/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"localhost/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "localhost", "name", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.915842+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "beb7c3beee8650bbe86f48526c586befa8d1eeab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenDomainAndNameCreatesImageName", "signature": null, "start_line": 56, "end_line": 62, "nloc": 7, "method_source_normalized": "@TestvoidofWhenDomainAndNameCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"repo.spring.io/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo.spring.io/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo.spring.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenDomainAndNameCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"repo.spring.io/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo.spring.io/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo.spring.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "domain", "and", "name", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 80, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.916148+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9bfe7e15f189f2dfa2d02fb3827f1000b65f5fe7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenDomainNameAndPortCreatesImageName", "signature": null, "start_line": 64, "end_line": 70, "nloc": 7, "method_source_normalized": "@TestvoidofWhenDomainNameAndPortCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"repo.spring.io:8080/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo.spring.io:8080/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo.spring.io:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenDomainNameAndPortCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"repo.spring.io:8080/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo.spring.io:8080/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo.spring.io:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "domain", "name", "and", "port", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 81, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.916449+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dfddc521b3e1c101624b7d6e662440dc97089544", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenSimpleNameAndPortCreatesImageName", "signature": null, "start_line": 72, "end_line": 78, "nloc": 7, "method_source_normalized": "@TestvoidofWhenSimpleNameAndPortCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"repo:8080/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo:8080/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenSimpleNameAndPortCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"repo:8080/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo:8080/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "simple", "name", "and", "port", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 81, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.916755+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99f91045f1fd7af574e31813847a6a1aa60d9711", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenSimplePathAndPortCreatesImageName", "signature": null, "start_line": 80, "end_line": 86, "nloc": 7, "method_source_normalized": "@TestvoidofWhenSimplePathAndPortCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"repo:8080/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo:8080/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenSimplePathAndPortCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"repo:8080/canonical/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"repo:8080/canonical/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"repo:8080\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"canonical/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "simple", "path", "and", "port", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 81, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.917047+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f3e6231c70398201c6bcea902ef956f4d55b8d9a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameWithLongPathCreatesImageName", "signature": null, "start_line": 88, "end_line": 94, "nloc": 7, "method_source_normalized": "@TestvoidofWhenNameWithLongPathCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"path1/path2/path3/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/path1/path2/path3/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"path1/path2/path3/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameWithLongPathCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"path1/path2/path3/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/path1/path2/path3/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"path1/path2/path3/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "with", "long", "path", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 81, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.917348+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0598ccbaa72340225718d70cb7e84dc56302651d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenLocalhostDomainCreatesImageName", "signature": null, "start_line": 96, "end_line": 101, "nloc": 6, "method_source_normalized": "@TestvoidofWhenLocalhostDomainCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"localhost/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenLocalhostDomainCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"localhost/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "localhost", "domain", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 65, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 69, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.917631+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e794c1652e1ef082e10c36f6274e4471a63dfec9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenLocalhostDomainAndPathCreatesImageName", "signature": null, "start_line": 103, "end_line": 108, "nloc": 6, "method_source_normalized": "@TestvoidofWhenLocalhostDomainAndPathCreatesImageName(){\n\t\tImageName imageName = ImageName.of(\"localhost/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenLocalhostDomainAndPathCreatesImageName() {\n\t\tImageName imageName = ImageName.of(\"localhost/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"localhost\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "localhost", "domain", "and", "path", "creates", "image", "name", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 67, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 69, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.917944+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a52f404c42623c714da0c5d99550d08680fbf426", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenLegacyDomainUsesNewDomain", "signature": null, "start_line": 110, "end_line": 116, "nloc": 7, "method_source_normalized": "@TestvoidofWhenLegacyDomainUsesNewDomain(){\n\t\tImageName imageName = ImageName.of(\"index.docker.io/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofWhenLegacyDomainUsesNewDomain() {\n\t\tImageName imageName = ImageName.of(\"index.docker.io/ubuntu\");\n\t\tassertThat(imageName).hasToString(\"docker.io/library/ubuntu\");\n\t\tassertThat(imageName.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(imageName.getName()).isEqualTo(\"library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "legacy", "domain", "uses", "new", "domain", "(", ")", "{", "image", "name", "image", "name", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "image", "name", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 79, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.918236+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b2293f6489e06274cf21d1952d37a40637627e23", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameIsNullThrowsException", "signature": null, "start_line": 118, "end_line": 122, "nloc": 5, "method_source_normalized": "@TestvoidofWhenNameIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "name", ".", "of", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.918509+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "71a307877872e2d0a90b45a3f4be8c53a1ffe407", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameIsEmptyThrowsException", "signature": null, "start_line": 124, "end_line": 128, "nloc": 5, "method_source_normalized": "@TestvoidofWhenNameIsEmptyThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameIsEmptyThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "is", "empty", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "name", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.918769+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bc29c15574a91ac48b43db49ffce4aaa11d15211", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenContainsUppercaseThrowsException", "signature": null, "start_line": 130, "end_line": 135, "nloc": 6, "method_source_normalized": "@TestvoidofWhenContainsUppercaseThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"Test\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\"Test\");\n\t}", "original_code": "@Test\n\tvoid ofWhenContainsUppercaseThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"Test\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\"Test\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "contains", "uppercase", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "name", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 51, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.919047+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a1820120890a937f1bb4f643e5fe5778008c92c4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameIncludesTagThrowsException", "signature": null, "start_line": 137, "end_line": 142, "nloc": 6, "method_source_normalized": "@TestvoidofWhenNameIncludesTagThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"ubuntu:latest\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\":latest\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameIncludesTagThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageName.of(\"ubuntu:latest\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\":latest\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "includes", "tag", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "name", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.919314+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bde4e0b9191534c6f046edcf4fc84e0ed9608d75", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "ofWhenNameIncludeDigestThrowsException", "signature": null, "start_line": 144, "end_line": 150, "nloc": 7, "method_source_normalized": "@TestvoidofWhenNameIncludeDigestThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(\n\t\t\t\t() -> ImageName.of(\"ubuntu@sha256:47bfdb88c3ae13e488167607973b7688f69d9e8c142c2045af343ec199649c09\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\"@sha256:47b\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNameIncludeDigestThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(\n\t\t\t\t() -> ImageName.of(\"ubuntu@sha256:47bfdb88c3ae13e488167607973b7688f69d9e8c142c2045af343ec199649c09\"))\n\t\t\t.withMessageContaining(\"must be a parsable name\")\n\t\t\t.withMessageContaining(\"@sha256:47b\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "name", "include", "digest", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "name", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.919604+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e8e260b87ab66243b9772ca90729ab6086249b76", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageNameTests.java", "file_blob_sha": null, "method_name": "hashCodeAndEquals", "signature": null, "start_line": 152, "end_line": 162, "nloc": 11, "method_source_normalized": "@TestvoidhashCodeAndEquals(){\n\t\tImageName n1 = ImageName.of(\"ubuntu\");\n\t\tImageName n2 = ImageName.of(\"library/ubuntu\");\n\t\tImageName n3 = ImageName.of(\"docker.io/ubuntu\");\n\t\tImageName n4 = ImageName.of(\"docker.io/library/ubuntu\");\n\t\tImageName n5 = ImageName.of(\"index.docker.io/library/ubuntu\");\n\t\tImageName n6 = ImageName.of(\"alpine\");\n\t\tassertThat(n1).hasSameHashCodeAs(n2).hasSameHashCodeAs(n3).hasSameHashCodeAs(n4).hasSameHashCodeAs(n5);\n\t\tassertThat(n1).isEqualTo(n1).isEqualTo(n2).isEqualTo(n3).isEqualTo(n4).isNotEqualTo(n6);\n\t}", "original_code": "@Test\n\tvoid hashCodeAndEquals() {\n\t\tImageName n1 = ImageName.of(\"ubuntu\");\n\t\tImageName n2 = ImageName.of(\"library/ubuntu\");\n\t\tImageName n3 = ImageName.of(\"docker.io/ubuntu\");\n\t\tImageName n4 = ImageName.of(\"docker.io/library/ubuntu\");\n\t\tImageName n5 = ImageName.of(\"index.docker.io/library/ubuntu\");\n\t\tImageName n6 = ImageName.of(\"alpine\");\n\t\tassertThat(n1).hasSameHashCodeAs(n2).hasSameHashCodeAs(n3).hasSameHashCodeAs(n4).hasSameHashCodeAs(n5);\n\t\tassertThat(n1).isEqualTo(n1).isEqualTo(n2).isEqualTo(n3).isEqualTo(n4).isNotEqualTo(n6);\n\t}", "code_tokens": ["@", "test", "void", "hash", "code", "and", "equals", "(", ")", "{", "image", "name", "n", "1", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "image", "name", "n", "2", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "image", "name", "n", "3", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "image", "name", "n", "4", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "image", "name", "n", "5", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "image", "name", "n", "6", "=", "image", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "n", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "n", "2", ")", ".", "has", "same", "hash", "code", "as", "(", "n", "3", ")", ".", "has", "same", "hash", "code", "as", "(", "n", "4", ")", ".", "has", "same", "hash", "code", "as", "(", "n", "5", ")", ";", "assert", "that", "(", "n", "1", ")", ".", "is", "equal", "to", "(", "n", "1", ")", ".", "is", "equal", "to", "(", "n", "2", ")", ".", "is", "equal", "to", "(", "n", "3", ")", ".", "is", "equal", "to", "(", "n", "4", ")", ".", "is", "not", "equal", "to", "(", "n", "6", ")", ";", "}"], "token_count": 184, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 176, "n_identifiers": 48, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 48, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.919966+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "433f974e2cd999fc4089e40585cfa49a5d0bff65", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReferenceTests.java", "file_blob_sha": null, "method_name": "ofCreatesInstance", "signature": null, "start_line": 31, "end_line": 36, "nloc": 6, "method_source_normalized": "@TestvoidofCreatesInstance(){\n\t\tContainerReference reference = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tassertThat(reference).hasToString(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t}", "original_code": "@Test\n\tvoid ofCreatesInstance() {\n\t\tContainerReference reference = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tassertThat(reference).hasToString(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "instance", "(", ")", "{", "container", "reference", "reference", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.920781+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5e5c548aae7ce12fe0589c2c16675c96cd389f16", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenNullThrowsException", "signature": null, "start_line": 38, "end_line": 42, "nloc": 5, "method_source_normalized": "@TestvoidofWhenNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerReference.of(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerReference.of(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "reference", ".", "of", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.921048+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b6b2092982ce6ecb436ff62fdc72caca12d45f4d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenEmptyThrowsException", "signature": null, "start_line": 44, "end_line": 48, "nloc": 5, "method_source_normalized": "@TestvoidofWhenEmptyThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerReference.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenEmptyThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerReference.of(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "empty", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.921323+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3211eea6a4153f68fcaa490dbe59dbc3bfab1c7c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerReferenceTests.java", "file_blob_sha": null, "method_name": "hashCodeAndEquals", "signature": null, "start_line": 50, "end_line": 60, "nloc": 11, "method_source_normalized": "@TestvoidhashCodeAndEquals(){\n\t\tContainerReference r1 = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tContainerReference r2 = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tContainerReference r3 = ContainerReference\n\t\t\t.of(\"02691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tassertThat(r1).hasSameHashCodeAs(r2);\n\t\tassertThat(r1).isEqualTo(r1).isEqualTo(r2).isNotEqualTo(r3);\n\t}", "original_code": "@Test\n\tvoid hashCodeAndEquals() {\n\t\tContainerReference r1 = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tContainerReference r2 = ContainerReference\n\t\t\t.of(\"92691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tContainerReference r3 = ContainerReference\n\t\t\t.of(\"02691aec176333f7ae890de9aaeeafef11166efcaa3908edf83eb44a5c943781\");\n\t\tassertThat(r1).hasSameHashCodeAs(r2);\n\t\tassertThat(r1).isEqualTo(r1).isEqualTo(r2).isNotEqualTo(r3);\n\t}", "code_tokens": ["@", "test", "void", "hash", "code", "and", "equals", "(", ")", "{", "container", "reference", "r", "1", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "reference", "r", "2", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "reference", "r", "3", "=", "container", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "r", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "r", "2", ")", ";", "assert", "that", "(", "r", "1", ")", ".", "is", "equal", "to", "(", "r", "1", ")", ".", "is", "equal", "to", "(", "r", "2", ")", ".", "is", "not", "equal", "to", "(", "r", "3", ")", ";", "}"], "token_count": 99, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 42, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.921625+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b198be65649a38c38c4bcea8819b9d5d97447240", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofReturnsLayerId", "signature": null, "start_line": 35, "end_line": 41, "nloc": 7, "method_source_normalized": "@TestvoidofReturnsLayerId(){\n\t\tLayerId id = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tassertThat(id.getAlgorithm()).isEqualTo(\"sha256\");\n\t\tassertThat(id.getHash()).isEqualTo(\"9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tassertThat(id).hasToString(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t}", "original_code": "@Test\n\tvoid ofReturnsLayerId() {\n\t\tLayerId id = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tassertThat(id.getAlgorithm()).isEqualTo(\"sha256\");\n\t\tassertThat(id.getHash()).isEqualTo(\"9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tassertThat(id).hasToString(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t}", "code_tokens": ["@", "test", "void", "of", "returns", "layer", "id", "(", ")", "{", "layer", "id", "id", "=", "layer", "id", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "id", ".", "get", "algorithm", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "id", ".", "get", "hash", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 72, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.922847+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e27744d0d8c545848f9ac7969d52aba1b4b1a851", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "hashCodeAndEquals", "signature": null, "start_line": 43, "end_line": 50, "nloc": 8, "method_source_normalized": "@TestvoidhashCodeAndEquals(){\n\t\tLayerId id1 = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tLayerId id2 = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tLayerId id3 = LayerId.of(\"sha256:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\t\tassertThat(id1).hasSameHashCodeAs(id2);\n\t\tassertThat(id1).isEqualTo(id1).isEqualTo(id2).isNotEqualTo(id3);\n\t}", "original_code": "@Test\n\tvoid hashCodeAndEquals() {\n\t\tLayerId id1 = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tLayerId id2 = LayerId.of(\"sha256:9a183e56c86d376b408bdf922746d0a657f62b0e18c7c8f82a496b87710c576f\");\n\t\tLayerId id3 = LayerId.of(\"sha256:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\t\tassertThat(id1).hasSameHashCodeAs(id2);\n\t\tassertThat(id1).isEqualTo(id1).isEqualTo(id2).isNotEqualTo(id3);\n\t}", "code_tokens": ["@", "test", "void", "hash", "code", "and", "equals", "(", ")", "{", "layer", "id", "id", "1", "=", "layer", "id", ".", "of", "(", "__STR__", ")", ";", "layer", "id", "id", "2", "=", "layer", "id", ".", "of", "(", "__STR__", ")", ";", "layer", "id", "id", "3", "=", "layer", "id", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "id", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "id", "2", ")", ";", "assert", "that", "(", "id", "1", ")", ".", "is", "equal", "to", "(", "id", "1", ")", ".", "is", "equal", "to", "(", "id", "2", ")", ".", "is", "not", "equal", "to", "(", "id", "3", ")", ";", "}"], "token_count": 99, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.923156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c7ceab7dfab2e011a630c2158698acf92d111bb6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofWhenValueIsNullThrowsException", "signature": null, "start_line": 52, "end_line": 56, "nloc": 5, "method_source_normalized": "@TestvoidofWhenValueIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.of((String) null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenValueIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.of((String) null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "value", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", "id", ".", "of", "(", "(", "string", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.923457+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "57810d0a458071fadbdb8026a70844429735907f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofWhenValueIsEmptyThrowsException", "signature": null, "start_line": 58, "end_line": 61, "nloc": 4, "method_source_normalized": "@TestvoidofWhenValueIsEmptyThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.of(\" \")).withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWhenValueIsEmptyThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.of(\" \")).withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "value", "is", "empty", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", "id", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.923724+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "1616692998a31bd1ad111d3f6890348019d94dad", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofSha256Digest", "signature": null, "start_line": 63, "end_line": 69, "nloc": 7, "method_source_normalized": "@TestvoidofSha256Digest()throws Exception{\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tdigest.update(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\tLayerId id = LayerId.ofSha256Digest(digest.digest());\n\t\tassertThat(id).hasToString(\"sha256:9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\");\n\t}", "original_code": "@Test\n\tvoid ofSha256Digest() throws Exception {\n\t\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\t\tdigest.update(\"test\".getBytes(StandardCharsets.UTF_8));\n\t\tLayerId id = LayerId.ofSha256Digest(digest.digest());\n\t\tassertThat(id).hasToString(\"sha256:9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\");\n\t}", "code_tokens": ["@", "test", "void", "of", "sha", "256", "digest", "(", ")", "throws", "exception", "{", "message", "digest", "digest", "=", "message", "digest", ".", "get", "instance", "(", "__STR__", ")", ";", "digest", ".", "update", "(", "__STR__", ".", "get", "bytes", "(", "standard", "charsets", ".", "utf", "8", ")", ")", ";", "layer", "id", "id", "=", "layer", "id", ".", "of", "sha", "256", "digest", "(", "digest", ".", "digest", "(", ")", ")", ";", "assert", "that", "(", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 75, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 21, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.924022+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59d7e9f618b7c1b16229746536e23f64b2a76607", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofSha256DigestWithZeroPadding", "signature": null, "start_line": 71, "end_line": 78, "nloc": 8, "method_source_normalized": "@TestvoidofSha256DigestWithZeroPadding(){\n\t\tbyte[] digest = new byte[32];\n\t\tArrays.fill(digest, (byte) 127);\n\t\tdigest[0] = 1;\n\t\tLayerId id = LayerId.ofSha256Digest(digest);\n\t\tassertThat(id).hasToString(\"sha256:017f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f\");\n\t}", "original_code": "@Test\n\tvoid ofSha256DigestWithZeroPadding() {\n\t\tbyte[] digest = new byte[32];\n\t\tArrays.fill(digest, (byte) 127);\n\t\tdigest[0] = 1;\n\t\tLayerId id = LayerId.ofSha256Digest(digest);\n\t\tassertThat(id).hasToString(\"sha256:017f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f\");\n\t}", "code_tokens": ["@", "test", "void", "of", "sha", "256", "digest", "with", "zero", "padding", "(", ")", "{", "byte", "[", "]", "digest", "=", "new", "byte", "[", "__NUM__", "]", ";", "arrays", ".", "fill", "(", "digest", ",", "(", "byte", ")", "__NUM__", ")", ";", "digest", "[", "__NUM__", "]", "=", "__NUM__", ";", "layer", "id", "id", "=", "layer", "id", ".", "of", "sha", "256", "digest", "(", "digest", ")", ";", "assert", "that", "(", "id", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 72, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 88, "n_identifiers": 15, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.924318+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e39ce04eec084ea98f90a55088ce60c517ac0a03", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofSha256DigestWhenNullThrowsException", "signature": null, "start_line": 80, "end_line": 84, "nloc": 5, "method_source_normalized": "@TestvoidofSha256DigestWhenNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.ofSha256Digest((byte[]) null))\n\t\t\t.withMessage(\"'digest' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofSha256DigestWhenNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.ofSha256Digest((byte[]) null))\n\t\t\t.withMessage(\"'digest' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "sha", "256", "digest", "when", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", "id", ".", "of", "sha", "256", "digest", "(", "(", "byte", "[", "]", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 33, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 7, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.924599+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "81ddc18af98c0599cc55fdf2df6d62a11d45d2ab", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerIdTests.java", "file_blob_sha": null, "method_name": "ofSha256DigestWhenWrongLengthThrowsException", "signature": null, "start_line": 86, "end_line": 90, "nloc": 5, "method_source_normalized": "@TestvoidofSha256DigestWhenWrongLengthThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.ofSha256Digest(new byte[31]))\n\t\t\t.withMessage(\"'digest' must be exactly 32 bytes\");\n\t}", "original_code": "@Test\n\tvoid ofSha256DigestWhenWrongLengthThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> LayerId.ofSha256Digest(new byte[31]))\n\t\t\t.withMessage(\"'digest' must be exactly 32 bytes\");\n\t}", "code_tokens": ["@", "test", "void", "of", "sha", "256", "digest", "when", "wrong", "length", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", "id", ".", "of", "sha", "256", "digest", "(", "new", "byte", "[", "__NUM__", "]", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 36, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 7, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.924863+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4e87f6b56b3090d195ec33c9a8ab1ccd874b7ca0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenVersionIsNullThrowsException", "signature": null, "start_line": 34, "end_line": 38, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenVersionIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid parseWhenVersionIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(null))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "version", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "api", "version", ".", "parse", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.926364+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2bebc1a9fbce20b41abc51d82bda6f83267e729d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenVersionIsEmptyThrowsException", "signature": null, "start_line": 40, "end_line": 44, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenVersionIsEmptyThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid parseWhenVersionIsEmptyThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(\"\"))\n\t\t\t.withMessage(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "version", "is", "empty", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.926632+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e29b79f51debadbba576c714436fbc9972c7c6cf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "parseWhenVersionDoesNotMatchPatternThrowsException", "signature": null, "start_line": 46, "end_line": 50, "nloc": 5, "method_source_normalized": "@TestvoidparseWhenVersionDoesNotMatchPatternThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(\"bad\"))\n\t\t\t.withMessage(\"'value' [bad] must contain a well formed version number\");\n\t}", "original_code": "@Test\n\tvoid parseWhenVersionDoesNotMatchPatternThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ApiVersion.parse(\"bad\"))\n\t\t\t.withMessage(\"'value' [bad] must contain a well formed version number\");\n\t}", "code_tokens": ["@", "test", "void", "parse", "when", "version", "does", "not", "match", "pattern", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.926903+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b25602c087506aced00ac00861cdda7c88b4c13", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "parseReturnsVersion", "signature": null, "start_line": 52, "end_line": 57, "nloc": 6, "method_source_normalized": "@TestvoidparseReturnsVersion(){\n\t\tApiVersion version = ApiVersion.parse(\"1.2\");\n\t\tassertThat(version.getMajor()).isOne();\n\t\tassertThat(version.getMinor()).isEqualTo(2);\n\t}", "original_code": "@Test\n\tvoid parseReturnsVersion() {\n\t\tApiVersion version = ApiVersion.parse(\"1.2\");\n\t\tassertThat(version.getMajor()).isOne();\n\t\tassertThat(version.getMinor()).isEqualTo(2);\n\t}", "code_tokens": ["@", "test", "void", "parse", "returns", "version", "(", ")", "{", "api", "version", "version", "=", "api", "version", ".", "parse", "(", "__STR__", ")", ";", "assert", "that", "(", "version", ".", "get", "major", "(", ")", ")", ".", "is", "one", "(", ")", ";", "assert", "that", "(", "version", ".", "get", "minor", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "}"], "token_count": 56, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 68, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.927181+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5b3fa7984e12b477bb453333f6375678475a5d54", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsWhenSame", "signature": null, "start_line": 59, "end_line": 65, "nloc": 7, "method_source_normalized": "@TestvoidsupportsWhenSame(){\n\t\tassertThat(supports(\"0.0\", \"0.0\")).isTrue();\n\t\tassertThat(supports(\"0.1\", \"0.1\")).isTrue();\n\t\tassertThat(supports(\"1.0\", \"1.0\")).isTrue();\n\t\tassertThat(supports(\"1.1\", \"1.1\")).isTrue();\n\t}", "original_code": "@Test\n\tvoid supportsWhenSame() {\n\t\tassertThat(supports(\"0.0\", \"0.0\")).isTrue();\n\t\tassertThat(supports(\"0.1\", \"0.1\")).isTrue();\n\t\tassertThat(supports(\"1.0\", \"1.0\")).isTrue();\n\t\tassertThat(supports(\"1.1\", \"1.1\")).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "supports", "when", "same", "(", ")", "{", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 74, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 97, "n_identifiers": 14, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.927487+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7c58f612efd173ab90cb4341a41a26deda2b0b4c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsWhenDifferentMajor", "signature": null, "start_line": 67, "end_line": 75, "nloc": 9, "method_source_normalized": "@TestvoidsupportsWhenDifferentMajor(){\n\t\tassertThat(supports(\"0.0\", \"1.0\")).isFalse();\n\t\tassertThat(supports(\"1.0\", \"0.0\")).isFalse();\n\t\tassertThat(supports(\"1.0\", \"2.0\")).isFalse();\n\t\tassertThat(supports(\"2.0\", \"1.0\")).isFalse();\n\t\tassertThat(supports(\"1.1\", \"2.1\")).isFalse();\n\t\tassertThat(supports(\"2.1\", \"1.1\")).isFalse();\n\t}", "original_code": "@Test\n\tvoid supportsWhenDifferentMajor() {\n\t\tassertThat(supports(\"0.0\", \"1.0\")).isFalse();\n\t\tassertThat(supports(\"1.0\", \"0.0\")).isFalse();\n\t\tassertThat(supports(\"1.0\", \"2.0\")).isFalse();\n\t\tassertThat(supports(\"2.0\", \"1.0\")).isFalse();\n\t\tassertThat(supports(\"1.1\", \"2.1\")).isFalse();\n\t\tassertThat(supports(\"2.1\", \"1.1\")).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "supports", "when", "different", "major", "(", ")", "{", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 107, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 139, "n_identifiers": 20, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.927807+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5cfdef4f2b821d79e6e4130fced7f12f99e7005b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsWhenDifferentMinor", "signature": null, "start_line": 77, "end_line": 81, "nloc": 5, "method_source_normalized": "@TestvoidsupportsWhenDifferentMinor(){\n\t\tassertThat(supports(\"1.2\", \"1.1\")).isTrue();\n\t\tassertThat(supports(\"1.2\", \"1.3\")).isFalse();\n\t}", "original_code": "@Test\n\tvoid supportsWhenDifferentMinor() {\n\t\tassertThat(supports(\"1.2\", \"1.1\")).isTrue();\n\t\tassertThat(supports(\"1.2\", \"1.3\")).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "supports", "when", "different", "minor", "(", ")", "{", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 43, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.928096+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "53011ce837a689fa58db36c9551a20b427c003fc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsWhenMajorZeroAndDifferentMinor", "signature": null, "start_line": 83, "end_line": 87, "nloc": 5, "method_source_normalized": "@TestvoidsupportsWhenMajorZeroAndDifferentMinor(){\n\t\tassertThat(supports(\"0.2\", \"0.1\")).isFalse();\n\t\tassertThat(supports(\"0.2\", \"0.3\")).isFalse();\n\t}", "original_code": "@Test\n\tvoid supportsWhenMajorZeroAndDifferentMinor() {\n\t\tassertThat(supports(\"0.2\", \"0.1\")).isFalse();\n\t\tassertThat(supports(\"0.2\", \"0.3\")).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "supports", "when", "major", "zero", "and", "different", "minor", "(", ")", "{", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "assert", "that", "(", "supports", "(", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 46, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 14, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.928364+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "307eaebec756f664f8ed208fe92d9ff9d8574a2d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsAnyWhenOneMatches", "signature": null, "start_line": 89, "end_line": 92, "nloc": 4, "method_source_normalized": "@TestvoidsupportsAnyWhenOneMatches(){\n\t\tassertThat(supportsAny(\"0.2\", \"0.1\", \"0.2\")).isTrue();\n\t}", "original_code": "@Test\n\tvoid supportsAnyWhenOneMatches() {\n\t\tassertThat(supportsAny(\"0.2\", \"0.1\", \"0.2\")).isTrue();\n\t}", "code_tokens": ["@", "test", "void", "supports", "any", "when", "one", "matches", "(", ")", "{", "assert", "that", "(", "supports", "any", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ")", ".", "is", "true", "(", ")", ";", "}"], "token_count": 31, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 5, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.928625+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb37179aa54f9d7d1f7d07b808b5532106205fdf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsAnyWhenNoneMatch", "signature": null, "start_line": 94, "end_line": 97, "nloc": 4, "method_source_normalized": "@TestvoidsupportsAnyWhenNoneMatch(){\n\t\tassertThat(supportsAny(\"0.2\", \"0.3\", \"0.4\")).isFalse();\n\t}", "original_code": "@Test\n\tvoid supportsAnyWhenNoneMatch() {\n\t\tassertThat(supportsAny(\"0.2\", \"0.3\", \"0.4\")).isFalse();\n\t}", "code_tokens": ["@", "test", "void", "supports", "any", "when", "none", "match", "(", ")", "{", "assert", "that", "(", "supports", "any", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ")", ".", "is", "false", "(", ")", ";", "}"], "token_count": 31, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 36, "n_identifiers": 5, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.928883+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3814d56251c9a8cb47d2a45e38ba2db162036575", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "toStringReturnsString", "signature": null, "start_line": 99, "end_line": 102, "nloc": 4, "method_source_normalized": "@TestvoidtoStringReturnsString(){\n\t\tassertThat(ApiVersion.parse(\"1.2\")).hasToString(\"1.2\");\n\t}", "original_code": "@Test\n\tvoid toStringReturnsString() {\n\t\tassertThat(ApiVersion.parse(\"1.2\")).hasToString(\"1.2\");\n\t}", "code_tokens": ["@", "test", "void", "to", "string", "returns", "string", "(", ")", "{", "assert", "that", "(", "api", "version", ".", "parse", "(", "__STR__", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 30, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 6, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 9, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.929161+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d8b9d3cb18def04639c35e4f8ae321875f1bd5fe", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 104, "end_line": 111, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tApiVersion v12a = ApiVersion.parse(\"1.2\");\n\t\tApiVersion v12b = ApiVersion.parse(\"1.2\");\n\t\tApiVersion v13 = ApiVersion.parse(\"1.3\");\n\t\tassertThat(v12a).hasSameHashCodeAs(v12b);\n\t\tassertThat(v12a).isEqualTo(v12a).isEqualTo(v12b).isNotEqualTo(v13);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tApiVersion v12a = ApiVersion.parse(\"1.2\");\n\t\tApiVersion v12b = ApiVersion.parse(\"1.2\");\n\t\tApiVersion v13 = ApiVersion.parse(\"1.3\");\n\t\tassertThat(v12a).hasSameHashCodeAs(v12b);\n\t\tassertThat(v12a).isEqualTo(v12a).isEqualTo(v12b).isNotEqualTo(v13);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "api", "version", "v", "12", "a", "=", "api", "version", ".", "parse", "(", "__STR__", ")", ";", "api", "version", "v", "12", "b", "=", "api", "version", ".", "parse", "(", "__STR__", ")", ";", "api", "version", "v", "13", "=", "api", "version", ".", "parse", "(", "__STR__", ")", ";", "assert", "that", "(", "v", "12", "a", ")", ".", "has", "same", "hash", "code", "as", "(", "v", "12", "b", ")", ";", "assert", "that", "(", "v", "12", "a", ")", ".", "is", "equal", "to", "(", "v", "12", "a", ")", ".", "is", "equal", "to", "(", "v", "12", "b", ")", ".", "is", "not", "equal", "to", "(", "v", "13", ")", ";", "}"], "token_count": 106, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.929456+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "99df35d5708ea7c3624815d8aff85a3cdbe9920e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supports", "signature": null, "start_line": 113, "end_line": 115, "nloc": 3, "method_source_normalized": "privatebooleansupports(String v1, String v2){\n\t\treturn ApiVersion.parse(v1).supports(ApiVersion.parse(v2));\n\t}", "original_code": "private boolean supports(String v1, String v2) {\n\t\treturn ApiVersion.parse(v1).supports(ApiVersion.parse(v2));\n\t}", "code_tokens": ["private", "boolean", "supports", "(", "string", "v", "1", ",", "string", "v", "2", ")", "{", "return", "api", "version", ".", "parse", "(", "v", "1", ")", ".", "supports", "(", "api", "version", ".", "parse", "(", "v", "2", ")", ")", ";", "}"], "token_count": 36, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 43, "n_identifiers": 12, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 12, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.929727+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "31a7b08d732f33a8d1fc1a70c84bb419ea768805", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ApiVersionTests.java", "file_blob_sha": null, "method_name": "supportsAny", "signature": null, "start_line": 117, "end_line": 120, "nloc": 4, "method_source_normalized": "privatebooleansupportsAny(String v1, String... others){\n\t\treturn ApiVersion.parse(v1)\n\t\t\t.supportsAny(Arrays.stream(others).map(ApiVersion::parse).toArray(ApiVersion[]::new));\n\t}", "original_code": "private boolean supportsAny(String v1, String... others) {\n\t\treturn ApiVersion.parse(v1)\n\t\t\t.supportsAny(Arrays.stream(others).map(ApiVersion::parse).toArray(ApiVersion[]::new));\n\t}", "code_tokens": ["private", "boolean", "supports", "any", "(", "string", "v", "1", ",", "string", "...", "others", ")", "{", "return", "api", "version", ".", "parse", "(", "v", "1", ")", ".", "supports", "any", "(", "arrays", ".", "stream", "(", "others", ")", ".", "map", "(", "api", "version", "::", "parse", ")", ".", "to", "array", "(", "api", "version", "[", "]", "::", "new", ")", ")", ";", "}"], "token_count": 55, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 69, "n_identifiers": 17, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.929995+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5127c823de695b9859f1a508261c67afc4767bf7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "randomWhenPrefixIsNullThrowsException", "signature": null, "start_line": 31, "end_line": 35, "nloc": 5, "method_source_normalized": "@TestvoidrandomWhenPrefixIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.random(null))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "original_code": "@Test\n\tvoid randomWhenPrefixIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.random(null))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "random", "when", "prefix", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "random", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.931605+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "68a14fca34b92edba6f27e7f6de0d0053bd09b72", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "randomGeneratesRandomString", "signature": null, "start_line": 37, "end_line": 45, "nloc": 9, "method_source_normalized": "@TestvoidrandomGeneratesRandomString(){\n\t\tVolumeName v1 = VolumeName.random(\"abc-\");\n\t\tVolumeName v2 = VolumeName.random(\"abc-\");\n\t\tassertThat(v1.toString()).startsWith(\"abc-\").hasSize(14);\n\t\tassertThat(v2.toString()).startsWith(\"abc-\").hasSize(14);\n\t\tassertThat(v1).isNotEqualTo(v2);\n\t\tassertThat(v1.toString()).isNotEqualTo(v2.toString());\n\t}", "original_code": "@Test\n\tvoid randomGeneratesRandomString() {\n\t\tVolumeName v1 = VolumeName.random(\"abc-\");\n\t\tVolumeName v2 = VolumeName.random(\"abc-\");\n\t\tassertThat(v1.toString()).startsWith(\"abc-\").hasSize(14);\n\t\tassertThat(v2.toString()).startsWith(\"abc-\").hasSize(14);\n\t\tassertThat(v1).isNotEqualTo(v2);\n\t\tassertThat(v1.toString()).isNotEqualTo(v2.toString());\n\t}", "code_tokens": ["@", "test", "void", "random", "generates", "random", "string", "(", ")", "{", "volume", "name", "v", "1", "=", "volume", "name", ".", "random", "(", "__STR__", ")", ";", "volume", "name", "v", "2", "=", "volume", "name", ".", "random", "(", "__STR__", ")", ";", "assert", "that", "(", "v", "1", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "v", "2", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "v", "1", ")", ".", "is", "not", "equal", "to", "(", "v", "2", ")", ";", "assert", "that", "(", "v", "1", ".", "to", "string", "(", ")", ")", ".", "is", "not", "equal", "to", "(", "v", "2", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 127, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 139, "n_identifiers": 30, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.931941+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7440260b10ec6b7f0aefc6b9f3a704460928b053", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "randomStringWithLengthGeneratesRandomString", "signature": null, "start_line": 47, "end_line": 55, "nloc": 9, "method_source_normalized": "@TestvoidrandomStringWithLengthGeneratesRandomString(){\n\t\tVolumeName v1 = VolumeName.random(\"abc-\", 20);\n\t\tVolumeName v2 = VolumeName.random(\"abc-\", 20);\n\t\tassertThat(v1.toString()).startsWith(\"abc-\").hasSize(24);\n\t\tassertThat(v2.toString()).startsWith(\"abc-\").hasSize(24);\n\t\tassertThat(v1).isNotEqualTo(v2);\n\t\tassertThat(v1.toString()).isNotEqualTo(v2.toString());\n\t}", "original_code": "@Test\n\tvoid randomStringWithLengthGeneratesRandomString() {\n\t\tVolumeName v1 = VolumeName.random(\"abc-\", 20);\n\t\tVolumeName v2 = VolumeName.random(\"abc-\", 20);\n\t\tassertThat(v1.toString()).startsWith(\"abc-\").hasSize(24);\n\t\tassertThat(v2.toString()).startsWith(\"abc-\").hasSize(24);\n\t\tassertThat(v1).isNotEqualTo(v2);\n\t\tassertThat(v1.toString()).isNotEqualTo(v2.toString());\n\t}", "code_tokens": ["@", "test", "void", "random", "string", "with", "length", "generates", "random", "string", "(", ")", "{", "volume", "name", "v", "1", "=", "volume", "name", ".", "random", "(", "__STR__", ",", "__NUM__", ")", ";", "volume", "name", "v", "2", "=", "volume", "name", ".", "random", "(", "__STR__", ",", "__NUM__", ")", ";", "assert", "that", "(", "v", "1", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "v", "2", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "v", "1", ")", ".", "is", "not", "equal", "to", "(", "v", "2", ")", ";", "assert", "that", "(", "v", "1", ".", "to", "string", "(", ")", ")", ".", "is", "not", "equal", "to", "(", "v", "2", ".", "to", "string", "(", ")", ")", ";", "}"], "token_count": 134, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 143, "n_identifiers": 30, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 32, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.932291+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "62b7add7269eba049ec670f9097780be22d359e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnWhenSourceIsNullThrowsException", "signature": null, "start_line": 57, "end_line": 61, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnWhenSourceIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(null, \"prefix\", \"suffix\", 6))\n\t\t\t.withMessage(\"'source' must not be null\");\n\t}", "original_code": "@Test\n\tvoid basedOnWhenSourceIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(null, \"prefix\", \"suffix\", 6))\n\t\t\t.withMessage(\"'source' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "when", "source", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "based", "on", "(", "null", ",", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.932578+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c103f94e2939417cc95432afab0f78ea928aff85", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnWhenNameExtractorIsNullThrowsException", "signature": null, "start_line": 63, "end_line": 67, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnWhenNameExtractorIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", null, \"prefix\", \"suffix\", 6))\n\t\t\t.withMessage(\"'nameExtractor' must not be null\");\n\t}", "original_code": "@Test\n\tvoid basedOnWhenNameExtractorIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", null, \"prefix\", \"suffix\", 6))\n\t\t\t.withMessage(\"'nameExtractor' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "when", "name", "extractor", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "based", "on", "(", "__STR__", ",", "null", ",", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 55, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 54, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.932857+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f1fab4757fe1b61194987c000959f75a9354f432", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnWhenPrefixIsNullThrowsException", "signature": null, "start_line": 69, "end_line": 73, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnWhenPrefixIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", null, \"suffix\", 6))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "original_code": "@Test\n\tvoid basedOnWhenPrefixIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", null, \"suffix\", 6))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "when", "prefix", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "based", "on", "(", "__STR__", ",", "null", ",", "__STR__", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.933127+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6fa34f42accf9228754a78676bdda9806849916b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnWhenSuffixIsNullThrowsException", "signature": null, "start_line": 75, "end_line": 79, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnWhenSuffixIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", \"prefix\", null, 6))\n\t\t\t.withMessage(\"'suffix' must not be null\");\n\t}", "original_code": "@Test\n\tvoid basedOnWhenSuffixIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"test\", \"prefix\", null, 6))\n\t\t\t.withMessage(\"'suffix' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "when", "suffix", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "based", "on", "(", "__STR__", ",", "__STR__", ",", "null", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.933403+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "24c4969bddd10acf61508d2f0523b77dcaa00360", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnGeneratesHashBasedName", "signature": null, "start_line": 81, "end_line": 85, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnGeneratesHashBasedName(){\n\t\tVolumeName name = VolumeName.basedOn(\"index.docker.io/library/myapp:latest\", \"pack-cache-\", \".build\", 6);\n\t\tassertThat(name).hasToString(\"pack-cache-40a311b545d7.build\");\n\t}", "original_code": "@Test\n\tvoid basedOnGeneratesHashBasedName() {\n\t\tVolumeName name = VolumeName.basedOn(\"index.docker.io/library/myapp:latest\", \"pack-cache-\", \".build\", 6);\n\t\tassertThat(name).hasToString(\"pack-cache-40a311b545d7.build\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "generates", "hash", "based", "name", "(", ")", "{", "volume", "name", "name", "=", "volume", "name", ".", "based", "on", "(", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ";", "assert", "that", "(", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 18, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.933669+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "baba149f99ce44998d67b7784de0e9a17f696a90", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "basedOnWhenSizeIsTooBigThrowsException", "signature": null, "start_line": 87, "end_line": 91, "nloc": 5, "method_source_normalized": "@TestvoidbasedOnWhenSizeIsTooBigThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"name\", \"prefix\", \"suffix\", 33))\n\t\t\t.withMessage(\"'digestLength' must be less than or equal to 32\");\n\t}", "original_code": "@Test\n\tvoid basedOnWhenSizeIsTooBigThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.basedOn(\"name\", \"prefix\", \"suffix\", 33))\n\t\t\t.withMessage(\"'digestLength' must be less than or equal to 32\");\n\t}", "code_tokens": ["@", "test", "void", "based", "on", "when", "size", "is", "too", "big", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "based", "on", "(", "__STR__", ",", "__STR__", ",", "__STR__", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.933940+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "234c12b7334d6aae12fb7d19bdb3c0a8110b648e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "ofWhenValueIsNullThrowsException", "signature": null, "start_line": 93, "end_line": 97, "nloc": 5, "method_source_normalized": "@TestvoidofWhenValueIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.of(null))\n\t\t\t.withMessage(\"'value' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenValueIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> VolumeName.of(null))\n\t\t\t.withMessage(\"'value' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "value", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "volume", "name", ".", "of", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.934202+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "945c060b7e2b4eb5e5bd4f53ee78d4df6ef6f3e3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "ofGeneratesValue", "signature": null, "start_line": 99, "end_line": 103, "nloc": 5, "method_source_normalized": "@TestvoidofGeneratesValue(){\n\t\tVolumeName name = VolumeName.of(\"test\");\n\t\tassertThat(name).hasToString(\"test\");\n\t}", "original_code": "@Test\n\tvoid ofGeneratesValue() {\n\t\tVolumeName name = VolumeName.of(\"test\");\n\t\tassertThat(name).hasToString(\"test\");\n\t}", "code_tokens": ["@", "test", "void", "of", "generates", "value", "(", ")", "{", "volume", "name", "name", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "name", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.934481+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "de313637cfcad5578bf4602a5eb1d79ddb52aba0", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/VolumeNameTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 105, "end_line": 112, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tVolumeName n1 = VolumeName.of(\"test1\");\n\t\tVolumeName n2 = VolumeName.of(\"test1\");\n\t\tVolumeName n3 = VolumeName.of(\"test2\");\n\t\tassertThat(n1).hasSameHashCodeAs(n2);\n\t\tassertThat(n1).isEqualTo(n1).isEqualTo(n2).isNotEqualTo(n3);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tVolumeName n1 = VolumeName.of(\"test1\");\n\t\tVolumeName n2 = VolumeName.of(\"test1\");\n\t\tVolumeName n3 = VolumeName.of(\"test2\");\n\t\tassertThat(n1).hasSameHashCodeAs(n2);\n\t\tassertThat(n1).isEqualTo(n1).isEqualTo(n2).isNotEqualTo(n3);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "volume", "name", "n", "1", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "volume", "name", "n", "2", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "volume", "name", "n", "3", "=", "volume", "name", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "n", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "n", "2", ")", ";", "assert", "that", "(", "n", "1", ")", ".", "is", "equal", "to", "(", "n", "1", ")", ".", "is", "equal", "to", "(", "n", "2", ")", ".", "is", "not", "equal", "to", "(", "n", "3", ")", ";", "}"], "token_count": 99, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.934785+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6cb464a57c2147fb143ba733dc539bf70d3a983d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndexTests.java", "file_blob_sha": null, "method_name": "loadJson", "signature": null, "start_line": 32, "end_line": 42, "nloc": 11, "method_source_normalized": "@TestvoidloadJson(){\n\t\tString content = getContentAsString(\"image-archive-index.json\");\n\t\tImageArchiveIndex index = getIndex(content);\n\t\tassertThat(index.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(index.getManifests()).hasSize(1);\n\t\tBlobReference manifest = index.getManifests().get(0);\n\t\tassertThat(manifest.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.list.v2+json\");\n\t\tassertThat(manifest.getDigest())\n\t\t\t.isEqualTo(\"sha256:3bbe02431d8e5124ffe816ec27bf6508b50edd1d10218be1a03e799a186b9004\");\n\t}", "original_code": "@Test\n\tvoid loadJson() {\n\t\tString content = getContentAsString(\"image-archive-index.json\");\n\t\tImageArchiveIndex index = getIndex(content);\n\t\tassertThat(index.getSchemaVersion()).isEqualTo(2);\n\t\tassertThat(index.getManifests()).hasSize(1);\n\t\tBlobReference manifest = index.getManifests().get(0);\n\t\tassertThat(manifest.getMediaType()).isEqualTo(\"application/vnd.docker.distribution.manifest.list.v2+json\");\n\t\tassertThat(manifest.getDigest())\n\t\t\t.isEqualTo(\"sha256:3bbe02431d8e5124ffe816ec27bf6508b50edd1d10218be1a03e799a186b9004\");\n\t}", "code_tokens": ["@", "test", "void", "load", "json", "(", ")", "{", "string", "content", "=", "get", "content", "as", "string", "(", "__STR__", ")", ";", "image", "archive", "index", "index", "=", "get", "index", "(", "content", ")", ";", "assert", "that", "(", "index", ".", "get", "schema", "version", "(", ")", ")", ".", "is", "equal", "to", "(", "__NUM__", ")", ";", "assert", "that", "(", "index", ".", "get", "manifests", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "blob", "reference", "manifest", "=", "index", ".", "get", "manifests", "(", ")", ".", "get", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "media", "type", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "digest", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 120, "vocab_size": 37, "cyclomatic_complexity": 1, "ast_node_count": 141, "n_identifiers": 30, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.935561+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "53fcd13c892f70a984b89a52d04f7b1bf97917a8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveIndexTests.java", "file_blob_sha": null, "method_name": "getIndex", "signature": null, "start_line": 44, "end_line": 46, "nloc": 3, "method_source_normalized": "privateImageArchiveIndexgetIndex(String content){\n\t\treturn new ImageArchiveIndex(getObjectMapper().readTree(content));\n\t}", "original_code": "private ImageArchiveIndex getIndex(String content) {\n\t\treturn new ImageArchiveIndex(getObjectMapper().readTree(content));\n\t}", "code_tokens": ["private", "image", "archive", "index", "get", "index", "(", "string", "content", ")", "{", "return", "new", "image", "archive", "index", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "content", ")", ")", ";", "}"], "token_count": 31, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.935836+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e3019d336df2db84a848640ca28c1d5bf3fa91bc", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "ofWithOsParses", "signature": null, "start_line": 30, "end_line": 34, "nloc": 5, "method_source_normalized": "@TestvoidofWithOsParses(){\n\t\tImagePlatform platform = ImagePlatform.of(\"linux\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux\");\n\t}", "original_code": "@Test\n\tvoid ofWithOsParses() {\n\t\tImagePlatform platform = ImagePlatform.of(\"linux\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "os", "parses", "(", ")", "{", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "platform", ".", "to", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 41, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.936732+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "372f643dea2b54bf09e5442be56b05684a4cda29", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "ofWithOsAndArchitectureParses", "signature": null, "start_line": 36, "end_line": 40, "nloc": 5, "method_source_normalized": "@TestvoidofWithOsAndArchitectureParses(){\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/amd64\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64\");\n\t}", "original_code": "@Test\n\tvoid ofWithOsAndArchitectureParses() {\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/amd64\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "os", "and", "architecture", "parses", "(", ")", "{", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "platform", ".", "to", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.936996+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "96f44edc2ee0672a9d0d92d941a96ebac78b5d05", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "ofWithOsAndArchitectureAndVariantParses", "signature": null, "start_line": 42, "end_line": 46, "nloc": 5, "method_source_normalized": "@TestvoidofWithOsAndArchitectureAndVariantParses(){\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/amd64/v1\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64/v1\");\n\t}", "original_code": "@Test\n\tvoid ofWithOsAndArchitectureAndVariantParses() {\n\t\tImagePlatform platform = ImagePlatform.of(\"linux/amd64/v1\");\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64/v1\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "os", "and", "architecture", "and", "variant", "parses", "(", ")", "{", "image", "platform", "platform", "=", "image", "platform", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "platform", ".", "to", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.937266+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "bfa084a311daa12d03326b7d0c063d0e174fd752", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "ofWithEmptyValueFails", "signature": null, "start_line": 48, "end_line": 52, "nloc": 5, "method_source_normalized": "@TestvoidofWithEmptyValueFails(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImagePlatform.of(\"\"))\n\t\t\t.withMessageContaining(\"'value' must not be empty\");\n\t}", "original_code": "@Test\n\tvoid ofWithEmptyValueFails() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImagePlatform.of(\"\"))\n\t\t\t.withMessageContaining(\"'value' must not be empty\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "empty", "value", "fails", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "platform", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 43, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.937524+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "aea542a720c7742c12be6e0e85013513b88192b4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "ofWithTooManySegmentsFails", "signature": null, "start_line": 54, "end_line": 58, "nloc": 5, "method_source_normalized": "@TestvoidofWithTooManySegmentsFails(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImagePlatform.of(\"linux/amd64/v1/extra\"))\n\t\t\t.withMessageContaining(\"'value' [linux/amd64/v1/extra] must be in the form\");\n\t}", "original_code": "@Test\n\tvoid ofWithTooManySegmentsFails() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImagePlatform.of(\"linux/amd64/v1/extra\"))\n\t\t\t.withMessageContaining(\"'value' [linux/amd64/v1/extra] must be in the form\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "too", "many", "segments", "fails", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "platform", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.937792+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d0d663be4619f8affb329ab422d4d824c60f860e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "fromImageMatchesImage", "signature": null, "start_line": 60, "end_line": 64, "nloc": 5, "method_source_normalized": "@TestvoidfromImageMatchesImage()throws IOException{\n\t\tImagePlatform platform = ImagePlatform.from(getImage());\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64/v1\");\n\t}", "original_code": "@Test\n\tvoid fromImageMatchesImage() throws IOException {\n\t\tImagePlatform platform = ImagePlatform.from(getImage());\n\t\tassertThat(platform.toString()).isEqualTo(\"linux/amd64/v1\");\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "matches", "image", "(", ")", "throws", "io", "exception", "{", "image", "platform", "platform", "=", "image", "platform", ".", "from", "(", "get", "image", "(", ")", ")", ";", "assert", "that", "(", "platform", ".", "to", "string", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 17, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.938058+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4808dba4bd6d24e2472f0f0ec68b4637a789c044", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImagePlatformTests.java", "file_blob_sha": null, "method_name": "getImage", "signature": null, "start_line": 66, "end_line": 68, "nloc": 3, "method_source_normalized": "privateImagegetImage()throws IOException{\n\t\treturn Image.of(getContent(\"image.json\"));\n\t}", "original_code": "private Image getImage() throws IOException {\n\t\treturn Image.of(getContent(\"image.json\"));\n\t}", "code_tokens": ["private", "image", "get", "image", "(", ")", "throws", "io", "exception", "{", "return", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "}"], "token_count": 23, "vocab_size": 16, "cyclomatic_complexity": 1, "ast_node_count": 30, "n_identifiers": 6, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.938314+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5cb43c95827c88973f1209ae68fe039c49193781", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofSimpleName", "signature": null, "start_line": 38, "end_line": 46, "nloc": 9, "method_source_normalized": "@TestvoidofSimpleName(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofSimpleName() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "simple", "name", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 103, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.942209+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9c70213ed360868fdb701fc0b1c53499343e1782", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofSimpleNameWithSingleCharacterSuffix", "signature": null, "start_line": 48, "end_line": 56, "nloc": 9, "method_source_normalized": "@TestvoidofSimpleNameWithSingleCharacterSuffix(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu-a\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu-a\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu-a\");\n\t}", "original_code": "@Test\n\tvoid ofSimpleNameWithSingleCharacterSuffix() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu-a\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu-a\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu-a\");\n\t}", "code_tokens": ["@", "test", "void", "of", "simple", "name", "with", "single", "character", "suffix", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 107, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.942551+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec3294d628ab9f4035edcaac4e66ad1eafd17e43", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofLibrarySlashName", "signature": null, "start_line": 58, "end_line": 66, "nloc": 9, "method_source_normalized": "@TestvoidofLibrarySlashName(){\n\t\tImageReference reference = ImageReference.of(\"library/ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofLibrarySlashName() {\n\t\tImageReference reference = ImageReference.of(\"library/ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "library", "slash", "name", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 104, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.942875+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ddecdc5f972df5c90817854f46ab074b8065e58b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofSlashName", "signature": null, "start_line": 68, "end_line": 76, "nloc": 9, "method_source_normalized": "@TestvoidofSlashName(){\n\t\tImageReference reference = ImageReference.of(\"adoptopenjdk/openjdk11\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"adoptopenjdk/openjdk11\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/adoptopenjdk/openjdk11\");\n\t}", "original_code": "@Test\n\tvoid ofSlashName() {\n\t\tImageReference reference = ImageReference.of(\"adoptopenjdk/openjdk11\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"adoptopenjdk/openjdk11\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/adoptopenjdk/openjdk11\");\n\t}", "code_tokens": ["@", "test", "void", "of", "slash", "name", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 103, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.943184+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e76579c85ceefb37badb000d00bbd070def42e77", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofCustomDomain", "signature": null, "start_line": 78, "end_line": 86, "nloc": 9, "method_source_normalized": "@TestvoidofCustomDomain(){\n\t\tImageReference reference = ImageReference.of(\"repo.example.com/java/jdk\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com\");\n\t\tassertThat(reference.getName()).isEqualTo(\"java/jdk\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com/java/jdk\");\n\t}", "original_code": "@Test\n\tvoid ofCustomDomain() {\n\t\tImageReference reference = ImageReference.of(\"repo.example.com/java/jdk\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com\");\n\t\tassertThat(reference.getName()).isEqualTo(\"java/jdk\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com/java/jdk\");\n\t}", "code_tokens": ["@", "test", "void", "of", "custom", "domain", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 103, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.943510+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "efe446c572e0f61fb18a0a64c927b09d4a4047a7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofCustomDomainAndPort", "signature": null, "start_line": 88, "end_line": 96, "nloc": 9, "method_source_normalized": "@TestvoidofCustomDomainAndPort(){\n\t\tImageReference reference = ImageReference.of(\"repo.example.com:8080/java/jdk\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"java/jdk\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com:8080/java/jdk\");\n\t}", "original_code": "@Test\n\tvoid ofCustomDomainAndPort() {\n\t\tImageReference reference = ImageReference.of(\"repo.example.com:8080/java/jdk\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"java/jdk\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com:8080/java/jdk\");\n\t}", "code_tokens": ["@", "test", "void", "of", "custom", "domain", "and", "port", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 105, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.943835+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "dbb99bec69a360d800196bed434f8326e9b1ce65", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofLegacyDomain", "signature": null, "start_line": 98, "end_line": 106, "nloc": 9, "method_source_normalized": "@TestvoidofLegacyDomain(){\n\t\tImageReference reference = ImageReference.of(\"index.docker.io/ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofLegacyDomain() {\n\t\tImageReference reference = ImageReference.of(\"index.docker.io/ubuntu\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "legacy", "domain", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 103, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 124, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.944150+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "14e94e2977551683b4aad8d9e2824f7f6d01e6d2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofNameAndTag", "signature": null, "start_line": 108, "end_line": 116, "nloc": 9, "method_source_normalized": "@TestvoidofNameAndTag(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "original_code": "@Test\n\tvoid ofNameAndTag() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "code_tokens": ["@", "test", "void", "of", "name", "and", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 106, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.944466+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6f26aaf59c97fa63c66d7a241526b3ee18bce083", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofDomainPortAndTag", "signature": null, "start_line": 118, "end_line": 126, "nloc": 9, "method_source_normalized": "@TestvoidofDomainPortAndTag(){\n\t\tImageReference reference = ImageReference.of(\"repo.example.com:8080/library/ubuntu:v1\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"v1\");\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com:8080/library/ubuntu:v1\");\n\t}", "original_code": "@Test\n\tvoid ofDomainPortAndTag() {\n\t\tImageReference reference = ImageReference.of(\"repo.example.com:8080/library/ubuntu:v1\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"repo.example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"v1\");\n\t\tassertThat(reference.getDigest()).isNull();\n\t\tassertThat(reference).hasToString(\"repo.example.com:8080/library/ubuntu:v1\");\n\t}", "code_tokens": ["@", "test", "void", "of", "domain", "port", "and", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 107, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 27, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.944906+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "de88b24d9a3ade25307c532622842a7b19afcb9f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofNameAndDigest", "signature": null, "start_line": 128, "end_line": 139, "nloc": 12, "method_source_normalized": "@TestvoidofNameAndDigest(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid ofNameAndDigest() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isNull();\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "of", "name", "and", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "null", "(", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 106, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 125, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.945230+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7b16eeb4d4c646e8fee7f5c7012c339277a1b0ee", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofNameAndTagAndDigest", "signature": null, "start_line": 141, "end_line": 152, "nloc": 12, "method_source_normalized": "@TestvoidofNameAndTagAndDigest(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid ofNameAndTagAndDigest() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"docker.io\");\n\t\tassertThat(reference.getName()).isEqualTo(\"library/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "of", "name", "and", "tag", "and", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 110, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 126, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.945561+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6e23c2fa3688681cb0c9c42a28867eadd4c2b9f2", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofCustomDomainAndPortWithTag", "signature": null, "start_line": 154, "end_line": 165, "nloc": 12, "method_source_normalized": "@TestvoidofCustomDomainAndPortWithTag(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"example.com:8080/canonical/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"canonical/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"example.com:8080/canonical/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid ofCustomDomainAndPortWithTag() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"example.com:8080/canonical/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.getDomain()).isEqualTo(\"example.com:8080\");\n\t\tassertThat(reference.getName()).isEqualTo(\"canonical/ubuntu\");\n\t\tassertThat(reference.getTag()).isEqualTo(\"bionic\");\n\t\tassertThat(reference.getDigest())\n\t\t\t.isEqualTo(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"example.com:8080/canonical/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "of", "custom", "domain", "and", "port", "with", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "domain", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "get", "digest", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 111, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 126, "n_identifiers": 25, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 40, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.945914+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "7dd1b516735bade6db40e044ce4f6d06635afcf5", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofImageName", "signature": null, "start_line": 167, "end_line": 171, "nloc": 5, "method_source_normalized": "@TestvoidofImageName(){\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"));\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid ofImageName() {\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"));\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "of", "image", "name", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "image", "name", ".", "of", "(", "__STR__", ")", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 41, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 49, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.946183+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "72325daf71135f2238f4892349a5a89003eb9559", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofImageNameAndTag", "signature": null, "start_line": 173, "end_line": 177, "nloc": 5, "method_source_normalized": "@TestvoidofImageNameAndTag(){\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"), \"bionic\");\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "original_code": "@Test\n\tvoid ofImageNameAndTag() {\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"), \"bionic\");\n\t\tassertThat(reference).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "code_tokens": ["@", "test", "void", "of", "image", "name", "and", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "image", "name", ".", "of", "(", "__STR__", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.946452+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0fc6f1f05d19688ae4d02c5399fd1e0e04691c8a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofImageNameTagAndDigest", "signature": null, "start_line": 179, "end_line": 185, "nloc": 7, "method_source_normalized": "@TestvoidofImageNameTagAndDigest(){\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"), \"bionic\",\n\t\t\t\t\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid ofImageNameTagAndDigest() {\n\t\tImageReference reference = ImageReference.of(ImageName.of(\"ubuntu\"), \"bionic\",\n\t\t\t\t\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu:bionic@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "of", "image", "name", "tag", "and", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "image", "name", ".", "of", "(", "__STR__", ")", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "reference", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 24, "cyclomatic_complexity": 1, "ast_node_count": 53, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.946725+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "cafd803c2e2151d6e91970808235fb0cb07f834f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenHasIllegalCharacterThrowsException", "signature": null, "start_line": 187, "end_line": 193, "nloc": 7, "method_source_normalized": "@TestvoidofWhenHasIllegalCharacterThrowsException(){\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> ImageReference\n\t\t\t\t.of(\"registry.example.com/example/example-app:1.6.0-dev.2.uncommitted+wip.foo.c75795d\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "original_code": "@Test\n\tvoid ofWhenHasIllegalCharacterThrowsException() {\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> ImageReference\n\t\t\t\t.of(\"registry.example.com/example/example-app:1.6.0-dev.2.uncommitted+wip.foo.c75795d\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "has", "illegal", "character", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.946988+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "89ce8920abce9bd07505793ee45c9765e944eb0c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenContainsUpperCaseThrowsException", "signature": null, "start_line": 195, "end_line": 201, "nloc": 7, "method_source_normalized": "@TestvoidofWhenContainsUpperCaseThrowsException(){\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> ImageReference\n\t\t\t\t.of(\"europe-west1-docker.pkg.dev/aaaaaa-bbbbb-123456/docker-registry/bootBuildImage:0.0.1\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "original_code": "@Test\n\tvoid ofWhenContainsUpperCaseThrowsException() {\n\t\tassertThatIllegalArgumentException()\n\t\t\t.isThrownBy(() -> ImageReference\n\t\t\t\t.of(\"europe-west1-docker.pkg.dev/aaaaaa-bbbbb-123456/docker-registry/bootBuildImage:0.0.1\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "contains", "upper", "case", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 28, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.947256+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "459748be367ada8c05df7759df1f30af6c0910d7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "ofWhenIsVeryLongAndHasIllegalCharacter", "signature": null, "start_line": 203, "end_line": 209, "nloc": 7, "method_source_normalized": "@Test\n\t@Timeout(value = 1, threadMode = ThreadMode.SEPARATE_THREAD)voidofWhenIsVeryLongAndHasIllegalCharacter(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageReference\n\t\t\t.of(\"docker.io/library/this-image-has-a-long-name-with-an-invalid-tag-which-is-at-danger-of-catastrophic-backtracking:1.0.0+1234\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "original_code": "@Test\n\t@Timeout(value = 1, threadMode = ThreadMode.SEPARATE_THREAD)\n\tvoid ofWhenIsVeryLongAndHasIllegalCharacter() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageReference\n\t\t\t.of(\"docker.io/library/this-image-has-a-long-name-with-an-invalid-tag-which-is-at-danger-of-catastrophic-backtracking:1.0.0+1234\"))\n\t\t\t.withMessageContaining(\"must be an image reference\");\n\t}", "code_tokens": ["@", "test", "@", "timeout", "(", "value", "=", "__NUM__", ",", "thread", "mode", "=", "thread", "mode", ".", "separate", "thread", ")", "void", "of", "when", "is", "very", "long", "and", "has", "illegal", "character", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 63, "vocab_size": 39, "cyclomatic_complexity": 1, "ast_node_count": 64, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.947545+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e04a4e90824ba06960fc390e04663bd53158acfd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "forJarFile", "signature": null, "start_line": 211, "end_line": 219, "nloc": 9, "method_source_normalized": "@TestvoidforJarFile(){\n\t\tassertForJarFile(\"spring-boot.2.0.0.BUILD-SNAPSHOT.jar\", \"library/spring-boot\", \"2.0.0.BUILD-SNAPSHOT\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.M1.jar\", \"library/spring-boot\", \"2.0.0.M1\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.RC1.jar\", \"library/spring-boot\", \"2.0.0.RC1\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.RELEASE.jar\", \"library/spring-boot\", \"2.0.0.RELEASE\");\n\t\tassertForJarFile(\"sample-0.0.1-SNAPSHOT.jar\", \"library/sample\", \"0.0.1-SNAPSHOT\");\n\t\tassertForJarFile(\"sample-0.0.1.jar\", \"library/sample\", \"0.0.1\");\n\t}", "original_code": "@Test\n\tvoid forJarFile() {\n\t\tassertForJarFile(\"spring-boot.2.0.0.BUILD-SNAPSHOT.jar\", \"library/spring-boot\", \"2.0.0.BUILD-SNAPSHOT\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.M1.jar\", \"library/spring-boot\", \"2.0.0.M1\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.RC1.jar\", \"library/spring-boot\", \"2.0.0.RC1\");\n\t\tassertForJarFile(\"spring-boot.2.0.0.RELEASE.jar\", \"library/spring-boot\", \"2.0.0.RELEASE\");\n\t\tassertForJarFile(\"sample-0.0.1-SNAPSHOT.jar\", \"library/sample\", \"0.0.1-SNAPSHOT\");\n\t\tassertForJarFile(\"sample-0.0.1.jar\", \"library/sample\", \"0.0.1\");\n\t}", "code_tokens": ["@", "test", "void", "for", "jar", "file", "(", ")", "{", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "assert", "for", "jar", "file", "(", "__STR__", ",", "__STR__", ",", "__STR__", ")", ";", "}"], "token_count": 82, "vocab_size": 14, "cyclomatic_complexity": 1, "ast_node_count": 85, "n_identifiers": 8, "ast_max_depth": 5, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 36, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.947851+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "50c0b0a1a87af4a095160381332c156762e87b08", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "assertForJarFile", "signature": null, "start_line": 221, "end_line": 225, "nloc": 5, "method_source_normalized": "privatevoidassertForJarFile(String jarFile, String expectedName, String expectedTag){\n\t\tImageReference reference = ImageReference.forJarFile(new File(jarFile));\n\t\tassertThat(reference.getName()).isEqualTo(expectedName);\n\t\tassertThat(reference.getTag()).isEqualTo(expectedTag);\n\t}", "original_code": "private void assertForJarFile(String jarFile, String expectedName, String expectedTag) {\n\t\tImageReference reference = ImageReference.forJarFile(new File(jarFile));\n\t\tassertThat(reference.getName()).isEqualTo(expectedName);\n\t\tassertThat(reference.getTag()).isEqualTo(expectedTag);\n\t}", "code_tokens": ["private", "void", "assert", "for", "jar", "file", "(", "string", "jar", "file", ",", "string", "expected", "name", ",", "string", "expected", "tag", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "for", "jar", "file", "(", "new", "file", "(", "jar", "file", ")", ")", ";", "assert", "that", "(", "reference", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "expected", "name", ")", ";", "assert", "that", "(", "reference", ".", "get", "tag", "(", ")", ")", ".", "is", "equal", "to", "(", "expected", "tag", ")", ";", "}"], "token_count": 78, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 84, "n_identifiers": 23, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.948140+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "89d1b3cd5f274227977e3288d251a2f04488fb6d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "randomGeneratesRandomName", "signature": null, "start_line": 227, "end_line": 239, "nloc": 13, "method_source_normalized": "@TestvoidrandomGeneratesRandomName(){\n\t\tString prefix = \"pack.local/builder/\";\n\t\tImageReference random = ImageReference.random(prefix);\n\t\tassertThat(random.toString()).startsWith(prefix).hasSize(prefix.length() + 10);\n\t\tImageReference another = ImageReference.random(prefix);\n\t\tint attempts = 0;\n\t\twhile (another.equals(random)) {\n\t\t\tassertThat(attempts).as(\"Duplicate results\").isLessThan(10);\n\t\t\tanother = ImageReference.random(prefix);\n\t\t\tattempts++;\n\t\t}\n\t}", "original_code": "@Test\n\tvoid randomGeneratesRandomName() {\n\t\tString prefix = \"pack.local/builder/\";\n\t\tImageReference random = ImageReference.random(prefix);\n\t\tassertThat(random.toString()).startsWith(prefix).hasSize(prefix.length() + 10);\n\t\tImageReference another = ImageReference.random(prefix);\n\t\tint attempts = 0;\n\t\twhile (another.equals(random)) {\n\t\t\tassertThat(attempts).as(\"Duplicate results\").isLessThan(10);\n\t\t\tanother = ImageReference.random(prefix);\n\t\t\tattempts++;\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "random", "generates", "random", "name", "(", ")", "{", "string", "prefix", "=", "__STR__", ";", "image", "reference", "random", "=", "image", "reference", ".", "random", "(", "prefix", ")", ";", "assert", "that", "(", "random", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "prefix", ")", ".", "has", "size", "(", "prefix", ".", "length", "(", ")", "+", "__NUM__", ")", ";", "image", "reference", "another", "=", "image", "reference", ".", "random", "(", "prefix", ")", ";", "int", "attempts", "=", "__NUM__", ";", "while", "(", "another", ".", "equals", "(", "random", ")", ")", "{", "assert", "that", "(", "attempts", ")", ".", "as", "(", "__STR__", ")", ".", "is", "less", "than", "(", "__NUM__", ")", ";", "another", "=", "image", "reference", ".", "random", "(", "prefix", ")", ";", "attempts", "++", ";", "}", "}"], "token_count": 116, "vocab_size": 38, "cyclomatic_complexity": 2, "ast_node_count": 149, "n_identifiers": 35, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 58, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.948478+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ed58e0c774b108534abb7099a5d582a879d56a29", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "randomWithLengthGeneratesRandomName", "signature": null, "start_line": 241, "end_line": 246, "nloc": 6, "method_source_normalized": "@TestvoidrandomWithLengthGeneratesRandomName(){\n\t\tString prefix = \"pack.local/builder/\";\n\t\tImageReference random = ImageReference.random(prefix, 20);\n\t\tassertThat(random.toString()).startsWith(prefix).hasSize(prefix.length() + 20);\n\t}", "original_code": "@Test\n\tvoid randomWithLengthGeneratesRandomName() {\n\t\tString prefix = \"pack.local/builder/\";\n\t\tImageReference random = ImageReference.random(prefix, 20);\n\t\tassertThat(random.toString()).startsWith(prefix).hasSize(prefix.length() + 20);\n\t}", "code_tokens": ["@", "test", "void", "random", "with", "length", "generates", "random", "name", "(", ")", "{", "string", "prefix", "=", "__STR__", ";", "image", "reference", "random", "=", "image", "reference", ".", "random", "(", "prefix", ",", "__NUM__", ")", ";", "assert", "that", "(", "random", ".", "to", "string", "(", ")", ")", ".", "starts", "with", "(", "prefix", ")", ".", "has", "size", "(", "prefix", ".", "length", "(", ")", "+", "__NUM__", ")", ";", "}"], "token_count": 61, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 17, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.948773+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b07c98ee95a700a95af2c4eb0e6ffe44a24723bd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "randomWherePrefixIsNullThrowsException", "signature": null, "start_line": 248, "end_line": 252, "nloc": 5, "method_source_normalized": "@TestvoidrandomWherePrefixIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageReference.random(null))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "original_code": "@Test\n\tvoid randomWherePrefixIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ImageReference.random(null))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "random", "where", "prefix", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "image", "reference", ".", "random", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.949043+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "151b3b3822b7c8b2f36188ab8bac61851eb332fd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedFormWhenHasDigestThrowsException", "signature": null, "start_line": 254, "end_line": 261, "nloc": 8, "method_source_normalized": "@TestvoidinTaggedFormWhenHasDigestThrowsException(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThatIllegalStateException().isThrownBy(reference::inTaggedForm)\n\t\t\t.withMessage(\n\t\t\t\t\t\"Image reference 'docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d' cannot contain a digest\");\n\t}", "original_code": "@Test\n\tvoid inTaggedFormWhenHasDigestThrowsException() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThatIllegalStateException().isThrownBy(reference::inTaggedForm)\n\t\t\t.withMessage(\n\t\t\t\t\t\"Image reference 'docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d' cannot contain a digest\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "form", "when", "has", "digest", "throws", "exception", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "reference", "::", "in", "tagged", "form", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 35, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.949324+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ddd94ca34faf4ef05bc2cbe4029693a2fabb08ed", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedFormWhenHasNoTagUsesLatest", "signature": null, "start_line": 263, "end_line": 267, "nloc": 5, "method_source_normalized": "@TestvoidinTaggedFormWhenHasNoTagUsesLatest(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.inTaggedForm()).hasToString(\"docker.io/library/ubuntu:latest\");\n\t}", "original_code": "@Test\n\tvoid inTaggedFormWhenHasNoTagUsesLatest() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.inTaggedForm()).hasToString(\"docker.io/library/ubuntu:latest\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "form", "when", "has", "no", "tag", "uses", "latest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "in", "tagged", "form", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.949591+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0fe12b63a6c4b6050970b21d7c8d577bf1159112", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedFormWhenHasTagUsesTag", "signature": null, "start_line": 269, "end_line": 273, "nloc": 5, "method_source_normalized": "@TestvoidinTaggedFormWhenHasTagUsesTag(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.inTaggedForm()).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "original_code": "@Test\n\tvoid inTaggedFormWhenHasTagUsesTag() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.inTaggedForm()).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "form", "when", "has", "tag", "uses", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "in", "tagged", "form", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.949861+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3beefd2eebf485f4d68af81bfe8899f1b007a5ce", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedOrDigestFormWhenHasDigestUsesDigest", "signature": null, "start_line": 275, "end_line": 281, "nloc": 7, "method_source_normalized": "@TestvoidinTaggedOrDigestFormWhenHasDigestUsesDigest(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid inTaggedOrDigestFormWhenHasDigestUsesDigest() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "or", "digest", "form", "when", "has", "digest", "uses", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "in", "tagged", "or", "digest", "form", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 24, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.950156+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db0a9446466bdfdef2956cd4de066e8b16aec450", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedOrDigestFormWhenHasTagUsesTag", "signature": null, "start_line": 283, "end_line": 287, "nloc": 5, "method_source_normalized": "@TestvoidinTaggedOrDigestFormWhenHasTagUsesTag(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "original_code": "@Test\n\tvoid inTaggedOrDigestFormWhenHasTagUsesTag() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\"docker.io/library/ubuntu:bionic\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "or", "digest", "form", "when", "has", "tag", "uses", "tag", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "in", "tagged", "or", "digest", "form", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.950453+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "59d2cefb38aa48b0e8d891ab842cba4a5af3fddb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaggedOrDigestFormWhenHasNoTagOrDigestUsesLatest", "signature": null, "start_line": 289, "end_line": 293, "nloc": 5, "method_source_normalized": "@TestvoidinTaggedOrDigestFormWhenHasNoTagOrDigestUsesLatest(){\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\"docker.io/library/ubuntu:latest\");\n\t}", "original_code": "@Test\n\tvoid inTaggedOrDigestFormWhenHasNoTagOrDigestUsesLatest() {\n\t\tImageReference reference = ImageReference.of(\"ubuntu\");\n\t\tassertThat(reference.inTaggedOrDigestForm()).hasToString(\"docker.io/library/ubuntu:latest\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagged", "or", "digest", "form", "when", "has", "no", "tag", "or", "digest", "uses", "latest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "reference", ".", "in", "tagged", "or", "digest", "form", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 53, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.950696+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "080847df5e9bcbe305073746c33444e22c09906d", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "equalsAndHashCode", "signature": null, "start_line": 295, "end_line": 302, "nloc": 8, "method_source_normalized": "@TestvoidequalsAndHashCode(){\n\t\tImageReference r1 = ImageReference.of(\"ubuntu:bionic\");\n\t\tImageReference r2 = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference r3 = ImageReference.of(\"docker.io/library/ubuntu:latest\");\n\t\tassertThat(r1).hasSameHashCodeAs(r2);\n\t\tassertThat(r1).isEqualTo(r1).isEqualTo(r2).isNotEqualTo(r3);\n\t}", "original_code": "@Test\n\tvoid equalsAndHashCode() {\n\t\tImageReference r1 = ImageReference.of(\"ubuntu:bionic\");\n\t\tImageReference r2 = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference r3 = ImageReference.of(\"docker.io/library/ubuntu:latest\");\n\t\tassertThat(r1).hasSameHashCodeAs(r2);\n\t\tassertThat(r1).isEqualTo(r1).isEqualTo(r2).isNotEqualTo(r3);\n\t}", "code_tokens": ["@", "test", "void", "equals", "and", "hash", "code", "(", ")", "{", "image", "reference", "r", "1", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "r", "2", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "r", "3", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "r", "1", ")", ".", "has", "same", "hash", "code", "as", "(", "r", "2", ")", ";", "assert", "that", "(", "r", "1", ")", ".", "is", "equal", "to", "(", "r", "1", ")", ".", "is", "equal", "to", "(", "r", "2", ")", ".", "is", "not", "equal", "to", "(", "r", "3", ")", ";", "}"], "token_count": 99, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 99, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.950975+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "0b88de65400dd3e193bff212a959da802453da6b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "withDigest", "signature": null, "start_line": 304, "end_line": 311, "nloc": 8, "method_source_normalized": "@TestvoidwithDigest(){\n\t\tImageReference reference = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference updated = reference\n\t\t\t.withDigest(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(updated).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid withDigest() {\n\t\tImageReference reference = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference updated = reference\n\t\t\t.withDigest(\"sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tassertThat(updated).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "with", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "updated", "=", "reference", ".", "with", "digest", "(", "__STR__", ")", ";", "assert", "that", "(", "updated", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 22, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.951262+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "5ce657c57dd120215383da77c5efd0ff58aeb8ef", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaglessFormWithDigest", "signature": null, "start_line": 313, "end_line": 320, "nloc": 8, "method_source_normalized": "@TestvoidinTaglessFormWithDigest(){\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tImageReference updated = reference.inTaglessForm();\n\t\tassertThat(updated).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "original_code": "@Test\n\tvoid inTaglessFormWithDigest() {\n\t\tImageReference reference = ImageReference\n\t\t\t.of(\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t\tImageReference updated = reference.inTaglessForm();\n\t\tassertThat(updated).hasToString(\n\t\t\t\t\"docker.io/library/ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagless", "form", "with", "digest", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "updated", "=", "reference", ".", "in", "tagless", "form", "(", ")", ";", "assert", "that", "(", "updated", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 49, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 30, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.951533+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2923a746f1b7d13fe66474b9dfd808f83422f878", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageReferenceTests.java", "file_blob_sha": null, "method_name": "inTaglessForm", "signature": null, "start_line": 322, "end_line": 327, "nloc": 6, "method_source_normalized": "@TestvoidinTaglessForm(){\n\t\tImageReference reference = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference updated = reference.inTaglessForm();\n\t\tassertThat(updated).hasToString(\"docker.io/library/ubuntu\");\n\t}", "original_code": "@Test\n\tvoid inTaglessForm() {\n\t\tImageReference reference = ImageReference.of(\"docker.io/library/ubuntu:bionic\");\n\t\tImageReference updated = reference.inTaglessForm();\n\t\tassertThat(updated).hasToString(\"docker.io/library/ubuntu\");\n\t}", "code_tokens": ["@", "test", "void", "in", "tagless", "form", "(", ")", "{", "image", "reference", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "image", "reference", "updated", "=", "reference", ".", "in", "tagless", "form", "(", ")", ";", "assert", "that", "(", "updated", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 47, "vocab_size": 23, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 13, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.951806+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c4aa679293f4b2571ccb40a9dfc6230982376ea3", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveTests.java", "file_blob_sha": null, "method_name": "fromImageWritesToValidArchiveTar", "signature": null, "start_line": 45, "end_line": 70, "nloc": 26, "method_source_normalized": "@TestvoidfromImageWritesToValidArchiveTar()throws Exception{\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tImageArchive archive = ImageArchive.from(image, (update) -> {\n\t\t\tupdate.withNewLayer(Layer.of((layout) -> layout.directory(\"/spring\", Owner.ROOT)));\n\t\t\tupdate.withTag(ImageReference.of(\"pack.local/builder/6b7874626575656b6162\"));\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tarchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tfor (int i = 0; i < EXISTING_IMAGE_LAYER_COUNT; i++) {\n\t\t\t\tTarArchiveEntry blankEntry = tar.getNextEntry();\n\t\t\t\tassertThat(blankEntry.getName()).isEqualTo(\"blank_\" + i);\n\t\t\t}\n\t\t\tTarArchiveEntry layerEntry = tar.getNextEntry();\n\t\t\tbyte[] layerContent = read(tar, layerEntry.getSize());\n\t\t\tTarArchiveEntry configEntry = tar.getNextEntry();\n\t\t\tbyte[] configContent = read(tar, configEntry.getSize());\n\t\t\tTarArchiveEntry manifestEntry = tar.getNextEntry();\n\t\t\tbyte[] manifestContent = read(tar, manifestEntry.getSize());\n\t\t\tassertExpectedLayer(layerEntry, layerContent);\n\t\t\tassertExpectedConfig(configEntry, configContent);\n\t\t\tassertExpectedManifest(manifestEntry, manifestContent);\n\t\t}\n\t}", "original_code": "@Test\n\tvoid fromImageWritesToValidArchiveTar() throws Exception {\n\t\tImage image = Image.of(getContent(\"image.json\"));\n\t\tImageArchive archive = ImageArchive.from(image, (update) -> {\n\t\t\tupdate.withNewLayer(Layer.of((layout) -> layout.directory(\"/spring\", Owner.ROOT)));\n\t\t\tupdate.withTag(ImageReference.of(\"pack.local/builder/6b7874626575656b6162\"));\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tarchive.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tfor (int i = 0; i < EXISTING_IMAGE_LAYER_COUNT; i++) {\n\t\t\t\tTarArchiveEntry blankEntry = tar.getNextEntry();\n\t\t\t\tassertThat(blankEntry.getName()).isEqualTo(\"blank_\" + i);\n\t\t\t}\n\t\t\tTarArchiveEntry layerEntry = tar.getNextEntry();\n\t\t\tbyte[] layerContent = read(tar, layerEntry.getSize());\n\t\t\tTarArchiveEntry configEntry = tar.getNextEntry();\n\t\t\tbyte[] configContent = read(tar, configEntry.getSize());\n\t\t\tTarArchiveEntry manifestEntry = tar.getNextEntry();\n\t\t\tbyte[] manifestContent = read(tar, manifestEntry.getSize());\n\t\t\tassertExpectedLayer(layerEntry, layerContent);\n\t\t\tassertExpectedConfig(configEntry, configContent);\n\t\t\tassertExpectedManifest(manifestEntry, manifestContent);\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "from", "image", "writes", "to", "valid", "archive", "tar", "(", ")", "throws", "exception", "{", "image", "image", "=", "image", ".", "of", "(", "get", "content", "(", "__STR__", ")", ")", ";", "image", "archive", "archive", "=", "image", "archive", ".", "from", "(", "image", ",", "(", "update", ")", "->", "{", "update", ".", "with", "new", "layer", "(", "layer", ".", "of", "(", "(", "layout", ")", "->", "layout", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ")", ")", ";", "update", ".", "with", "tag", "(", "image", "reference", ".", "of", "(", "__STR__", ")", ")", ";", "}", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "archive", ".", "write", "to", "(", "output", "stream", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "for", "(", "int", "i", "=", "__NUM__", ";", "i", "<", "existing", "image", "layer", "count", ";", "i", "++", ")", "{", "tar", "archive", "entry", "blank", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "assert", "that", "(", "blank", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", "+", "i", ")", ";", "}", "tar", "archive", "entry", "layer", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "byte", "[", "]", "layer", "content", "=", "read", "(", "tar", ",", "layer", "entry", ".", "get", "size", "(", ")", ")", ";", "tar", "archive", "entry", "config", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "byte", "[", "]", "config", "content", "=", "read", "(", "tar", ",", "config", "entry", ".", "get", "size", "(", ")", ")", ";", "tar", "archive", "entry", "manifest", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "byte", "[", "]", "manifest", "content", "=", "read", "(", "tar", ",", "manifest", "entry", ".", "get", "size", "(", ")", ")", ";", "assert", "expected", "layer", "(", "layer", "entry", ",", "layer", "content", ")", ";", "assert", "expected", "config", "(", "config", "entry", ",", "config", "content", ")", ";", "assert", "expected", "manifest", "(", "manifest", "entry", ",", "manifest", "content", ")", ";", "}", "}"], "token_count": 333, "vocab_size": 66, "cyclomatic_complexity": 2, "ast_node_count": 368, "n_identifiers": 88, "ast_max_depth": 17, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 157, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.953947+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "b05b3a8a674feb52d8cbca63062df6cb90d545f6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveTests.java", "file_blob_sha": null, "method_name": "assertExpectedLayer", "signature": null, "start_line": 72, "end_line": 78, "nloc": 7, "method_source_normalized": "privatevoidassertExpectedLayer(TarArchiveEntry entry, byte[] content)throws Exception{\n\t\tassertThat(entry.getName()).isEqualTo(\"bb09e17fd1bd2ee47155f1349645fcd9fff31e1247c7ed99cad469f1c16a4216.tar\");\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tTarArchiveEntry contentEntry = tar.getNextEntry();\n\t\t\tassertThat(contentEntry.getName()).isEqualTo(\"/spring/\");\n\t\t}\n\t}", "original_code": "private void assertExpectedLayer(TarArchiveEntry entry, byte[] content) throws Exception {\n\t\tassertThat(entry.getName()).isEqualTo(\"bb09e17fd1bd2ee47155f1349645fcd9fff31e1247c7ed99cad469f1c16a4216.tar\");\n\t\ttry (TarArchiveInputStream tar = new TarArchiveInputStream(new ByteArrayInputStream(content))) {\n\t\t\tTarArchiveEntry contentEntry = tar.getNextEntry();\n\t\t\tassertThat(contentEntry.getName()).isEqualTo(\"/spring/\");\n\t\t}\n\t}", "code_tokens": ["private", "void", "assert", "expected", "layer", "(", "tar", "archive", "entry", "entry", ",", "byte", "[", "]", "content", ")", "throws", "exception", "{", "assert", "that", "(", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "content", ")", ")", ")", "{", "tar", "archive", "entry", "content", "entry", "=", "tar", ".", "get", "next", "entry", "(", ")", ";", "assert", "that", "(", "content", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}", "}"], "token_count": 97, "vocab_size": 35, "cyclomatic_complexity": 1, "ast_node_count": 106, "n_identifiers": 22, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.954292+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "d33f67bffb19f1210e52934c743d771d9ec90ed6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveTests.java", "file_blob_sha": null, "method_name": "assertExpectedConfig", "signature": null, "start_line": 80, "end_line": 85, "nloc": 6, "method_source_normalized": "privatevoidassertExpectedConfig(TarArchiveEntry entry, byte[] content)throws Exception{\n\t\tassertThat(entry.getName()).isEqualTo(\"416c76dc7f691f91e80516ff039e056f32f996b59af4b1cb8114e6ae8171a374.json\");\n\t\tString actualJson = new String(content, StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"image-archive-config.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, false);\n\t}", "original_code": "private void assertExpectedConfig(TarArchiveEntry entry, byte[] content) throws Exception {\n\t\tassertThat(entry.getName()).isEqualTo(\"416c76dc7f691f91e80516ff039e056f32f996b59af4b1cb8114e6ae8171a374.json\");\n\t\tString actualJson = new String(content, StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"image-archive-config.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, false);\n\t}", "code_tokens": ["private", "void", "assert", "expected", "config", "(", "tar", "archive", "entry", "entry", ",", "byte", "[", "]", "content", ")", "throws", "exception", "{", "assert", "that", "(", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "string", "actual", "json", "=", "new", "string", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "string", "expected", "json", "=", "stream", "utils", ".", "copy", "to", "string", "(", "get", "content", "(", "__STR__", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "json", "assert", ".", "assert", "equals", "(", "expected", "json", ",", "actual", "json", ",", "false", ")", ";", "}"], "token_count": 93, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 103, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.954611+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f6b707cfdd137100ee87f32a6d7f89947ebb4c6c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveTests.java", "file_blob_sha": null, "method_name": "assertExpectedManifest", "signature": null, "start_line": 87, "end_line": 93, "nloc": 7, "method_source_normalized": "privatevoidassertExpectedManifest(TarArchiveEntry entry, byte[] content)throws Exception{\n\t\tassertThat(entry.getName()).isEqualTo(\"manifest.json\");\n\t\tString actualJson = new String(content, StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"image-archive-manifest.json\"),\n\t\t\t\tStandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, false);\n\t}", "original_code": "private void assertExpectedManifest(TarArchiveEntry entry, byte[] content) throws Exception {\n\t\tassertThat(entry.getName()).isEqualTo(\"manifest.json\");\n\t\tString actualJson = new String(content, StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"image-archive-manifest.json\"),\n\t\t\t\tStandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, false);\n\t}", "code_tokens": ["private", "void", "assert", "expected", "manifest", "(", "tar", "archive", "entry", "entry", ",", "byte", "[", "]", "content", ")", "throws", "exception", "{", "assert", "that", "(", "entry", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "string", "actual", "json", "=", "new", "string", "(", "content", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "string", "expected", "json", "=", "stream", "utils", ".", "copy", "to", "string", "(", "get", "content", "(", "__STR__", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "json", "assert", ".", "assert", "equals", "(", "expected", "json", ",", "actual", "json", ",", "false", ")", ";", "}"], "token_count": 93, "vocab_size": 42, "cyclomatic_complexity": 1, "ast_node_count": 103, "n_identifiers": 26, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.954917+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a0929ee51398daa111bdd016b2044ca441a7e07b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveTests.java", "file_blob_sha": null, "method_name": "read", "signature": null, "start_line": 95, "end_line": 99, "nloc": 5, "method_source_normalized": "privatebyte[]read(TarArchiveInputStream tar, long size)throws IOException{\n\t\tbyte[] content = new byte[(int) size];\n\t\ttar.read(content);\n\t\treturn content;\n\t}", "original_code": "private byte[] read(TarArchiveInputStream tar, long size) throws IOException {\n\t\tbyte[] content = new byte[(int) size];\n\t\ttar.read(content);\n\t\treturn content;\n\t}", "code_tokens": ["private", "byte", "[", "]", "read", "(", "tar", "archive", "input", "stream", "tar", ",", "long", "size", ")", "throws", "io", "exception", "{", "byte", "[", "]", "content", "=", "new", "byte", "[", "(", "int", ")", "size", "]", ";", "tar", ".", "read", "(", "content", ")", ";", "return", "content", ";", "}"], "token_count": 44, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 65, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.955194+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6d5e7d30690c790be2fb2c823a95ac935190d7fd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerTests.java", "file_blob_sha": null, "method_name": "ofWhenLayoutIsNullThrowsException", "signature": null, "start_line": 40, "end_line": 44, "nloc": 5, "method_source_normalized": "@TestvoidofWhenLayoutIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Layer.of((IOConsumer<Layout>) null))\n\t\t\t.withMessage(\"'layout' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenLayoutIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Layer.of((IOConsumer<Layout>) null))\n\t\t\t.withMessage(\"'layout' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "layout", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", ".", "of", "(", "(", "io", "consumer", "<", "layout", ">", ")", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 50, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 55, "n_identifiers": 9, "ast_max_depth": 12, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.956212+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "6c2106e7eafa934ab9006f9ba12bd315ae3ffd5c", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerTests.java", "file_blob_sha": null, "method_name": "fromTarArchiveWhenTarArchiveIsNullThrowsException", "signature": null, "start_line": 46, "end_line": 50, "nloc": 5, "method_source_normalized": "@TestvoidfromTarArchiveWhenTarArchiveIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Layer.fromTarArchive(null))\n\t\t\t.withMessage(\"'tarArchive' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromTarArchiveWhenTarArchiveIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Layer.fromTarArchive(null))\n\t\t\t.withMessage(\"'tarArchive' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "tar", "archive", "when", "tar", "archive", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "layer", ".", "from", "tar", "archive", "(", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.956498+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "4206682b0c9b150403e5b731f4c0e30865dc5f08", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/LayerTests.java", "file_blob_sha": null, "method_name": "ofCreatesLayer", "signature": null, "start_line": 52, "end_line": 68, "nloc": 17, "method_source_normalized": "@TestvoidofCreatesLayer()throws Exception{\n\t\tLayer layer = Layer.of((layout) -> {\n\t\t\tlayout.directory(\"/directory\", Owner.ROOT);\n\t\t\tlayout.file(\"/directory/file\", Owner.ROOT, Content.of(\"test\"));\n\t\t});\n\t\tassertThat(layer.getId())\n\t\t\t.hasToString(\"sha256:d03a34f73804698c875eb56ff694fc2fceccc69b645e4adceb004ed13588613b\");\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tlayer.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tassertThat(tarStream.getNextEntry().getName()).isEqualTo(\"/directory/\");\n\t\t\tassertThat(tarStream.getNextEntry().getName()).isEqualTo(\"/directory/file\");\n\t\t\tassertThat(tarStream.getNextEntry()).isNull();\n\t\t}\n\t}", "original_code": "@Test\n\tvoid ofCreatesLayer() throws Exception {\n\t\tLayer layer = Layer.of((layout) -> {\n\t\t\tlayout.directory(\"/directory\", Owner.ROOT);\n\t\t\tlayout.file(\"/directory/file\", Owner.ROOT, Content.of(\"test\"));\n\t\t});\n\t\tassertThat(layer.getId())\n\t\t\t.hasToString(\"sha256:d03a34f73804698c875eb56ff694fc2fceccc69b645e4adceb004ed13588613b\");\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tlayer.writeTo(outputStream);\n\t\ttry (TarArchiveInputStream tarStream = new TarArchiveInputStream(\n\t\t\t\tnew ByteArrayInputStream(outputStream.toByteArray()))) {\n\t\t\tassertThat(tarStream.getNextEntry().getName()).isEqualTo(\"/directory/\");\n\t\t\tassertThat(tarStream.getNextEntry().getName()).isEqualTo(\"/directory/file\");\n\t\t\tassertThat(tarStream.getNextEntry()).isNull();\n\t\t}\n\t}", "code_tokens": ["@", "test", "void", "of", "creates", "layer", "(", ")", "throws", "exception", "{", "layer", "layer", "=", "layer", ".", "of", "(", "(", "layout", ")", "->", "{", "layout", ".", "directory", "(", "__STR__", ",", "owner", ".", "root", ")", ";", "layout", ".", "file", "(", "__STR__", ",", "owner", ".", "root", ",", "content", ".", "of", "(", "__STR__", ")", ")", ";", "}", ")", ";", "assert", "that", "(", "layer", ".", "get", "id", "(", ")", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "layer", ".", "write", "to", "(", "output", "stream", ")", ";", "try", "(", "tar", "archive", "input", "stream", "tar", "stream", "=", "new", "tar", "archive", "input", "stream", "(", "new", "byte", "array", "input", "stream", "(", "output", "stream", ".", "to", "byte", "array", "(", ")", ")", ")", ")", "{", "assert", "that", "(", "tar", "stream", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "tar", "stream", ".", "get", "next", "entry", "(", ")", ".", "get", "name", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "assert", "that", "(", "tar", "stream", ".", "get", "next", "entry", "(", ")", ")", ".", "is", "null", "(", ")", ";", "}", "}"], "token_count": 200, "vocab_size": 47, "cyclomatic_complexity": 1, "ast_node_count": 225, "n_identifiers": 48, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 77, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.956909+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "c0247ebde3f0823ae0c08638fea9917b785a3845", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifestTests.java", "file_blob_sha": null, "method_name": "getLayersReturnsLayers", "signature": null, "start_line": 36, "end_line": 48, "nloc": 13, "method_source_normalized": "@TestvoidgetLayersReturnsLayers(){\n\t\tString content = getContentAsString(\"image-archive-manifest.json\");\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tList<String> expectedLayers = new ArrayList<>();\n\t\tfor (int blankLayersCount = 0; blankLayersCount < 46; blankLayersCount++) {\n\t\t\texpectedLayers.add(\"blank_\" + blankLayersCount);\n\t\t}\n\t\texpectedLayers.add(\"bb09e17fd1bd2ee47155f1349645fcd9fff31e1247c7ed99cad469f1c16a4216.tar\");\n\t\tassertThat(manifest.getEntries()).hasSize(1);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).hasSize(47);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).isEqualTo(expectedLayers);\n\t}", "original_code": "@Test\n\tvoid getLayersReturnsLayers() {\n\t\tString content = getContentAsString(\"image-archive-manifest.json\");\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tList<String> expectedLayers = new ArrayList<>();\n\t\tfor (int blankLayersCount = 0; blankLayersCount < 46; blankLayersCount++) {\n\t\t\texpectedLayers.add(\"blank_\" + blankLayersCount);\n\t\t}\n\t\texpectedLayers.add(\"bb09e17fd1bd2ee47155f1349645fcd9fff31e1247c7ed99cad469f1c16a4216.tar\");\n\t\tassertThat(manifest.getEntries()).hasSize(1);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).hasSize(47);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).isEqualTo(expectedLayers);\n\t}", "code_tokens": ["@", "test", "void", "get", "layers", "returns", "layers", "(", ")", "{", "string", "content", "=", "get", "content", "as", "string", "(", "__STR__", ")", ";", "image", "archive", "manifest", "manifest", "=", "get", "manifest", "(", "content", ")", ";", "list", "<", "string", ">", "expected", "layers", "=", "new", "array", "list", "<", ">", "(", ")", ";", "for", "(", "int", "blank", "layers", "count", "=", "__NUM__", ";", "blank", "layers", "count", "<", "__NUM__", ";", "blank", "layers", "count", "++", ")", "{", "expected", "layers", ".", "add", "(", "__STR__", "+", "blank", "layers", "count", ")", ";", "}", "expected", "layers", ".", "add", "(", "__STR__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ".", "get", "(", "__NUM__", ")", ".", "get", "layers", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ".", "get", "(", "__NUM__", ")", ".", "get", "layers", "(", ")", ")", ".", "is", "equal", "to", "(", "expected", "layers", ")", ";", "}"], "token_count": 163, "vocab_size": 42, "cyclomatic_complexity": 2, "ast_node_count": 193, "n_identifiers": 38, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 58, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.957926+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "968b8c53dc71208d0d54036ae3608c96d89d4361", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifestTests.java", "file_blob_sha": null, "method_name": "getLayersWithNoLayersReturnsEmptyList", "signature": null, "start_line": 50, "end_line": 56, "nloc": 7, "method_source_normalized": "@TestvoidgetLayersWithNoLayersReturnsEmptyList(){\n\t\tString content = \"[{\\\"Layers\\\": []}]\";\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tassertThat(manifest.getEntries()).hasSize(1);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).isEmpty();\n\t}", "original_code": "@Test\n\tvoid getLayersWithNoLayersReturnsEmptyList() {\n\t\tString content = \"[{\\\"Layers\\\": []}]\";\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tassertThat(manifest.getEntries()).hasSize(1);\n\t\tassertThat(manifest.getEntries().get(0).getLayers()).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "get", "layers", "with", "no", "layers", "returns", "empty", "list", "(", ")", "{", "string", "content", "=", "__STR__", ";", "image", "archive", "manifest", "manifest", "=", "get", "manifest", "(", "content", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ".", "get", "(", "__NUM__", ")", ".", "get", "layers", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 74, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 86, "n_identifiers": 18, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 25, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.958235+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "fb462e8d14c6b8a74f793cf56ba864bbc4205b06", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifestTests.java", "file_blob_sha": null, "method_name": "getLayersWithEmptyManifestReturnsEmptyList", "signature": null, "start_line": 58, "end_line": 63, "nloc": 6, "method_source_normalized": "@TestvoidgetLayersWithEmptyManifestReturnsEmptyList(){\n\t\tString content = \"[]\";\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tassertThat(manifest.getEntries()).isEmpty();\n\t}", "original_code": "@Test\n\tvoid getLayersWithEmptyManifestReturnsEmptyList() {\n\t\tString content = \"[]\";\n\t\tImageArchiveManifest manifest = getManifest(content);\n\t\tassertThat(manifest.getEntries()).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "get", "layers", "with", "empty", "manifest", "returns", "empty", "list", "(", ")", "{", "string", "content", "=", "__STR__", ";", "image", "archive", "manifest", "manifest", "=", "get", "manifest", "(", "content", ")", ";", "assert", "that", "(", "manifest", ".", "get", "entries", "(", ")", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 47, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 12, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.958498+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "8e0c98b7ba48fec1c03183404e01a1edfc742e13", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageArchiveManifestTests.java", "file_blob_sha": null, "method_name": "getManifest", "signature": null, "start_line": 65, "end_line": 67, "nloc": 3, "method_source_normalized": "privateImageArchiveManifestgetManifest(String content){\n\t\treturn new ImageArchiveManifest(getObjectMapper().readTree(content));\n\t}", "original_code": "private ImageArchiveManifest getManifest(String content) {\n\t\treturn new ImageArchiveManifest(getObjectMapper().readTree(content));\n\t}", "code_tokens": ["private", "image", "archive", "manifest", "get", "manifest", "(", "string", "content", ")", "{", "return", "new", "image", "archive", "manifest", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "content", ")", ")", ";", "}"], "token_count": 31, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 35, "n_identifiers": 8, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 11, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.958725+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "beb95ce6064495e224b816e76201214bda3429aa", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "getEnvContainsParsedValues", "signature": null, "start_line": 36, "end_line": 43, "nloc": 8, "method_source_normalized": "@TestvoidgetEnvContainsParsedValues(){\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tMap<String, String> env = imageConfig.getEnv();\n\t\tassertThat(env).contains(entry(\"PATH\", \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"),\n\t\t\t\tentry(\"CNB_USER_ID\", \"2000\"), entry(\"CNB_GROUP_ID\", \"2000\"),\n\t\t\t\tentry(\"CNB_STACK_ID\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "original_code": "@Test\n\tvoid getEnvContainsParsedValues() {\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tMap<String, String> env = imageConfig.getEnv();\n\t\tassertThat(env).contains(entry(\"PATH\", \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"),\n\t\t\t\tentry(\"CNB_USER_ID\", \"2000\"), entry(\"CNB_GROUP_ID\", \"2000\"),\n\t\t\t\tentry(\"CNB_STACK_ID\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "code_tokens": ["@", "test", "void", "get", "env", "contains", "parsed", "values", "(", ")", "{", "image", "config", "image", "config", "=", "get", "image", "config", "(", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "image", "config", ".", "get", "env", "(", ")", ";", "assert", "that", "(", "env", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ",", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 76, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 93, "n_identifiers": 18, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.959833+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3c71ef26b9c11cf72bdc24c62da3c2524b8d3de1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "whenConfigHasNoEnvThenImageConfigEnvIsEmpty", "signature": null, "start_line": 45, "end_line": 50, "nloc": 6, "method_source_normalized": "@TestvoidwhenConfigHasNoEnvThenImageConfigEnvIsEmpty(){\n\t\tImageConfig imageConfig = getMinimalImageConfig();\n\t\tMap<String, String> env = imageConfig.getEnv();\n\t\tassertThat(env).isEmpty();\n\t}", "original_code": "@Test\n\tvoid whenConfigHasNoEnvThenImageConfigEnvIsEmpty() {\n\t\tImageConfig imageConfig = getMinimalImageConfig();\n\t\tMap<String, String> env = imageConfig.getEnv();\n\t\tassertThat(env).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "when", "config", "has", "no", "env", "then", "image", "config", "env", "is", "empty", "(", ")", "{", "image", "config", "image", "config", "=", "get", "minimal", "image", "config", "(", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "image", "config", ".", "get", "env", "(", ")", ";", "assert", "that", "(", "env", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 57, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 14, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.960140+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "2b5c2235bfeeceb064fa3d320a4b99edbf211ab8", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "whenConfigHasNoLabelsThenImageConfigLabelsIsEmpty", "signature": null, "start_line": 52, "end_line": 57, "nloc": 6, "method_source_normalized": "@TestvoidwhenConfigHasNoLabelsThenImageConfigLabelsIsEmpty(){\n\t\tImageConfig imageConfig = getMinimalImageConfig();\n\t\tMap<String, String> env = imageConfig.getLabels();\n\t\tassertThat(env).isEmpty();\n\t}", "original_code": "@Test\n\tvoid whenConfigHasNoLabelsThenImageConfigLabelsIsEmpty() {\n\t\tImageConfig imageConfig = getMinimalImageConfig();\n\t\tMap<String, String> env = imageConfig.getLabels();\n\t\tassertThat(env).isEmpty();\n\t}", "code_tokens": ["@", "test", "void", "when", "config", "has", "no", "labels", "then", "image", "config", "labels", "is", "empty", "(", ")", "{", "image", "config", "image", "config", "=", "get", "minimal", "image", "config", "(", ")", ";", "map", "<", "string", ",", "string", ">", "env", "=", "image", "config", ".", "get", "labels", "(", ")", ";", "assert", "that", "(", "env", ")", ".", "is", "empty", "(", ")", ";", "}"], "token_count": 57, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 58, "n_identifiers": 14, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 22, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.960406+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f63b7070fcd1f3af9b7d8bf30d77f0255cbf8317", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "getLabelsReturnsLabels", "signature": null, "start_line": 59, "end_line": 64, "nloc": 6, "method_source_normalized": "@TestvoidgetLabelsReturnsLabels(){\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tMap<String, String> labels = imageConfig.getLabels();\n\t\tassertThat(labels).hasSize(4).contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "original_code": "@Test\n\tvoid getLabelsReturnsLabels() {\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tMap<String, String> labels = imageConfig.getLabels();\n\t\tassertThat(labels).hasSize(4).contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t}", "code_tokens": ["@", "test", "void", "get", "labels", "returns", "labels", "(", ")", "{", "image", "config", "image", "config", "=", "get", "image", "config", "(", ")", ";", "map", "<", "string", ",", "string", ">", "labels", "=", "image", "config", ".", "get", "labels", "(", ")", ";", "assert", "that", "(", "labels", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 60, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 73, "n_identifiers": 16, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 23, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.960663+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "071d2b3ea1f100fd88eb29629189d81d70d0afa7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "updateWithLabelUpdatesLabels", "signature": null, "start_line": 66, "end_line": 74, "nloc": 9, "method_source_normalized": "@TestvoidupdateWithLabelUpdatesLabels(){\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tImageConfig updatedImageConfig = imageConfig\n\t\t\t.copy((update) -> update.withLabel(\"io.buildpacks.stack.id\", \"test\"));\n\t\tassertThat(imageConfig.getLabels()).hasSize(4)\n\t\t\t.contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t\tassertThat(updatedImageConfig.getLabels()).hasSize(4).contains(entry(\"io.buildpacks.stack.id\", \"test\"));\n\t}", "original_code": "@Test\n\tvoid updateWithLabelUpdatesLabels() {\n\t\tImageConfig imageConfig = getImageConfig();\n\t\tImageConfig updatedImageConfig = imageConfig\n\t\t\t.copy((update) -> update.withLabel(\"io.buildpacks.stack.id\", \"test\"));\n\t\tassertThat(imageConfig.getLabels()).hasSize(4)\n\t\t\t.contains(entry(\"io.buildpacks.stack.id\", \"org.cloudfoundry.stacks.cflinuxfs3\"));\n\t\tassertThat(updatedImageConfig.getLabels()).hasSize(4).contains(entry(\"io.buildpacks.stack.id\", \"test\"));\n\t}", "code_tokens": ["@", "test", "void", "update", "with", "label", "updates", "labels", "(", ")", "{", "image", "config", "image", "config", "=", "get", "image", "config", "(", ")", ";", "image", "config", "updated", "image", "config", "=", "image", "config", ".", "copy", "(", "(", "update", ")", "->", "update", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "assert", "that", "(", "updated", "image", "config", ".", "get", "labels", "(", ")", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "contains", "(", "entry", "(", "__STR__", ",", "__STR__", ")", ")", ";", "}"], "token_count": 106, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 123, "n_identifiers": 24, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 37, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.960950+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "374d97899925dc65b8a5291879effd4829f3fe5b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "getImageConfig", "signature": null, "start_line": 76, "end_line": 78, "nloc": 3, "method_source_normalized": "privateImageConfiggetImageConfig(){\n\t\treturn new ImageConfig(getObjectMapper().readTree(getContent(\"image-config.json\")));\n\t}", "original_code": "private ImageConfig getImageConfig() {\n\t\treturn new ImageConfig(getObjectMapper().readTree(getContent(\"image-config.json\")));\n\t}", "code_tokens": ["private", "image", "config", "get", "image", "config", "(", ")", "{", "return", "new", "image", "config", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "get", "content", "(", "__STR__", ")", ")", ")", ";", "}"], "token_count": 32, "vocab_size": 18, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 6, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.961195+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "17f4b7b0c5c59d55200d02df0b96894830cecb67", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ImageConfigTests.java", "file_blob_sha": null, "method_name": "getMinimalImageConfig", "signature": null, "start_line": 80, "end_line": 82, "nloc": 3, "method_source_normalized": "privateImageConfiggetMinimalImageConfig(){\n\t\treturn new ImageConfig(getObjectMapper().readTree(getContent(\"minimal-image-config.json\")));\n\t}", "original_code": "private ImageConfig getMinimalImageConfig() {\n\t\treturn new ImageConfig(getObjectMapper().readTree(getContent(\"minimal-image-config.json\")));\n\t}", "code_tokens": ["private", "image", "config", "get", "minimal", "image", "config", "(", ")", "{", "return", "new", "image", "config", "(", "get", "object", "mapper", "(", ")", ".", "read", "tree", "(", "get", "content", "(", "__STR__", ")", ")", ")", ";", "}"], "token_count": 33, "vocab_size": 19, "cyclomatic_complexity": 1, "ast_node_count": 37, "n_identifiers": 6, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 10, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.961429+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "363c7a05a8176b758396eb56ecdebacd4b0172d6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/RandomStringTests.java", "file_blob_sha": null, "method_name": "generateWhenPrefixIsNullThrowsException", "signature": null, "start_line": 31, "end_line": 35, "nloc": 5, "method_source_normalized": "@TestvoidgenerateWhenPrefixIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> RandomString.generate(null, 10))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "original_code": "@Test\n\tvoid generateWhenPrefixIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> RandomString.generate(null, 10))\n\t\t\t.withMessage(\"'prefix' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "generate", "when", "prefix", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "random", "string", ".", "generate", "(", "null", ",", "__NUM__", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.962056+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "131b9c8c16b24f09fb6f6d5b146e361a6178e8ea", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/RandomStringTests.java", "file_blob_sha": null, "method_name": "generateGeneratesRandomString", "signature": null, "start_line": 37, "end_line": 44, "nloc": 8, "method_source_normalized": "@TestvoidgenerateGeneratesRandomString(){\n\t\tString s1 = RandomString.generate(\"abc-\", 10);\n\t\tString s2 = RandomString.generate(\"abc-\", 10);\n\t\tString s3 = RandomString.generate(\"abc-\", 20);\n\t\tassertThat(s1).hasSize(14).startsWith(\"abc-\").isNotEqualTo(s2);\n\t\tassertThat(s3).hasSize(24).startsWith(\"abc-\");\n\t}", "original_code": "@Test\n\tvoid generateGeneratesRandomString() {\n\t\tString s1 = RandomString.generate(\"abc-\", 10);\n\t\tString s2 = RandomString.generate(\"abc-\", 10);\n\t\tString s3 = RandomString.generate(\"abc-\", 20);\n\t\tassertThat(s1).hasSize(14).startsWith(\"abc-\").isNotEqualTo(s2);\n\t\tassertThat(s3).hasSize(24).startsWith(\"abc-\");\n\t}", "code_tokens": ["@", "test", "void", "generate", "generates", "random", "string", "(", ")", "{", "string", "s", "1", "=", "random", "string", ".", "generate", "(", "__STR__", ",", "__NUM__", ")", ";", "string", "s", "2", "=", "random", "string", ".", "generate", "(", "__STR__", ",", "__NUM__", ")", ";", "string", "s", "3", "=", "random", "string", ".", "generate", "(", "__STR__", ",", "__NUM__", ")", ";", "assert", "that", "(", "s", "1", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "starts", "with", "(", "__STR__", ")", ".", "is", "not", "equal", "to", "(", "s", "2", ")", ";", "assert", "that", "(", "s", "3", ")", ".", "has", "size", "(", "__NUM__", ")", ".", "starts", "with", "(", "__STR__", ")", ";", "}"], "token_count": 100, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 112, "n_identifiers": 24, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 33, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.962395+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "61f669ea7fae845b54aa9a59cf692d081dc2deb6", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "ofReturnsValue", "signature": null, "start_line": 35, "end_line": 39, "nloc": 5, "method_source_normalized": "@TestvoidofReturnsValue(){\n\t\tBinding binding = Binding.of(\"host-src:container-dest:ro\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest:ro\");\n\t}", "original_code": "@Test\n\tvoid ofReturnsValue() {\n\t\tBinding binding = Binding.of(\"host-src:container-dest:ro\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest:ro\");\n\t}", "code_tokens": ["@", "test", "void", "of", "returns", "value", "(", ")", "{", "binding", "binding", "=", "binding", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "binding", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 33, "vocab_size": 20, "cyclomatic_complexity": 1, "ast_node_count": 42, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.963685+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "007c177693d3248dd31ff41b0389cfe5656d95d9", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "ofWithNullThrowsException", "signature": null, "start_line": 41, "end_line": 45, "nloc": 5, "method_source_normalized": "@TestvoidofWithNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.of(null))\n\t\t\t.withMessageContaining(\"'value' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWithNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.of(null))\n\t\t\t.withMessageContaining(\"'value' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "with", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "binding", ".", "of", "(", "null", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 42, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 46, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 19, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.963942+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "55b06bc4fc9436dae1c94912abd36cee2b47910f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "fromReturnsValue", "signature": null, "start_line": 47, "end_line": 51, "nloc": 5, "method_source_normalized": "@TestvoidfromReturnsValue(){\n\t\tBinding binding = Binding.from(\"host-src\", \"container-dest\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest\");\n\t}", "original_code": "@Test\n\tvoid fromReturnsValue() {\n\t\tBinding binding = Binding.from(\"host-src\", \"container-dest\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest\");\n\t}", "code_tokens": ["@", "test", "void", "from", "returns", "value", "(", ")", "{", "binding", "binding", "=", "binding", ".", "from", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "binding", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 35, "vocab_size": 21, "cyclomatic_complexity": 1, "ast_node_count": 44, "n_identifiers": 9, "ast_max_depth": 6, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.964187+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "32772cce8d023d74970132021ce4c93c6d8e8ae7", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "fromWithNullSourceThrowsException", "signature": null, "start_line": 53, "end_line": 57, "nloc": 5, "method_source_normalized": "@TestvoidfromWithNullSourceThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from((String) null, \"container-dest\"))\n\t\t\t.withMessageContaining(\"'source' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromWithNullSourceThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from((String) null, \"container-dest\"))\n\t\t\t.withMessageContaining(\"'source' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "with", "null", "source", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "binding", ".", "from", "(", "(", "string", ")", "null", ",", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 48, "vocab_size": 29, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.964458+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "a445d549b94be8d1e273382dd2406ac74557729f", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "fromWithNullDestinationThrowsException", "signature": null, "start_line": 59, "end_line": 63, "nloc": 5, "method_source_normalized": "@TestvoidfromWithNullDestinationThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from(\"host-src\", null))\n\t\t\t.withMessageContaining(\"'destination' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromWithNullDestinationThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from(\"host-src\", null))\n\t\t\t.withMessageContaining(\"'destination' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "with", "null", "destination", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "binding", ".", "from", "(", "__STR__", ",", "null", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 45, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 7, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 20, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.964730+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "65931d9e3d5a708da60ac6039b8b77027df61a8e", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "fromVolumeNameSourceReturnsValue", "signature": null, "start_line": 65, "end_line": 69, "nloc": 5, "method_source_normalized": "@TestvoidfromVolumeNameSourceReturnsValue(){\n\t\tBinding binding = Binding.from(VolumeName.of(\"host-src\"), \"container-dest\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest\");\n\t}", "original_code": "@Test\n\tvoid fromVolumeNameSourceReturnsValue() {\n\t\tBinding binding = Binding.from(VolumeName.of(\"host-src\"), \"container-dest\");\n\t\tassertThat(binding).hasToString(\"host-src:container-dest\");\n\t}", "code_tokens": ["@", "test", "void", "from", "volume", "name", "source", "returns", "value", "(", ")", "{", "binding", "binding", "=", "binding", ".", "from", "(", "volume", "name", ".", "of", "(", "__STR__", ")", ",", "__STR__", ")", ";", "assert", "that", "(", "binding", ")", ".", "has", "to", "string", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 11, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.964984+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "f3e976aad5d2dc5b019984cf0d207f8ff1a445fb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "fromVolumeNameSourceWithNullSourceThrowsException", "signature": null, "start_line": 71, "end_line": 75, "nloc": 5, "method_source_normalized": "@TestvoidfromVolumeNameSourceWithNullSourceThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from((VolumeName) null, \"container-dest\"))\n\t\t\t.withMessageContaining(\"'sourceVolume' must not be null\");\n\t}", "original_code": "@Test\n\tvoid fromVolumeNameSourceWithNullSourceThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> Binding.from((VolumeName) null, \"container-dest\"))\n\t\t\t.withMessageContaining(\"'sourceVolume' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "from", "volume", "name", "source", "with", "null", "source", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "binding", ".", "from", "(", "(", "volume", "name", ")", "null", ",", "__STR__", ")", ")", ".", "with", "message", "containing", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 30, "cyclomatic_complexity": 1, "ast_node_count": 52, "n_identifiers": 8, "ast_max_depth": 10, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.965260+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "9cc55109d6805cb36c324ef9a845c52861d3b977", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldReturnContainerDestinationPath", "signature": null, "start_line": 77, "end_line": 81, "nloc": 5, "method_source_normalized": "@TestvoidshouldReturnContainerDestinationPath(){\n\t\tBinding binding = Binding.from(\"/host\", \"/container\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"/container\");\n\t}", "original_code": "@Test\n\tvoid shouldReturnContainerDestinationPath() {\n\t\tBinding binding = Binding.from(\"/host\", \"/container\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"/container\");\n\t}", "code_tokens": ["@", "test", "void", "should", "return", "container", "destination", "path", "(", ")", "{", "binding", "binding", "=", "binding", ".", "from", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "binding", ".", "get", "container", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 25, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.965517+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "db149d72c9a8a1e0708c1701e07e1abe9e71d44b", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldReturnContainerDestinationPathWithOptions", "signature": null, "start_line": 83, "end_line": 87, "nloc": 5, "method_source_normalized": "@TestvoidshouldReturnContainerDestinationPathWithOptions(){\n\t\tBinding binding = Binding.of(\"/host:/container:ro\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"/container\");\n\t}", "original_code": "@Test\n\tvoid shouldReturnContainerDestinationPathWithOptions() {\n\t\tBinding binding = Binding.of(\"/host:/container:ro\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"/container\");\n\t}", "code_tokens": ["@", "test", "void", "should", "return", "container", "destination", "path", "with", "options", "(", ")", "{", "binding", "binding", "=", "binding", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "binding", ".", "get", "container", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 44, "vocab_size": 26, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.965791+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "78f076e653df42d3735f1aeb686d1d3f547f87cd", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldReturnContainerDestinationPathOnWindows", "signature": null, "start_line": 89, "end_line": 93, "nloc": 5, "method_source_normalized": "@TestvoidshouldReturnContainerDestinationPathOnWindows(){\n\t\tBinding binding = Binding.from(\"C:\\\\host\", \"C:\\\\container\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"C:\\\\container\");\n\t}", "original_code": "@Test\n\tvoid shouldReturnContainerDestinationPathOnWindows() {\n\t\tBinding binding = Binding.from(\"C:\\\\host\", \"C:\\\\container\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"C:\\\\container\");\n\t}", "code_tokens": ["@", "test", "void", "should", "return", "container", "destination", "path", "on", "windows", "(", ")", "{", "binding", "binding", "=", "binding", ".", "from", "(", "__STR__", ",", "__STR__", ")", ";", "assert", "that", "(", "binding", ".", "get", "container", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 27, "cyclomatic_complexity": 1, "ast_node_count": 50, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 16, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.966052+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "ec14b9cefe74e3d772276a393b40a264a7392a53", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldReturnContainerDestinationPathOnWindowsWithOptions", "signature": null, "start_line": 95, "end_line": 99, "nloc": 5, "method_source_normalized": "@TestvoidshouldReturnContainerDestinationPathOnWindowsWithOptions(){\n\t\tBinding binding = Binding.of(\"C:\\\\host:C:\\\\container:ro\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"C:\\\\container\");\n\t}", "original_code": "@Test\n\tvoid shouldReturnContainerDestinationPathOnWindowsWithOptions() {\n\t\tBinding binding = Binding.of(\"C:\\\\host:C:\\\\container:ro\");\n\t\tassertThat(binding.getContainerDestinationPath()).isEqualTo(\"C:\\\\container\");\n\t}", "code_tokens": ["@", "test", "void", "should", "return", "container", "destination", "path", "on", "windows", "with", "options", "(", ")", "{", "binding", "binding", "=", "binding", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "(", "binding", ".", "get", "container", "destination", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "__STR__", ")", ";", "}"], "token_count": 46, "vocab_size": 28, "cyclomatic_complexity": 1, "ast_node_count": 48, "n_identifiers": 10, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 15, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.966321+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "860c74d8f69965f3d7f958a1671724312d2dc2a4", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldFailIfBindingIsMalformed", "signature": null, "start_line": 101, "end_line": 106, "nloc": 6, "method_source_normalized": "@TestvoidshouldFailIfBindingIsMalformed(){\n\t\tBinding binding = Binding.of(\"some-invalid-binding\");\n\t\tassertThatIllegalStateException().isThrownBy(binding::getContainerDestinationPath)\n\t\t\t.withMessage(\"Expected 2 or more parts, but found 1\");\n\t}", "original_code": "@Test\n\tvoid shouldFailIfBindingIsMalformed() {\n\t\tBinding binding = Binding.of(\"some-invalid-binding\");\n\t\tassertThatIllegalStateException().isThrownBy(binding::getContainerDestinationPath)\n\t\t\t.withMessage(\"Expected 2 or more parts, but found 1\");\n\t}", "code_tokens": ["@", "test", "void", "should", "fail", "if", "binding", "is", "malformed", "(", ")", "{", "binding", "binding", "=", "binding", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "state", "exception", "(", ")", ".", "is", "thrown", "by", "(", "binding", "::", "get", "container", "destination", "path", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 49, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 51, "n_identifiers": 11, "ast_max_depth": 7, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.966584+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "3c9d054849ceba2a7d26120be75fdf83c71a1ee1", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/BindingTests.java", "file_blob_sha": null, "method_name": "shouldDetectSensitiveContainerPaths", "signature": null, "start_line": 108, "end_line": 122, "nloc": 15, "method_source_normalized": "@ParameterizedTest\n\t@CsvSource(textBlock = \"\"\"\n\t\t\t/cnb, true\n\t\t\t/layers, true\n\t\t\t/workspace, true\n\t\t\t/something, false\n\t\t\tc:\\\\cnb, true\n\t\t\tc:\\\\layers, true\n\t\t\tc:\\\\workspace, true\n\t\t\tc:\\\\something, false\n\t\t\t\"\"\")voidshouldDetectSensitiveContainerPaths(String containerPath, boolean sensitive){\n\t\tBinding binding = Binding.from(\"/host\", containerPath);\n\t\tassertThat(binding.usesSensitiveContainerPath()).isEqualTo(sensitive);\n\t}", "original_code": "@ParameterizedTest\n\t@CsvSource(textBlock = \"\"\"\n\t\t\t/cnb, true\n\t\t\t/layers, true\n\t\t\t/workspace, true\n\t\t\t/something, false\n\t\t\tc:\\\\cnb, true\n\t\t\tc:\\\\layers, true\n\t\t\tc:\\\\workspace, true\n\t\t\tc:\\\\something, false\n\t\t\t\"\"\")\n\tvoid shouldDetectSensitiveContainerPaths(String containerPath, boolean sensitive) {\n\t\tBinding binding = Binding.from(\"/host\", containerPath);\n\t\tassertThat(binding.usesSensitiveContainerPath()).isEqualTo(sensitive);\n\t}", "code_tokens": ["@", "parameterized", "test", "@", "csv", "source", "(", "text", "block", "=", "\"\"\"\n\t\t\t/cnb, true\n\t\t\t/layers, true\n\t\t\t/workspace, true\n\t\t\t/something, false\n\t\t\tc:\\\\cnb, true\n\t\t\tc:\\\\layers, true\n\t\t\tc:\\\\workspace, true\n\t\t\tc:\\\\something, false\n\t\t\t\"\"\"", ")", "void", "should", "detect", "sensitive", "container", "paths", "(", "string", "container", "path", ",", "boolean", "sensitive", ")", "{", "binding", "binding", "=", "binding", ".", "from", "(", "__STR__", ",", "container", "path", ")", ";", "assert", "that", "(", "binding", ".", "uses", "sensitive", "container", "path", "(", ")", ")", ".", "is", "equal", "to", "(", "sensitive", ")", ";", "}"], "token_count": 61, "vocab_size": 34, "cyclomatic_complexity": 1, "ast_node_count": 67, "n_identifiers": 17, "ast_max_depth": 8, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 67, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.966874+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "e77cf7feeba74de38c083582c06ba4c69beebc6a", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfigTests.java", "file_blob_sha": null, "method_name": "ofWhenImageReferenceIsNullThrowsException", "signature": null, "start_line": 39, "end_line": 43, "nloc": 5, "method_source_normalized": "@TestvoidofWhenImageReferenceIsNullThrowsException(){\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerConfig.of(null, (update) -> {\n\t\t})).withMessage(\"'imageReference' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenImageReferenceIsNullThrowsException() {\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerConfig.of(null, (update) -> {\n\t\t})).withMessage(\"'imageReference' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "image", "reference", "is", "null", "throws", "exception", "(", ")", "{", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "config", ".", "of", "(", "null", ",", "(", "update", ")", "->", "{", "}", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 52, "vocab_size": 31, "cyclomatic_complexity": 1, "ast_node_count": 56, "n_identifiers": 8, "ast_max_depth": 11, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 21, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.967879+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "caded4de3a8fb0f905ea90ffcaf296c48b3d86cf", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfigTests.java", "file_blob_sha": null, "method_name": "ofWhenUpdateIsNullThrowsException", "signature": null, "start_line": 45, "end_line": 50, "nloc": 6, "method_source_normalized": "@TestvoidofWhenUpdateIsNullThrowsException(){\n\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerConfig.of(imageReference, null))\n\t\t\t.withMessage(\"'update' must not be null\");\n\t}", "original_code": "@Test\n\tvoid ofWhenUpdateIsNullThrowsException() {\n\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\tassertThatIllegalArgumentException().isThrownBy(() -> ContainerConfig.of(imageReference, null))\n\t\t\t.withMessage(\"'update' must not be null\");\n\t}", "code_tokens": ["@", "test", "void", "of", "when", "update", "is", "null", "throws", "exception", "(", ")", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "assert", "that", "illegal", "argument", "exception", "(", ")", ".", "is", "thrown", "by", "(", "(", ")", "->", "container", "config", ".", "of", "(", "image", "reference", ",", "null", ")", ")", ".", "with", "message", "(", "__STR__", ")", ";", "}"], "token_count": 60, "vocab_size": 32, "cyclomatic_complexity": 1, "ast_node_count": 62, "n_identifiers": 12, "ast_max_depth": 9, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 26, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.968167+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
{"id": "35c6ce6a41817553fda77dd272bc29a39b7e16cb", "repo_full_name": "spring-projects/spring-boot", "repo_url": "https://github.com/spring-projects/spring-boot", "repo_head_sha": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8", "repo_stars": 78395, "repo_forks": 41503, "repo_license": "Apache-2.0", "repo_size_kb": 202962, "repo_created_at": "2012-10-19T15:02:57+00:00", "repo_pushed_at": "2025-09-17T08:44:03+00:00", "repo_contributor_count": 361, "repo_commit_freq_30d": 547, "file_path": "buildpack/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerConfigTests.java", "file_blob_sha": null, "method_name": "writeToWritesJson", "signature": null, "start_line": 52, "end_line": 71, "nloc": 20, "method_source_normalized": "@TestvoidwriteToWritesJson()throws Exception{\n\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\tContainerConfig containerConfig = ContainerConfig.of(imageReference, (update) -> {\n\t\t\tupdate.withUser(\"root\");\n\t\t\tupdate.withCommand(\"ls\", \"-l\");\n\t\t\tupdate.withArgs(\"-h\");\n\t\t\tupdate.withLabel(\"spring\", \"boot\");\n\t\t\tupdate.withBinding(Binding.from(\"bind-source\", \"bind-dest\"));\n\t\t\tupdate.withEnv(\"name1\", \"value1\");\n\t\t\tupdate.withEnv(\"name2\", \"value2\");\n\t\t\tupdate.withNetworkMode(\"test\");\n\t\t\tupdate.withSecurityOption(\"option=value\");\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontainerConfig.writeTo(outputStream);\n\t\tString actualJson = outputStream.toString(StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"container-config.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, true);\n\t}", "original_code": "@Test\n\tvoid writeToWritesJson() throws Exception {\n\t\tImageReference imageReference = ImageReference.of(\"ubuntu:bionic\");\n\t\tContainerConfig containerConfig = ContainerConfig.of(imageReference, (update) -> {\n\t\t\tupdate.withUser(\"root\");\n\t\t\tupdate.withCommand(\"ls\", \"-l\");\n\t\t\tupdate.withArgs(\"-h\");\n\t\t\tupdate.withLabel(\"spring\", \"boot\");\n\t\t\tupdate.withBinding(Binding.from(\"bind-source\", \"bind-dest\"));\n\t\t\tupdate.withEnv(\"name1\", \"value1\");\n\t\t\tupdate.withEnv(\"name2\", \"value2\");\n\t\t\tupdate.withNetworkMode(\"test\");\n\t\t\tupdate.withSecurityOption(\"option=value\");\n\t\t});\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\t\tcontainerConfig.writeTo(outputStream);\n\t\tString actualJson = outputStream.toString(StandardCharsets.UTF_8);\n\t\tString expectedJson = StreamUtils.copyToString(getContent(\"container-config.json\"), StandardCharsets.UTF_8);\n\t\tJSONAssert.assertEquals(expectedJson, actualJson, true);\n\t}", "code_tokens": ["@", "test", "void", "write", "to", "writes", "json", "(", ")", "throws", "exception", "{", "image", "reference", "image", "reference", "=", "image", "reference", ".", "of", "(", "__STR__", ")", ";", "container", "config", "container", "config", "=", "container", "config", ".", "of", "(", "image", "reference", ",", "(", "update", ")", "->", "{", "update", ".", "with", "user", "(", "__STR__", ")", ";", "update", ".", "with", "command", "(", "__STR__", ",", "__STR__", ")", ";", "update", ".", "with", "args", "(", "__STR__", ")", ";", "update", ".", "with", "label", "(", "__STR__", ",", "__STR__", ")", ";", "update", ".", "with", "binding", "(", "binding", ".", "from", "(", "__STR__", ",", "__STR__", ")", ")", ";", "update", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "update", ".", "with", "env", "(", "__STR__", ",", "__STR__", ")", ";", "update", ".", "with", "network", "mode", "(", "__STR__", ")", ";", "update", ".", "with", "security", "option", "(", "__STR__", ")", ";", "}", ")", ";", "byte", "array", "output", "stream", "output", "stream", "=", "new", "byte", "array", "output", "stream", "(", ")", ";", "container", "config", ".", "write", "to", "(", "output", "stream", ")", ";", "string", "actual", "json", "=", "output", "stream", ".", "to", "string", "(", "standard", "charsets", ".", "utf", "8", ")", ";", "string", "expected", "json", "=", "stream", "utils", ".", "copy", "to", "string", "(", "get", "content", "(", "__STR__", ")", ",", "standard", "charsets", ".", "utf", "8", ")", ";", "json", "assert", ".", "assert", "equals", "(", "expected", "json", ",", "actual", "json", ",", "true", ")", ";", "}"], "token_count": 217, "vocab_size": 56, "cyclomatic_complexity": 1, "ast_node_count": 238, "n_identifiers": 56, "ast_max_depth": 13, "ast_error_count": 0, "ast_error_nodes": [], "n_whitespaces": 95, "is_generated": false, "is_test": true, "dataset_split": "train", "provenance": {"extraction_time": "2025-09-17T09:43:38.968557+00:00", "tree_sitter_lib": "build/my-languages.so", "lizard_version": "1.17.31"}, "commit_hash": "b71d6475c3d5f223bbd006ef95c9bb00aecb04d8"}
